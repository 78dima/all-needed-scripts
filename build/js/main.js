!function(t,e){"use strict";"object"==typeof module&&"object"==typeof module.exports?module.exports=t.document?e(t,!0):function(t){if(!t.document)throw new Error("jQuery requires a window with a document");return e(t)}:e(t)}("undefined"!=typeof window?window:this,function(T,t){"use strict";var e=[],C=T.document,n=Object.getPrototypeOf,a=e.slice,g=e.concat,l=e.push,o=e.indexOf,i={},s=i.toString,m=i.hasOwnProperty,r=m.toString,c=r.call(Object),v={},y=function(t){return"function"==typeof t&&"number"!=typeof t.nodeType},b=function(t){return null!=t&&t===t.window},d={type:!0,src:!0,noModule:!0};function w(t,e,i){var n,o=(e=e||C).createElement("script");if(o.text=t,i)for(n in d)i[n]&&(o[n]=i[n]);e.head.appendChild(o).parentNode.removeChild(o)}function x(t){return null==t?t+"":"object"==typeof t||"function"==typeof t?i[s.call(t)]||"object":typeof t}var u="3.3.1",S=function(t,e){return new S.fn.init(t,e)},h=/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g;function p(t){var e=!!t&&"length"in t&&t.length,i=x(t);return!y(t)&&!b(t)&&("array"===i||0===e||"number"==typeof e&&0<e&&e-1 in t)}S.fn=S.prototype={jquery:u,constructor:S,length:0,toArray:function(){return a.call(this)},get:function(t){return null==t?a.call(this):t<0?this[t+this.length]:this[t]},pushStack:function(t){var e=S.merge(this.constructor(),t);return e.prevObject=this,e},each:function(t){return S.each(this,t)},map:function(i){return this.pushStack(S.map(this,function(t,e){return i.call(t,e,t)}))},slice:function(){return this.pushStack(a.apply(this,arguments))},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},eq:function(t){var e=this.length,i=+t+(t<0?e:0);return this.pushStack(0<=i&&i<e?[this[i]]:[])},end:function(){return this.prevObject||this.constructor()},push:l,sort:e.sort,splice:e.splice},S.extend=S.fn.extend=function(){var t,e,i,n,o,s,r=arguments[0]||{},a=1,l=arguments.length,c=!1;for("boolean"==typeof r&&(c=r,r=arguments[a]||{},a++),"object"==typeof r||y(r)||(r={}),a===l&&(r=this,a--);a<l;a++)if(null!=(t=arguments[a]))for(e in t)i=r[e],r!==(n=t[e])&&(c&&n&&(S.isPlainObject(n)||(o=Array.isArray(n)))?(o?(o=!1,s=i&&Array.isArray(i)?i:[]):s=i&&S.isPlainObject(i)?i:{},r[e]=S.extend(c,s,n)):void 0!==n&&(r[e]=n));return r},S.extend({expando:"jQuery"+(u+Math.random()).replace(/\D/g,""),isReady:!0,error:function(t){throw new Error(t)},noop:function(){},isPlainObject:function(t){var e,i;return!(!t||"[object Object]"!==s.call(t))&&(!(e=n(t))||"function"==typeof(i=m.call(e,"constructor")&&e.constructor)&&r.call(i)===c)},isEmptyObject:function(t){var e;for(e in t)return!1;return!0},globalEval:function(t){w(t)},each:function(t,e){var i,n=0;if(p(t))for(i=t.length;n<i&&!1!==e.call(t[n],n,t[n]);n++);else for(n in t)if(!1===e.call(t[n],n,t[n]))break;return t},trim:function(t){return null==t?"":(t+"").replace(h,"")},makeArray:function(t,e){var i=e||[];return null!=t&&(p(Object(t))?S.merge(i,"string"==typeof t?[t]:t):l.call(i,t)),i},inArray:function(t,e,i){return null==e?-1:o.call(e,t,i)},merge:function(t,e){for(var i=+e.length,n=0,o=t.length;n<i;n++)t[o++]=e[n];return t.length=o,t},grep:function(t,e,i){for(var n=[],o=0,s=t.length,r=!i;o<s;o++)!e(t[o],o)!==r&&n.push(t[o]);return n},map:function(t,e,i){var n,o,s=0,r=[];if(p(t))for(n=t.length;s<n;s++)null!=(o=e(t[s],s,i))&&r.push(o);else for(s in t)null!=(o=e(t[s],s,i))&&r.push(o);return g.apply([],r)},guid:1,support:v}),"function"==typeof Symbol&&(S.fn[Symbol.iterator]=e[Symbol.iterator]),S.each("Boolean Number String Function Array Date RegExp Object Error Symbol".split(" "),function(t,e){i["[object "+e+"]"]=e.toLowerCase()});var f=function(i){var t,p,w,s,o,f,u,g,x,l,c,_,T,r,C,m,a,d,v,S="sizzle"+1*new Date,y=i.document,k=0,n=0,h=rt(),b=rt(),$=rt(),E=function(t,e){return t===e&&(c=!0),0},A={}.hasOwnProperty,e=[],D=e.pop,P=e.push,I=e.push,O=e.slice,j=function(t,e){for(var i=0,n=t.length;i<n;i++)if(t[i]===e)return i;return-1},L="checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped",N="[\\x20\\t\\r\\n\\f]",H="(?:\\\\.|[\\w-]|[^\0-\\xa0])+",M="\\["+N+"*("+H+")(?:"+N+"*([*^$|!~]?=)"+N+"*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|("+H+"))|)"+N+"*\\]",z=":("+H+")(?:\\((('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|((?:\\\\.|[^\\\\()[\\]]|"+M+")*)|.*)\\)|)",q=new RegExp(N+"+","g"),R=new RegExp("^"+N+"+|((?:^|[^\\\\])(?:\\\\.)*)"+N+"+$","g"),F=new RegExp("^"+N+"*,"+N+"*"),W=new RegExp("^"+N+"*([>+~]|"+N+")"+N+"*"),B=new RegExp("="+N+"*([^\\]'\"]*?)"+N+"*\\]","g"),U=new RegExp(z),Y=new RegExp("^"+H+"$"),X={ID:new RegExp("^#("+H+")"),CLASS:new RegExp("^\\.("+H+")"),TAG:new RegExp("^("+H+"|[*])"),ATTR:new RegExp("^"+M),PSEUDO:new RegExp("^"+z),CHILD:new RegExp("^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\("+N+"*(even|odd|(([+-]|)(\\d*)n|)"+N+"*(?:([+-]|)"+N+"*(\\d+)|))"+N+"*\\)|)","i"),bool:new RegExp("^(?:"+L+")$","i"),needsContext:new RegExp("^"+N+"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\("+N+"*((?:-\\d)?\\d*)"+N+"*\\)|)(?=[^-]|$)","i")},V=/^(?:input|select|textarea|button)$/i,Q=/^h\d$/i,K=/^[^{]+\{\s*\[native \w/,Z=/^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,G=/[+~]/,J=new RegExp("\\\\([\\da-f]{1,6}"+N+"?|("+N+")|.)","ig"),tt=function(t,e,i){var n="0x"+e-65536;return n!=n||i?e:n<0?String.fromCharCode(n+65536):String.fromCharCode(n>>10|55296,1023&n|56320)},et=/([\0-\x1f\x7f]|^-?\d)|^-$|[^\0-\x1f\x7f-\uFFFF\w-]/g,it=function(t,e){return e?"\0"===t?"ï¿½":t.slice(0,-1)+"\\"+t.charCodeAt(t.length-1).toString(16)+" ":"\\"+t},nt=function(){_()},ot=yt(function(t){return!0===t.disabled&&("form"in t||"label"in t)},{dir:"parentNode",next:"legend"});try{I.apply(e=O.call(y.childNodes),y.childNodes),e[y.childNodes.length].nodeType}catch(t){I={apply:e.length?function(t,e){P.apply(t,O.call(e))}:function(t,e){for(var i=t.length,n=0;t[i++]=e[n++];);t.length=i-1}}}function st(t,e,i,n){var o,s,r,a,l,c,d,u=e&&e.ownerDocument,h=e?e.nodeType:9;if(i=i||[],"string"!=typeof t||!t||1!==h&&9!==h&&11!==h)return i;if(!n&&((e?e.ownerDocument||e:y)!==T&&_(e),e=e||T,C)){if(11!==h&&(l=Z.exec(t)))if(o=l[1]){if(9===h){if(!(r=e.getElementById(o)))return i;if(r.id===o)return i.push(r),i}else if(u&&(r=u.getElementById(o))&&v(e,r)&&r.id===o)return i.push(r),i}else{if(l[2])return I.apply(i,e.getElementsByTagName(t)),i;if((o=l[3])&&p.getElementsByClassName&&e.getElementsByClassName)return I.apply(i,e.getElementsByClassName(o)),i}if(p.qsa&&!$[t+" "]&&(!m||!m.test(t))){if(1!==h)u=e,d=t;else if("object"!==e.nodeName.toLowerCase()){for((a=e.getAttribute("id"))?a=a.replace(et,it):e.setAttribute("id",a=S),s=(c=f(t)).length;s--;)c[s]="#"+a+" "+vt(c[s]);d=c.join(","),u=G.test(t)&&gt(e.parentNode)||e}if(d)try{return I.apply(i,u.querySelectorAll(d)),i}catch(t){}finally{a===S&&e.removeAttribute("id")}}}return g(t.replace(R,"$1"),e,i,n)}function rt(){var n=[];return function t(e,i){return n.push(e+" ")>w.cacheLength&&delete t[n.shift()],t[e+" "]=i}}function at(t){return t[S]=!0,t}function lt(t){var e=T.createElement("fieldset");try{return!!t(e)}catch(t){return!1}finally{e.parentNode&&e.parentNode.removeChild(e),e=null}}function ct(t,e){for(var i=t.split("|"),n=i.length;n--;)w.attrHandle[i[n]]=e}function dt(t,e){var i=e&&t,n=i&&1===t.nodeType&&1===e.nodeType&&t.sourceIndex-e.sourceIndex;if(n)return n;if(i)for(;i=i.nextSibling;)if(i===e)return-1;return t?1:-1}function ut(e){return function(t){return"input"===t.nodeName.toLowerCase()&&t.type===e}}function ht(i){return function(t){var e=t.nodeName.toLowerCase();return("input"===e||"button"===e)&&t.type===i}}function pt(e){return function(t){return"form"in t?t.parentNode&&!1===t.disabled?"label"in t?"label"in t.parentNode?t.parentNode.disabled===e:t.disabled===e:t.isDisabled===e||t.isDisabled!==!e&&ot(t)===e:t.disabled===e:"label"in t&&t.disabled===e}}function ft(r){return at(function(s){return s=+s,at(function(t,e){for(var i,n=r([],t.length,s),o=n.length;o--;)t[i=n[o]]&&(t[i]=!(e[i]=t[i]))})})}function gt(t){return t&&void 0!==t.getElementsByTagName&&t}for(t in p=st.support={},o=st.isXML=function(t){var e=t&&(t.ownerDocument||t).documentElement;return!!e&&"HTML"!==e.nodeName},_=st.setDocument=function(t){var e,i,n=t?t.ownerDocument||t:y;return n!==T&&9===n.nodeType&&n.documentElement&&(r=(T=n).documentElement,C=!o(T),y!==T&&(i=T.defaultView)&&i.top!==i&&(i.addEventListener?i.addEventListener("unload",nt,!1):i.attachEvent&&i.attachEvent("onunload",nt)),p.attributes=lt(function(t){return t.className="i",!t.getAttribute("className")}),p.getElementsByTagName=lt(function(t){return t.appendChild(T.createComment("")),!t.getElementsByTagName("*").length}),p.getElementsByClassName=K.test(T.getElementsByClassName),p.getById=lt(function(t){return r.appendChild(t).id=S,!T.getElementsByName||!T.getElementsByName(S).length}),p.getById?(w.filter.ID=function(t){var e=t.replace(J,tt);return function(t){return t.getAttribute("id")===e}},w.find.ID=function(t,e){if(void 0!==e.getElementById&&C){var i=e.getElementById(t);return i?[i]:[]}}):(w.filter.ID=function(t){var i=t.replace(J,tt);return function(t){var e=void 0!==t.getAttributeNode&&t.getAttributeNode("id");return e&&e.value===i}},w.find.ID=function(t,e){if(void 0!==e.getElementById&&C){var i,n,o,s=e.getElementById(t);if(s){if((i=s.getAttributeNode("id"))&&i.value===t)return[s];for(o=e.getElementsByName(t),n=0;s=o[n++];)if((i=s.getAttributeNode("id"))&&i.value===t)return[s]}return[]}}),w.find.TAG=p.getElementsByTagName?function(t,e){return void 0!==e.getElementsByTagName?e.getElementsByTagName(t):p.qsa?e.querySelectorAll(t):void 0}:function(t,e){var i,n=[],o=0,s=e.getElementsByTagName(t);if("*"===t){for(;i=s[o++];)1===i.nodeType&&n.push(i);return n}return s},w.find.CLASS=p.getElementsByClassName&&function(t,e){if(void 0!==e.getElementsByClassName&&C)return e.getElementsByClassName(t)},a=[],m=[],(p.qsa=K.test(T.querySelectorAll))&&(lt(function(t){r.appendChild(t).innerHTML="<a id='"+S+"'></a><select id='"+S+"-\r\\' msallowcapture=''><option selected=''></option></select>",t.querySelectorAll("[msallowcapture^='']").length&&m.push("[*^$]="+N+"*(?:''|\"\")"),t.querySelectorAll("[selected]").length||m.push("\\["+N+"*(?:value|"+L+")"),t.querySelectorAll("[id~="+S+"-]").length||m.push("~="),t.querySelectorAll(":checked").length||m.push(":checked"),t.querySelectorAll("a#"+S+"+*").length||m.push(".#.+[+~]")}),lt(function(t){t.innerHTML="<a href='' disabled='disabled'></a><select disabled='disabled'><option/></select>";var e=T.createElement("input");e.setAttribute("type","hidden"),t.appendChild(e).setAttribute("name","D"),t.querySelectorAll("[name=d]").length&&m.push("name"+N+"*[*^$|!~]?="),2!==t.querySelectorAll(":enabled").length&&m.push(":enabled",":disabled"),r.appendChild(t).disabled=!0,2!==t.querySelectorAll(":disabled").length&&m.push(":enabled",":disabled"),t.querySelectorAll("*,:x"),m.push(",.*:")})),(p.matchesSelector=K.test(d=r.matches||r.webkitMatchesSelector||r.mozMatchesSelector||r.oMatchesSelector||r.msMatchesSelector))&&lt(function(t){p.disconnectedMatch=d.call(t,"*"),d.call(t,"[s!='']:x"),a.push("!=",z)}),m=m.length&&new RegExp(m.join("|")),a=a.length&&new RegExp(a.join("|")),e=K.test(r.compareDocumentPosition),v=e||K.test(r.contains)?function(t,e){var i=9===t.nodeType?t.documentElement:t,n=e&&e.parentNode;return t===n||!(!n||1!==n.nodeType||!(i.contains?i.contains(n):t.compareDocumentPosition&&16&t.compareDocumentPosition(n)))}:function(t,e){if(e)for(;e=e.parentNode;)if(e===t)return!0;return!1},E=e?function(t,e){if(t===e)return c=!0,0;var i=!t.compareDocumentPosition-!e.compareDocumentPosition;return i||(1&(i=(t.ownerDocument||t)===(e.ownerDocument||e)?t.compareDocumentPosition(e):1)||!p.sortDetached&&e.compareDocumentPosition(t)===i?t===T||t.ownerDocument===y&&v(y,t)?-1:e===T||e.ownerDocument===y&&v(y,e)?1:l?j(l,t)-j(l,e):0:4&i?-1:1)}:function(t,e){if(t===e)return c=!0,0;var i,n=0,o=t.parentNode,s=e.parentNode,r=[t],a=[e];if(!o||!s)return t===T?-1:e===T?1:o?-1:s?1:l?j(l,t)-j(l,e):0;if(o===s)return dt(t,e);for(i=t;i=i.parentNode;)r.unshift(i);for(i=e;i=i.parentNode;)a.unshift(i);for(;r[n]===a[n];)n++;return n?dt(r[n],a[n]):r[n]===y?-1:a[n]===y?1:0}),T},st.matches=function(t,e){return st(t,null,null,e)},st.matchesSelector=function(t,e){if((t.ownerDocument||t)!==T&&_(t),e=e.replace(B,"='$1']"),p.matchesSelector&&C&&!$[e+" "]&&(!a||!a.test(e))&&(!m||!m.test(e)))try{var i=d.call(t,e);if(i||p.disconnectedMatch||t.document&&11!==t.document.nodeType)return i}catch(t){}return 0<st(e,T,null,[t]).length},st.contains=function(t,e){return(t.ownerDocument||t)!==T&&_(t),v(t,e)},st.attr=function(t,e){(t.ownerDocument||t)!==T&&_(t);var i=w.attrHandle[e.toLowerCase()],n=i&&A.call(w.attrHandle,e.toLowerCase())?i(t,e,!C):void 0;return void 0!==n?n:p.attributes||!C?t.getAttribute(e):(n=t.getAttributeNode(e))&&n.specified?n.value:null},st.escape=function(t){return(t+"").replace(et,it)},st.error=function(t){throw new Error("Syntax error, unrecognized expression: "+t)},st.uniqueSort=function(t){var e,i=[],n=0,o=0;if(c=!p.detectDuplicates,l=!p.sortStable&&t.slice(0),t.sort(E),c){for(;e=t[o++];)e===t[o]&&(n=i.push(o));for(;n--;)t.splice(i[n],1)}return l=null,t},s=st.getText=function(t){var e,i="",n=0,o=t.nodeType;if(o){if(1===o||9===o||11===o){if("string"==typeof t.textContent)return t.textContent;for(t=t.firstChild;t;t=t.nextSibling)i+=s(t)}else if(3===o||4===o)return t.nodeValue}else for(;e=t[n++];)i+=s(e);return i},(w=st.selectors={cacheLength:50,createPseudo:at,match:X,attrHandle:{},find:{},relative:{">":{dir:"parentNode",first:!0}," ":{dir:"parentNode"},"+":{dir:"previousSibling",first:!0},"~":{dir:"previousSibling"}},preFilter:{ATTR:function(t){return t[1]=t[1].replace(J,tt),t[3]=(t[3]||t[4]||t[5]||"").replace(J,tt),"~="===t[2]&&(t[3]=" "+t[3]+" "),t.slice(0,4)},CHILD:function(t){return t[1]=t[1].toLowerCase(),"nth"===t[1].slice(0,3)?(t[3]||st.error(t[0]),t[4]=+(t[4]?t[5]+(t[6]||1):2*("even"===t[3]||"odd"===t[3])),t[5]=+(t[7]+t[8]||"odd"===t[3])):t[3]&&st.error(t[0]),t},PSEUDO:function(t){var e,i=!t[6]&&t[2];return X.CHILD.test(t[0])?null:(t[3]?t[2]=t[4]||t[5]||"":i&&U.test(i)&&(e=f(i,!0))&&(e=i.indexOf(")",i.length-e)-i.length)&&(t[0]=t[0].slice(0,e),t[2]=i.slice(0,e)),t.slice(0,3))}},filter:{TAG:function(t){var e=t.replace(J,tt).toLowerCase();return"*"===t?function(){return!0}:function(t){return t.nodeName&&t.nodeName.toLowerCase()===e}},CLASS:function(t){var e=h[t+" "];return e||(e=new RegExp("(^|"+N+")"+t+"("+N+"|$)"))&&h(t,function(t){return e.test("string"==typeof t.className&&t.className||void 0!==t.getAttribute&&t.getAttribute("class")||"")})},ATTR:function(i,n,o){return function(t){var e=st.attr(t,i);return null==e?"!="===n:!n||(e+="","="===n?e===o:"!="===n?e!==o:"^="===n?o&&0===e.indexOf(o):"*="===n?o&&-1<e.indexOf(o):"$="===n?o&&e.slice(-o.length)===o:"~="===n?-1<(" "+e.replace(q," ")+" ").indexOf(o):"|="===n&&(e===o||e.slice(0,o.length+1)===o+"-"))}},CHILD:function(f,t,e,g,m){var v="nth"!==f.slice(0,3),y="last"!==f.slice(-4),b="of-type"===t;return 1===g&&0===m?function(t){return!!t.parentNode}:function(t,e,i){var n,o,s,r,a,l,c=v!==y?"nextSibling":"previousSibling",d=t.parentNode,u=b&&t.nodeName.toLowerCase(),h=!i&&!b,p=!1;if(d){if(v){for(;c;){for(r=t;r=r[c];)if(b?r.nodeName.toLowerCase()===u:1===r.nodeType)return!1;l=c="only"===f&&!l&&"nextSibling"}return!0}if(l=[y?d.firstChild:d.lastChild],y&&h){for(p=(a=(n=(o=(s=(r=d)[S]||(r[S]={}))[r.uniqueID]||(s[r.uniqueID]={}))[f]||[])[0]===k&&n[1])&&n[2],r=a&&d.childNodes[a];r=++a&&r&&r[c]||(p=a=0)||l.pop();)if(1===r.nodeType&&++p&&r===t){o[f]=[k,a,p];break}}else if(h&&(p=a=(n=(o=(s=(r=t)[S]||(r[S]={}))[r.uniqueID]||(s[r.uniqueID]={}))[f]||[])[0]===k&&n[1]),!1===p)for(;(r=++a&&r&&r[c]||(p=a=0)||l.pop())&&((b?r.nodeName.toLowerCase()!==u:1!==r.nodeType)||!++p||(h&&((o=(s=r[S]||(r[S]={}))[r.uniqueID]||(s[r.uniqueID]={}))[f]=[k,p]),r!==t)););return(p-=m)===g||p%g==0&&0<=p/g}}},PSEUDO:function(t,s){var e,r=w.pseudos[t]||w.setFilters[t.toLowerCase()]||st.error("unsupported pseudo: "+t);return r[S]?r(s):1<r.length?(e=[t,t,"",s],w.setFilters.hasOwnProperty(t.toLowerCase())?at(function(t,e){for(var i,n=r(t,s),o=n.length;o--;)t[i=j(t,n[o])]=!(e[i]=n[o])}):function(t){return r(t,0,e)}):r}},pseudos:{not:at(function(t){var n=[],o=[],a=u(t.replace(R,"$1"));return a[S]?at(function(t,e,i,n){for(var o,s=a(t,null,n,[]),r=t.length;r--;)(o=s[r])&&(t[r]=!(e[r]=o))}):function(t,e,i){return n[0]=t,a(n,null,i,o),n[0]=null,!o.pop()}}),has:at(function(e){return function(t){return 0<st(e,t).length}}),contains:at(function(e){return e=e.replace(J,tt),function(t){return-1<(t.textContent||t.innerText||s(t)).indexOf(e)}}),lang:at(function(i){return Y.test(i||"")||st.error("unsupported lang: "+i),i=i.replace(J,tt).toLowerCase(),function(t){var e;do{if(e=C?t.lang:t.getAttribute("xml:lang")||t.getAttribute("lang"))return(e=e.toLowerCase())===i||0===e.indexOf(i+"-")}while((t=t.parentNode)&&1===t.nodeType);return!1}}),target:function(t){var e=i.location&&i.location.hash;return e&&e.slice(1)===t.id},root:function(t){return t===r},focus:function(t){return t===T.activeElement&&(!T.hasFocus||T.hasFocus())&&!!(t.type||t.href||~t.tabIndex)},enabled:pt(!1),disabled:pt(!0),checked:function(t){var e=t.nodeName.toLowerCase();return"input"===e&&!!t.checked||"option"===e&&!!t.selected},selected:function(t){return t.parentNode&&t.parentNode.selectedIndex,!0===t.selected},empty:function(t){for(t=t.firstChild;t;t=t.nextSibling)if(t.nodeType<6)return!1;return!0},parent:function(t){return!w.pseudos.empty(t)},header:function(t){return Q.test(t.nodeName)},input:function(t){return V.test(t.nodeName)},button:function(t){var e=t.nodeName.toLowerCase();return"input"===e&&"button"===t.type||"button"===e},text:function(t){var e;return"input"===t.nodeName.toLowerCase()&&"text"===t.type&&(null==(e=t.getAttribute("type"))||"text"===e.toLowerCase())},first:ft(function(){return[0]}),last:ft(function(t,e){return[e-1]}),eq:ft(function(t,e,i){return[i<0?i+e:i]}),even:ft(function(t,e){for(var i=0;i<e;i+=2)t.push(i);return t}),odd:ft(function(t,e){for(var i=1;i<e;i+=2)t.push(i);return t}),lt:ft(function(t,e,i){for(var n=i<0?i+e:i;0<=--n;)t.push(n);return t}),gt:ft(function(t,e,i){for(var n=i<0?i+e:i;++n<e;)t.push(n);return t})}}).pseudos.nth=w.pseudos.eq,{radio:!0,checkbox:!0,file:!0,password:!0,image:!0})w.pseudos[t]=ut(t);for(t in{submit:!0,reset:!0})w.pseudos[t]=ht(t);function mt(){}function vt(t){for(var e=0,i=t.length,n="";e<i;e++)n+=t[e].value;return n}function yt(a,t,e){var l=t.dir,c=t.next,d=c||l,u=e&&"parentNode"===d,h=n++;return t.first?function(t,e,i){for(;t=t[l];)if(1===t.nodeType||u)return a(t,e,i);return!1}:function(t,e,i){var n,o,s,r=[k,h];if(i){for(;t=t[l];)if((1===t.nodeType||u)&&a(t,e,i))return!0}else for(;t=t[l];)if(1===t.nodeType||u)if(o=(s=t[S]||(t[S]={}))[t.uniqueID]||(s[t.uniqueID]={}),c&&c===t.nodeName.toLowerCase())t=t[l]||t;else{if((n=o[d])&&n[0]===k&&n[1]===h)return r[2]=n[2];if((o[d]=r)[2]=a(t,e,i))return!0}return!1}}function bt(o){return 1<o.length?function(t,e,i){for(var n=o.length;n--;)if(!o[n](t,e,i))return!1;return!0}:o[0]}function wt(t,e,i,n,o){for(var s,r=[],a=0,l=t.length,c=null!=e;a<l;a++)(s=t[a])&&(i&&!i(s,n,o)||(r.push(s),c&&e.push(a)));return r}function xt(p,f,g,m,v,t){return m&&!m[S]&&(m=xt(m)),v&&!v[S]&&(v=xt(v,t)),at(function(t,e,i,n){var o,s,r,a=[],l=[],c=e.length,d=t||function(t,e,i){for(var n=0,o=e.length;n<o;n++)st(t,e[n],i);return i}(f||"*",i.nodeType?[i]:i,[]),u=!p||!t&&f?d:wt(d,a,p,i,n),h=g?v||(t?p:c||m)?[]:e:u;if(g&&g(u,h,i,n),m)for(o=wt(h,l),m(o,[],i,n),s=o.length;s--;)(r=o[s])&&(h[l[s]]=!(u[l[s]]=r));if(t){if(v||p){if(v){for(o=[],s=h.length;s--;)(r=h[s])&&o.push(u[s]=r);v(null,h=[],o,n)}for(s=h.length;s--;)(r=h[s])&&-1<(o=v?j(t,r):a[s])&&(t[o]=!(e[o]=r))}}else h=wt(h===e?h.splice(c,h.length):h),v?v(null,e,h,n):I.apply(e,h)})}function _t(t){for(var o,e,i,n=t.length,s=w.relative[t[0].type],r=s||w.relative[" "],a=s?1:0,l=yt(function(t){return t===o},r,!0),c=yt(function(t){return-1<j(o,t)},r,!0),d=[function(t,e,i){var n=!s&&(i||e!==x)||((o=e).nodeType?l(t,e,i):c(t,e,i));return o=null,n}];a<n;a++)if(e=w.relative[t[a].type])d=[yt(bt(d),e)];else{if((e=w.filter[t[a].type].apply(null,t[a].matches))[S]){for(i=++a;i<n&&!w.relative[t[i].type];i++);return xt(1<a&&bt(d),1<a&&vt(t.slice(0,a-1).concat({value:" "===t[a-2].type?"*":""})).replace(R,"$1"),e,a<i&&_t(t.slice(a,i)),i<n&&_t(t=t.slice(i)),i<n&&vt(t))}d.push(e)}return bt(d)}return mt.prototype=w.filters=w.pseudos,w.setFilters=new mt,f=st.tokenize=function(t,e){var i,n,o,s,r,a,l,c=b[t+" "];if(c)return e?0:c.slice(0);for(r=t,a=[],l=w.preFilter;r;){for(s in i&&!(n=F.exec(r))||(n&&(r=r.slice(n[0].length)||r),a.push(o=[])),i=!1,(n=W.exec(r))&&(i=n.shift(),o.push({value:i,type:n[0].replace(R," ")}),r=r.slice(i.length)),w.filter)!(n=X[s].exec(r))||l[s]&&!(n=l[s](n))||(i=n.shift(),o.push({value:i,type:s,matches:n}),r=r.slice(i.length));if(!i)break}return e?r.length:r?st.error(t):b(t,a).slice(0)},u=st.compile=function(t,e){var i,m,v,y,b,n,o=[],s=[],r=$[t+" "];if(!r){for(e||(e=f(t)),i=e.length;i--;)(r=_t(e[i]))[S]?o.push(r):s.push(r);(r=$(t,(m=s,y=0<(v=o).length,b=0<m.length,n=function(t,e,i,n,o){var s,r,a,l=0,c="0",d=t&&[],u=[],h=x,p=t||b&&w.find.TAG("*",o),f=k+=null==h?1:Math.random()||.1,g=p.length;for(o&&(x=e===T||e||o);c!==g&&null!=(s=p[c]);c++){if(b&&s){for(r=0,e||s.ownerDocument===T||(_(s),i=!C);a=m[r++];)if(a(s,e||T,i)){n.push(s);break}o&&(k=f)}y&&((s=!a&&s)&&l--,t&&d.push(s))}if(l+=c,y&&c!==l){for(r=0;a=v[r++];)a(d,u,e,i);if(t){if(0<l)for(;c--;)d[c]||u[c]||(u[c]=D.call(n));u=wt(u)}I.apply(n,u),o&&!t&&0<u.length&&1<l+v.length&&st.uniqueSort(n)}return o&&(k=f,x=h),d},y?at(n):n))).selector=t}return r},g=st.select=function(t,e,i,n){var o,s,r,a,l,c="function"==typeof t&&t,d=!n&&f(t=c.selector||t);if(i=i||[],1===d.length){if(2<(s=d[0]=d[0].slice(0)).length&&"ID"===(r=s[0]).type&&9===e.nodeType&&C&&w.relative[s[1].type]){if(!(e=(w.find.ID(r.matches[0].replace(J,tt),e)||[])[0]))return i;c&&(e=e.parentNode),t=t.slice(s.shift().value.length)}for(o=X.needsContext.test(t)?0:s.length;o--&&(r=s[o],!w.relative[a=r.type]);)if((l=w.find[a])&&(n=l(r.matches[0].replace(J,tt),G.test(s[0].type)&&gt(e.parentNode)||e))){if(s.splice(o,1),!(t=n.length&&vt(s)))return I.apply(i,n),i;break}}return(c||u(t,d))(n,e,!C,i,!e||G.test(t)&&gt(e.parentNode)||e),i},p.sortStable=S.split("").sort(E).join("")===S,p.detectDuplicates=!!c,_(),p.sortDetached=lt(function(t){return 1&t.compareDocumentPosition(T.createElement("fieldset"))}),lt(function(t){return t.innerHTML="<a href='#'></a>","#"===t.firstChild.getAttribute("href")})||ct("type|href|height|width",function(t,e,i){if(!i)return t.getAttribute(e,"type"===e.toLowerCase()?1:2)}),p.attributes&&lt(function(t){return t.innerHTML="<input/>",t.firstChild.setAttribute("value",""),""===t.firstChild.getAttribute("value")})||ct("value",function(t,e,i){if(!i&&"input"===t.nodeName.toLowerCase())return t.defaultValue}),lt(function(t){return null==t.getAttribute("disabled")})||ct(L,function(t,e,i){var n;if(!i)return!0===t[e]?e.toLowerCase():(n=t.getAttributeNode(e))&&n.specified?n.value:null}),st}(T);S.find=f,S.expr=f.selectors,S.expr[":"]=S.expr.pseudos,S.uniqueSort=S.unique=f.uniqueSort,S.text=f.getText,S.isXMLDoc=f.isXML,S.contains=f.contains,S.escapeSelector=f.escape;var _=function(t,e,i){for(var n=[],o=void 0!==i;(t=t[e])&&9!==t.nodeType;)if(1===t.nodeType){if(o&&S(t).is(i))break;n.push(t)}return n},k=function(t,e){for(var i=[];t;t=t.nextSibling)1===t.nodeType&&t!==e&&i.push(t);return i},$=S.expr.match.needsContext;function E(t,e){return t.nodeName&&t.nodeName.toLowerCase()===e.toLowerCase()}var A=/^<([a-z][^\/\0>:\x20\t\r\n\f]*)[\x20\t\r\n\f]*\/?>(?:<\/\1>|)$/i;function D(t,i,n){return y(i)?S.grep(t,function(t,e){return!!i.call(t,e,t)!==n}):i.nodeType?S.grep(t,function(t){return t===i!==n}):"string"!=typeof i?S.grep(t,function(t){return-1<o.call(i,t)!==n}):S.filter(i,t,n)}S.filter=function(t,e,i){var n=e[0];return i&&(t=":not("+t+")"),1===e.length&&1===n.nodeType?S.find.matchesSelector(n,t)?[n]:[]:S.find.matches(t,S.grep(e,function(t){return 1===t.nodeType}))},S.fn.extend({find:function(t){var e,i,n=this.length,o=this;if("string"!=typeof t)return this.pushStack(S(t).filter(function(){for(e=0;e<n;e++)if(S.contains(o[e],this))return!0}));for(i=this.pushStack([]),e=0;e<n;e++)S.find(t,o[e],i);return 1<n?S.uniqueSort(i):i},filter:function(t){return this.pushStack(D(this,t||[],!1))},not:function(t){return this.pushStack(D(this,t||[],!0))},is:function(t){return!!D(this,"string"==typeof t&&$.test(t)?S(t):t||[],!1).length}});var P,I=/^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]+))$/;(S.fn.init=function(t,e,i){var n,o;if(!t)return this;if(i=i||P,"string"==typeof t){if(!(n="<"===t[0]&&">"===t[t.length-1]&&3<=t.length?[null,t,null]:I.exec(t))||!n[1]&&e)return!e||e.jquery?(e||i).find(t):this.constructor(e).find(t);if(n[1]){if(e=e instanceof S?e[0]:e,S.merge(this,S.parseHTML(n[1],e&&e.nodeType?e.ownerDocument||e:C,!0)),A.test(n[1])&&S.isPlainObject(e))for(n in e)y(this[n])?this[n](e[n]):this.attr(n,e[n]);return this}return(o=C.getElementById(n[2]))&&(this[0]=o,this.length=1),this}return t.nodeType?(this[0]=t,this.length=1,this):y(t)?void 0!==i.ready?i.ready(t):t(S):S.makeArray(t,this)}).prototype=S.fn,P=S(C);var O=/^(?:parents|prev(?:Until|All))/,j={children:!0,contents:!0,next:!0,prev:!0};function L(t,e){for(;(t=t[e])&&1!==t.nodeType;);return t}S.fn.extend({has:function(t){var e=S(t,this),i=e.length;return this.filter(function(){for(var t=0;t<i;t++)if(S.contains(this,e[t]))return!0})},closest:function(t,e){var i,n=0,o=this.length,s=[],r="string"!=typeof t&&S(t);if(!$.test(t))for(;n<o;n++)for(i=this[n];i&&i!==e;i=i.parentNode)if(i.nodeType<11&&(r?-1<r.index(i):1===i.nodeType&&S.find.matchesSelector(i,t))){s.push(i);break}return this.pushStack(1<s.length?S.uniqueSort(s):s)},index:function(t){return t?"string"==typeof t?o.call(S(t),this[0]):o.call(this,t.jquery?t[0]:t):this[0]&&this[0].parentNode?this.first().prevAll().length:-1},add:function(t,e){return this.pushStack(S.uniqueSort(S.merge(this.get(),S(t,e))))},addBack:function(t){return this.add(null==t?this.prevObject:this.prevObject.filter(t))}}),S.each({parent:function(t){var e=t.parentNode;return e&&11!==e.nodeType?e:null},parents:function(t){return _(t,"parentNode")},parentsUntil:function(t,e,i){return _(t,"parentNode",i)},next:function(t){return L(t,"nextSibling")},prev:function(t){return L(t,"previousSibling")},nextAll:function(t){return _(t,"nextSibling")},prevAll:function(t){return _(t,"previousSibling")},nextUntil:function(t,e,i){return _(t,"nextSibling",i)},prevUntil:function(t,e,i){return _(t,"previousSibling",i)},siblings:function(t){return k((t.parentNode||{}).firstChild,t)},children:function(t){return k(t.firstChild)},contents:function(t){return E(t,"iframe")?t.contentDocument:(E(t,"template")&&(t=t.content||t),S.merge([],t.childNodes))}},function(n,o){S.fn[n]=function(t,e){var i=S.map(this,o,t);return"Until"!==n.slice(-5)&&(e=t),e&&"string"==typeof e&&(i=S.filter(e,i)),1<this.length&&(j[n]||S.uniqueSort(i),O.test(n)&&i.reverse()),this.pushStack(i)}});var N=/[^\x20\t\r\n\f]+/g;function H(t){return t}function M(t){throw t}function z(t,e,i,n){var o;try{t&&y(o=t.promise)?o.call(t).done(e).fail(i):t&&y(o=t.then)?o.call(t,e,i):e.apply(void 0,[t].slice(n))}catch(t){i.apply(void 0,[t])}}S.Callbacks=function(n){var t,i;n="string"==typeof n?(t=n,i={},S.each(t.match(N)||[],function(t,e){i[e]=!0}),i):S.extend({},n);var o,e,s,r,a=[],l=[],c=-1,d=function(){for(r=r||n.once,s=o=!0;l.length;c=-1)for(e=l.shift();++c<a.length;)!1===a[c].apply(e[0],e[1])&&n.stopOnFalse&&(c=a.length,e=!1);n.memory||(e=!1),o=!1,r&&(a=e?[]:"")},u={add:function(){return a&&(e&&!o&&(c=a.length-1,l.push(e)),function i(t){S.each(t,function(t,e){y(e)?n.unique&&u.has(e)||a.push(e):e&&e.length&&"string"!==x(e)&&i(e)})}(arguments),e&&!o&&d()),this},remove:function(){return S.each(arguments,function(t,e){for(var i;-1<(i=S.inArray(e,a,i));)a.splice(i,1),i<=c&&c--}),this},has:function(t){return t?-1<S.inArray(t,a):0<a.length},empty:function(){return a&&(a=[]),this},disable:function(){return r=l=[],a=e="",this},disabled:function(){return!a},lock:function(){return r=l=[],e||o||(a=e=""),this},locked:function(){return!!r},fireWith:function(t,e){return r||(e=[t,(e=e||[]).slice?e.slice():e],l.push(e),o||d()),this},fire:function(){return u.fireWith(this,arguments),this},fired:function(){return!!s}};return u},S.extend({Deferred:function(t){var s=[["notify","progress",S.Callbacks("memory"),S.Callbacks("memory"),2],["resolve","done",S.Callbacks("once memory"),S.Callbacks("once memory"),0,"resolved"],["reject","fail",S.Callbacks("once memory"),S.Callbacks("once memory"),1,"rejected"]],o="pending",r={state:function(){return o},always:function(){return a.done(arguments).fail(arguments),this},catch:function(t){return r.then(null,t)},pipe:function(){var o=arguments;return S.Deferred(function(n){S.each(s,function(t,e){var i=y(o[e[4]])&&o[e[4]];a[e[1]](function(){var t=i&&i.apply(this,arguments);t&&y(t.promise)?t.promise().progress(n.notify).done(n.resolve).fail(n.reject):n[e[0]+"With"](this,i?[t]:arguments)})}),o=null}).promise()},then:function(e,i,n){var l=0;function c(o,s,r,a){return function(){var i=this,n=arguments,t=function(){var t,e;if(!(o<l)){if((t=r.apply(i,n))===s.promise())throw new TypeError("Thenable self-resolution");e=t&&("object"==typeof t||"function"==typeof t)&&t.then,y(e)?a?e.call(t,c(l,s,H,a),c(l,s,M,a)):(l++,e.call(t,c(l,s,H,a),c(l,s,M,a),c(l,s,H,s.notifyWith))):(r!==H&&(i=void 0,n=[t]),(a||s.resolveWith)(i,n))}},e=a?t:function(){try{t()}catch(t){S.Deferred.exceptionHook&&S.Deferred.exceptionHook(t,e.stackTrace),l<=o+1&&(r!==M&&(i=void 0,n=[t]),s.rejectWith(i,n))}};o?e():(S.Deferred.getStackHook&&(e.stackTrace=S.Deferred.getStackHook()),T.setTimeout(e))}}return S.Deferred(function(t){s[0][3].add(c(0,t,y(n)?n:H,t.notifyWith)),s[1][3].add(c(0,t,y(e)?e:H)),s[2][3].add(c(0,t,y(i)?i:M))}).promise()},promise:function(t){return null!=t?S.extend(t,r):r}},a={};return S.each(s,function(t,e){var i=e[2],n=e[5];r[e[1]]=i.add,n&&i.add(function(){o=n},s[3-t][2].disable,s[3-t][3].disable,s[0][2].lock,s[0][3].lock),i.add(e[3].fire),a[e[0]]=function(){return a[e[0]+"With"](this===a?void 0:this,arguments),this},a[e[0]+"With"]=i.fireWith}),r.promise(a),t&&t.call(a,a),a},when:function(t){var i=arguments.length,e=i,n=Array(e),o=a.call(arguments),s=S.Deferred(),r=function(e){return function(t){n[e]=this,o[e]=1<arguments.length?a.call(arguments):t,--i||s.resolveWith(n,o)}};if(i<=1&&(z(t,s.done(r(e)).resolve,s.reject,!i),"pending"===s.state()||y(o[e]&&o[e].then)))return s.then();for(;e--;)z(o[e],r(e),s.reject);return s.promise()}});var q=/^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;S.Deferred.exceptionHook=function(t,e){T.console&&T.console.warn&&t&&q.test(t.name)&&T.console.warn("jQuery.Deferred exception: "+t.message,t.stack,e)},S.readyException=function(t){T.setTimeout(function(){throw t})};var R=S.Deferred();function F(){C.removeEventListener("DOMContentLoaded",F),T.removeEventListener("load",F),S.ready()}S.fn.ready=function(t){return R.then(t).catch(function(t){S.readyException(t)}),this},S.extend({isReady:!1,readyWait:1,ready:function(t){(!0===t?--S.readyWait:S.isReady)||(S.isReady=!0)!==t&&0<--S.readyWait||R.resolveWith(C,[S])}}),S.ready.then=R.then,"complete"===C.readyState||"loading"!==C.readyState&&!C.documentElement.doScroll?T.setTimeout(S.ready):(C.addEventListener("DOMContentLoaded",F),T.addEventListener("load",F));var W=function(t,e,i,n,o,s,r){var a=0,l=t.length,c=null==i;if("object"===x(i))for(a in o=!0,i)W(t,e,a,i[a],!0,s,r);else if(void 0!==n&&(o=!0,y(n)||(r=!0),c&&(r?(e.call(t,n),e=null):(c=e,e=function(t,e,i){return c.call(S(t),i)})),e))for(;a<l;a++)e(t[a],i,r?n:n.call(t[a],a,e(t[a],i)));return o?t:c?e.call(t):l?e(t[0],i):s},B=/^-ms-/,U=/-([a-z])/g;function Y(t,e){return e.toUpperCase()}function X(t){return t.replace(B,"ms-").replace(U,Y)}var V=function(t){return 1===t.nodeType||9===t.nodeType||!+t.nodeType};function Q(){this.expando=S.expando+Q.uid++}Q.uid=1,Q.prototype={cache:function(t){var e=t[this.expando];return e||(e={},V(t)&&(t.nodeType?t[this.expando]=e:Object.defineProperty(t,this.expando,{value:e,configurable:!0}))),e},set:function(t,e,i){var n,o=this.cache(t);if("string"==typeof e)o[X(e)]=i;else for(n in e)o[X(n)]=e[n];return o},get:function(t,e){return void 0===e?this.cache(t):t[this.expando]&&t[this.expando][X(e)]},access:function(t,e,i){return void 0===e||e&&"string"==typeof e&&void 0===i?this.get(t,e):(this.set(t,e,i),void 0!==i?i:e)},remove:function(t,e){var i,n=t[this.expando];if(void 0!==n){if(void 0!==e){i=(e=Array.isArray(e)?e.map(X):(e=X(e))in n?[e]:e.match(N)||[]).length;for(;i--;)delete n[e[i]]}(void 0===e||S.isEmptyObject(n))&&(t.nodeType?t[this.expando]=void 0:delete t[this.expando])}},hasData:function(t){var e=t[this.expando];return void 0!==e&&!S.isEmptyObject(e)}};var K=new Q,Z=new Q,G=/^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,J=/[A-Z]/g;function tt(t,e,i){var n,o;if(void 0===i&&1===t.nodeType)if(n="data-"+e.replace(J,"-$&").toLowerCase(),"string"==typeof(i=t.getAttribute(n))){try{i="true"===(o=i)||"false"!==o&&("null"===o?null:o===+o+""?+o:G.test(o)?JSON.parse(o):o)}catch(t){}Z.set(t,e,i)}else i=void 0;return i}S.extend({hasData:function(t){return Z.hasData(t)||K.hasData(t)},data:function(t,e,i){return Z.access(t,e,i)},removeData:function(t,e){Z.remove(t,e)},_data:function(t,e,i){return K.access(t,e,i)},_removeData:function(t,e){K.remove(t,e)}}),S.fn.extend({data:function(i,t){var e,n,o,s=this[0],r=s&&s.attributes;if(void 0===i){if(this.length&&(o=Z.get(s),1===s.nodeType&&!K.get(s,"hasDataAttrs"))){for(e=r.length;e--;)r[e]&&0===(n=r[e].name).indexOf("data-")&&(n=X(n.slice(5)),tt(s,n,o[n]));K.set(s,"hasDataAttrs",!0)}return o}return"object"==typeof i?this.each(function(){Z.set(this,i)}):W(this,function(t){var e;if(s&&void 0===t)return void 0!==(e=Z.get(s,i))?e:void 0!==(e=tt(s,i))?e:void 0;this.each(function(){Z.set(this,i,t)})},null,t,1<arguments.length,null,!0)},removeData:function(t){return this.each(function(){Z.remove(this,t)})}}),S.extend({queue:function(t,e,i){var n;if(t)return e=(e||"fx")+"queue",n=K.get(t,e),i&&(!n||Array.isArray(i)?n=K.access(t,e,S.makeArray(i)):n.push(i)),n||[]},dequeue:function(t,e){e=e||"fx";var i=S.queue(t,e),n=i.length,o=i.shift(),s=S._queueHooks(t,e);"inprogress"===o&&(o=i.shift(),n--),o&&("fx"===e&&i.unshift("inprogress"),delete s.stop,o.call(t,function(){S.dequeue(t,e)},s)),!n&&s&&s.empty.fire()},_queueHooks:function(t,e){var i=e+"queueHooks";return K.get(t,i)||K.access(t,i,{empty:S.Callbacks("once memory").add(function(){K.remove(t,[e+"queue",i])})})}}),S.fn.extend({queue:function(e,i){var t=2;return"string"!=typeof e&&(i=e,e="fx",t--),arguments.length<t?S.queue(this[0],e):void 0===i?this:this.each(function(){var t=S.queue(this,e,i);S._queueHooks(this,e),"fx"===e&&"inprogress"!==t[0]&&S.dequeue(this,e)})},dequeue:function(t){return this.each(function(){S.dequeue(this,t)})},clearQueue:function(t){return this.queue(t||"fx",[])},promise:function(t,e){var i,n=1,o=S.Deferred(),s=this,r=this.length,a=function(){--n||o.resolveWith(s,[s])};for("string"!=typeof t&&(e=t,t=void 0),t=t||"fx";r--;)(i=K.get(s[r],t+"queueHooks"))&&i.empty&&(n++,i.empty.add(a));return a(),o.promise(e)}});var et=/[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source,it=new RegExp("^(?:([+-])=|)("+et+")([a-z%]*)$","i"),nt=["Top","Right","Bottom","Left"],ot=function(t,e){return"none"===(t=e||t).style.display||""===t.style.display&&S.contains(t.ownerDocument,t)&&"none"===S.css(t,"display")},st=function(t,e,i,n){var o,s,r={};for(s in e)r[s]=t.style[s],t.style[s]=e[s];for(s in o=i.apply(t,n||[]),e)t.style[s]=r[s];return o};function rt(t,e,i,n){var o,s,r=20,a=n?function(){return n.cur()}:function(){return S.css(t,e,"")},l=a(),c=i&&i[3]||(S.cssNumber[e]?"":"px"),d=(S.cssNumber[e]||"px"!==c&&+l)&&it.exec(S.css(t,e));if(d&&d[3]!==c){for(l/=2,c=c||d[3],d=+l||1;r--;)S.style(t,e,d+c),(1-s)*(1-(s=a()/l||.5))<=0&&(r=0),d/=s;d*=2,S.style(t,e,d+c),i=i||[]}return i&&(d=+d||+l||0,o=i[1]?d+(i[1]+1)*i[2]:+i[2],n&&(n.unit=c,n.start=d,n.end=o)),o}var at={};function lt(t,e){for(var i,n,o,s,r,a,l,c=[],d=0,u=t.length;d<u;d++)(n=t[d]).style&&(i=n.style.display,e?("none"===i&&(c[d]=K.get(n,"display")||null,c[d]||(n.style.display="")),""===n.style.display&&ot(n)&&(c[d]=(l=r=s=void 0,r=(o=n).ownerDocument,a=o.nodeName,(l=at[a])||(s=r.body.appendChild(r.createElement(a)),l=S.css(s,"display"),s.parentNode.removeChild(s),"none"===l&&(l="block"),at[a]=l)))):"none"!==i&&(c[d]="none",K.set(n,"display",i)));for(d=0;d<u;d++)null!=c[d]&&(t[d].style.display=c[d]);return t}S.fn.extend({show:function(){return lt(this,!0)},hide:function(){return lt(this)},toggle:function(t){return"boolean"==typeof t?t?this.show():this.hide():this.each(function(){ot(this)?S(this).show():S(this).hide()})}});var ct=/^(?:checkbox|radio)$/i,dt=/<([a-z][^\/\0>\x20\t\r\n\f]+)/i,ut=/^$|^module$|\/(?:java|ecma)script/i,ht={option:[1,"<select multiple='multiple'>","</select>"],thead:[1,"<table>","</table>"],col:[2,"<table><colgroup>","</colgroup></table>"],tr:[2,"<table><tbody>","</tbody></table>"],td:[3,"<table><tbody><tr>","</tr></tbody></table>"],_default:[0,"",""]};function pt(t,e){var i;return i=void 0!==t.getElementsByTagName?t.getElementsByTagName(e||"*"):void 0!==t.querySelectorAll?t.querySelectorAll(e||"*"):[],void 0===e||e&&E(t,e)?S.merge([t],i):i}function ft(t,e){for(var i=0,n=t.length;i<n;i++)K.set(t[i],"globalEval",!e||K.get(e[i],"globalEval"))}ht.optgroup=ht.option,ht.tbody=ht.tfoot=ht.colgroup=ht.caption=ht.thead,ht.th=ht.td;var gt,mt,vt=/<|&#?\w+;/;function yt(t,e,i,n,o){for(var s,r,a,l,c,d,u=e.createDocumentFragment(),h=[],p=0,f=t.length;p<f;p++)if((s=t[p])||0===s)if("object"===x(s))S.merge(h,s.nodeType?[s]:s);else if(vt.test(s)){for(r=r||u.appendChild(e.createElement("div")),a=(dt.exec(s)||["",""])[1].toLowerCase(),l=ht[a]||ht._default,r.innerHTML=l[1]+S.htmlPrefilter(s)+l[2],d=l[0];d--;)r=r.lastChild;S.merge(h,r.childNodes),(r=u.firstChild).textContent=""}else h.push(e.createTextNode(s));for(u.textContent="",p=0;s=h[p++];)if(n&&-1<S.inArray(s,n))o&&o.push(s);else if(c=S.contains(s.ownerDocument,s),r=pt(u.appendChild(s),"script"),c&&ft(r),i)for(d=0;s=r[d++];)ut.test(s.type||"")&&i.push(s);return u}gt=C.createDocumentFragment().appendChild(C.createElement("div")),(mt=C.createElement("input")).setAttribute("type","radio"),mt.setAttribute("checked","checked"),mt.setAttribute("name","t"),gt.appendChild(mt),v.checkClone=gt.cloneNode(!0).cloneNode(!0).lastChild.checked,gt.innerHTML="<textarea>x</textarea>",v.noCloneChecked=!!gt.cloneNode(!0).lastChild.defaultValue;var bt=C.documentElement,wt=/^key/,xt=/^(?:mouse|pointer|contextmenu|drag|drop)|click/,_t=/^([^.]*)(?:\.(.+)|)/;function Tt(){return!0}function Ct(){return!1}function St(){try{return C.activeElement}catch(t){}}function kt(t,e,i,n,o,s){var r,a;if("object"==typeof e){for(a in"string"!=typeof i&&(n=n||i,i=void 0),e)kt(t,a,i,n,e[a],s);return t}if(null==n&&null==o?(o=i,n=i=void 0):null==o&&("string"==typeof i?(o=n,n=void 0):(o=n,n=i,i=void 0)),!1===o)o=Ct;else if(!o)return t;return 1===s&&(r=o,(o=function(t){return S().off(t),r.apply(this,arguments)}).guid=r.guid||(r.guid=S.guid++)),t.each(function(){S.event.add(this,e,o,n,i)})}S.event={global:{},add:function(e,t,i,n,o){var s,r,a,l,c,d,u,h,p,f,g,m=K.get(e);if(m)for(i.handler&&(i=(s=i).handler,o=s.selector),o&&S.find.matchesSelector(bt,o),i.guid||(i.guid=S.guid++),(l=m.events)||(l=m.events={}),(r=m.handle)||(r=m.handle=function(t){return void 0!==S&&S.event.triggered!==t.type?S.event.dispatch.apply(e,arguments):void 0}),c=(t=(t||"").match(N)||[""]).length;c--;)p=g=(a=_t.exec(t[c])||[])[1],f=(a[2]||"").split(".").sort(),p&&(u=S.event.special[p]||{},p=(o?u.delegateType:u.bindType)||p,u=S.event.special[p]||{},d=S.extend({type:p,origType:g,data:n,handler:i,guid:i.guid,selector:o,needsContext:o&&S.expr.match.needsContext.test(o),namespace:f.join(".")},s),(h=l[p])||((h=l[p]=[]).delegateCount=0,u.setup&&!1!==u.setup.call(e,n,f,r)||e.addEventListener&&e.addEventListener(p,r)),u.add&&(u.add.call(e,d),d.handler.guid||(d.handler.guid=i.guid)),o?h.splice(h.delegateCount++,0,d):h.push(d),S.event.global[p]=!0)},remove:function(t,e,i,n,o){var s,r,a,l,c,d,u,h,p,f,g,m=K.hasData(t)&&K.get(t);if(m&&(l=m.events)){for(c=(e=(e||"").match(N)||[""]).length;c--;)if(p=g=(a=_t.exec(e[c])||[])[1],f=(a[2]||"").split(".").sort(),p){for(u=S.event.special[p]||{},h=l[p=(n?u.delegateType:u.bindType)||p]||[],a=a[2]&&new RegExp("(^|\\.)"+f.join("\\.(?:.*\\.|)")+"(\\.|$)"),r=s=h.length;s--;)d=h[s],!o&&g!==d.origType||i&&i.guid!==d.guid||a&&!a.test(d.namespace)||n&&n!==d.selector&&("**"!==n||!d.selector)||(h.splice(s,1),d.selector&&h.delegateCount--,u.remove&&u.remove.call(t,d));r&&!h.length&&(u.teardown&&!1!==u.teardown.call(t,f,m.handle)||S.removeEvent(t,p,m.handle),delete l[p])}else for(p in l)S.event.remove(t,p+e[c],i,n,!0);S.isEmptyObject(l)&&K.remove(t,"handle events")}},dispatch:function(t){var e,i,n,o,s,r,a=S.event.fix(t),l=new Array(arguments.length),c=(K.get(this,"events")||{})[a.type]||[],d=S.event.special[a.type]||{};for(l[0]=a,e=1;e<arguments.length;e++)l[e]=arguments[e];if(a.delegateTarget=this,!d.preDispatch||!1!==d.preDispatch.call(this,a)){for(r=S.event.handlers.call(this,a,c),e=0;(o=r[e++])&&!a.isPropagationStopped();)for(a.currentTarget=o.elem,i=0;(s=o.handlers[i++])&&!a.isImmediatePropagationStopped();)a.rnamespace&&!a.rnamespace.test(s.namespace)||(a.handleObj=s,a.data=s.data,void 0!==(n=((S.event.special[s.origType]||{}).handle||s.handler).apply(o.elem,l))&&!1===(a.result=n)&&(a.preventDefault(),a.stopPropagation()));return d.postDispatch&&d.postDispatch.call(this,a),a.result}},handlers:function(t,e){var i,n,o,s,r,a=[],l=e.delegateCount,c=t.target;if(l&&c.nodeType&&!("click"===t.type&&1<=t.button))for(;c!==this;c=c.parentNode||this)if(1===c.nodeType&&("click"!==t.type||!0!==c.disabled)){for(s=[],r={},i=0;i<l;i++)void 0===r[o=(n=e[i]).selector+" "]&&(r[o]=n.needsContext?-1<S(o,this).index(c):S.find(o,this,null,[c]).length),r[o]&&s.push(n);s.length&&a.push({elem:c,handlers:s})}return c=this,l<e.length&&a.push({elem:c,handlers:e.slice(l)}),a},addProp:function(e,t){Object.defineProperty(S.Event.prototype,e,{enumerable:!0,configurable:!0,get:y(t)?function(){if(this.originalEvent)return t(this.originalEvent)}:function(){if(this.originalEvent)return this.originalEvent[e]},set:function(t){Object.defineProperty(this,e,{enumerable:!0,configurable:!0,writable:!0,value:t})}})},fix:function(t){return t[S.expando]?t:new S.Event(t)},special:{load:{noBubble:!0},focus:{trigger:function(){if(this!==St()&&this.focus)return this.focus(),!1},delegateType:"focusin"},blur:{trigger:function(){if(this===St()&&this.blur)return this.blur(),!1},delegateType:"focusout"},click:{trigger:function(){if("checkbox"===this.type&&this.click&&E(this,"input"))return this.click(),!1},_default:function(t){return E(t.target,"a")}},beforeunload:{postDispatch:function(t){void 0!==t.result&&t.originalEvent&&(t.originalEvent.returnValue=t.result)}}}},S.removeEvent=function(t,e,i){t.removeEventListener&&t.removeEventListener(e,i)},S.Event=function(t,e){if(!(this instanceof S.Event))return new S.Event(t,e);t&&t.type?(this.originalEvent=t,this.type=t.type,this.isDefaultPrevented=t.defaultPrevented||void 0===t.defaultPrevented&&!1===t.returnValue?Tt:Ct,this.target=t.target&&3===t.target.nodeType?t.target.parentNode:t.target,this.currentTarget=t.currentTarget,this.relatedTarget=t.relatedTarget):this.type=t,e&&S.extend(this,e),this.timeStamp=t&&t.timeStamp||Date.now(),this[S.expando]=!0},S.Event.prototype={constructor:S.Event,isDefaultPrevented:Ct,isPropagationStopped:Ct,isImmediatePropagationStopped:Ct,isSimulated:!1,preventDefault:function(){var t=this.originalEvent;this.isDefaultPrevented=Tt,t&&!this.isSimulated&&t.preventDefault()},stopPropagation:function(){var t=this.originalEvent;this.isPropagationStopped=Tt,t&&!this.isSimulated&&t.stopPropagation()},stopImmediatePropagation:function(){var t=this.originalEvent;this.isImmediatePropagationStopped=Tt,t&&!this.isSimulated&&t.stopImmediatePropagation(),this.stopPropagation()}},S.each({altKey:!0,bubbles:!0,cancelable:!0,changedTouches:!0,ctrlKey:!0,detail:!0,eventPhase:!0,metaKey:!0,pageX:!0,pageY:!0,shiftKey:!0,view:!0,char:!0,charCode:!0,key:!0,keyCode:!0,button:!0,buttons:!0,clientX:!0,clientY:!0,offsetX:!0,offsetY:!0,pointerId:!0,pointerType:!0,screenX:!0,screenY:!0,targetTouches:!0,toElement:!0,touches:!0,which:function(t){var e=t.button;return null==t.which&&wt.test(t.type)?null!=t.charCode?t.charCode:t.keyCode:!t.which&&void 0!==e&&xt.test(t.type)?1&e?1:2&e?3:4&e?2:0:t.which}},S.event.addProp),S.each({mouseenter:"mouseover",mouseleave:"mouseout",pointerenter:"pointerover",pointerleave:"pointerout"},function(t,o){S.event.special[t]={delegateType:o,bindType:o,handle:function(t){var e,i=t.relatedTarget,n=t.handleObj;return i&&(i===this||S.contains(this,i))||(t.type=n.origType,e=n.handler.apply(this,arguments),t.type=o),e}}}),S.fn.extend({on:function(t,e,i,n){return kt(this,t,e,i,n)},one:function(t,e,i,n){return kt(this,t,e,i,n,1)},off:function(t,e,i){var n,o;if(t&&t.preventDefault&&t.handleObj)return n=t.handleObj,S(t.delegateTarget).off(n.namespace?n.origType+"."+n.namespace:n.origType,n.selector,n.handler),this;if("object"==typeof t){for(o in t)this.off(o,e,t[o]);return this}return!1!==e&&"function"!=typeof e||(i=e,e=void 0),!1===i&&(i=Ct),this.each(function(){S.event.remove(this,t,i,e)})}});var $t=/<(?!area|br|col|embed|hr|img|input|link|meta|param)(([a-z][^\/\0>\x20\t\r\n\f]*)[^>]*)\/>/gi,Et=/<script|<style|<link/i,At=/checked\s*(?:[^=]|=\s*.checked.)/i,Dt=/^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g;function Pt(t,e){return E(t,"table")&&E(11!==e.nodeType?e:e.firstChild,"tr")&&S(t).children("tbody")[0]||t}function It(t){return t.type=(null!==t.getAttribute("type"))+"/"+t.type,t}function Ot(t){return"true/"===(t.type||"").slice(0,5)?t.type=t.type.slice(5):t.removeAttribute("type"),t}function jt(t,e){var i,n,o,s,r,a,l,c;if(1===e.nodeType){if(K.hasData(t)&&(s=K.access(t),r=K.set(e,s),c=s.events))for(o in delete r.handle,r.events={},c)for(i=0,n=c[o].length;i<n;i++)S.event.add(e,o,c[o][i]);Z.hasData(t)&&(a=Z.access(t),l=S.extend({},a),Z.set(e,l))}}function Lt(i,n,o,s){n=g.apply([],n);var t,e,r,a,l,c,d=0,u=i.length,h=u-1,p=n[0],f=y(p);if(f||1<u&&"string"==typeof p&&!v.checkClone&&At.test(p))return i.each(function(t){var e=i.eq(t);f&&(n[0]=p.call(this,t,e.html())),Lt(e,n,o,s)});if(u&&(e=(t=yt(n,i[0].ownerDocument,!1,i,s)).firstChild,1===t.childNodes.length&&(t=e),e||s)){for(a=(r=S.map(pt(t,"script"),It)).length;d<u;d++)l=t,d!==h&&(l=S.clone(l,!0,!0),a&&S.merge(r,pt(l,"script"))),o.call(i[d],l,d);if(a)for(c=r[r.length-1].ownerDocument,S.map(r,Ot),d=0;d<a;d++)l=r[d],ut.test(l.type||"")&&!K.access(l,"globalEval")&&S.contains(c,l)&&(l.src&&"module"!==(l.type||"").toLowerCase()?S._evalUrl&&S._evalUrl(l.src):w(l.textContent.replace(Dt,""),c,l))}return i}function Nt(t,e,i){for(var n,o=e?S.filter(e,t):t,s=0;null!=(n=o[s]);s++)i||1!==n.nodeType||S.cleanData(pt(n)),n.parentNode&&(i&&S.contains(n.ownerDocument,n)&&ft(pt(n,"script")),n.parentNode.removeChild(n));return t}S.extend({htmlPrefilter:function(t){return t.replace($t,"<$1></$2>")},clone:function(t,e,i){var n,o,s,r,a,l,c,d=t.cloneNode(!0),u=S.contains(t.ownerDocument,t);if(!(v.noCloneChecked||1!==t.nodeType&&11!==t.nodeType||S.isXMLDoc(t)))for(r=pt(d),n=0,o=(s=pt(t)).length;n<o;n++)a=s[n],l=r[n],void 0,"input"===(c=l.nodeName.toLowerCase())&&ct.test(a.type)?l.checked=a.checked:"input"!==c&&"textarea"!==c||(l.defaultValue=a.defaultValue);if(e)if(i)for(s=s||pt(t),r=r||pt(d),n=0,o=s.length;n<o;n++)jt(s[n],r[n]);else jt(t,d);return 0<(r=pt(d,"script")).length&&ft(r,!u&&pt(t,"script")),d},cleanData:function(t){for(var e,i,n,o=S.event.special,s=0;void 0!==(i=t[s]);s++)if(V(i)){if(e=i[K.expando]){if(e.events)for(n in e.events)o[n]?S.event.remove(i,n):S.removeEvent(i,n,e.handle);i[K.expando]=void 0}i[Z.expando]&&(i[Z.expando]=void 0)}}}),S.fn.extend({detach:function(t){return Nt(this,t,!0)},remove:function(t){return Nt(this,t)},text:function(t){return W(this,function(t){return void 0===t?S.text(this):this.empty().each(function(){1!==this.nodeType&&11!==this.nodeType&&9!==this.nodeType||(this.textContent=t)})},null,t,arguments.length)},append:function(){return Lt(this,arguments,function(t){1!==this.nodeType&&11!==this.nodeType&&9!==this.nodeType||Pt(this,t).appendChild(t)})},prepend:function(){return Lt(this,arguments,function(t){if(1===this.nodeType||11===this.nodeType||9===this.nodeType){var e=Pt(this,t);e.insertBefore(t,e.firstChild)}})},before:function(){return Lt(this,arguments,function(t){this.parentNode&&this.parentNode.insertBefore(t,this)})},after:function(){return Lt(this,arguments,function(t){this.parentNode&&this.parentNode.insertBefore(t,this.nextSibling)})},empty:function(){for(var t,e=0;null!=(t=this[e]);e++)1===t.nodeType&&(S.cleanData(pt(t,!1)),t.textContent="");return this},clone:function(t,e){return t=null!=t&&t,e=null==e?t:e,this.map(function(){return S.clone(this,t,e)})},html:function(t){return W(this,function(t){var e=this[0]||{},i=0,n=this.length;if(void 0===t&&1===e.nodeType)return e.innerHTML;if("string"==typeof t&&!Et.test(t)&&!ht[(dt.exec(t)||["",""])[1].toLowerCase()]){t=S.htmlPrefilter(t);try{for(;i<n;i++)1===(e=this[i]||{}).nodeType&&(S.cleanData(pt(e,!1)),e.innerHTML=t);e=0}catch(t){}}e&&this.empty().append(t)},null,t,arguments.length)},replaceWith:function(){var i=[];return Lt(this,arguments,function(t){var e=this.parentNode;S.inArray(this,i)<0&&(S.cleanData(pt(this)),e&&e.replaceChild(t,this))},i)}}),S.each({appendTo:"append",prependTo:"prepend",insertBefore:"before",insertAfter:"after",replaceAll:"replaceWith"},function(t,r){S.fn[t]=function(t){for(var e,i=[],n=S(t),o=n.length-1,s=0;s<=o;s++)e=s===o?this:this.clone(!0),S(n[s])[r](e),l.apply(i,e.get());return this.pushStack(i)}});var Ht=new RegExp("^("+et+")(?!px)[a-z%]+$","i"),Mt=function(t){var e=t.ownerDocument.defaultView;return e&&e.opener||(e=T),e.getComputedStyle(t)},zt=new RegExp(nt.join("|"),"i");function qt(t,e,i){var n,o,s,r,a=t.style;return(i=i||Mt(t))&&(""!==(r=i.getPropertyValue(e)||i[e])||S.contains(t.ownerDocument,t)||(r=S.style(t,e)),!v.pixelBoxStyles()&&Ht.test(r)&&zt.test(e)&&(n=a.width,o=a.minWidth,s=a.maxWidth,a.minWidth=a.maxWidth=a.width=r,r=i.width,a.width=n,a.minWidth=o,a.maxWidth=s)),void 0!==r?r+"":r}function Rt(t,e){return{get:function(){if(!t())return(this.get=e).apply(this,arguments);delete this.get}}}!function(){function t(){if(l){a.style.cssText="position:absolute;left:-11111px;width:60px;margin-top:1px;padding:0;border:0",l.style.cssText="position:relative;display:block;box-sizing:border-box;overflow:scroll;margin:auto;border:1px;padding:1px;width:60%;top:1%",bt.appendChild(a).appendChild(l);var t=T.getComputedStyle(l);i="1%"!==t.top,r=12===e(t.marginLeft),l.style.right="60%",s=36===e(t.right),n=36===e(t.width),l.style.position="absolute",o=36===l.offsetWidth||"absolute",bt.removeChild(a),l=null}}function e(t){return Math.round(parseFloat(t))}var i,n,o,s,r,a=C.createElement("div"),l=C.createElement("div");l.style&&(l.style.backgroundClip="content-box",l.cloneNode(!0).style.backgroundClip="",v.clearCloneStyle="content-box"===l.style.backgroundClip,S.extend(v,{boxSizingReliable:function(){return t(),n},pixelBoxStyles:function(){return t(),s},pixelPosition:function(){return t(),i},reliableMarginLeft:function(){return t(),r},scrollboxSize:function(){return t(),o}}))}();var Ft=/^(none|table(?!-c[ea]).+)/,Wt=/^--/,Bt={position:"absolute",visibility:"hidden",display:"block"},Ut={letterSpacing:"0",fontWeight:"400"},Yt=["Webkit","Moz","ms"],Xt=C.createElement("div").style;function Vt(t){var e=S.cssProps[t];return e||(e=S.cssProps[t]=function(t){if(t in Xt)return t;for(var e=t[0].toUpperCase()+t.slice(1),i=Yt.length;i--;)if((t=Yt[i]+e)in Xt)return t}(t)||t),e}function Qt(t,e,i){var n=it.exec(e);return n?Math.max(0,n[2]-(i||0))+(n[3]||"px"):e}function Kt(t,e,i,n,o,s){var r="width"===e?1:0,a=0,l=0;if(i===(n?"border":"content"))return 0;for(;r<4;r+=2)"margin"===i&&(l+=S.css(t,i+nt[r],!0,o)),n?("content"===i&&(l-=S.css(t,"padding"+nt[r],!0,o)),"margin"!==i&&(l-=S.css(t,"border"+nt[r]+"Width",!0,o))):(l+=S.css(t,"padding"+nt[r],!0,o),"padding"!==i?l+=S.css(t,"border"+nt[r]+"Width",!0,o):a+=S.css(t,"border"+nt[r]+"Width",!0,o));return!n&&0<=s&&(l+=Math.max(0,Math.ceil(t["offset"+e[0].toUpperCase()+e.slice(1)]-s-l-a-.5))),l}function Zt(t,e,i){var n=Mt(t),o=qt(t,e,n),s="border-box"===S.css(t,"boxSizing",!1,n),r=s;if(Ht.test(o)){if(!i)return o;o="auto"}return r=r&&(v.boxSizingReliable()||o===t.style[e]),("auto"===o||!parseFloat(o)&&"inline"===S.css(t,"display",!1,n))&&(o=t["offset"+e[0].toUpperCase()+e.slice(1)],r=!0),(o=parseFloat(o)||0)+Kt(t,e,i||(s?"border":"content"),r,n,o)+"px"}function Gt(t,e,i,n,o){return new Gt.prototype.init(t,e,i,n,o)}S.extend({cssHooks:{opacity:{get:function(t,e){if(e){var i=qt(t,"opacity");return""===i?"1":i}}}},cssNumber:{animationIterationCount:!0,columnCount:!0,fillOpacity:!0,flexGrow:!0,flexShrink:!0,fontWeight:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,widows:!0,zIndex:!0,zoom:!0},cssProps:{},style:function(t,e,i,n){if(t&&3!==t.nodeType&&8!==t.nodeType&&t.style){var o,s,r,a=X(e),l=Wt.test(e),c=t.style;if(l||(e=Vt(a)),r=S.cssHooks[e]||S.cssHooks[a],void 0===i)return r&&"get"in r&&void 0!==(o=r.get(t,!1,n))?o:c[e];"string"===(s=typeof i)&&(o=it.exec(i))&&o[1]&&(i=rt(t,e,o),s="number"),null!=i&&i==i&&("number"===s&&(i+=o&&o[3]||(S.cssNumber[a]?"":"px")),v.clearCloneStyle||""!==i||0!==e.indexOf("background")||(c[e]="inherit"),r&&"set"in r&&void 0===(i=r.set(t,i,n))||(l?c.setProperty(e,i):c[e]=i))}},css:function(t,e,i,n){var o,s,r,a=X(e);return Wt.test(e)||(e=Vt(a)),(r=S.cssHooks[e]||S.cssHooks[a])&&"get"in r&&(o=r.get(t,!0,i)),void 0===o&&(o=qt(t,e,n)),"normal"===o&&e in Ut&&(o=Ut[e]),""===i||i?(s=parseFloat(o),!0===i||isFinite(s)?s||0:o):o}}),S.each(["height","width"],function(t,a){S.cssHooks[a]={get:function(t,e,i){if(e)return!Ft.test(S.css(t,"display"))||t.getClientRects().length&&t.getBoundingClientRect().width?Zt(t,a,i):st(t,Bt,function(){return Zt(t,a,i)})},set:function(t,e,i){var n,o=Mt(t),s="border-box"===S.css(t,"boxSizing",!1,o),r=i&&Kt(t,a,i,s,o);return s&&v.scrollboxSize()===o.position&&(r-=Math.ceil(t["offset"+a[0].toUpperCase()+a.slice(1)]-parseFloat(o[a])-Kt(t,a,"border",!1,o)-.5)),r&&(n=it.exec(e))&&"px"!==(n[3]||"px")&&(t.style[a]=e,e=S.css(t,a)),Qt(0,e,r)}}}),S.cssHooks.marginLeft=Rt(v.reliableMarginLeft,function(t,e){if(e)return(parseFloat(qt(t,"marginLeft"))||t.getBoundingClientRect().left-st(t,{marginLeft:0},function(){return t.getBoundingClientRect().left}))+"px"}),S.each({margin:"",padding:"",border:"Width"},function(o,s){S.cssHooks[o+s]={expand:function(t){for(var e=0,i={},n="string"==typeof t?t.split(" "):[t];e<4;e++)i[o+nt[e]+s]=n[e]||n[e-2]||n[0];return i}},"margin"!==o&&(S.cssHooks[o+s].set=Qt)}),S.fn.extend({css:function(t,e){return W(this,function(t,e,i){var n,o,s={},r=0;if(Array.isArray(e)){for(n=Mt(t),o=e.length;r<o;r++)s[e[r]]=S.css(t,e[r],!1,n);return s}return void 0!==i?S.style(t,e,i):S.css(t,e)},t,e,1<arguments.length)}}),((S.Tween=Gt).prototype={constructor:Gt,init:function(t,e,i,n,o,s){this.elem=t,this.prop=i,this.easing=o||S.easing._default,this.options=e,this.start=this.now=this.cur(),this.end=n,this.unit=s||(S.cssNumber[i]?"":"px")},cur:function(){var t=Gt.propHooks[this.prop];return t&&t.get?t.get(this):Gt.propHooks._default.get(this)},run:function(t){var e,i=Gt.propHooks[this.prop];return this.options.duration?this.pos=e=S.easing[this.easing](t,this.options.duration*t,0,1,this.options.duration):this.pos=e=t,this.now=(this.end-this.start)*e+this.start,this.options.step&&this.options.step.call(this.elem,this.now,this),i&&i.set?i.set(this):Gt.propHooks._default.set(this),this}}).init.prototype=Gt.prototype,(Gt.propHooks={_default:{get:function(t){var e;return 1!==t.elem.nodeType||null!=t.elem[t.prop]&&null==t.elem.style[t.prop]?t.elem[t.prop]:(e=S.css(t.elem,t.prop,""))&&"auto"!==e?e:0},set:function(t){S.fx.step[t.prop]?S.fx.step[t.prop](t):1!==t.elem.nodeType||null==t.elem.style[S.cssProps[t.prop]]&&!S.cssHooks[t.prop]?t.elem[t.prop]=t.now:S.style(t.elem,t.prop,t.now+t.unit)}}}).scrollTop=Gt.propHooks.scrollLeft={set:function(t){t.elem.nodeType&&t.elem.parentNode&&(t.elem[t.prop]=t.now)}},S.easing={linear:function(t){return t},swing:function(t){return.5-Math.cos(t*Math.PI)/2},_default:"swing"},S.fx=Gt.prototype.init,S.fx.step={};var Jt,te,ee,ie,ne=/^(?:toggle|show|hide)$/,oe=/queueHooks$/;function se(){te&&(!1===C.hidden&&T.requestAnimationFrame?T.requestAnimationFrame(se):T.setTimeout(se,S.fx.interval),S.fx.tick())}function re(){return T.setTimeout(function(){Jt=void 0}),Jt=Date.now()}function ae(t,e){var i,n=0,o={height:t};for(e=e?1:0;n<4;n+=2-e)o["margin"+(i=nt[n])]=o["padding"+i]=t;return e&&(o.opacity=o.width=t),o}function le(t,e,i){for(var n,o=(ce.tweeners[e]||[]).concat(ce.tweeners["*"]),s=0,r=o.length;s<r;s++)if(n=o[s].call(i,e,t))return n}function ce(s,t,e){var i,r,n=0,o=ce.prefilters.length,a=S.Deferred().always(function(){delete l.elem}),l=function(){if(r)return!1;for(var t=Jt||re(),e=Math.max(0,c.startTime+c.duration-t),i=1-(e/c.duration||0),n=0,o=c.tweens.length;n<o;n++)c.tweens[n].run(i);return a.notifyWith(s,[c,i,e]),i<1&&o?e:(o||a.notifyWith(s,[c,1,0]),a.resolveWith(s,[c]),!1)},c=a.promise({elem:s,props:S.extend({},t),opts:S.extend(!0,{specialEasing:{},easing:S.easing._default},e),originalProperties:t,originalOptions:e,startTime:Jt||re(),duration:e.duration,tweens:[],createTween:function(t,e){var i=S.Tween(s,c.opts,t,e,c.opts.specialEasing[t]||c.opts.easing);return c.tweens.push(i),i},stop:function(t){var e=0,i=t?c.tweens.length:0;if(r)return this;for(r=!0;e<i;e++)c.tweens[e].run(1);return t?(a.notifyWith(s,[c,1,0]),a.resolveWith(s,[c,t])):a.rejectWith(s,[c,t]),this}}),d=c.props;for(!function(t,e){var i,n,o,s,r;for(i in t)if(o=e[n=X(i)],s=t[i],Array.isArray(s)&&(o=s[1],s=t[i]=s[0]),i!==n&&(t[n]=s,delete t[i]),(r=S.cssHooks[n])&&"expand"in r)for(i in s=r.expand(s),delete t[n],s)i in t||(t[i]=s[i],e[i]=o);else e[n]=o}(d,c.opts.specialEasing);n<o;n++)if(i=ce.prefilters[n].call(c,s,d,c.opts))return y(i.stop)&&(S._queueHooks(c.elem,c.opts.queue).stop=i.stop.bind(i)),i;return S.map(d,le,c),y(c.opts.start)&&c.opts.start.call(s,c),c.progress(c.opts.progress).done(c.opts.done,c.opts.complete).fail(c.opts.fail).always(c.opts.always),S.fx.timer(S.extend(l,{elem:s,anim:c,queue:c.opts.queue})),c}S.Animation=S.extend(ce,{tweeners:{"*":[function(t,e){var i=this.createTween(t,e);return rt(i.elem,t,it.exec(e),i),i}]},tweener:function(t,e){y(t)?(e=t,t=["*"]):t=t.match(N);for(var i,n=0,o=t.length;n<o;n++)i=t[n],ce.tweeners[i]=ce.tweeners[i]||[],ce.tweeners[i].unshift(e)},prefilters:[function(t,e,i){var n,o,s,r,a,l,c,d,u="width"in e||"height"in e,h=this,p={},f=t.style,g=t.nodeType&&ot(t),m=K.get(t,"fxshow");for(n in i.queue||(null==(r=S._queueHooks(t,"fx")).unqueued&&(r.unqueued=0,a=r.empty.fire,r.empty.fire=function(){r.unqueued||a()}),r.unqueued++,h.always(function(){h.always(function(){r.unqueued--,S.queue(t,"fx").length||r.empty.fire()})})),e)if(o=e[n],ne.test(o)){if(delete e[n],s=s||"toggle"===o,o===(g?"hide":"show")){if("show"!==o||!m||void 0===m[n])continue;g=!0}p[n]=m&&m[n]||S.style(t,n)}if((l=!S.isEmptyObject(e))||!S.isEmptyObject(p))for(n in u&&1===t.nodeType&&(i.overflow=[f.overflow,f.overflowX,f.overflowY],null==(c=m&&m.display)&&(c=K.get(t,"display")),"none"===(d=S.css(t,"display"))&&(c?d=c:(lt([t],!0),c=t.style.display||c,d=S.css(t,"display"),lt([t]))),("inline"===d||"inline-block"===d&&null!=c)&&"none"===S.css(t,"float")&&(l||(h.done(function(){f.display=c}),null==c&&(d=f.display,c="none"===d?"":d)),f.display="inline-block")),i.overflow&&(f.overflow="hidden",h.always(function(){f.overflow=i.overflow[0],f.overflowX=i.overflow[1],f.overflowY=i.overflow[2]})),l=!1,p)l||(m?"hidden"in m&&(g=m.hidden):m=K.access(t,"fxshow",{display:c}),s&&(m.hidden=!g),g&&lt([t],!0),h.done(function(){for(n in g||lt([t]),K.remove(t,"fxshow"),p)S.style(t,n,p[n])})),l=le(g?m[n]:0,n,h),n in m||(m[n]=l.start,g&&(l.end=l.start,l.start=0))}],prefilter:function(t,e){e?ce.prefilters.unshift(t):ce.prefilters.push(t)}}),S.speed=function(t,e,i){var n=t&&"object"==typeof t?S.extend({},t):{complete:i||!i&&e||y(t)&&t,duration:t,easing:i&&e||e&&!y(e)&&e};return S.fx.off?n.duration=0:"number"!=typeof n.duration&&(n.duration in S.fx.speeds?n.duration=S.fx.speeds[n.duration]:n.duration=S.fx.speeds._default),null!=n.queue&&!0!==n.queue||(n.queue="fx"),n.old=n.complete,n.complete=function(){y(n.old)&&n.old.call(this),n.queue&&S.dequeue(this,n.queue)},n},S.fn.extend({fadeTo:function(t,e,i,n){return this.filter(ot).css("opacity",0).show().end().animate({opacity:e},t,i,n)},animate:function(e,t,i,n){var o=S.isEmptyObject(e),s=S.speed(t,i,n),r=function(){var t=ce(this,S.extend({},e),s);(o||K.get(this,"finish"))&&t.stop(!0)};return r.finish=r,o||!1===s.queue?this.each(r):this.queue(s.queue,r)},stop:function(o,t,s){var r=function(t){var e=t.stop;delete t.stop,e(s)};return"string"!=typeof o&&(s=t,t=o,o=void 0),t&&!1!==o&&this.queue(o||"fx",[]),this.each(function(){var t=!0,e=null!=o&&o+"queueHooks",i=S.timers,n=K.get(this);if(e)n[e]&&n[e].stop&&r(n[e]);else for(e in n)n[e]&&n[e].stop&&oe.test(e)&&r(n[e]);for(e=i.length;e--;)i[e].elem!==this||null!=o&&i[e].queue!==o||(i[e].anim.stop(s),t=!1,i.splice(e,1));!t&&s||S.dequeue(this,o)})},finish:function(r){return!1!==r&&(r=r||"fx"),this.each(function(){var t,e=K.get(this),i=e[r+"queue"],n=e[r+"queueHooks"],o=S.timers,s=i?i.length:0;for(e.finish=!0,S.queue(this,r,[]),n&&n.stop&&n.stop.call(this,!0),t=o.length;t--;)o[t].elem===this&&o[t].queue===r&&(o[t].anim.stop(!0),o.splice(t,1));for(t=0;t<s;t++)i[t]&&i[t].finish&&i[t].finish.call(this);delete e.finish})}}),S.each(["toggle","show","hide"],function(t,n){var o=S.fn[n];S.fn[n]=function(t,e,i){return null==t||"boolean"==typeof t?o.apply(this,arguments):this.animate(ae(n,!0),t,e,i)}}),S.each({slideDown:ae("show"),slideUp:ae("hide"),slideToggle:ae("toggle"),fadeIn:{opacity:"show"},fadeOut:{opacity:"hide"},fadeToggle:{opacity:"toggle"}},function(t,n){S.fn[t]=function(t,e,i){return this.animate(n,t,e,i)}}),S.timers=[],S.fx.tick=function(){var t,e=0,i=S.timers;for(Jt=Date.now();e<i.length;e++)(t=i[e])()||i[e]!==t||i.splice(e--,1);i.length||S.fx.stop(),Jt=void 0},S.fx.timer=function(t){S.timers.push(t),S.fx.start()},S.fx.interval=13,S.fx.start=function(){te||(te=!0,se())},S.fx.stop=function(){te=null},S.fx.speeds={slow:600,fast:200,_default:400},S.fn.delay=function(n,t){return n=S.fx&&S.fx.speeds[n]||n,t=t||"fx",this.queue(t,function(t,e){var i=T.setTimeout(t,n);e.stop=function(){T.clearTimeout(i)}})},ee=C.createElement("input"),ie=C.createElement("select").appendChild(C.createElement("option")),ee.type="checkbox",v.checkOn=""!==ee.value,v.optSelected=ie.selected,(ee=C.createElement("input")).value="t",ee.type="radio",v.radioValue="t"===ee.value;var de,ue=S.expr.attrHandle;S.fn.extend({attr:function(t,e){return W(this,S.attr,t,e,1<arguments.length)},removeAttr:function(t){return this.each(function(){S.removeAttr(this,t)})}}),S.extend({attr:function(t,e,i){var n,o,s=t.nodeType;if(3!==s&&8!==s&&2!==s)return void 0===t.getAttribute?S.prop(t,e,i):(1===s&&S.isXMLDoc(t)||(o=S.attrHooks[e.toLowerCase()]||(S.expr.match.bool.test(e)?de:void 0)),void 0!==i?null===i?void S.removeAttr(t,e):o&&"set"in o&&void 0!==(n=o.set(t,i,e))?n:(t.setAttribute(e,i+""),i):o&&"get"in o&&null!==(n=o.get(t,e))?n:null==(n=S.find.attr(t,e))?void 0:n)},attrHooks:{type:{set:function(t,e){if(!v.radioValue&&"radio"===e&&E(t,"input")){var i=t.value;return t.setAttribute("type",e),i&&(t.value=i),e}}}},removeAttr:function(t,e){var i,n=0,o=e&&e.match(N);if(o&&1===t.nodeType)for(;i=o[n++];)t.removeAttribute(i)}}),de={set:function(t,e,i){return!1===e?S.removeAttr(t,i):t.setAttribute(i,i),i}},S.each(S.expr.match.bool.source.match(/\w+/g),function(t,e){var r=ue[e]||S.find.attr;ue[e]=function(t,e,i){var n,o,s=e.toLowerCase();return i||(o=ue[s],ue[s]=n,n=null!=r(t,e,i)?s:null,ue[s]=o),n}});var he=/^(?:input|select|textarea|button)$/i,pe=/^(?:a|area)$/i;function fe(t){return(t.match(N)||[]).join(" ")}function ge(t){return t.getAttribute&&t.getAttribute("class")||""}function me(t){return Array.isArray(t)?t:"string"==typeof t&&t.match(N)||[]}S.fn.extend({prop:function(t,e){return W(this,S.prop,t,e,1<arguments.length)},removeProp:function(t){return this.each(function(){delete this[S.propFix[t]||t]})}}),S.extend({prop:function(t,e,i){var n,o,s=t.nodeType;if(3!==s&&8!==s&&2!==s)return 1===s&&S.isXMLDoc(t)||(e=S.propFix[e]||e,o=S.propHooks[e]),void 0!==i?o&&"set"in o&&void 0!==(n=o.set(t,i,e))?n:t[e]=i:o&&"get"in o&&null!==(n=o.get(t,e))?n:t[e]},propHooks:{tabIndex:{get:function(t){var e=S.find.attr(t,"tabindex");return e?parseInt(e,10):he.test(t.nodeName)||pe.test(t.nodeName)&&t.href?0:-1}}},propFix:{for:"htmlFor",class:"className"}}),v.optSelected||(S.propHooks.selected={get:function(t){var e=t.parentNode;return e&&e.parentNode&&e.parentNode.selectedIndex,null},set:function(t){var e=t.parentNode;e&&(e.selectedIndex,e.parentNode&&e.parentNode.selectedIndex)}}),S.each(["tabIndex","readOnly","maxLength","cellSpacing","cellPadding","rowSpan","colSpan","useMap","frameBorder","contentEditable"],function(){S.propFix[this.toLowerCase()]=this}),S.fn.extend({addClass:function(e){var t,i,n,o,s,r,a,l=0;if(y(e))return this.each(function(t){S(this).addClass(e.call(this,t,ge(this)))});if((t=me(e)).length)for(;i=this[l++];)if(o=ge(i),n=1===i.nodeType&&" "+fe(o)+" "){for(r=0;s=t[r++];)n.indexOf(" "+s+" ")<0&&(n+=s+" ");o!==(a=fe(n))&&i.setAttribute("class",a)}return this},removeClass:function(e){var t,i,n,o,s,r,a,l=0;if(y(e))return this.each(function(t){S(this).removeClass(e.call(this,t,ge(this)))});if(!arguments.length)return this.attr("class","");if((t=me(e)).length)for(;i=this[l++];)if(o=ge(i),n=1===i.nodeType&&" "+fe(o)+" "){for(r=0;s=t[r++];)for(;-1<n.indexOf(" "+s+" ");)n=n.replace(" "+s+" "," ");o!==(a=fe(n))&&i.setAttribute("class",a)}return this},toggleClass:function(o,e){var s=typeof o,r="string"===s||Array.isArray(o);return"boolean"==typeof e&&r?e?this.addClass(o):this.removeClass(o):y(o)?this.each(function(t){S(this).toggleClass(o.call(this,t,ge(this),e),e)}):this.each(function(){var t,e,i,n;if(r)for(e=0,i=S(this),n=me(o);t=n[e++];)i.hasClass(t)?i.removeClass(t):i.addClass(t);else void 0!==o&&"boolean"!==s||((t=ge(this))&&K.set(this,"__className__",t),this.setAttribute&&this.setAttribute("class",t||!1===o?"":K.get(this,"__className__")||""))})},hasClass:function(t){var e,i,n=0;for(e=" "+t+" ";i=this[n++];)if(1===i.nodeType&&-1<(" "+fe(ge(i))+" ").indexOf(e))return!0;return!1}});var ve=/\r/g;S.fn.extend({val:function(i){var n,t,o,e=this[0];return arguments.length?(o=y(i),this.each(function(t){var e;1===this.nodeType&&(null==(e=o?i.call(this,t,S(this).val()):i)?e="":"number"==typeof e?e+="":Array.isArray(e)&&(e=S.map(e,function(t){return null==t?"":t+""})),(n=S.valHooks[this.type]||S.valHooks[this.nodeName.toLowerCase()])&&"set"in n&&void 0!==n.set(this,e,"value")||(this.value=e))})):e?(n=S.valHooks[e.type]||S.valHooks[e.nodeName.toLowerCase()])&&"get"in n&&void 0!==(t=n.get(e,"value"))?t:"string"==typeof(t=e.value)?t.replace(ve,""):null==t?"":t:void 0}}),S.extend({valHooks:{option:{get:function(t){var e=S.find.attr(t,"value");return null!=e?e:fe(S.text(t))}},select:{get:function(t){var e,i,n,o=t.options,s=t.selectedIndex,r="select-one"===t.type,a=r?null:[],l=r?s+1:o.length;for(n=s<0?l:r?s:0;n<l;n++)if(((i=o[n]).selected||n===s)&&!i.disabled&&(!i.parentNode.disabled||!E(i.parentNode,"optgroup"))){if(e=S(i).val(),r)return e;a.push(e)}return a},set:function(t,e){for(var i,n,o=t.options,s=S.makeArray(e),r=o.length;r--;)((n=o[r]).selected=-1<S.inArray(S.valHooks.option.get(n),s))&&(i=!0);return i||(t.selectedIndex=-1),s}}}}),S.each(["radio","checkbox"],function(){S.valHooks[this]={set:function(t,e){if(Array.isArray(e))return t.checked=-1<S.inArray(S(t).val(),e)}},v.checkOn||(S.valHooks[this].get=function(t){return null===t.getAttribute("value")?"on":t.value})}),v.focusin="onfocusin"in T;var ye=/^(?:focusinfocus|focusoutblur)$/,be=function(t){t.stopPropagation()};S.extend(S.event,{trigger:function(t,e,i,n){var o,s,r,a,l,c,d,u,h=[i||C],p=m.call(t,"type")?t.type:t,f=m.call(t,"namespace")?t.namespace.split("."):[];if(s=u=r=i=i||C,3!==i.nodeType&&8!==i.nodeType&&!ye.test(p+S.event.triggered)&&(-1<p.indexOf(".")&&(p=(f=p.split(".")).shift(),f.sort()),l=p.indexOf(":")<0&&"on"+p,(t=t[S.expando]?t:new S.Event(p,"object"==typeof t&&t)).isTrigger=n?2:3,t.namespace=f.join("."),t.rnamespace=t.namespace?new RegExp("(^|\\.)"+f.join("\\.(?:.*\\.|)")+"(\\.|$)"):null,t.result=void 0,t.target||(t.target=i),e=null==e?[t]:S.makeArray(e,[t]),d=S.event.special[p]||{},n||!d.trigger||!1!==d.trigger.apply(i,e))){if(!n&&!d.noBubble&&!b(i)){for(a=d.delegateType||p,ye.test(a+p)||(s=s.parentNode);s;s=s.parentNode)h.push(s),r=s;r===(i.ownerDocument||C)&&h.push(r.defaultView||r.parentWindow||T)}for(o=0;(s=h[o++])&&!t.isPropagationStopped();)u=s,t.type=1<o?a:d.bindType||p,(c=(K.get(s,"events")||{})[t.type]&&K.get(s,"handle"))&&c.apply(s,e),(c=l&&s[l])&&c.apply&&V(s)&&(t.result=c.apply(s,e),!1===t.result&&t.preventDefault());return t.type=p,n||t.isDefaultPrevented()||d._default&&!1!==d._default.apply(h.pop(),e)||!V(i)||l&&y(i[p])&&!b(i)&&((r=i[l])&&(i[l]=null),S.event.triggered=p,t.isPropagationStopped()&&u.addEventListener(p,be),i[p](),t.isPropagationStopped()&&u.removeEventListener(p,be),S.event.triggered=void 0,r&&(i[l]=r)),t.result}},simulate:function(t,e,i){var n=S.extend(new S.Event,i,{type:t,isSimulated:!0});S.event.trigger(n,null,e)}}),S.fn.extend({trigger:function(t,e){return this.each(function(){S.event.trigger(t,e,this)})},triggerHandler:function(t,e){var i=this[0];if(i)return S.event.trigger(t,e,i,!0)}}),v.focusin||S.each({focus:"focusin",blur:"focusout"},function(i,n){var o=function(t){S.event.simulate(n,t.target,S.event.fix(t))};S.event.special[n]={setup:function(){var t=this.ownerDocument||this,e=K.access(t,n);e||t.addEventListener(i,o,!0),K.access(t,n,(e||0)+1)},teardown:function(){var t=this.ownerDocument||this,e=K.access(t,n)-1;e?K.access(t,n,e):(t.removeEventListener(i,o,!0),K.remove(t,n))}}});var we=T.location,xe=Date.now(),_e=/\?/;S.parseXML=function(t){var e;if(!t||"string"!=typeof t)return null;try{e=(new T.DOMParser).parseFromString(t,"text/xml")}catch(t){e=void 0}return e&&!e.getElementsByTagName("parsererror").length||S.error("Invalid XML: "+t),e};var Te=/\[\]$/,Ce=/\r?\n/g,Se=/^(?:submit|button|image|reset|file)$/i,ke=/^(?:input|select|textarea|keygen)/i;function $e(i,t,n,o){var e;if(Array.isArray(t))S.each(t,function(t,e){n||Te.test(i)?o(i,e):$e(i+"["+("object"==typeof e&&null!=e?t:"")+"]",e,n,o)});else if(n||"object"!==x(t))o(i,t);else for(e in t)$e(i+"["+e+"]",t[e],n,o)}S.param=function(t,e){var i,n=[],o=function(t,e){var i=y(e)?e():e;n[n.length]=encodeURIComponent(t)+"="+encodeURIComponent(null==i?"":i)};if(Array.isArray(t)||t.jquery&&!S.isPlainObject(t))S.each(t,function(){o(this.name,this.value)});else for(i in t)$e(i,t[i],e,o);return n.join("&")},S.fn.extend({serialize:function(){return S.param(this.serializeArray())},serializeArray:function(){return this.map(function(){var t=S.prop(this,"elements");return t?S.makeArray(t):this}).filter(function(){var t=this.type;return this.name&&!S(this).is(":disabled")&&ke.test(this.nodeName)&&!Se.test(t)&&(this.checked||!ct.test(t))}).map(function(t,e){var i=S(this).val();return null==i?null:Array.isArray(i)?S.map(i,function(t){return{name:e.name,value:t.replace(Ce,"\r\n")}}):{name:e.name,value:i.replace(Ce,"\r\n")}}).get()}});var Ee=/%20/g,Ae=/#.*$/,De=/([?&])_=[^&]*/,Pe=/^(.*?):[ \t]*([^\r\n]*)$/gm,Ie=/^(?:GET|HEAD)$/,Oe=/^\/\//,je={},Le={},Ne="*/".concat("*"),He=C.createElement("a");function Me(s){return function(t,e){"string"!=typeof t&&(e=t,t="*");var i,n=0,o=t.toLowerCase().match(N)||[];if(y(e))for(;i=o[n++];)"+"===i[0]?(i=i.slice(1)||"*",(s[i]=s[i]||[]).unshift(e)):(s[i]=s[i]||[]).push(e)}}function ze(e,o,s,r){var a={},l=e===Le;function c(t){var n;return a[t]=!0,S.each(e[t]||[],function(t,e){var i=e(o,s,r);return"string"!=typeof i||l||a[i]?l?!(n=i):void 0:(o.dataTypes.unshift(i),c(i),!1)}),n}return c(o.dataTypes[0])||!a["*"]&&c("*")}function qe(t,e){var i,n,o=S.ajaxSettings.flatOptions||{};for(i in e)void 0!==e[i]&&((o[i]?t:n||(n={}))[i]=e[i]);return n&&S.extend(!0,t,n),t}He.href=we.href,S.extend({active:0,lastModified:{},etag:{},ajaxSettings:{url:we.href,type:"GET",isLocal:/^(?:about|app|app-storage|.+-extension|file|res|widget):$/.test(we.protocol),global:!0,processData:!0,async:!0,contentType:"application/x-www-form-urlencoded; charset=UTF-8",accepts:{"*":Ne,text:"text/plain",html:"text/html",xml:"application/xml, text/xml",json:"application/json, text/javascript"},contents:{xml:/\bxml\b/,html:/\bhtml/,json:/\bjson\b/},responseFields:{xml:"responseXML",text:"responseText",json:"responseJSON"},converters:{"* text":String,"text html":!0,"text json":JSON.parse,"text xml":S.parseXML},flatOptions:{url:!0,context:!0}},ajaxSetup:function(t,e){return e?qe(qe(t,S.ajaxSettings),e):qe(S.ajaxSettings,t)},ajaxPrefilter:Me(je),ajaxTransport:Me(Le),ajax:function(t,e){"object"==typeof t&&(e=t,t=void 0),e=e||{};var d,u,h,i,p,n,f,g,o,s,m=S.ajaxSetup({},e),v=m.context||m,y=m.context&&(v.nodeType||v.jquery)?S(v):S.event,b=S.Deferred(),w=S.Callbacks("once memory"),x=m.statusCode||{},r={},a={},l="canceled",_={readyState:0,getResponseHeader:function(t){var e;if(f){if(!i)for(i={};e=Pe.exec(h);)i[e[1].toLowerCase()]=e[2];e=i[t.toLowerCase()]}return null==e?null:e},getAllResponseHeaders:function(){return f?h:null},setRequestHeader:function(t,e){return null==f&&(t=a[t.toLowerCase()]=a[t.toLowerCase()]||t,r[t]=e),this},overrideMimeType:function(t){return null==f&&(m.mimeType=t),this},statusCode:function(t){var e;if(t)if(f)_.always(t[_.status]);else for(e in t)x[e]=[x[e],t[e]];return this},abort:function(t){var e=t||l;return d&&d.abort(e),c(0,e),this}};if(b.promise(_),m.url=((t||m.url||we.href)+"").replace(Oe,we.protocol+"//"),m.type=e.method||e.type||m.method||m.type,m.dataTypes=(m.dataType||"*").toLowerCase().match(N)||[""],null==m.crossDomain){n=C.createElement("a");try{n.href=m.url,n.href=n.href,m.crossDomain=He.protocol+"//"+He.host!=n.protocol+"//"+n.host}catch(t){m.crossDomain=!0}}if(m.data&&m.processData&&"string"!=typeof m.data&&(m.data=S.param(m.data,m.traditional)),ze(je,m,e,_),f)return _;for(o in(g=S.event&&m.global)&&0==S.active++&&S.event.trigger("ajaxStart"),m.type=m.type.toUpperCase(),m.hasContent=!Ie.test(m.type),u=m.url.replace(Ae,""),m.hasContent?m.data&&m.processData&&0===(m.contentType||"").indexOf("application/x-www-form-urlencoded")&&(m.data=m.data.replace(Ee,"+")):(s=m.url.slice(u.length),m.data&&(m.processData||"string"==typeof m.data)&&(u+=(_e.test(u)?"&":"?")+m.data,delete m.data),!1===m.cache&&(u=u.replace(De,"$1"),s=(_e.test(u)?"&":"?")+"_="+xe+++s),m.url=u+s),m.ifModified&&(S.lastModified[u]&&_.setRequestHeader("If-Modified-Since",S.lastModified[u]),S.etag[u]&&_.setRequestHeader("If-None-Match",S.etag[u])),(m.data&&m.hasContent&&!1!==m.contentType||e.contentType)&&_.setRequestHeader("Content-Type",m.contentType),_.setRequestHeader("Accept",m.dataTypes[0]&&m.accepts[m.dataTypes[0]]?m.accepts[m.dataTypes[0]]+("*"!==m.dataTypes[0]?", "+Ne+"; q=0.01":""):m.accepts["*"]),m.headers)_.setRequestHeader(o,m.headers[o]);if(m.beforeSend&&(!1===m.beforeSend.call(v,_,m)||f))return _.abort();if(l="abort",w.add(m.complete),_.done(m.success),_.fail(m.error),d=ze(Le,m,e,_)){if(_.readyState=1,g&&y.trigger("ajaxSend",[_,m]),f)return _;m.async&&0<m.timeout&&(p=T.setTimeout(function(){_.abort("timeout")},m.timeout));try{f=!1,d.send(r,c)}catch(t){if(f)throw t;c(-1,t)}}else c(-1,"No Transport");function c(t,e,i,n){var o,s,r,a,l,c=e;f||(f=!0,p&&T.clearTimeout(p),d=void 0,h=n||"",_.readyState=0<t?4:0,o=200<=t&&t<300||304===t,i&&(a=function(t,e,i){for(var n,o,s,r,a=t.contents,l=t.dataTypes;"*"===l[0];)l.shift(),void 0===n&&(n=t.mimeType||e.getResponseHeader("Content-Type"));if(n)for(o in a)if(a[o]&&a[o].test(n)){l.unshift(o);break}if(l[0]in i)s=l[0];else{for(o in i){if(!l[0]||t.converters[o+" "+l[0]]){s=o;break}r||(r=o)}s=s||r}if(s)return s!==l[0]&&l.unshift(s),i[s]}(m,_,i)),a=function(t,e,i,n){var o,s,r,a,l,c={},d=t.dataTypes.slice();if(d[1])for(r in t.converters)c[r.toLowerCase()]=t.converters[r];for(s=d.shift();s;)if(t.responseFields[s]&&(i[t.responseFields[s]]=e),!l&&n&&t.dataFilter&&(e=t.dataFilter(e,t.dataType)),l=s,s=d.shift())if("*"===s)s=l;else if("*"!==l&&l!==s){if(!(r=c[l+" "+s]||c["* "+s]))for(o in c)if((a=o.split(" "))[1]===s&&(r=c[l+" "+a[0]]||c["* "+a[0]])){!0===r?r=c[o]:!0!==c[o]&&(s=a[0],d.unshift(a[1]));break}if(!0!==r)if(r&&t.throws)e=r(e);else try{e=r(e)}catch(t){return{state:"parsererror",error:r?t:"No conversion from "+l+" to "+s}}}return{state:"success",data:e}}(m,a,_,o),o?(m.ifModified&&((l=_.getResponseHeader("Last-Modified"))&&(S.lastModified[u]=l),(l=_.getResponseHeader("etag"))&&(S.etag[u]=l)),204===t||"HEAD"===m.type?c="nocontent":304===t?c="notmodified":(c=a.state,s=a.data,o=!(r=a.error))):(r=c,!t&&c||(c="error",t<0&&(t=0))),_.status=t,_.statusText=(e||c)+"",o?b.resolveWith(v,[s,c,_]):b.rejectWith(v,[_,c,r]),_.statusCode(x),x=void 0,g&&y.trigger(o?"ajaxSuccess":"ajaxError",[_,m,o?s:r]),w.fireWith(v,[_,c]),g&&(y.trigger("ajaxComplete",[_,m]),--S.active||S.event.trigger("ajaxStop")))}return _},getJSON:function(t,e,i){return S.get(t,e,i,"json")},getScript:function(t,e){return S.get(t,void 0,e,"script")}}),S.each(["get","post"],function(t,o){S[o]=function(t,e,i,n){return y(e)&&(n=n||i,i=e,e=void 0),S.ajax(S.extend({url:t,type:o,dataType:n,data:e,success:i},S.isPlainObject(t)&&t))}}),S._evalUrl=function(t){return S.ajax({url:t,type:"GET",dataType:"script",cache:!0,async:!1,global:!1,throws:!0})},S.fn.extend({wrapAll:function(t){var e;return this[0]&&(y(t)&&(t=t.call(this[0])),e=S(t,this[0].ownerDocument).eq(0).clone(!0),this[0].parentNode&&e.insertBefore(this[0]),e.map(function(){for(var t=this;t.firstElementChild;)t=t.firstElementChild;return t}).append(this)),this},wrapInner:function(i){return y(i)?this.each(function(t){S(this).wrapInner(i.call(this,t))}):this.each(function(){var t=S(this),e=t.contents();e.length?e.wrapAll(i):t.append(i)})},wrap:function(e){var i=y(e);return this.each(function(t){S(this).wrapAll(i?e.call(this,t):e)})},unwrap:function(t){return this.parent(t).not("body").each(function(){S(this).replaceWith(this.childNodes)}),this}}),S.expr.pseudos.hidden=function(t){return!S.expr.pseudos.visible(t)},S.expr.pseudos.visible=function(t){return!!(t.offsetWidth||t.offsetHeight||t.getClientRects().length)},S.ajaxSettings.xhr=function(){try{return new T.XMLHttpRequest}catch(t){}};var Re={0:200,1223:204},Fe=S.ajaxSettings.xhr();v.cors=!!Fe&&"withCredentials"in Fe,v.ajax=Fe=!!Fe,S.ajaxTransport(function(o){var s,r;if(v.cors||Fe&&!o.crossDomain)return{send:function(t,e){var i,n=o.xhr();if(n.open(o.type,o.url,o.async,o.username,o.password),o.xhrFields)for(i in o.xhrFields)n[i]=o.xhrFields[i];for(i in o.mimeType&&n.overrideMimeType&&n.overrideMimeType(o.mimeType),o.crossDomain||t["X-Requested-With"]||(t["X-Requested-With"]="XMLHttpRequest"),t)n.setRequestHeader(i,t[i]);s=function(t){return function(){s&&(s=r=n.onload=n.onerror=n.onabort=n.ontimeout=n.onreadystatechange=null,"abort"===t?n.abort():"error"===t?"number"!=typeof n.status?e(0,"error"):e(n.status,n.statusText):e(Re[n.status]||n.status,n.statusText,"text"!==(n.responseType||"text")||"string"!=typeof n.responseText?{binary:n.response}:{text:n.responseText},n.getAllResponseHeaders()))}},n.onload=s(),r=n.onerror=n.ontimeout=s("error"),void 0!==n.onabort?n.onabort=r:n.onreadystatechange=function(){4===n.readyState&&T.setTimeout(function(){s&&r()})},s=s("abort");try{n.send(o.hasContent&&o.data||null)}catch(t){if(s)throw t}},abort:function(){s&&s()}}}),S.ajaxPrefilter(function(t){t.crossDomain&&(t.contents.script=!1)}),S.ajaxSetup({accepts:{script:"text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"},contents:{script:/\b(?:java|ecma)script\b/},converters:{"text script":function(t){return S.globalEval(t),t}}}),S.ajaxPrefilter("script",function(t){void 0===t.cache&&(t.cache=!1),t.crossDomain&&(t.type="GET")}),S.ajaxTransport("script",function(i){var n,o;if(i.crossDomain)return{send:function(t,e){n=S("<script>").prop({charset:i.scriptCharset,src:i.url}).on("load error",o=function(t){n.remove(),o=null,t&&e("error"===t.type?404:200,t.type)}),C.head.appendChild(n[0])},abort:function(){o&&o()}}});var We,Be=[],Ue=/(=)\?(?=&|$)|\?\?/;S.ajaxSetup({jsonp:"callback",jsonpCallback:function(){var t=Be.pop()||S.expando+"_"+xe++;return this[t]=!0,t}}),S.ajaxPrefilter("json jsonp",function(t,e,i){var n,o,s,r=!1!==t.jsonp&&(Ue.test(t.url)?"url":"string"==typeof t.data&&0===(t.contentType||"").indexOf("application/x-www-form-urlencoded")&&Ue.test(t.data)&&"data");if(r||"jsonp"===t.dataTypes[0])return n=t.jsonpCallback=y(t.jsonpCallback)?t.jsonpCallback():t.jsonpCallback,r?t[r]=t[r].replace(Ue,"$1"+n):!1!==t.jsonp&&(t.url+=(_e.test(t.url)?"&":"?")+t.jsonp+"="+n),t.converters["script json"]=function(){return s||S.error(n+" was not called"),s[0]},t.dataTypes[0]="json",o=T[n],T[n]=function(){s=arguments},i.always(function(){void 0===o?S(T).removeProp(n):T[n]=o,t[n]&&(t.jsonpCallback=e.jsonpCallback,Be.push(n)),s&&y(o)&&o(s[0]),s=o=void 0}),"script"}),v.createHTMLDocument=((We=C.implementation.createHTMLDocument("").body).innerHTML="<form></form><form></form>",2===We.childNodes.length),S.parseHTML=function(t,e,i){return"string"!=typeof t?[]:("boolean"==typeof e&&(i=e,e=!1),e||(v.createHTMLDocument?((n=(e=C.implementation.createHTMLDocument("")).createElement("base")).href=C.location.href,e.head.appendChild(n)):e=C),s=!i&&[],(o=A.exec(t))?[e.createElement(o[1])]:(o=yt([t],e,s),s&&s.length&&S(s).remove(),S.merge([],o.childNodes)));var n,o,s},S.fn.load=function(t,e,i){var n,o,s,r=this,a=t.indexOf(" ");return-1<a&&(n=fe(t.slice(a)),t=t.slice(0,a)),y(e)?(i=e,e=void 0):e&&"object"==typeof e&&(o="POST"),0<r.length&&S.ajax({url:t,type:o||"GET",dataType:"html",data:e}).done(function(t){s=arguments,r.html(n?S("<div>").append(S.parseHTML(t)).find(n):t)}).always(i&&function(t,e){r.each(function(){i.apply(this,s||[t.responseText,e,t])})}),this},S.each(["ajaxStart","ajaxStop","ajaxComplete","ajaxError","ajaxSuccess","ajaxSend"],function(t,e){S.fn[e]=function(t){return this.on(e,t)}}),S.expr.pseudos.animated=function(e){return S.grep(S.timers,function(t){return e===t.elem}).length},S.offset={setOffset:function(t,e,i){var n,o,s,r,a,l,c=S.css(t,"position"),d=S(t),u={};"static"===c&&(t.style.position="relative"),a=d.offset(),s=S.css(t,"top"),l=S.css(t,"left"),("absolute"===c||"fixed"===c)&&-1<(s+l).indexOf("auto")?(r=(n=d.position()).top,o=n.left):(r=parseFloat(s)||0,o=parseFloat(l)||0),y(e)&&(e=e.call(t,i,S.extend({},a))),null!=e.top&&(u.top=e.top-a.top+r),null!=e.left&&(u.left=e.left-a.left+o),"using"in e?e.using.call(t,u):d.css(u)}},S.fn.extend({offset:function(e){if(arguments.length)return void 0===e?this:this.each(function(t){S.offset.setOffset(this,e,t)});var t,i,n=this[0];return n?n.getClientRects().length?(t=n.getBoundingClientRect(),i=n.ownerDocument.defaultView,{top:t.top+i.pageYOffset,left:t.left+i.pageXOffset}):{top:0,left:0}:void 0},position:function(){if(this[0]){var t,e,i,n=this[0],o={top:0,left:0};if("fixed"===S.css(n,"position"))e=n.getBoundingClientRect();else{for(e=this.offset(),i=n.ownerDocument,t=n.offsetParent||i.documentElement;t&&(t===i.body||t===i.documentElement)&&"static"===S.css(t,"position");)t=t.parentNode;t&&t!==n&&1===t.nodeType&&((o=S(t).offset()).top+=S.css(t,"borderTopWidth",!0),o.left+=S.css(t,"borderLeftWidth",!0))}return{top:e.top-o.top-S.css(n,"marginTop",!0),left:e.left-o.left-S.css(n,"marginLeft",!0)}}},offsetParent:function(){return this.map(function(){for(var t=this.offsetParent;t&&"static"===S.css(t,"position");)t=t.offsetParent;return t||bt})}}),S.each({scrollLeft:"pageXOffset",scrollTop:"pageYOffset"},function(e,o){var s="pageYOffset"===o;S.fn[e]=function(t){return W(this,function(t,e,i){var n;if(b(t)?n=t:9===t.nodeType&&(n=t.defaultView),void 0===i)return n?n[o]:t[e];n?n.scrollTo(s?n.pageXOffset:i,s?i:n.pageYOffset):t[e]=i},e,t,arguments.length)}}),S.each(["top","left"],function(t,i){S.cssHooks[i]=Rt(v.pixelPosition,function(t,e){if(e)return e=qt(t,i),Ht.test(e)?S(t).position()[i]+"px":e})}),S.each({Height:"height",Width:"width"},function(r,a){S.each({padding:"inner"+r,content:a,"":"outer"+r},function(n,s){S.fn[s]=function(t,e){var i=arguments.length&&(n||"boolean"!=typeof t),o=n||(!0===t||!0===e?"margin":"border");return W(this,function(t,e,i){var n;return b(t)?0===s.indexOf("outer")?t["inner"+r]:t.document.documentElement["client"+r]:9===t.nodeType?(n=t.documentElement,Math.max(t.body["scroll"+r],n["scroll"+r],t.body["offset"+r],n["offset"+r],n["client"+r])):void 0===i?S.css(t,e,o):S.style(t,e,i,o)},a,i?t:void 0,i)}})}),S.each("blur focus focusin focusout resize scroll click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup contextmenu".split(" "),function(t,i){S.fn[i]=function(t,e){return 0<arguments.length?this.on(i,null,t,e):this.trigger(i)}}),S.fn.extend({hover:function(t,e){return this.mouseenter(t).mouseleave(e||t)}}),S.fn.extend({bind:function(t,e,i){return this.on(t,null,e,i)},unbind:function(t,e){return this.off(t,null,e)},delegate:function(t,e,i,n){return this.on(e,t,i,n)},undelegate:function(t,e,i){return 1===arguments.length?this.off(t,"**"):this.off(e,t||"**",i)}}),S.proxy=function(t,e){var i,n,o;if("string"==typeof e&&(i=t[e],e=t,t=i),y(t))return n=a.call(arguments,2),(o=function(){return t.apply(e||this,n.concat(a.call(arguments)))}).guid=t.guid=t.guid||S.guid++,o},S.holdReady=function(t){t?S.readyWait++:S.ready(!0)},S.isArray=Array.isArray,S.parseJSON=JSON.parse,S.nodeName=E,S.isFunction=y,S.isWindow=b,S.camelCase=X,S.type=x,S.now=Date.now,S.isNumeric=function(t){var e=S.type(t);return("number"===e||"string"===e)&&!isNaN(t-parseFloat(t))},"function"==typeof define&&define.amd&&define("jquery",[],function(){return S});var Ye=T.jQuery,Xe=T.$;return S.noConflict=function(t){return T.$===S&&(T.$=Xe),t&&T.jQuery===S&&(T.jQuery=Ye),S},t||(T.jQuery=T.$=S),S}),function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports,require("jquery"),require("popper.js")):"function"==typeof define&&define.amd?define(["exports","jquery","popper.js"],e):e(t.bootstrap={},t.jQuery,t.Popper)}(this,function(t,e,d){"use strict";function n(t,e){for(var i=0;i<e.length;i++){var n=e[i];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,n.key,n)}}function r(t,e,i){return e&&n(t.prototype,e),i&&n(t,i),t}function l(o){for(var t=1;t<arguments.length;t++){var s=null!=arguments[t]?arguments[t]:{},e=Object.keys(s);"function"==typeof Object.getOwnPropertySymbols&&(e=e.concat(Object.getOwnPropertySymbols(s).filter(function(t){return Object.getOwnPropertyDescriptor(s,t).enumerable}))),e.forEach(function(t){var e,i,n;e=o,n=s[i=t],i in e?Object.defineProperty(e,i,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[i]=n})}return o}e=e&&e.hasOwnProperty("default")?e.default:e,d=d&&d.hasOwnProperty("default")?d.default:d;var o,i,s,a,c,u,h,p,f,g,m,v,y,b,w,x,_,T,C,S,k,$,E,A,D,P,I,O,j,L,N,H,M,z,q,R,F,W,B,U,Y,X,V,Q,K,Z,G,J,tt,et,it,nt,ot,st,rt,at,lt,ct,dt,ut,ht,pt,ft,gt,mt,vt,yt,bt,wt,xt,_t,Tt,Ct,St,kt,$t,Et,At,Dt,Pt,It,Ot,jt,Lt,Nt,Ht,Mt,zt,qt,Rt,Ft,Wt,Bt,Ut,Yt,Xt,Vt,Qt,Kt,Zt,Gt,Jt,te,ee,ie,ne,oe,se,re,ae,le,ce,de,ue,he,pe,fe,ge,me,ve,ye,be,we,xe,_e,Te,Ce,Se,ke,$e=(Se="transitionend",ke={TRANSITION_END:"bsTransitionEnd",getUID:function(t){for(;t+=~~(1e6*Math.random()),document.getElementById(t););return t},getSelectorFromElement:function(t){var e=t.getAttribute("data-target");e&&"#"!==e||(e=t.getAttribute("href")||"");try{return document.querySelector(e)?e:null}catch(t){return null}},getTransitionDurationFromElement:function(t){if(!t)return 0;var e=Ce(t).css("transition-duration");return parseFloat(e)?(e=e.split(",")[0],1e3*parseFloat(e)):0},reflow:function(t){return t.offsetHeight},triggerTransitionEnd:function(t){Ce(t).trigger(Se)},supportsTransitionEnd:function(){return Boolean(Se)},isElement:function(t){return(t[0]||t).nodeType},typeCheckConfig:function(t,e,i){for(var n in i)if(Object.prototype.hasOwnProperty.call(i,n)){var o=i[n],s=e[n],r=s&&ke.isElement(s)?"element":(a=s,{}.toString.call(a).match(/\s([a-z]+)/i)[1].toLowerCase());if(!new RegExp(o).test(r))throw new Error(t.toUpperCase()+': Option "'+n+'" provided type "'+r+'" but expected type "'+o+'".')}var a}},(Ce=e).fn.emulateTransitionEnd=function(t){var e=this,i=!1;return Ce(this).one(ke.TRANSITION_END,function(){i=!0}),setTimeout(function(){i||ke.triggerTransitionEnd(e)},t),this},Ce.event.special[ke.TRANSITION_END]={bindType:Se,delegateType:Se,handle:function(t){if(Ce(t.target).is(this))return t.handleObj.handler.apply(this,arguments)}},ke),Ee=(i="alert",a="."+(s="bs.alert"),c=(o=e).fn[i],u={CLOSE:"close"+a,CLOSED:"closed"+a,CLICK_DATA_API:"click"+a+".data-api"},"alert","fade","show",h=function(){function n(t){this._element=t}var t=n.prototype;return t.close=function(t){var e=this._element;t&&(e=this._getRootElement(t)),this._triggerCloseEvent(e).isDefaultPrevented()||this._removeElement(e)},t.dispose=function(){o.removeData(this._element,s),this._element=null},t._getRootElement=function(t){var e=$e.getSelectorFromElement(t),i=!1;return e&&(i=document.querySelector(e)),i||(i=o(t).closest(".alert")[0]),i},t._triggerCloseEvent=function(t){var e=o.Event(u.CLOSE);return o(t).trigger(e),e},t._removeElement=function(e){var i=this;if(o(e).removeClass("show"),o(e).hasClass("fade")){var t=$e.getTransitionDurationFromElement(e);o(e).one($e.TRANSITION_END,function(t){return i._destroyElement(e,t)}).emulateTransitionEnd(t)}else this._destroyElement(e)},t._destroyElement=function(t){o(t).detach().trigger(u.CLOSED).remove()},n._jQueryInterface=function(i){return this.each(function(){var t=o(this),e=t.data(s);e||(e=new n(this),t.data(s,e)),"close"===i&&e[i](this)})},n._handleDismiss=function(e){return function(t){t&&t.preventDefault(),e.close(this)}},r(n,null,[{key:"VERSION",get:function(){return"4.1.3"}}]),n}(),o(document).on(u.CLICK_DATA_API,'[data-dismiss="alert"]',h._handleDismiss(new h)),o.fn[i]=h._jQueryInterface,o.fn[i].Constructor=h,o.fn[i].noConflict=function(){return o.fn[i]=c,h._jQueryInterface},h),Ae=(f="button",m="."+(g="bs.button"),v=".data-api",y=(p=e).fn[f],b="active","btn",w='[data-toggle^="button"]','[data-toggle="buttons"]',"input",".active",".btn",x={CLICK_DATA_API:"click"+m+v,FOCUS_BLUR_DATA_API:"focus"+m+v+" blur"+m+v},_=function(){function i(t){this._element=t}var t=i.prototype;return t.toggle=function(){var t=!0,e=!0,i=p(this._element).closest('[data-toggle="buttons"]')[0];if(i){var n=this._element.querySelector("input");if(n){if("radio"===n.type)if(n.checked&&this._element.classList.contains(b))t=!1;else{var o=i.querySelector(".active");o&&p(o).removeClass(b)}if(t){if(n.hasAttribute("disabled")||i.hasAttribute("disabled")||n.classList.contains("disabled")||i.classList.contains("disabled"))return;n.checked=!this._element.classList.contains(b),p(n).trigger("change")}n.focus(),e=!1}}e&&this._element.setAttribute("aria-pressed",!this._element.classList.contains(b)),t&&p(this._element).toggleClass(b)},t.dispose=function(){p.removeData(this._element,g),this._element=null},i._jQueryInterface=function(e){return this.each(function(){var t=p(this).data(g);t||(t=new i(this),p(this).data(g,t)),"toggle"===e&&t[e]()})},r(i,null,[{key:"VERSION",get:function(){return"4.1.3"}}]),i}(),p(document).on(x.CLICK_DATA_API,w,function(t){t.preventDefault();var e=t.target;p(e).hasClass("btn")||(e=p(e).closest(".btn")),_._jQueryInterface.call(p(e),"toggle")}).on(x.FOCUS_BLUR_DATA_API,w,function(t){var e=p(t.target).closest(".btn")[0];p(e).toggleClass("focus",/^focus(in)?$/.test(t.type))}),p.fn[f]=_._jQueryInterface,p.fn[f].Constructor=_,p.fn[f].noConflict=function(){return p.fn[f]=y,_._jQueryInterface},_),De=(C="carousel",k="."+(S="bs.carousel"),$=".data-api",E=(T=e).fn[C],A={interval:5e3,keyboard:!0,slide:!1,pause:"hover",wrap:!0},D={interval:"(number|boolean)",keyboard:"boolean",slide:"(boolean|string)",pause:"(string|boolean)",wrap:"boolean"},P="next",I="prev","left","right",O={SLIDE:"slide"+k,SLID:"slid"+k,KEYDOWN:"keydown"+k,MOUSEENTER:"mouseenter"+k,MOUSELEAVE:"mouseleave"+k,TOUCHEND:"touchend"+k,LOAD_DATA_API:"load"+k+$,CLICK_DATA_API:"click"+k+$},"carousel",j="active","slide","carousel-item-right","carousel-item-left","carousel-item-next","carousel-item-prev",".active",L=".active.carousel-item",".carousel-item",".carousel-item-next, .carousel-item-prev",".carousel-indicators","[data-slide], [data-slide-to]",'[data-ride="carousel"]',N=function(){function s(t,e){this._items=null,this._interval=null,this._activeElement=null,this._isPaused=!1,this._isSliding=!1,this.touchTimeout=null,this._config=this._getConfig(e),this._element=T(t)[0],this._indicatorsElement=this._element.querySelector(".carousel-indicators"),this._addEventListeners()}var t=s.prototype;return t.next=function(){this._isSliding||this._slide(P)},t.nextWhenVisible=function(){!document.hidden&&T(this._element).is(":visible")&&"hidden"!==T(this._element).css("visibility")&&this.next()},t.prev=function(){this._isSliding||this._slide(I)},t.pause=function(t){t||(this._isPaused=!0),this._element.querySelector(".carousel-item-next, .carousel-item-prev")&&($e.triggerTransitionEnd(this._element),this.cycle(!0)),clearInterval(this._interval),this._interval=null},t.cycle=function(t){t||(this._isPaused=!1),this._interval&&(clearInterval(this._interval),this._interval=null),this._config.interval&&!this._isPaused&&(this._interval=setInterval((document.visibilityState?this.nextWhenVisible:this.next).bind(this),this._config.interval))},t.to=function(t){var e=this;this._activeElement=this._element.querySelector(L);var i=this._getItemIndex(this._activeElement);if(!(t>this._items.length-1||t<0))if(this._isSliding)T(this._element).one(O.SLID,function(){return e.to(t)});else{if(i===t)return this.pause(),void this.cycle();var n=i<t?P:I;this._slide(n,this._items[t])}},t.dispose=function(){T(this._element).off(k),T.removeData(this._element,S),this._items=null,this._config=null,this._element=null,this._interval=null,this._isPaused=null,this._isSliding=null,this._activeElement=null,this._indicatorsElement=null},t._getConfig=function(t){return t=l({},A,t),$e.typeCheckConfig(C,t,D),t},t._addEventListeners=function(){var e=this;this._config.keyboard&&T(this._element).on(O.KEYDOWN,function(t){return e._keydown(t)}),"hover"===this._config.pause&&(T(this._element).on(O.MOUSEENTER,function(t){return e.pause(t)}).on(O.MOUSELEAVE,function(t){return e.cycle(t)}),"ontouchstart"in document.documentElement&&T(this._element).on(O.TOUCHEND,function(){e.pause(),e.touchTimeout&&clearTimeout(e.touchTimeout),e.touchTimeout=setTimeout(function(t){return e.cycle(t)},500+e._config.interval)}))},t._keydown=function(t){if(!/input|textarea/i.test(t.target.tagName))switch(t.which){case 37:t.preventDefault(),this.prev();break;case 39:t.preventDefault(),this.next()}},t._getItemIndex=function(t){return this._items=t&&t.parentNode?[].slice.call(t.parentNode.querySelectorAll(".carousel-item")):[],this._items.indexOf(t)},t._getItemByDirection=function(t,e){var i=t===P,n=t===I,o=this._getItemIndex(e),s=this._items.length-1;if((n&&0===o||i&&o===s)&&!this._config.wrap)return e;var r=(o+(t===I?-1:1))%this._items.length;return-1===r?this._items[this._items.length-1]:this._items[r]},t._triggerSlideEvent=function(t,e){var i=this._getItemIndex(t),n=this._getItemIndex(this._element.querySelector(L)),o=T.Event(O.SLIDE,{relatedTarget:t,direction:e,from:n,to:i});return T(this._element).trigger(o),o},t._setActiveIndicatorElement=function(t){if(this._indicatorsElement){var e=[].slice.call(this._indicatorsElement.querySelectorAll(".active"));T(e).removeClass(j);var i=this._indicatorsElement.children[this._getItemIndex(t)];i&&T(i).addClass(j)}},t._slide=function(t,e){var i,n,o,s=this,r=this._element.querySelector(L),a=this._getItemIndex(r),l=e||r&&this._getItemByDirection(t,r),c=this._getItemIndex(l),d=Boolean(this._interval);if(t===P?(i="carousel-item-left",n="carousel-item-next",o="left"):(i="carousel-item-right",n="carousel-item-prev",o="right"),l&&T(l).hasClass(j))this._isSliding=!1;else if(!this._triggerSlideEvent(l,o).isDefaultPrevented()&&r&&l){this._isSliding=!0,d&&this.pause(),this._setActiveIndicatorElement(l);var u=T.Event(O.SLID,{relatedTarget:l,direction:o,from:a,to:c});if(T(this._element).hasClass("slide")){T(l).addClass(n),$e.reflow(l),T(r).addClass(i),T(l).addClass(i);var h=$e.getTransitionDurationFromElement(r);T(r).one($e.TRANSITION_END,function(){T(l).removeClass(i+" "+n).addClass(j),T(r).removeClass(j+" "+n+" "+i),s._isSliding=!1,setTimeout(function(){return T(s._element).trigger(u)},0)}).emulateTransitionEnd(h)}else T(r).removeClass(j),T(l).addClass(j),this._isSliding=!1,T(this._element).trigger(u);d&&this.cycle()}},s._jQueryInterface=function(n){return this.each(function(){var t=T(this).data(S),e=l({},A,T(this).data());"object"==typeof n&&(e=l({},e,n));var i="string"==typeof n?n:e.slide;if(t||(t=new s(this,e),T(this).data(S,t)),"number"==typeof n)t.to(n);else if("string"==typeof i){if(void 0===t[i])throw new TypeError('No method named "'+i+'"');t[i]()}else e.interval&&(t.pause(),t.cycle())})},s._dataApiClickHandler=function(t){var e=$e.getSelectorFromElement(this);if(e){var i=T(e)[0];if(i&&T(i).hasClass("carousel")){var n=l({},T(i).data(),T(this).data()),o=this.getAttribute("data-slide-to");o&&(n.interval=!1),s._jQueryInterface.call(T(i),n),o&&T(i).data(S).to(o),t.preventDefault()}}},r(s,null,[{key:"VERSION",get:function(){return"4.1.3"}},{key:"Default",get:function(){return A}}]),s}(),T(document).on(O.CLICK_DATA_API,"[data-slide], [data-slide-to]",N._dataApiClickHandler),T(window).on(O.LOAD_DATA_API,function(){for(var t=[].slice.call(document.querySelectorAll('[data-ride="carousel"]')),e=0,i=t.length;e<i;e++){var n=T(t[e]);N._jQueryInterface.call(n,n.data())}}),T.fn[C]=N._jQueryInterface,T.fn[C].Constructor=N,T.fn[C].noConflict=function(){return T.fn[C]=E,N._jQueryInterface},N),Pe=(M="collapse",q="."+(z="bs.collapse"),R=(H=e).fn[M],F={toggle:!0,parent:""},W={toggle:"boolean",parent:"(string|element)"},B={SHOW:"show"+q,SHOWN:"shown"+q,HIDE:"hide"+q,HIDDEN:"hidden"+q,CLICK_DATA_API:"click"+q+".data-api"},U="show",Y="collapse",X="collapsing",V="collapsed","width","height",".show, .collapsing",Q='[data-toggle="collapse"]',K=function(){function a(e,t){this._isTransitioning=!1,this._element=e,this._config=this._getConfig(t),this._triggerArray=H.makeArray(document.querySelectorAll('[data-toggle="collapse"][href="#'+e.id+'"],[data-toggle="collapse"][data-target="#'+e.id+'"]'));for(var i=[].slice.call(document.querySelectorAll(Q)),n=0,o=i.length;n<o;n++){var s=i[n],r=$e.getSelectorFromElement(s),a=[].slice.call(document.querySelectorAll(r)).filter(function(t){return t===e});null!==r&&0<a.length&&(this._selector=r,this._triggerArray.push(s))}this._parent=this._config.parent?this._getParent():null,this._config.parent||this._addAriaAndCollapsedClass(this._element,this._triggerArray),this._config.toggle&&this.toggle()}var t=a.prototype;return t.toggle=function(){H(this._element).hasClass(U)?this.hide():this.show()},t.show=function(){var t,e,i=this;if(!(this._isTransitioning||H(this._element).hasClass(U)||(this._parent&&0===(t=[].slice.call(this._parent.querySelectorAll(".show, .collapsing")).filter(function(t){return t.getAttribute("data-parent")===i._config.parent})).length&&(t=null),t&&(e=H(t).not(this._selector).data(z))&&e._isTransitioning))){var n=H.Event(B.SHOW);if(H(this._element).trigger(n),!n.isDefaultPrevented()){t&&(a._jQueryInterface.call(H(t).not(this._selector),"hide"),e||H(t).data(z,null));var o=this._getDimension();H(this._element).removeClass(Y).addClass(X),this._element.style[o]=0,this._triggerArray.length&&H(this._triggerArray).removeClass(V).attr("aria-expanded",!0),this.setTransitioning(!0);var s="scroll"+(o[0].toUpperCase()+o.slice(1)),r=$e.getTransitionDurationFromElement(this._element);H(this._element).one($e.TRANSITION_END,function(){H(i._element).removeClass(X).addClass(Y).addClass(U),i._element.style[o]="",i.setTransitioning(!1),H(i._element).trigger(B.SHOWN)}).emulateTransitionEnd(r),this._element.style[o]=this._element[s]+"px"}}},t.hide=function(){var t=this;if(!this._isTransitioning&&H(this._element).hasClass(U)){var e=H.Event(B.HIDE);if(H(this._element).trigger(e),!e.isDefaultPrevented()){var i=this._getDimension();this._element.style[i]=this._element.getBoundingClientRect()[i]+"px",$e.reflow(this._element),H(this._element).addClass(X).removeClass(Y).removeClass(U);var n=this._triggerArray.length;if(0<n)for(var o=0;o<n;o++){var s=this._triggerArray[o],r=$e.getSelectorFromElement(s);null!==r&&(H([].slice.call(document.querySelectorAll(r))).hasClass(U)||H(s).addClass(V).attr("aria-expanded",!1))}this.setTransitioning(!0),this._element.style[i]="";var a=$e.getTransitionDurationFromElement(this._element);H(this._element).one($e.TRANSITION_END,function(){t.setTransitioning(!1),H(t._element).removeClass(X).addClass(Y).trigger(B.HIDDEN)}).emulateTransitionEnd(a)}}},t.setTransitioning=function(t){this._isTransitioning=t},t.dispose=function(){H.removeData(this._element,z),this._config=null,this._parent=null,this._element=null,this._triggerArray=null,this._isTransitioning=null},t._getConfig=function(t){return(t=l({},F,t)).toggle=Boolean(t.toggle),$e.typeCheckConfig(M,t,W),t},t._getDimension=function(){return H(this._element).hasClass("width")?"width":"height"},t._getParent=function(){var i=this,t=null;$e.isElement(this._config.parent)?(t=this._config.parent,void 0!==this._config.parent.jquery&&(t=this._config.parent[0])):t=document.querySelector(this._config.parent);var e='[data-toggle="collapse"][data-parent="'+this._config.parent+'"]',n=[].slice.call(t.querySelectorAll(e));return H(n).each(function(t,e){i._addAriaAndCollapsedClass(a._getTargetFromElement(e),[e])}),t},t._addAriaAndCollapsedClass=function(t,e){if(t){var i=H(t).hasClass(U);e.length&&H(e).toggleClass(V,!i).attr("aria-expanded",i)}},a._getTargetFromElement=function(t){var e=$e.getSelectorFromElement(t);return e?document.querySelector(e):null},a._jQueryInterface=function(n){return this.each(function(){var t=H(this),e=t.data(z),i=l({},F,t.data(),"object"==typeof n&&n?n:{});if(!e&&i.toggle&&/show|hide/.test(n)&&(i.toggle=!1),e||(e=new a(this,i),t.data(z,e)),"string"==typeof n){if(void 0===e[n])throw new TypeError('No method named "'+n+'"');e[n]()}})},r(a,null,[{key:"VERSION",get:function(){return"4.1.3"}},{key:"Default",get:function(){return F}}]),a}(),H(document).on(B.CLICK_DATA_API,Q,function(t){"A"===t.currentTarget.tagName&&t.preventDefault();var i=H(this),e=$e.getSelectorFromElement(this),n=[].slice.call(document.querySelectorAll(e));H(n).each(function(){var t=H(this),e=t.data(z)?"toggle":i.data();K._jQueryInterface.call(t,e)})}),H.fn[M]=K._jQueryInterface,H.fn[M].Constructor=K,H.fn[M].noConflict=function(){return H.fn[M]=R,K._jQueryInterface},K),Ie=(G="dropdown",tt="."+(J="bs.dropdown"),et=".data-api",it=(Z=e).fn[G],nt=new RegExp("38|40|27"),ot={HIDE:"hide"+tt,HIDDEN:"hidden"+tt,SHOW:"show"+tt,SHOWN:"shown"+tt,CLICK:"click"+tt,CLICK_DATA_API:"click"+tt+et,KEYDOWN_DATA_API:"keydown"+tt+et,KEYUP_DATA_API:"keyup"+tt+et},st="disabled",rt="show","dropup","dropright","dropleft",at="dropdown-menu-right","position-static",lt='[data-toggle="dropdown"]',".dropdown form",ct=".dropdown-menu",".navbar-nav",".dropdown-menu .dropdown-item:not(.disabled):not(:disabled)","top-start","top-end","bottom-start","bottom-end","right-start","left-start",dt={offset:0,flip:!0,boundary:"scrollParent",reference:"toggle",display:"dynamic"},ut={offset:"(number|string|function)",flip:"boolean",boundary:"(string|element)",reference:"(string|element)",display:"string"},ht=function(){function c(t,e){this._element=t,this._popper=null,this._config=this._getConfig(e),this._menu=this._getMenuElement(),this._inNavbar=this._detectNavbar(),this._addEventListeners()}var t=c.prototype;return t.toggle=function(){if(!this._element.disabled&&!Z(this._element).hasClass(st)){var t=c._getParentFromElement(this._element),e=Z(this._menu).hasClass(rt);if(c._clearMenus(),!e){var i={relatedTarget:this._element},n=Z.Event(ot.SHOW,i);if(Z(t).trigger(n),!n.isDefaultPrevented()){if(!this._inNavbar){if(void 0===d)throw new TypeError("Bootstrap dropdown require Popper.js (https://popper.js.org)");var o=this._element;"parent"===this._config.reference?o=t:$e.isElement(this._config.reference)&&(o=this._config.reference,void 0!==this._config.reference.jquery&&(o=this._config.reference[0])),"scrollParent"!==this._config.boundary&&Z(t).addClass("position-static"),this._popper=new d(o,this._menu,this._getPopperConfig())}"ontouchstart"in document.documentElement&&0===Z(t).closest(".navbar-nav").length&&Z(document.body).children().on("mouseover",null,Z.noop),this._element.focus(),this._element.setAttribute("aria-expanded",!0),Z(this._menu).toggleClass(rt),Z(t).toggleClass(rt).trigger(Z.Event(ot.SHOWN,i))}}}},t.dispose=function(){Z.removeData(this._element,J),Z(this._element).off(tt),this._element=null,(this._menu=null)!==this._popper&&(this._popper.destroy(),this._popper=null)},t.update=function(){this._inNavbar=this._detectNavbar(),null!==this._popper&&this._popper.scheduleUpdate()},t._addEventListeners=function(){var e=this;Z(this._element).on(ot.CLICK,function(t){t.preventDefault(),t.stopPropagation(),e.toggle()})},t._getConfig=function(t){return t=l({},this.constructor.Default,Z(this._element).data(),t),$e.typeCheckConfig(G,t,this.constructor.DefaultType),t},t._getMenuElement=function(){if(!this._menu){var t=c._getParentFromElement(this._element);t&&(this._menu=t.querySelector(ct))}return this._menu},t._getPlacement=function(){var t=Z(this._element.parentNode),e="bottom-start";return t.hasClass("dropup")?(e="top-start",Z(this._menu).hasClass(at)&&(e="top-end")):t.hasClass("dropright")?e="right-start":t.hasClass("dropleft")?e="left-start":Z(this._menu).hasClass(at)&&(e="bottom-end"),e},t._detectNavbar=function(){return 0<Z(this._element).closest(".navbar").length},t._getPopperConfig=function(){var e=this,t={};"function"==typeof this._config.offset?t.fn=function(t){return t.offsets=l({},t.offsets,e._config.offset(t.offsets)||{}),t}:t.offset=this._config.offset;var i={placement:this._getPlacement(),modifiers:{offset:t,flip:{enabled:this._config.flip},preventOverflow:{boundariesElement:this._config.boundary}}};return"static"===this._config.display&&(i.modifiers.applyStyle={enabled:!1}),i},c._jQueryInterface=function(e){return this.each(function(){var t=Z(this).data(J);if(t||(t=new c(this,"object"==typeof e?e:null),Z(this).data(J,t)),"string"==typeof e){if(void 0===t[e])throw new TypeError('No method named "'+e+'"');t[e]()}})},c._clearMenus=function(t){if(!t||3!==t.which&&("keyup"!==t.type||9===t.which))for(var e=[].slice.call(document.querySelectorAll(lt)),i=0,n=e.length;i<n;i++){var o=c._getParentFromElement(e[i]),s=Z(e[i]).data(J),r={relatedTarget:e[i]};if(t&&"click"===t.type&&(r.clickEvent=t),s){var a=s._menu;if(Z(o).hasClass(rt)&&!(t&&("click"===t.type&&/input|textarea/i.test(t.target.tagName)||"keyup"===t.type&&9===t.which)&&Z.contains(o,t.target))){var l=Z.Event(ot.HIDE,r);Z(o).trigger(l),l.isDefaultPrevented()||("ontouchstart"in document.documentElement&&Z(document.body).children().off("mouseover",null,Z.noop),e[i].setAttribute("aria-expanded","false"),Z(a).removeClass(rt),Z(o).removeClass(rt).trigger(Z.Event(ot.HIDDEN,r)))}}}},c._getParentFromElement=function(t){var e,i=$e.getSelectorFromElement(t);return i&&(e=document.querySelector(i)),e||t.parentNode},c._dataApiKeydownHandler=function(t){if((/input|textarea/i.test(t.target.tagName)?!(32===t.which||27!==t.which&&(40!==t.which&&38!==t.which||Z(t.target).closest(ct).length)):nt.test(t.which))&&(t.preventDefault(),t.stopPropagation(),!this.disabled&&!Z(this).hasClass(st))){var e=c._getParentFromElement(this),i=Z(e).hasClass(rt);if((i||27===t.which&&32===t.which)&&(!i||27!==t.which&&32!==t.which)){var n=[].slice.call(e.querySelectorAll(".dropdown-menu .dropdown-item:not(.disabled):not(:disabled)"));if(0!==n.length){var o=n.indexOf(t.target);38===t.which&&0<o&&o--,40===t.which&&o<n.length-1&&o++,o<0&&(o=0),n[o].focus()}}else{if(27===t.which){var s=e.querySelector(lt);Z(s).trigger("focus")}Z(this).trigger("click")}}},r(c,null,[{key:"VERSION",get:function(){return"4.1.3"}},{key:"Default",get:function(){return dt}},{key:"DefaultType",get:function(){return ut}}]),c}(),Z(document).on(ot.KEYDOWN_DATA_API,lt,ht._dataApiKeydownHandler).on(ot.KEYDOWN_DATA_API,ct,ht._dataApiKeydownHandler).on(ot.CLICK_DATA_API+" "+ot.KEYUP_DATA_API,ht._clearMenus).on(ot.CLICK_DATA_API,lt,function(t){t.preventDefault(),t.stopPropagation(),ht._jQueryInterface.call(Z(this),"toggle")}).on(ot.CLICK_DATA_API,".dropdown form",function(t){t.stopPropagation()}),Z.fn[G]=ht._jQueryInterface,Z.fn[G].Constructor=ht,Z.fn[G].noConflict=function(){return Z.fn[G]=it,ht._jQueryInterface},ht),Oe=(ft="modal",mt="."+(gt="bs.modal"),vt=(pt=e).fn[ft],yt={backdrop:!0,keyboard:!0,focus:!0,show:!0},bt={backdrop:"(boolean|string)",keyboard:"boolean",focus:"boolean",show:"boolean"},wt={HIDE:"hide"+mt,HIDDEN:"hidden"+mt,SHOW:"show"+mt,SHOWN:"shown"+mt,FOCUSIN:"focusin"+mt,RESIZE:"resize"+mt,CLICK_DISMISS:"click.dismiss"+mt,KEYDOWN_DISMISS:"keydown.dismiss"+mt,MOUSEUP_DISMISS:"mouseup.dismiss"+mt,MOUSEDOWN_DISMISS:"mousedown.dismiss"+mt,CLICK_DATA_API:"click"+mt+".data-api"},"modal-scrollbar-measure","modal-backdrop",xt="modal-open",_t="fade",Tt="show",".modal-dialog",'[data-toggle="modal"]','[data-dismiss="modal"]',Ct=".fixed-top, .fixed-bottom, .is-fixed, .sticky-top",St=".sticky-top",kt=function(){function o(t,e){this._config=this._getConfig(e),this._element=t,this._dialog=t.querySelector(".modal-dialog"),this._backdrop=null,this._isShown=!1,this._isBodyOverflowing=!1,this._ignoreBackdropClick=!1,this._scrollbarWidth=0}var t=o.prototype;return t.toggle=function(t){return this._isShown?this.hide():this.show(t)},t.show=function(t){var e=this;if(!this._isTransitioning&&!this._isShown){pt(this._element).hasClass(_t)&&(this._isTransitioning=!0);var i=pt.Event(wt.SHOW,{relatedTarget:t});pt(this._element).trigger(i),this._isShown||i.isDefaultPrevented()||(this._isShown=!0,this._checkScrollbar(),this._setScrollbar(),this._adjustDialog(),pt(document.body).addClass(xt),this._setEscapeEvent(),this._setResizeEvent(),pt(this._element).on(wt.CLICK_DISMISS,'[data-dismiss="modal"]',function(t){return e.hide(t)}),pt(this._dialog).on(wt.MOUSEDOWN_DISMISS,function(){pt(e._element).one(wt.MOUSEUP_DISMISS,function(t){pt(t.target).is(e._element)&&(e._ignoreBackdropClick=!0)})}),this._showBackdrop(function(){return e._showElement(t)}))}},t.hide=function(t){var e=this;if(t&&t.preventDefault(),!this._isTransitioning&&this._isShown){var i=pt.Event(wt.HIDE);if(pt(this._element).trigger(i),this._isShown&&!i.isDefaultPrevented()){this._isShown=!1;var n=pt(this._element).hasClass(_t);if(n&&(this._isTransitioning=!0),this._setEscapeEvent(),this._setResizeEvent(),pt(document).off(wt.FOCUSIN),pt(this._element).removeClass(Tt),pt(this._element).off(wt.CLICK_DISMISS),pt(this._dialog).off(wt.MOUSEDOWN_DISMISS),n){var o=$e.getTransitionDurationFromElement(this._element);pt(this._element).one($e.TRANSITION_END,function(t){return e._hideModal(t)}).emulateTransitionEnd(o)}else this._hideModal()}}},t.dispose=function(){pt.removeData(this._element,gt),pt(window,document,this._element,this._backdrop).off(mt),this._config=null,this._element=null,this._dialog=null,this._backdrop=null,this._isShown=null,this._isBodyOverflowing=null,this._ignoreBackdropClick=null,this._scrollbarWidth=null},t.handleUpdate=function(){this._adjustDialog()},t._getConfig=function(t){return t=l({},yt,t),$e.typeCheckConfig(ft,t,bt),t},t._showElement=function(t){var e=this,i=pt(this._element).hasClass(_t);this._element.parentNode&&this._element.parentNode.nodeType===Node.ELEMENT_NODE||document.body.appendChild(this._element),this._element.style.display="block",this._element.removeAttribute("aria-hidden"),this._element.scrollTop=0,i&&$e.reflow(this._element),pt(this._element).addClass(Tt),this._config.focus&&this._enforceFocus();var n=pt.Event(wt.SHOWN,{relatedTarget:t}),o=function(){e._config.focus&&e._element.focus(),e._isTransitioning=!1,pt(e._element).trigger(n)};if(i){var s=$e.getTransitionDurationFromElement(this._element);pt(this._dialog).one($e.TRANSITION_END,o).emulateTransitionEnd(s)}else o()},t._enforceFocus=function(){var e=this;pt(document).off(wt.FOCUSIN).on(wt.FOCUSIN,function(t){document!==t.target&&e._element!==t.target&&0===pt(e._element).has(t.target).length&&e._element.focus()})},t._setEscapeEvent=function(){var e=this;this._isShown&&this._config.keyboard?pt(this._element).on(wt.KEYDOWN_DISMISS,function(t){27===t.which&&(t.preventDefault(),e.hide())}):this._isShown||pt(this._element).off(wt.KEYDOWN_DISMISS)},t._setResizeEvent=function(){var e=this;this._isShown?pt(window).on(wt.RESIZE,function(t){return e.handleUpdate(t)}):pt(window).off(wt.RESIZE)},t._hideModal=function(){var t=this;this._element.style.display="none",this._element.setAttribute("aria-hidden",!0),this._isTransitioning=!1,this._showBackdrop(function(){pt(document.body).removeClass(xt),t._resetAdjustments(),t._resetScrollbar(),pt(t._element).trigger(wt.HIDDEN)})},t._removeBackdrop=function(){this._backdrop&&(pt(this._backdrop).remove(),this._backdrop=null)},t._showBackdrop=function(t){var e=this,i=pt(this._element).hasClass(_t)?_t:"";if(this._isShown&&this._config.backdrop){if(this._backdrop=document.createElement("div"),this._backdrop.className="modal-backdrop",i&&this._backdrop.classList.add(i),pt(this._backdrop).appendTo(document.body),pt(this._element).on(wt.CLICK_DISMISS,function(t){e._ignoreBackdropClick?e._ignoreBackdropClick=!1:t.target===t.currentTarget&&("static"===e._config.backdrop?e._element.focus():e.hide())}),i&&$e.reflow(this._backdrop),pt(this._backdrop).addClass(Tt),!t)return;if(!i)return void t();var n=$e.getTransitionDurationFromElement(this._backdrop);pt(this._backdrop).one($e.TRANSITION_END,t).emulateTransitionEnd(n)}else if(!this._isShown&&this._backdrop){pt(this._backdrop).removeClass(Tt);var o=function(){e._removeBackdrop(),t&&t()};if(pt(this._element).hasClass(_t)){var s=$e.getTransitionDurationFromElement(this._backdrop);pt(this._backdrop).one($e.TRANSITION_END,o).emulateTransitionEnd(s)}else o()}else t&&t()},t._adjustDialog=function(){var t=this._element.scrollHeight>document.documentElement.clientHeight;!this._isBodyOverflowing&&t&&(this._element.style.paddingLeft=this._scrollbarWidth+"px"),this._isBodyOverflowing&&!t&&(this._element.style.paddingRight=this._scrollbarWidth+"px")},t._resetAdjustments=function(){this._element.style.paddingLeft="",this._element.style.paddingRight=""},t._checkScrollbar=function(){var t=document.body.getBoundingClientRect();this._isBodyOverflowing=t.left+t.right<window.innerWidth,this._scrollbarWidth=this._getScrollbarWidth()},t._setScrollbar=function(){var o=this;if(this._isBodyOverflowing){var t=[].slice.call(document.querySelectorAll(Ct)),e=[].slice.call(document.querySelectorAll(St));pt(t).each(function(t,e){var i=e.style.paddingRight,n=pt(e).css("padding-right");pt(e).data("padding-right",i).css("padding-right",parseFloat(n)+o._scrollbarWidth+"px")}),pt(e).each(function(t,e){var i=e.style.marginRight,n=pt(e).css("margin-right");pt(e).data("margin-right",i).css("margin-right",parseFloat(n)-o._scrollbarWidth+"px")});var i=document.body.style.paddingRight,n=pt(document.body).css("padding-right");pt(document.body).data("padding-right",i).css("padding-right",parseFloat(n)+this._scrollbarWidth+"px")}},t._resetScrollbar=function(){var t=[].slice.call(document.querySelectorAll(Ct));pt(t).each(function(t,e){var i=pt(e).data("padding-right");pt(e).removeData("padding-right"),e.style.paddingRight=i||""});var e=[].slice.call(document.querySelectorAll(""+St));pt(e).each(function(t,e){var i=pt(e).data("margin-right");void 0!==i&&pt(e).css("margin-right",i).removeData("margin-right")});var i=pt(document.body).data("padding-right");pt(document.body).removeData("padding-right"),document.body.style.paddingRight=i||""},t._getScrollbarWidth=function(){var t=document.createElement("div");t.className="modal-scrollbar-measure",document.body.appendChild(t);var e=t.getBoundingClientRect().width-t.clientWidth;return document.body.removeChild(t),e},o._jQueryInterface=function(i,n){return this.each(function(){var t=pt(this).data(gt),e=l({},yt,pt(this).data(),"object"==typeof i&&i?i:{});if(t||(t=new o(this,e),pt(this).data(gt,t)),"string"==typeof i){if(void 0===t[i])throw new TypeError('No method named "'+i+'"');t[i](n)}else e.show&&t.show(n)})},r(o,null,[{key:"VERSION",get:function(){return"4.1.3"}},{key:"Default",get:function(){return yt}}]),o}(),pt(document).on(wt.CLICK_DATA_API,'[data-toggle="modal"]',function(t){var e,i=this,n=$e.getSelectorFromElement(this);n&&(e=document.querySelector(n));var o=pt(e).data(gt)?"toggle":l({},pt(e).data(),pt(this).data());"A"!==this.tagName&&"AREA"!==this.tagName||t.preventDefault();var s=pt(e).one(wt.SHOW,function(t){t.isDefaultPrevented()||s.one(wt.HIDDEN,function(){pt(i).is(":visible")&&i.focus()})});kt._jQueryInterface.call(pt(e),o,this)}),pt.fn[ft]=kt._jQueryInterface,pt.fn[ft].Constructor=kt,pt.fn[ft].noConflict=function(){return pt.fn[ft]=vt,kt._jQueryInterface},kt),je=(Et="tooltip",Dt="."+(At="bs.tooltip"),Pt=($t=e).fn[Et],It="bs-tooltip",Ot=new RegExp("(^|\\s)"+It+"\\S+","g"),Nt={animation:!0,template:'<div class="tooltip" role="tooltip"><div class="arrow"></div><div class="tooltip-inner"></div></div>',trigger:"hover focus",title:"",delay:0,html:(Lt={AUTO:"auto",TOP:"top",RIGHT:"right",BOTTOM:"bottom",LEFT:"left"},!1),selector:(jt={animation:"boolean",template:"string",title:"(string|element|function)",trigger:"string",delay:"(number|object)",html:"boolean",selector:"(string|boolean)",placement:"(string|function)",offset:"(number|string)",container:"(string|element|boolean)",fallbackPlacement:"(string|array)",boundary:"(string|element)"},!1),placement:"top",offset:0,container:!1,fallbackPlacement:"flip",boundary:"scrollParent"},"out",Mt={HIDE:"hide"+Dt,HIDDEN:"hidden"+Dt,SHOW:(Ht="show")+Dt,SHOWN:"shown"+Dt,INSERTED:"inserted"+Dt,CLICK:"click"+Dt,FOCUSIN:"focusin"+Dt,FOCUSOUT:"focusout"+Dt,MOUSEENTER:"mouseenter"+Dt,MOUSELEAVE:"mouseleave"+Dt},zt="fade",qt="show",".tooltip-inner",".arrow",Rt="hover",Ft="focus","click","manual",Wt=function(){function n(t,e){if(void 0===d)throw new TypeError("Bootstrap tooltips require Popper.js (https://popper.js.org)");this._isEnabled=!0,this._timeout=0,this._hoverState="",this._activeTrigger={},this._popper=null,this.element=t,this.config=this._getConfig(e),this.tip=null,this._setListeners()}var t=n.prototype;return t.enable=function(){this._isEnabled=!0},t.disable=function(){this._isEnabled=!1},t.toggleEnabled=function(){this._isEnabled=!this._isEnabled},t.toggle=function(t){if(this._isEnabled)if(t){var e=this.constructor.DATA_KEY,i=$t(t.currentTarget).data(e);i||(i=new this.constructor(t.currentTarget,this._getDelegateConfig()),$t(t.currentTarget).data(e,i)),i._activeTrigger.click=!i._activeTrigger.click,i._isWithActiveTrigger()?i._enter(null,i):i._leave(null,i)}else{if($t(this.getTipElement()).hasClass(qt))return void this._leave(null,this);this._enter(null,this)}},t.dispose=function(){clearTimeout(this._timeout),$t.removeData(this.element,this.constructor.DATA_KEY),$t(this.element).off(this.constructor.EVENT_KEY),$t(this.element).closest(".modal").off("hide.bs.modal"),this.tip&&$t(this.tip).remove(),this._isEnabled=null,this._timeout=null,this._hoverState=null,(this._activeTrigger=null)!==this._popper&&this._popper.destroy(),this._popper=null,this.element=null,this.config=null,this.tip=null},t.show=function(){var e=this;if("none"===$t(this.element).css("display"))throw new Error("Please use show on visible elements");var t=$t.Event(this.constructor.Event.SHOW);if(this.isWithContent()&&this._isEnabled){$t(this.element).trigger(t);var i=$t.contains(this.element.ownerDocument.documentElement,this.element);if(t.isDefaultPrevented()||!i)return;var n=this.getTipElement(),o=$e.getUID(this.constructor.NAME);n.setAttribute("id",o),this.element.setAttribute("aria-describedby",o),this.setContent(),this.config.animation&&$t(n).addClass(zt);var s="function"==typeof this.config.placement?this.config.placement.call(this,n,this.element):this.config.placement,r=this._getAttachment(s);this.addAttachmentClass(r);var a=!1===this.config.container?document.body:$t(document).find(this.config.container);$t(n).data(this.constructor.DATA_KEY,this),$t.contains(this.element.ownerDocument.documentElement,this.tip)||$t(n).appendTo(a),$t(this.element).trigger(this.constructor.Event.INSERTED),this._popper=new d(this.element,n,{placement:r,modifiers:{offset:{offset:this.config.offset},flip:{behavior:this.config.fallbackPlacement},arrow:{element:".arrow"},preventOverflow:{boundariesElement:this.config.boundary}},onCreate:function(t){t.originalPlacement!==t.placement&&e._handlePopperPlacementChange(t)},onUpdate:function(t){e._handlePopperPlacementChange(t)}}),$t(n).addClass(qt),"ontouchstart"in document.documentElement&&$t(document.body).children().on("mouseover",null,$t.noop);var l=function(){e.config.animation&&e._fixTransition();var t=e._hoverState;e._hoverState=null,$t(e.element).trigger(e.constructor.Event.SHOWN),"out"===t&&e._leave(null,e)};if($t(this.tip).hasClass(zt)){var c=$e.getTransitionDurationFromElement(this.tip);$t(this.tip).one($e.TRANSITION_END,l).emulateTransitionEnd(c)}else l()}},t.hide=function(t){var e=this,i=this.getTipElement(),n=$t.Event(this.constructor.Event.HIDE),o=function(){e._hoverState!==Ht&&i.parentNode&&i.parentNode.removeChild(i),e._cleanTipClass(),e.element.removeAttribute("aria-describedby"),$t(e.element).trigger(e.constructor.Event.HIDDEN),null!==e._popper&&e._popper.destroy(),t&&t()};if($t(this.element).trigger(n),!n.isDefaultPrevented()){if($t(i).removeClass(qt),"ontouchstart"in document.documentElement&&$t(document.body).children().off("mouseover",null,$t.noop),this._activeTrigger.click=!1,this._activeTrigger[Ft]=!1,this._activeTrigger[Rt]=!1,$t(this.tip).hasClass(zt)){var s=$e.getTransitionDurationFromElement(i);$t(i).one($e.TRANSITION_END,o).emulateTransitionEnd(s)}else o();this._hoverState=""}},t.update=function(){null!==this._popper&&this._popper.scheduleUpdate()},t.isWithContent=function(){return Boolean(this.getTitle())},t.addAttachmentClass=function(t){$t(this.getTipElement()).addClass(It+"-"+t)},t.getTipElement=function(){return this.tip=this.tip||$t(this.config.template)[0],this.tip},t.setContent=function(){var t=this.getTipElement();this.setElementContent($t(t.querySelectorAll(".tooltip-inner")),this.getTitle()),$t(t).removeClass(zt+" "+qt)},t.setElementContent=function(t,e){var i=this.config.html;"object"==typeof e&&(e.nodeType||e.jquery)?i?$t(e).parent().is(t)||t.empty().append(e):t.text($t(e).text()):t[i?"html":"text"](e)},t.getTitle=function(){var t=this.element.getAttribute("data-original-title");return t||(t="function"==typeof this.config.title?this.config.title.call(this.element):this.config.title),t},t._getAttachment=function(t){return Lt[t.toUpperCase()]},t._setListeners=function(){var n=this;this.config.trigger.split(" ").forEach(function(t){if("click"===t)$t(n.element).on(n.constructor.Event.CLICK,n.config.selector,function(t){return n.toggle(t)});else if("manual"!==t){var e=t===Rt?n.constructor.Event.MOUSEENTER:n.constructor.Event.FOCUSIN,i=t===Rt?n.constructor.Event.MOUSELEAVE:n.constructor.Event.FOCUSOUT;$t(n.element).on(e,n.config.selector,function(t){return n._enter(t)}).on(i,n.config.selector,function(t){return n._leave(t)})}$t(n.element).closest(".modal").on("hide.bs.modal",function(){return n.hide()})}),this.config.selector?this.config=l({},this.config,{trigger:"manual",selector:""}):this._fixTitle()},t._fixTitle=function(){var t=typeof this.element.getAttribute("data-original-title");(this.element.getAttribute("title")||"string"!==t)&&(this.element.setAttribute("data-original-title",this.element.getAttribute("title")||""),this.element.setAttribute("title",""))},t._enter=function(t,e){var i=this.constructor.DATA_KEY;(e=e||$t(t.currentTarget).data(i))||(e=new this.constructor(t.currentTarget,this._getDelegateConfig()),$t(t.currentTarget).data(i,e)),t&&(e._activeTrigger["focusin"===t.type?Ft:Rt]=!0),$t(e.getTipElement()).hasClass(qt)||e._hoverState===Ht?e._hoverState=Ht:(clearTimeout(e._timeout),e._hoverState=Ht,e.config.delay&&e.config.delay.show?e._timeout=setTimeout(function(){e._hoverState===Ht&&e.show()},e.config.delay.show):e.show())},t._leave=function(t,e){var i=this.constructor.DATA_KEY;(e=e||$t(t.currentTarget).data(i))||(e=new this.constructor(t.currentTarget,this._getDelegateConfig()),$t(t.currentTarget).data(i,e)),t&&(e._activeTrigger["focusout"===t.type?Ft:Rt]=!1),e._isWithActiveTrigger()||(clearTimeout(e._timeout),e._hoverState="out",e.config.delay&&e.config.delay.hide?e._timeout=setTimeout(function(){"out"===e._hoverState&&e.hide()},e.config.delay.hide):e.hide())},t._isWithActiveTrigger=function(){for(var t in this._activeTrigger)if(this._activeTrigger[t])return!0;return!1},t._getConfig=function(t){return"number"==typeof(t=l({},this.constructor.Default,$t(this.element).data(),"object"==typeof t&&t?t:{})).delay&&(t.delay={show:t.delay,hide:t.delay}),"number"==typeof t.title&&(t.title=t.title.toString()),"number"==typeof t.content&&(t.content=t.content.toString()),$e.typeCheckConfig(Et,t,this.constructor.DefaultType),t},t._getDelegateConfig=function(){var t={};if(this.config)for(var e in this.config)this.constructor.Default[e]!==this.config[e]&&(t[e]=this.config[e]);return t},t._cleanTipClass=function(){var t=$t(this.getTipElement()),e=t.attr("class").match(Ot);null!==e&&e.length&&t.removeClass(e.join(""))},t._handlePopperPlacementChange=function(t){var e=t.instance;this.tip=e.popper,this._cleanTipClass(),this.addAttachmentClass(this._getAttachment(t.placement))},t._fixTransition=function(){var t=this.getTipElement(),e=this.config.animation;null===t.getAttribute("x-placement")&&($t(t).removeClass(zt),this.config.animation=!1,this.hide(),this.show(),this.config.animation=e)},n._jQueryInterface=function(i){return this.each(function(){var t=$t(this).data(At),e="object"==typeof i&&i;if((t||!/dispose|hide/.test(i))&&(t||(t=new n(this,e),$t(this).data(At,t)),"string"==typeof i)){if(void 0===t[i])throw new TypeError('No method named "'+i+'"');t[i]()}})},r(n,null,[{key:"VERSION",get:function(){return"4.1.3"}},{key:"Default",get:function(){return Nt}},{key:"NAME",get:function(){return Et}},{key:"DATA_KEY",get:function(){return At}},{key:"Event",get:function(){return Mt}},{key:"EVENT_KEY",get:function(){return Dt}},{key:"DefaultType",get:function(){return jt}}]),n}(),$t.fn[Et]=Wt._jQueryInterface,$t.fn[Et].Constructor=Wt,$t.fn[Et].noConflict=function(){return $t.fn[Et]=Pt,Wt._jQueryInterface},Wt),Le=(Ut="popover",Xt="."+(Yt="bs.popover"),Vt=(Bt=e).fn[Ut],Qt="bs-popover",Kt=new RegExp("(^|\\s)"+Qt+"\\S+","g"),Zt=l({},je.Default,{placement:"right",trigger:"click",content:"",template:'<div class="popover" role="tooltip"><div class="arrow"></div><h3 class="popover-header"></h3><div class="popover-body"></div></div>'}),Gt=l({},je.DefaultType,{content:"(string|element|function)"}),"fade",".popover-header",".popover-body",Jt={HIDE:"hide"+Xt,HIDDEN:"hidden"+Xt,SHOW:"show"+Xt,SHOWN:"shown"+Xt,INSERTED:"inserted"+Xt,CLICK:"click"+Xt,FOCUSIN:"focusin"+Xt,FOCUSOUT:"focusout"+Xt,MOUSEENTER:"mouseenter"+Xt,MOUSELEAVE:"mouseleave"+Xt},te=function(t){var e,i;function n(){return t.apply(this,arguments)||this}i=t,(e=n).prototype=Object.create(i.prototype),(e.prototype.constructor=e).__proto__=i;var o=n.prototype;return o.isWithContent=function(){return this.getTitle()||this._getContent()},o.addAttachmentClass=function(t){Bt(this.getTipElement()).addClass(Qt+"-"+t)},o.getTipElement=function(){return this.tip=this.tip||Bt(this.config.template)[0],this.tip},o.setContent=function(){var t=Bt(this.getTipElement());this.setElementContent(t.find(".popover-header"),this.getTitle());var e=this._getContent();"function"==typeof e&&(e=e.call(this.element)),this.setElementContent(t.find(".popover-body"),e),t.removeClass("fade show")},o._getContent=function(){return this.element.getAttribute("data-content")||this.config.content},o._cleanTipClass=function(){var t=Bt(this.getTipElement()),e=t.attr("class").match(Kt);null!==e&&0<e.length&&t.removeClass(e.join(""))},n._jQueryInterface=function(i){return this.each(function(){var t=Bt(this).data(Yt),e="object"==typeof i?i:null;if((t||!/destroy|hide/.test(i))&&(t||(t=new n(this,e),Bt(this).data(Yt,t)),"string"==typeof i)){if(void 0===t[i])throw new TypeError('No method named "'+i+'"');t[i]()}})},r(n,null,[{key:"VERSION",get:function(){return"4.1.3"}},{key:"Default",get:function(){return Zt}},{key:"NAME",get:function(){return Ut}},{key:"DATA_KEY",get:function(){return Yt}},{key:"Event",get:function(){return Jt}},{key:"EVENT_KEY",get:function(){return Xt}},{key:"DefaultType",get:function(){return Gt}}]),n}(je),Bt.fn[Ut]=te._jQueryInterface,Bt.fn[Ut].Constructor=te,Bt.fn[Ut].noConflict=function(){return Bt.fn[Ut]=Vt,te._jQueryInterface},te),Ne=(ie="scrollspy",oe="."+(ne="bs.scrollspy"),se=(ee=e).fn[ie],re={offset:10,method:"auto",target:""},ae={offset:"number",method:"string",target:"(string|element)"},le={ACTIVATE:"activate"+oe,SCROLL:"scroll"+oe,LOAD_DATA_API:"load"+oe+".data-api"},"dropdown-item",ce="active",'[data-spy="scroll"]',".active",de=".nav, .list-group",ue=".nav-link",".nav-item",he=".list-group-item",".dropdown",".dropdown-item",".dropdown-toggle","offset",pe="position",fe=function(){function i(t,e){var i=this;this._element=t,this._scrollElement="BODY"===t.tagName?window:t,this._config=this._getConfig(e),this._selector=this._config.target+" "+ue+","+this._config.target+" "+he+","+this._config.target+" .dropdown-item",this._offsets=[],this._targets=[],this._activeTarget=null,this._scrollHeight=0,ee(this._scrollElement).on(le.SCROLL,function(t){return i._process(t)}),this.refresh(),this._process()}var t=i.prototype;return t.refresh=function(){var e=this,t=this._scrollElement===this._scrollElement.window?"offset":pe,o="auto"===this._config.method?t:this._config.method,s=o===pe?this._getScrollTop():0;this._offsets=[],this._targets=[],this._scrollHeight=this._getScrollHeight(),[].slice.call(document.querySelectorAll(this._selector)).map(function(t){var e,i=$e.getSelectorFromElement(t);if(i&&(e=document.querySelector(i)),e){var n=e.getBoundingClientRect();if(n.width||n.height)return[ee(e)[o]().top+s,i]}return null}).filter(function(t){return t}).sort(function(t,e){return t[0]-e[0]}).forEach(function(t){e._offsets.push(t[0]),e._targets.push(t[1])})},t.dispose=function(){ee.removeData(this._element,ne),ee(this._scrollElement).off(oe),this._element=null,this._scrollElement=null,this._config=null,this._selector=null,this._offsets=null,this._targets=null,this._activeTarget=null,this._scrollHeight=null},t._getConfig=function(t){if("string"!=typeof(t=l({},re,"object"==typeof t&&t?t:{})).target){var e=ee(t.target).attr("id");e||(e=$e.getUID(ie),ee(t.target).attr("id",e)),t.target="#"+e}return $e.typeCheckConfig(ie,t,ae),t},t._getScrollTop=function(){return this._scrollElement===window?this._scrollElement.pageYOffset:this._scrollElement.scrollTop},t._getScrollHeight=function(){return this._scrollElement.scrollHeight||Math.max(document.body.scrollHeight,document.documentElement.scrollHeight)},t._getOffsetHeight=function(){return this._scrollElement===window?window.innerHeight:this._scrollElement.getBoundingClientRect().height},t._process=function(){var t=this._getScrollTop()+this._config.offset,e=this._getScrollHeight(),i=this._config.offset+e-this._getOffsetHeight();if(this._scrollHeight!==e&&this.refresh(),i<=t){var n=this._targets[this._targets.length-1];this._activeTarget!==n&&this._activate(n)}else{if(this._activeTarget&&t<this._offsets[0]&&0<this._offsets[0])return this._activeTarget=null,void this._clear();for(var o=this._offsets.length;o--;)this._activeTarget!==this._targets[o]&&t>=this._offsets[o]&&(void 0===this._offsets[o+1]||t<this._offsets[o+1])&&this._activate(this._targets[o])}},t._activate=function(e){this._activeTarget=e,this._clear();var t=this._selector.split(",");t=t.map(function(t){return t+'[data-target="'+e+'"],'+t+'[href="'+e+'"]'});var i=ee([].slice.call(document.querySelectorAll(t.join(","))));i.hasClass("dropdown-item")?(i.closest(".dropdown").find(".dropdown-toggle").addClass(ce),i.addClass(ce)):(i.addClass(ce),i.parents(de).prev(ue+", "+he).addClass(ce),i.parents(de).prev(".nav-item").children(ue).addClass(ce)),ee(this._scrollElement).trigger(le.ACTIVATE,{relatedTarget:e})},t._clear=function(){var t=[].slice.call(document.querySelectorAll(this._selector));ee(t).filter(".active").removeClass(ce)},i._jQueryInterface=function(e){return this.each(function(){var t=ee(this).data(ne);if(t||(t=new i(this,"object"==typeof e&&e),ee(this).data(ne,t)),"string"==typeof e){if(void 0===t[e])throw new TypeError('No method named "'+e+'"');t[e]()}})},r(i,null,[{key:"VERSION",get:function(){return"4.1.3"}},{key:"Default",get:function(){return re}}]),i}(),ee(window).on(le.LOAD_DATA_API,function(){for(var t=[].slice.call(document.querySelectorAll('[data-spy="scroll"]')),e=t.length;e--;){var i=ee(t[e]);fe._jQueryInterface.call(i,i.data())}}),ee.fn[ie]=fe._jQueryInterface,ee.fn[ie].Constructor=fe,ee.fn[ie].noConflict=function(){return ee.fn[ie]=se,fe._jQueryInterface},fe),He=(ve="."+(me="bs.tab"),ye=(ge=e).fn.tab,be={HIDE:"hide"+ve,HIDDEN:"hidden"+ve,SHOW:"show"+ve,SHOWN:"shown"+ve,CLICK_DATA_API:"click"+ve+".data-api"},"dropdown-menu",we="active","disabled","fade","show",".dropdown",".nav, .list-group",xe=".active",_e="> li > .active",'[data-toggle="tab"], [data-toggle="pill"], [data-toggle="list"]',".dropdown-toggle","> .dropdown-menu .active",Te=function(){function n(t){this._element=t}var t=n.prototype;return t.show=function(){var i=this;if(!(this._element.parentNode&&this._element.parentNode.nodeType===Node.ELEMENT_NODE&&ge(this._element).hasClass(we)||ge(this._element).hasClass("disabled"))){var t,n,e=ge(this._element).closest(".nav, .list-group")[0],o=$e.getSelectorFromElement(this._element);if(e){var s="UL"===e.nodeName?_e:xe;n=(n=ge.makeArray(ge(e).find(s)))[n.length-1]}var r=ge.Event(be.HIDE,{relatedTarget:this._element}),a=ge.Event(be.SHOW,{relatedTarget:n});if(n&&ge(n).trigger(r),ge(this._element).trigger(a),!a.isDefaultPrevented()&&!r.isDefaultPrevented()){o&&(t=document.querySelector(o)),this._activate(this._element,e);var l=function(){var t=ge.Event(be.HIDDEN,{relatedTarget:i._element}),e=ge.Event(be.SHOWN,{relatedTarget:n});ge(n).trigger(t),ge(i._element).trigger(e)};t?this._activate(t,t.parentNode,l):l()}}},t.dispose=function(){ge.removeData(this._element,me),this._element=null},t._activate=function(t,e,i){var n=this,o=("UL"===e.nodeName?ge(e).find(_e):ge(e).children(xe))[0],s=i&&o&&ge(o).hasClass("fade"),r=function(){return n._transitionComplete(t,o,i)};if(o&&s){var a=$e.getTransitionDurationFromElement(o);ge(o).one($e.TRANSITION_END,r).emulateTransitionEnd(a)}else r()},t._transitionComplete=function(t,e,i){if(e){ge(e).removeClass("show "+we);var n=ge(e.parentNode).find("> .dropdown-menu .active")[0];n&&ge(n).removeClass(we),"tab"===e.getAttribute("role")&&e.setAttribute("aria-selected",!1)}if(ge(t).addClass(we),"tab"===t.getAttribute("role")&&t.setAttribute("aria-selected",!0),$e.reflow(t),ge(t).addClass("show"),t.parentNode&&ge(t.parentNode).hasClass("dropdown-menu")){var o=ge(t).closest(".dropdown")[0];if(o){var s=[].slice.call(o.querySelectorAll(".dropdown-toggle"));ge(s).addClass(we)}t.setAttribute("aria-expanded",!0)}i&&i()},n._jQueryInterface=function(i){return this.each(function(){var t=ge(this),e=t.data(me);if(e||(e=new n(this),t.data(me,e)),"string"==typeof i){if(void 0===e[i])throw new TypeError('No method named "'+i+'"');e[i]()}})},r(n,null,[{key:"VERSION",get:function(){return"4.1.3"}}]),n}(),ge(document).on(be.CLICK_DATA_API,'[data-toggle="tab"], [data-toggle="pill"], [data-toggle="list"]',function(t){t.preventDefault(),Te._jQueryInterface.call(ge(this),"show")}),ge.fn.tab=Te._jQueryInterface,ge.fn.tab.Constructor=Te,ge.fn.tab.noConflict=function(){return ge.fn.tab=ye,Te._jQueryInterface},Te);!function(t){if(void 0===t)throw new TypeError("Bootstrap's JavaScript requires jQuery. jQuery must be included before Bootstrap's JavaScript.");var e=t.fn.jquery.split(" ")[0].split(".");if(e[0]<2&&e[1]<9||1===e[0]&&9===e[1]&&e[2]<1||4<=e[0])throw new Error("Bootstrap's JavaScript requires at least jQuery v1.9.1 but less than v4.0.0")}(e),t.Util=$e,t.Alert=Ee,t.Button=Ae,t.Carousel=De,t.Collapse=Pe,t.Dropdown=Ie,t.Modal=Oe,t.Popover=Le,t.Scrollspy=Ne,t.Tab=He,t.Tooltip=je,Object.defineProperty(t,"__esModule",{value:!0})}),function(l,i,o,a){function c(t,e){this.settings=null,this.options=l.extend({},c.Defaults,e),this.$element=l(t),this._handlers={},this._plugins={},this._supress={},this._current=null,this._speed=null,this._coordinates=[],this._breakpoint=null,this._width=null,this._items=[],this._clones=[],this._mergers=[],this._widths=[],this._invalidated={},this._pipe=[],this._drag={time:null,target:null,pointer:null,stage:{start:null,current:null},direction:null},this._states={current:{},tags:{initializing:["busy"],animating:["busy"],dragging:["interacting"]}},l.each(["onResize","onThrottledResize"],l.proxy(function(t,e){this._handlers[e]=l.proxy(this[e],this)},this)),l.each(c.Plugins,l.proxy(function(t,e){this._plugins[t.charAt(0).toLowerCase()+t.slice(1)]=new e(this)},this)),l.each(c.Workers,l.proxy(function(t,e){this._pipe.push({filter:e.filter,run:l.proxy(e.run,this)})},this)),this.setup(),this.initialize()}c.Defaults={items:3,loop:!1,center:!1,rewind:!1,checkVisibility:!0,mouseDrag:!0,touchDrag:!0,pullDrag:!0,freeDrag:!1,margin:0,stagePadding:0,merge:!1,mergeFit:!0,autoWidth:!1,startPosition:0,rtl:!1,smartSpeed:250,fluidSpeed:!1,dragEndSpeed:!1,responsive:{},responsiveRefreshRate:200,responsiveBaseElement:i,fallbackEasing:"swing",slideTransition:"",info:!1,nestedItemSelector:!1,itemElement:"div",stageElement:"div",refreshClass:"owl-refresh",loadedClass:"owl-loaded",loadingClass:"owl-loading",rtlClass:"owl-rtl",responsiveClass:"owl-responsive",dragClass:"owl-drag",itemClass:"owl-item",stageClass:"owl-stage",stageOuterClass:"owl-stage-outer",grabClass:"owl-grab"},c.Width={Default:"default",Inner:"inner",Outer:"outer"},c.Type={Event:"event",State:"state"},c.Plugins={},c.Workers=[{filter:["width","settings"],run:function(){this._width=this.$element.width()}},{filter:["width","items","settings"],run:function(t){t.current=this._items&&this._items[this.relative(this._current)]}},{filter:["items","settings"],run:function(){this.$stage.children(".cloned").remove()}},{filter:["width","items","settings"],run:function(t){var e=this.settings.margin||"",i=!this.settings.autoWidth,n=this.settings.rtl,o={width:"auto","margin-left":n?e:"","margin-right":n?"":e};!i&&this.$stage.children().css(o),t.css=o}},{filter:["width","items","settings"],run:function(t){var e=(this.width()/this.settings.items).toFixed(3)-this.settings.margin,i=null,n=this._items.length,o=!this.settings.autoWidth,s=[];for(t.items={merge:!1,width:e};n--;)i=this._mergers[n],i=this.settings.mergeFit&&Math.min(i,this.settings.items)||i,t.items.merge=1<i||t.items.merge,s[n]=o?e*i:this._items[n].width();this._widths=s}},{filter:["items","settings"],run:function(){var t=[],e=this._items,i=this.settings,n=Math.max(2*i.items,4),o=2*Math.ceil(e.length/2),s=i.loop&&e.length?i.rewind?n:Math.max(n,o):0,r="",a="";for(s/=2;0<s;)t.push(this.normalize(t.length/2,!0)),r+=e[t[t.length-1]][0].outerHTML,t.push(this.normalize(e.length-1-(t.length-1)/2,!0)),a=e[t[t.length-1]][0].outerHTML+a,s-=1;this._clones=t,l(r).addClass("cloned").appendTo(this.$stage),l(a).addClass("cloned").prependTo(this.$stage)}},{filter:["width","items","settings"],run:function(){for(var t=this.settings.rtl?1:-1,e=this._clones.length+this._items.length,i=-1,n=0,o=0,s=[];++i<e;)n=s[i-1]||0,o=this._widths[this.relative(i)]+this.settings.margin,s.push(n+o*t);this._coordinates=s}},{filter:["width","items","settings"],run:function(){var t=this.settings.stagePadding,e=this._coordinates,i={width:Math.ceil(Math.abs(e[e.length-1]))+2*t,"padding-left":t||"","padding-right":t||""};this.$stage.css(i)}},{filter:["width","items","settings"],run:function(t){var e=this._coordinates.length,i=!this.settings.autoWidth,n=this.$stage.children();if(i&&t.items.merge)for(;e--;)t.css.width=this._widths[this.relative(e)],n.eq(e).css(t.css);else i&&(t.css.width=t.items.width,n.css(t.css))}},{filter:["items"],run:function(){this._coordinates.length<1&&this.$stage.removeAttr("style")}},{filter:["width","items","settings"],run:function(t){t.current=t.current?this.$stage.children().index(t.current):0,t.current=Math.max(this.minimum(),Math.min(this.maximum(),t.current)),this.reset(t.current)}},{filter:["position"],run:function(){this.animate(this.coordinates(this._current))}},{filter:["width","position","items","settings"],run:function(){var t,e,i,n,o=this.settings.rtl?1:-1,s=2*this.settings.stagePadding,r=this.coordinates(this.current())+s,a=r+this.width()*o,l=[];for(i=0,n=this._coordinates.length;i<n;i++)t=this._coordinates[i-1]||0,e=Math.abs(this._coordinates[i])+s*o,(this.op(t,"<=",r)&&this.op(t,">",a)||this.op(e,"<",r)&&this.op(e,">",a))&&l.push(i);this.$stage.children(".active").removeClass("active"),this.$stage.children(":eq("+l.join("), :eq(")+")").addClass("active"),this.$stage.children(".center").removeClass("center"),this.settings.center&&this.$stage.children().eq(this.current()).addClass("center")}}],c.prototype.initializeStage=function(){this.$stage=this.$element.find("."+this.settings.stageClass),this.$stage.length||(this.$element.addClass(this.options.loadingClass),this.$stage=l("<"+this.settings.stageElement+">",{class:this.settings.stageClass}).wrap(l("<div/>",{class:this.settings.stageOuterClass})),this.$element.append(this.$stage.parent()))},c.prototype.initializeItems=function(){var t=this.$element.find(".owl-item");if(t.length)return this._items=t.get().map(function(t){return l(t)}),this._mergers=this._items.map(function(){return 1}),void this.refresh();this.replace(this.$element.children().not(this.$stage.parent())),this.isVisible()?this.refresh():this.invalidate("width"),this.$element.removeClass(this.options.loadingClass).addClass(this.options.loadedClass)},c.prototype.initialize=function(){var t,e,i;(this.enter("initializing"),this.trigger("initialize"),this.$element.toggleClass(this.settings.rtlClass,this.settings.rtl),this.settings.autoWidth&&!this.is("pre-loading"))&&(t=this.$element.find("img"),e=this.settings.nestedItemSelector?"."+this.settings.nestedItemSelector:a,i=this.$element.children(e).width(),t.length&&i<=0&&this.preloadAutoWidthImages(t));this.initializeStage(),this.initializeItems(),this.registerEventHandlers(),this.leave("initializing"),this.trigger("initialized")},c.prototype.isVisible=function(){return!this.settings.checkVisibility||this.$element.is(":visible")},c.prototype.setup=function(){var e=this.viewport(),t=this.options.responsive,i=-1,n=null;t?(l.each(t,function(t){t<=e&&i<t&&(i=Number(t))}),"function"==typeof(n=l.extend({},this.options,t[i])).stagePadding&&(n.stagePadding=n.stagePadding()),delete n.responsive,n.responsiveClass&&this.$element.attr("class",this.$element.attr("class").replace(new RegExp("("+this.options.responsiveClass+"-)\\S+\\s","g"),"$1"+i))):n=l.extend({},this.options),this.trigger("change",{property:{name:"settings",value:n}}),this._breakpoint=i,this.settings=n,this.invalidate("settings"),this.trigger("changed",{property:{name:"settings",value:this.settings}})},c.prototype.optionsLogic=function(){this.settings.autoWidth&&(this.settings.stagePadding=!1,this.settings.merge=!1)},c.prototype.prepare=function(t){var e=this.trigger("prepare",{content:t});return e.data||(e.data=l("<"+this.settings.itemElement+"/>").addClass(this.options.itemClass).append(t)),this.trigger("prepared",{content:e.data}),e.data},c.prototype.update=function(){for(var t=0,e=this._pipe.length,i=l.proxy(function(t){return this[t]},this._invalidated),n={};t<e;)(this._invalidated.all||0<l.grep(this._pipe[t].filter,i).length)&&this._pipe[t].run(n),t++;this._invalidated={},!this.is("valid")&&this.enter("valid")},c.prototype.width=function(t){switch(t=t||c.Width.Default){case c.Width.Inner:case c.Width.Outer:return this._width;default:return this._width-2*this.settings.stagePadding+this.settings.margin}},c.prototype.refresh=function(){this.enter("refreshing"),this.trigger("refresh"),this.setup(),this.optionsLogic(),this.$element.addClass(this.options.refreshClass),this.update(),this.$element.removeClass(this.options.refreshClass),this.leave("refreshing"),this.trigger("refreshed")},c.prototype.onThrottledResize=function(){i.clearTimeout(this.resizeTimer),this.resizeTimer=i.setTimeout(this._handlers.onResize,this.settings.responsiveRefreshRate)},c.prototype.onResize=function(){return!!this._items.length&&this._width!==this.$element.width()&&!!this.isVisible()&&(this.enter("resizing"),this.trigger("resize").isDefaultPrevented()?(this.leave("resizing"),!1):(this.invalidate("width"),this.refresh(),this.leave("resizing"),void this.trigger("resized")))},c.prototype.registerEventHandlers=function(){l.support.transition&&this.$stage.on(l.support.transition.end+".owl.core",l.proxy(this.onTransitionEnd,this)),!1!==this.settings.responsive&&this.on(i,"resize",this._handlers.onThrottledResize),this.settings.mouseDrag&&(this.$element.addClass(this.options.dragClass),this.$stage.on("mousedown.owl.core",l.proxy(this.onDragStart,this)),this.$stage.on("dragstart.owl.core selectstart.owl.core",function(){return!1})),this.settings.touchDrag&&(this.$stage.on("touchstart.owl.core",l.proxy(this.onDragStart,this)),this.$stage.on("touchcancel.owl.core",l.proxy(this.onDragEnd,this)))},c.prototype.onDragStart=function(t){var e=null;3!==t.which&&(l.support.transform?e={x:(e=this.$stage.css("transform").replace(/.*\(|\)| /g,"").split(","))[16===e.length?12:4],y:e[16===e.length?13:5]}:(e=this.$stage.position(),e={x:this.settings.rtl?e.left+this.$stage.width()-this.width()+this.settings.margin:e.left,y:e.top}),this.is("animating")&&(l.support.transform?this.animate(e.x):this.$stage.stop(),this.invalidate("position")),this.$element.toggleClass(this.options.grabClass,"mousedown"===t.type),this.speed(0),this._drag.time=(new Date).getTime(),this._drag.target=l(t.target),this._drag.stage.start=e,this._drag.stage.current=e,this._drag.pointer=this.pointer(t),l(o).on("mouseup.owl.core touchend.owl.core",l.proxy(this.onDragEnd,this)),l(o).one("mousemove.owl.core touchmove.owl.core",l.proxy(function(t){var e=this.difference(this._drag.pointer,this.pointer(t));l(o).on("mousemove.owl.core touchmove.owl.core",l.proxy(this.onDragMove,this)),Math.abs(e.x)<Math.abs(e.y)&&this.is("valid")||(t.preventDefault(),this.enter("dragging"),this.trigger("drag"))},this)))},c.prototype.onDragMove=function(t){var e=null,i=null,n=null,o=this.difference(this._drag.pointer,this.pointer(t)),s=this.difference(this._drag.stage.start,o);this.is("dragging")&&(t.preventDefault(),this.settings.loop?(e=this.coordinates(this.minimum()),i=this.coordinates(this.maximum()+1)-e,s.x=((s.x-e)%i+i)%i+e):(e=this.settings.rtl?this.coordinates(this.maximum()):this.coordinates(this.minimum()),i=this.settings.rtl?this.coordinates(this.minimum()):this.coordinates(this.maximum()),n=this.settings.pullDrag?-1*o.x/5:0,s.x=Math.max(Math.min(s.x,e+n),i+n)),this._drag.stage.current=s,this.animate(s.x))},c.prototype.onDragEnd=function(t){var e=this.difference(this._drag.pointer,this.pointer(t)),i=this._drag.stage.current,n=0<e.x^this.settings.rtl?"left":"right";l(o).off(".owl.core"),this.$element.removeClass(this.options.grabClass),(0!==e.x&&this.is("dragging")||!this.is("valid"))&&(this.speed(this.settings.dragEndSpeed||this.settings.smartSpeed),this.current(this.closest(i.x,0!==e.x?n:this._drag.direction)),this.invalidate("position"),this.update(),this._drag.direction=n,(3<Math.abs(e.x)||300<(new Date).getTime()-this._drag.time)&&this._drag.target.one("click.owl.core",function(){return!1})),this.is("dragging")&&(this.leave("dragging"),this.trigger("dragged"))},c.prototype.closest=function(i,n){var o=-1,s=this.width(),r=this.coordinates();return this.settings.freeDrag||l.each(r,l.proxy(function(t,e){return"left"===n&&e-30<i&&i<e+30?o=t:"right"===n&&e-s-30<i&&i<e-s+30?o=t+1:this.op(i,"<",e)&&this.op(i,">",r[t+1]!==a?r[t+1]:e-s)&&(o="left"===n?t+1:t),-1===o},this)),this.settings.loop||(this.op(i,">",r[this.minimum()])?o=i=this.minimum():this.op(i,"<",r[this.maximum()])&&(o=i=this.maximum())),o},c.prototype.animate=function(t){var e=0<this.speed();this.is("animating")&&this.onTransitionEnd(),e&&(this.enter("animating"),this.trigger("translate")),l.support.transform3d&&l.support.transition?this.$stage.css({transform:"translate3d("+t+"px,0px,0px)",transition:this.speed()/1e3+"s"+(this.settings.slideTransition?" "+this.settings.slideTransition:"")}):e?this.$stage.animate({left:t+"px"},this.speed(),this.settings.fallbackEasing,l.proxy(this.onTransitionEnd,this)):this.$stage.css({left:t+"px"})},c.prototype.is=function(t){return this._states.current[t]&&0<this._states.current[t]},c.prototype.current=function(t){if(t===a)return this._current;if(0===this._items.length)return a;if(t=this.normalize(t),this._current!==t){var e=this.trigger("change",{property:{name:"position",value:t}});e.data!==a&&(t=this.normalize(e.data)),this._current=t,this.invalidate("position"),this.trigger("changed",{property:{name:"position",value:this._current}})}return this._current},c.prototype.invalidate=function(t){return"string"===l.type(t)&&(this._invalidated[t]=!0,this.is("valid")&&this.leave("valid")),l.map(this._invalidated,function(t,e){return e})},c.prototype.reset=function(t){(t=this.normalize(t))!==a&&(this._speed=0,this._current=t,this.suppress(["translate","translated"]),this.animate(this.coordinates(t)),this.release(["translate","translated"]))},c.prototype.normalize=function(t,e){var i=this._items.length,n=e?0:this._clones.length;return!this.isNumeric(t)||i<1?t=a:(t<0||i+n<=t)&&(t=((t-n/2)%i+i)%i+n/2),t},c.prototype.relative=function(t){return t-=this._clones.length/2,this.normalize(t,!0)},c.prototype.maximum=function(t){var e,i,n,o=this.settings,s=this._coordinates.length;if(o.loop)s=this._clones.length/2+this._items.length-1;else if(o.autoWidth||o.merge){if(e=this._items.length)for(i=this._items[--e].width(),n=this.$element.width();e--&&!((i+=this._items[e].width()+this.settings.margin)>n););s=e+1}else s=o.center?this._items.length-1:this._items.length-o.items;return t&&(s-=this._clones.length/2),Math.max(s,0)},c.prototype.minimum=function(t){return t?0:this._clones.length/2},c.prototype.items=function(t){return t===a?this._items.slice():(t=this.normalize(t,!0),this._items[t])},c.prototype.mergers=function(t){return t===a?this._mergers.slice():(t=this.normalize(t,!0),this._mergers[t])},c.prototype.clones=function(i){var e=this._clones.length/2,n=e+this._items.length,o=function(t){return t%2==0?n+t/2:e-(t+1)/2};return i===a?l.map(this._clones,function(t,e){return o(e)}):l.map(this._clones,function(t,e){return t===i?o(e):null})},c.prototype.speed=function(t){return t!==a&&(this._speed=t),this._speed},c.prototype.coordinates=function(t){var e,i=1,n=t-1;return t===a?l.map(this._coordinates,l.proxy(function(t,e){return this.coordinates(e)},this)):(this.settings.center?(this.settings.rtl&&(i=-1,n=t+1),e=this._coordinates[t],e+=(this.width()-e+(this._coordinates[n]||0))/2*i):e=this._coordinates[n]||0,e=Math.ceil(e))},c.prototype.duration=function(t,e,i){return 0===i?0:Math.min(Math.max(Math.abs(e-t),1),6)*Math.abs(i||this.settings.smartSpeed)},c.prototype.to=function(t,e){var i=this.current(),n=null,o=t-this.relative(i),s=(0<o)-(o<0),r=this._items.length,a=this.minimum(),l=this.maximum();this.settings.loop?(!this.settings.rewind&&Math.abs(o)>r/2&&(o+=-1*s*r),(n=(((t=i+o)-a)%r+r)%r+a)!==t&&n-o<=l&&0<n-o&&(i=n-o,t=n,this.reset(i))):this.settings.rewind?t=(t%(l+=1)+l)%l:t=Math.max(a,Math.min(l,t)),this.speed(this.duration(i,t,e)),this.current(t),this.isVisible()&&this.update()},c.prototype.next=function(t){t=t||!1,this.to(this.relative(this.current())+1,t)},c.prototype.prev=function(t){t=t||!1,this.to(this.relative(this.current())-1,t)},c.prototype.onTransitionEnd=function(t){if(t!==a&&(t.stopPropagation(),(t.target||t.srcElement||t.originalTarget)!==this.$stage.get(0)))return!1;this.leave("animating"),this.trigger("translated")},c.prototype.viewport=function(){var t;return this.options.responsiveBaseElement!==i?t=l(this.options.responsiveBaseElement).width():i.innerWidth?t=i.innerWidth:o.documentElement&&o.documentElement.clientWidth?t=o.documentElement.clientWidth:console.warn("Can not detect viewport width."),t},c.prototype.replace=function(t){this.$stage.empty(),this._items=[],t&&(t=t instanceof jQuery?t:l(t)),this.settings.nestedItemSelector&&(t=t.find("."+this.settings.nestedItemSelector)),t.filter(function(){return 1===this.nodeType}).each(l.proxy(function(t,e){e=this.prepare(e),this.$stage.append(e),this._items.push(e),this._mergers.push(1*e.find("[data-merge]").addBack("[data-merge]").attr("data-merge")||1)},this)),this.reset(this.isNumeric(this.settings.startPosition)?this.settings.startPosition:0),this.invalidate("items")},c.prototype.add=function(t,e){var i=this.relative(this._current);e=e===a?this._items.length:this.normalize(e,!0),t=t instanceof jQuery?t:l(t),this.trigger("add",{content:t,position:e}),t=this.prepare(t),0===this._items.length||e===this._items.length?(0===this._items.length&&this.$stage.append(t),0!==this._items.length&&this._items[e-1].after(t),this._items.push(t),this._mergers.push(1*t.find("[data-merge]").addBack("[data-merge]").attr("data-merge")||1)):(this._items[e].before(t),this._items.splice(e,0,t),this._mergers.splice(e,0,1*t.find("[data-merge]").addBack("[data-merge]").attr("data-merge")||1)),this._items[i]&&this.reset(this._items[i].index()),this.invalidate("items"),this.trigger("added",{content:t,position:e})},c.prototype.remove=function(t){(t=this.normalize(t,!0))!==a&&(this.trigger("remove",{content:this._items[t],position:t}),this._items[t].remove(),this._items.splice(t,1),this._mergers.splice(t,1),this.invalidate("items"),this.trigger("removed",{content:null,position:t}))},c.prototype.preloadAutoWidthImages=function(t){t.each(l.proxy(function(t,e){this.enter("pre-loading"),e=l(e),l(new Image).one("load",l.proxy(function(t){e.attr("src",t.target.src),e.css("opacity",1),this.leave("pre-loading"),!this.is("pre-loading")&&!this.is("initializing")&&this.refresh()},this)).attr("src",e.attr("src")||e.attr("data-src")||e.attr("data-src-retina"))},this))},c.prototype.destroy=function(){for(var t in this.$element.off(".owl.core"),this.$stage.off(".owl.core"),l(o).off(".owl.core"),!1!==this.settings.responsive&&(i.clearTimeout(this.resizeTimer),this.off(i,"resize",this._handlers.onThrottledResize)),this._plugins)this._plugins[t].destroy();this.$stage.children(".cloned").remove(),this.$stage.unwrap(),this.$stage.children().contents().unwrap(),this.$stage.children().unwrap(),this.$stage.remove(),this.$element.removeClass(this.options.refreshClass).removeClass(this.options.loadingClass).removeClass(this.options.loadedClass).removeClass(this.options.rtlClass).removeClass(this.options.dragClass).removeClass(this.options.grabClass).attr("class",this.$element.attr("class").replace(new RegExp(this.options.responsiveClass+"-\\S+\\s","g"),"")).removeData("owl.carousel")},c.prototype.op=function(t,e,i){var n=this.settings.rtl;switch(e){case"<":return n?i<t:t<i;case">":return n?t<i:i<t;case">=":return n?t<=i:i<=t;case"<=":return n?i<=t:t<=i}},c.prototype.on=function(t,e,i,n){t.addEventListener?t.addEventListener(e,i,n):t.attachEvent&&t.attachEvent("on"+e,i)},c.prototype.off=function(t,e,i,n){t.removeEventListener?t.removeEventListener(e,i,n):t.detachEvent&&t.detachEvent("on"+e,i)},c.prototype.trigger=function(t,e,i,n,o){var s={item:{count:this._items.length,index:this.current()}},r=l.camelCase(l.grep(["on",t,i],function(t){return t}).join("-").toLowerCase()),a=l.Event([t,"owl",i||"carousel"].join(".").toLowerCase(),l.extend({relatedTarget:this},s,e));return this._supress[t]||(l.each(this._plugins,function(t,e){e.onTrigger&&e.onTrigger(a)}),this.register({type:c.Type.Event,name:t}),this.$element.trigger(a),this.settings&&"function"==typeof this.settings[r]&&this.settings[r].call(this,a)),a},c.prototype.enter=function(t){l.each([t].concat(this._states.tags[t]||[]),l.proxy(function(t,e){this._states.current[e]===a&&(this._states.current[e]=0),this._states.current[e]++},this))},c.prototype.leave=function(t){l.each([t].concat(this._states.tags[t]||[]),l.proxy(function(t,e){this._states.current[e]--},this))},c.prototype.register=function(i){if(i.type===c.Type.Event){if(l.event.special[i.name]||(l.event.special[i.name]={}),!l.event.special[i.name].owl){var e=l.event.special[i.name]._default;l.event.special[i.name]._default=function(t){return!e||!e.apply||t.namespace&&-1!==t.namespace.indexOf("owl")?t.namespace&&-1<t.namespace.indexOf("owl"):e.apply(this,arguments)},l.event.special[i.name].owl=!0}}else i.type===c.Type.State&&(this._states.tags[i.name]?this._states.tags[i.name]=this._states.tags[i.name].concat(i.tags):this._states.tags[i.name]=i.tags,this._states.tags[i.name]=l.grep(this._states.tags[i.name],l.proxy(function(t,e){return l.inArray(t,this._states.tags[i.name])===e},this)))},c.prototype.suppress=function(t){l.each(t,l.proxy(function(t,e){this._supress[e]=!0},this))},c.prototype.release=function(t){l.each(t,l.proxy(function(t,e){delete this._supress[e]},this))},c.prototype.pointer=function(t){var e={x:null,y:null};return(t=(t=t.originalEvent||t||i.event).touches&&t.touches.length?t.touches[0]:t.changedTouches&&t.changedTouches.length?t.changedTouches[0]:t).pageX?(e.x=t.pageX,e.y=t.pageY):(e.x=t.clientX,e.y=t.clientY),e},c.prototype.isNumeric=function(t){return!isNaN(parseFloat(t))},c.prototype.difference=function(t,e){return{x:t.x-e.x,y:t.y-e.y}},l.fn.owlCarousel=function(e){var n=Array.prototype.slice.call(arguments,1);return this.each(function(){var t=l(this),i=t.data("owl.carousel");i||(i=new c(this,"object"==typeof e&&e),t.data("owl.carousel",i),l.each(["next","prev","to","destroy","refresh","replace","add","remove"],function(t,e){i.register({type:c.Type.Event,name:e}),i.$element.on(e+".owl.carousel.core",l.proxy(function(t){t.namespace&&t.relatedTarget!==this&&(this.suppress([e]),i[e].apply(this,[].slice.call(arguments,1)),this.release([e]))},i))})),"string"==typeof e&&"_"!==e.charAt(0)&&i[e].apply(i,n)})},l.fn.owlCarousel.Constructor=c}(window.Zepto||window.jQuery,window,document),function(e,i,t,n){var o=function(t){this._core=t,this._interval=null,this._visible=null,this._handlers={"initialized.owl.carousel":e.proxy(function(t){t.namespace&&this._core.settings.autoRefresh&&this.watch()},this)},this._core.options=e.extend({},o.Defaults,this._core.options),this._core.$element.on(this._handlers)};o.Defaults={autoRefresh:!0,autoRefreshInterval:500},o.prototype.watch=function(){this._interval||(this._visible=this._core.isVisible(),this._interval=i.setInterval(e.proxy(this.refresh,this),this._core.settings.autoRefreshInterval))},o.prototype.refresh=function(){this._core.isVisible()!==this._visible&&(this._visible=!this._visible,this._core.$element.toggleClass("owl-hidden",!this._visible),this._visible&&this._core.invalidate("width")&&this._core.refresh())},o.prototype.destroy=function(){var t,e;for(t in i.clearInterval(this._interval),this._handlers)this._core.$element.off(t,this._handlers[t]);for(e in Object.getOwnPropertyNames(this))"function"!=typeof this[e]&&(this[e]=null)},e.fn.owlCarousel.Constructor.Plugins.AutoRefresh=o}(window.Zepto||window.jQuery,window,document),function(a,s,t,e){var i=function(t){this._core=t,this._loaded=[],this._handlers={"initialized.owl.carousel change.owl.carousel resized.owl.carousel":a.proxy(function(t){if(t.namespace&&this._core.settings&&this._core.settings.lazyLoad&&(t.property&&"position"==t.property.name||"initialized"==t.type)){var e=this._core.settings,i=e.center&&Math.ceil(e.items/2)||e.items,n=e.center&&-1*i||0,o=(t.property&&void 0!==t.property.value?t.property.value:this._core.current())+n,s=this._core.clones().length,r=a.proxy(function(t,e){this.load(e)},this);for(0<e.lazyLoadEager&&(i+=e.lazyLoadEager,e.loop&&(o-=e.lazyLoadEager,i++));n++<i;)this.load(s/2+this._core.relative(o)),s&&a.each(this._core.clones(this._core.relative(o)),r),o++}},this)},this._core.options=a.extend({},i.Defaults,this._core.options),this._core.$element.on(this._handlers)};i.Defaults={lazyLoad:!1,lazyLoadEager:0},i.prototype.load=function(t){var e=this._core.$stage.children().eq(t),i=e&&e.find(".owl-lazy");!i||-1<a.inArray(e.get(0),this._loaded)||(i.each(a.proxy(function(t,e){var i,n=a(e),o=1<s.devicePixelRatio&&n.attr("data-src-retina")||n.attr("data-src")||n.attr("data-srcset");this._core.trigger("load",{element:n,url:o},"lazy"),n.is("img")?n.one("load.owl.lazy",a.proxy(function(){n.css("opacity",1),this._core.trigger("loaded",{element:n,url:o},"lazy")},this)).attr("src",o):n.is("source")?n.one("load.owl.lazy",a.proxy(function(){this._core.trigger("loaded",{element:n,url:o},"lazy")},this)).attr("srcset",o):((i=new Image).onload=a.proxy(function(){n.css({"background-image":'url("'+o+'")',opacity:"1"}),this._core.trigger("loaded",{element:n,url:o},"lazy")},this),i.src=o)},this)),this._loaded.push(e.get(0)))},i.prototype.destroy=function(){var t,e;for(t in this.handlers)this._core.$element.off(t,this.handlers[t]);for(e in Object.getOwnPropertyNames(this))"function"!=typeof this[e]&&(this[e]=null)},a.fn.owlCarousel.Constructor.Plugins.Lazy=i}(window.Zepto||window.jQuery,window,document),function(r,i,t,e){var n=function(t){this._core=t,this._previousHeight=null,this._handlers={"initialized.owl.carousel refreshed.owl.carousel":r.proxy(function(t){t.namespace&&this._core.settings.autoHeight&&this.update()},this),"changed.owl.carousel":r.proxy(function(t){t.namespace&&this._core.settings.autoHeight&&"position"===t.property.name&&this.update()},this),"loaded.owl.lazy":r.proxy(function(t){t.namespace&&this._core.settings.autoHeight&&t.element.closest("."+this._core.settings.itemClass).index()===this._core.current()&&this.update()},this)},this._core.options=r.extend({},n.Defaults,this._core.options),this._core.$element.on(this._handlers),this._intervalId=null;var e=this;r(i).on("load",function(){e._core.settings.autoHeight&&e.update()}),r(i).resize(function(){e._core.settings.autoHeight&&(null!=e._intervalId&&clearTimeout(e._intervalId),e._intervalId=setTimeout(function(){e.update()},250))})};n.Defaults={autoHeight:!1,autoHeightClass:"owl-height"},n.prototype.update=function(){var t=this._core._current,e=t+this._core.settings.items,i=this._core.settings.lazyLoad,n=this._core.$stage.children().toArray().slice(t,e),o=[],s=0;r.each(n,function(t,e){o.push(r(e).height())}),(s=Math.max.apply(null,o))<=1&&i&&this._previousHeight&&(s=this._previousHeight),this._previousHeight=s,this._core.$stage.parent().height(s).addClass(this._core.settings.autoHeightClass)},n.prototype.destroy=function(){var t,e;for(t in this._handlers)this._core.$element.off(t,this._handlers[t]);for(e in Object.getOwnPropertyNames(this))"function"!=typeof this[e]&&(this[e]=null)},r.fn.owlCarousel.Constructor.Plugins.AutoHeight=n}(window.Zepto||window.jQuery,window,document),function(d,t,e,i){var n=function(t){this._core=t,this._videos={},this._playing=null,this._handlers={"initialized.owl.carousel":d.proxy(function(t){t.namespace&&this._core.register({type:"state",name:"playing",tags:["interacting"]})},this),"resize.owl.carousel":d.proxy(function(t){t.namespace&&this._core.settings.video&&this.isInFullScreen()&&t.preventDefault()},this),"refreshed.owl.carousel":d.proxy(function(t){t.namespace&&this._core.is("resizing")&&this._core.$stage.find(".cloned .owl-video-frame").remove()},this),"changed.owl.carousel":d.proxy(function(t){t.namespace&&"position"===t.property.name&&this._playing&&this.stop()},this),"prepared.owl.carousel":d.proxy(function(t){if(t.namespace){var e=d(t.content).find(".owl-video");e.length&&(e.css("display","none"),this.fetch(e,d(t.content)))}},this)},this._core.options=d.extend({},n.Defaults,this._core.options),this._core.$element.on(this._handlers),this._core.$element.on("click.owl.video",".owl-video-play-icon",d.proxy(function(t){this.play(t)},this))};n.Defaults={video:!1,videoHeight:!1,videoWidth:!1},n.prototype.fetch=function(t,e){var i=t.attr("data-vimeo-id")?"vimeo":t.attr("data-vzaar-id")?"vzaar":"youtube",n=t.attr("data-vimeo-id")||t.attr("data-youtube-id")||t.attr("data-vzaar-id"),o=t.attr("data-width")||this._core.settings.videoWidth,s=t.attr("data-height")||this._core.settings.videoHeight,r=t.attr("href");if(!r)throw new Error("Missing video URL.");if(-1<(n=r.match(/(http:|https:|)\/\/(player.|www.|app.)?(vimeo\.com|youtu(be\.com|\.be|be\.googleapis\.com|be\-nocookie\.com)|vzaar\.com)\/(video\/|videos\/|embed\/|channels\/.+\/|groups\/.+\/|watch\?v=|v\/)?([A-Za-z0-9._%-]*)(\&\S+)?/))[3].indexOf("youtu"))i="youtube";else if(-1<n[3].indexOf("vimeo"))i="vimeo";else{if(!(-1<n[3].indexOf("vzaar")))throw new Error("Video URL not supported.");i="vzaar"}n=n[6],this._videos[r]={type:i,id:n,width:o,height:s},e.attr("data-video",r),this.thumbnail(t,this._videos[r])},n.prototype.thumbnail=function(e,t){var i,n,o=t.width&&t.height?"width:"+t.width+"px;height:"+t.height+"px;":"",s=e.find("img"),r="src",a="",l=this._core.settings,c=function(t){'<div class="owl-video-play-icon"></div>',i=l.lazyLoad?d("<div/>",{class:"owl-video-tn "+a,srcType:t}):d("<div/>",{class:"owl-video-tn",style:"opacity:1;background-image:url("+t+")"}),e.after(i),e.after('<div class="owl-video-play-icon"></div>')};if(e.wrap(d("<div/>",{class:"owl-video-wrapper",style:o})),this._core.settings.lazyLoad&&(r="data-src",a="owl-lazy"),s.length)return c(s.attr(r)),s.remove(),!1;"youtube"===t.type?(n="//img.youtube.com/vi/"+t.id+"/hqdefault.jpg",c(n)):"vimeo"===t.type?d.ajax({type:"GET",url:"//vimeo.com/api/v2/video/"+t.id+".json",jsonp:"callback",dataType:"jsonp",success:function(t){n=t[0].thumbnail_large,c(n)}}):"vzaar"===t.type&&d.ajax({type:"GET",url:"//vzaar.com/api/videos/"+t.id+".json",jsonp:"callback",dataType:"jsonp",success:function(t){n=t.framegrab_url,c(n)}})},n.prototype.stop=function(){this._core.trigger("stop",null,"video"),this._playing.find(".owl-video-frame").remove(),this._playing.removeClass("owl-video-playing"),this._playing=null,this._core.leave("playing"),this._core.trigger("stopped",null,"video")},n.prototype.play=function(t){var e,i=d(t.target).closest("."+this._core.settings.itemClass),n=this._videos[i.attr("data-video")],o=n.width||"100%",s=n.height||this._core.$stage.height();this._playing||(this._core.enter("playing"),this._core.trigger("play",null,"video"),i=this._core.items(this._core.relative(i.index())),this._core.reset(i.index()),(e=d('<iframe frameborder="0" allowfullscreen mozallowfullscreen webkitAllowFullScreen ></iframe>')).attr("height",s),e.attr("width",o),"youtube"===n.type?e.attr("src","//www.youtube.com/embed/"+n.id+"?autoplay=1&rel=0&v="+n.id):"vimeo"===n.type?e.attr("src","//player.vimeo.com/video/"+n.id+"?autoplay=1"):"vzaar"===n.type&&e.attr("src","//view.vzaar.com/"+n.id+"/player?autoplay=true"),d(e).wrap('<div class="owl-video-frame" />').insertAfter(i.find(".owl-video")),this._playing=i.addClass("owl-video-playing"))},n.prototype.isInFullScreen=function(){var t=e.fullscreenElement||e.mozFullScreenElement||e.webkitFullscreenElement;return t&&d(t).parent().hasClass("owl-video-frame")},n.prototype.destroy=function(){var t,e;for(t in this._core.$element.off("click.owl.video"),this._handlers)this._core.$element.off(t,this._handlers[t]);for(e in Object.getOwnPropertyNames(this))"function"!=typeof this[e]&&(this[e]=null)},d.fn.owlCarousel.Constructor.Plugins.Video=n}(window.Zepto||window.jQuery,window,document),function(r,t,e,i){var n=function(t){this.core=t,this.core.options=r.extend({},n.Defaults,this.core.options),this.swapping=!0,this.previous=void 0,this.next=void 0,this.handlers={"change.owl.carousel":r.proxy(function(t){t.namespace&&"position"==t.property.name&&(this.previous=this.core.current(),this.next=t.property.value)},this),"drag.owl.carousel dragged.owl.carousel translated.owl.carousel":r.proxy(function(t){t.namespace&&(this.swapping="translated"==t.type)},this),"translate.owl.carousel":r.proxy(function(t){t.namespace&&this.swapping&&(this.core.options.animateOut||this.core.options.animateIn)&&this.swap()},this)},this.core.$element.on(this.handlers)};n.Defaults={animateOut:!1,animateIn:!1},n.prototype.swap=function(){if(1===this.core.settings.items&&r.support.animation&&r.support.transition){this.core.speed(0);var t,e=r.proxy(this.clear,this),i=this.core.$stage.children().eq(this.previous),n=this.core.$stage.children().eq(this.next),o=this.core.settings.animateIn,s=this.core.settings.animateOut;this.core.current()!==this.previous&&(s&&(t=this.core.coordinates(this.previous)-this.core.coordinates(this.next),i.one(r.support.animation.end,e).css({left:t+"px"}).addClass("animated owl-animated-out").addClass(s)),o&&n.one(r.support.animation.end,e).addClass("animated owl-animated-in").addClass(o))}},n.prototype.clear=function(t){r(t.target).css({left:""}).removeClass("animated owl-animated-out owl-animated-in").removeClass(this.core.settings.animateIn).removeClass(this.core.settings.animateOut),this.core.onTransitionEnd()},n.prototype.destroy=function(){var t,e;for(t in this.handlers)this.core.$element.off(t,this.handlers[t]);for(e in Object.getOwnPropertyNames(this))"function"!=typeof this[e]&&(this[e]=null)},r.fn.owlCarousel.Constructor.Plugins.Animate=n}(window.Zepto||window.jQuery,window,document),function(n,o,e,t){var i=function(t){this._core=t,this._call=null,this._time=0,this._timeout=0,this._paused=!0,this._handlers={"changed.owl.carousel":n.proxy(function(t){t.namespace&&"settings"===t.property.name?this._core.settings.autoplay?this.play():this.stop():t.namespace&&"position"===t.property.name&&this._paused&&(this._time=0)},this),"initialized.owl.carousel":n.proxy(function(t){t.namespace&&this._core.settings.autoplay&&this.play()},this),"play.owl.autoplay":n.proxy(function(t,e,i){t.namespace&&this.play(e,i)},this),"stop.owl.autoplay":n.proxy(function(t){t.namespace&&this.stop()},this),"mouseover.owl.autoplay":n.proxy(function(){this._core.settings.autoplayHoverPause&&this._core.is("rotating")&&this.pause()},this),"mouseleave.owl.autoplay":n.proxy(function(){this._core.settings.autoplayHoverPause&&this._core.is("rotating")&&this.play()},this),"touchstart.owl.core":n.proxy(function(){this._core.settings.autoplayHoverPause&&this._core.is("rotating")&&this.pause()},this),"touchend.owl.core":n.proxy(function(){this._core.settings.autoplayHoverPause&&this.play()},this)},this._core.$element.on(this._handlers),this._core.options=n.extend({},i.Defaults,this._core.options)};i.Defaults={autoplay:!1,autoplayTimeout:5e3,autoplayHoverPause:!1,autoplaySpeed:!1},i.prototype._next=function(t){this._call=o.setTimeout(n.proxy(this._next,this,t),this._timeout*(Math.round(this.read()/this._timeout)+1)-this.read()),this._core.is("interacting")||e.hidden||this._core.next(t||this._core.settings.autoplaySpeed)},i.prototype.read=function(){return(new Date).getTime()-this._time},i.prototype.play=function(t,e){var i;this._core.is("rotating")||this._core.enter("rotating"),t=t||this._core.settings.autoplayTimeout,i=Math.min(this._time%(this._timeout||t),t),this._paused?(this._time=this.read(),this._paused=!1):o.clearTimeout(this._call),this._time+=this.read()%t-i,this._timeout=t,this._call=o.setTimeout(n.proxy(this._next,this,e),t-i)},i.prototype.stop=function(){this._core.is("rotating")&&(this._time=0,this._paused=!0,o.clearTimeout(this._call),this._core.leave("rotating"))},i.prototype.pause=function(){this._core.is("rotating")&&!this._paused&&(this._time=this.read(),this._paused=!0,o.clearTimeout(this._call))},i.prototype.destroy=function(){var t,e;for(t in this.stop(),this._handlers)this._core.$element.off(t,this._handlers[t]);for(e in Object.getOwnPropertyNames(this))"function"!=typeof this[e]&&(this[e]=null)},n.fn.owlCarousel.Constructor.Plugins.autoplay=i}(window.Zepto||window.jQuery,window,document),function(s,t,e,i){"use strict";var n=function(t){this._core=t,this._initialized=!1,this._pages=[],this._controls={},this._templates=[],this.$element=this._core.$element,this._overrides={next:this._core.next,prev:this._core.prev,to:this._core.to},this._handlers={"prepared.owl.carousel":s.proxy(function(t){t.namespace&&this._core.settings.dotsData&&this._templates.push('<div class="'+this._core.settings.dotClass+'">'+s(t.content).find("[data-dot]").addBack("[data-dot]").attr("data-dot")+"</div>")},this),"added.owl.carousel":s.proxy(function(t){t.namespace&&this._core.settings.dotsData&&this._templates.splice(t.position,0,this._templates.pop())},this),"remove.owl.carousel":s.proxy(function(t){t.namespace&&this._core.settings.dotsData&&this._templates.splice(t.position,1)},this),"changed.owl.carousel":s.proxy(function(t){t.namespace&&"position"==t.property.name&&this.draw()},this),"initialized.owl.carousel":s.proxy(function(t){t.namespace&&!this._initialized&&(this._core.trigger("initialize",null,"navigation"),this.initialize(),this.update(),this.draw(),this._initialized=!0,this._core.trigger("initialized",null,"navigation"))},this),"refreshed.owl.carousel":s.proxy(function(t){t.namespace&&this._initialized&&(this._core.trigger("refresh",null,"navigation"),this.update(),this.draw(),this._core.trigger("refreshed",null,"navigation"))},this)},this._core.options=s.extend({},n.Defaults,this._core.options),this.$element.on(this._handlers)};n.Defaults={nav:!1,navText:['<span aria-label="Previous">&#x2039;</span>','<span aria-label="Next">&#x203a;</span>'],navSpeed:!1,navElement:'button type="button" role="presentation"',navContainer:!1,navContainerClass:"owl-nav",navClass:["owl-prev","owl-next"],slideBy:1,dotClass:"owl-dot",dotsClass:"owl-dots",dots:!0,dotsEach:!1,dotsData:!1,dotsSpeed:!1,dotsContainer:!1},n.prototype.initialize=function(){var t,i=this._core.settings;for(t in this._controls.$relative=(i.navContainer?s(i.navContainer):s("<div>").addClass(i.navContainerClass).appendTo(this.$element)).addClass("disabled"),this._controls.$previous=s("<"+i.navElement+">").addClass(i.navClass[0]).html(i.navText[0]).prependTo(this._controls.$relative).on("click",s.proxy(function(t){this.prev(i.navSpeed)},this)),this._controls.$next=s("<"+i.navElement+">").addClass(i.navClass[1]).html(i.navText[1]).appendTo(this._controls.$relative).on("click",s.proxy(function(t){this.next(i.navSpeed)},this)),i.dotsData||(this._templates=[s('<button role="button">').addClass(i.dotClass).append(s("<span>")).prop("outerHTML")]),this._controls.$absolute=(i.dotsContainer?s(i.dotsContainer):s("<div>").addClass(i.dotsClass).appendTo(this.$element)).addClass("disabled"),this._controls.$absolute.on("click","button",s.proxy(function(t){var e=s(t.target).parent().is(this._controls.$absolute)?s(t.target).index():s(t.target).parent().index();t.preventDefault(),this.to(e,i.dotsSpeed)},this)),this._overrides)this._core[t]=s.proxy(this[t],this)},n.prototype.destroy=function(){var t,e,i,n,o;for(t in o=this._core.settings,this._handlers)this.$element.off(t,this._handlers[t]);for(e in this._controls)"$relative"===e&&o.navContainer?this._controls[e].html(""):this._controls[e].remove();for(n in this.overides)this._core[n]=this._overrides[n];for(i in Object.getOwnPropertyNames(this))"function"!=typeof this[i]&&(this[i]=null)},n.prototype.update=function(){var t,e,i=this._core.clones().length/2,n=i+this._core.items().length,o=this._core.maximum(!0),s=this._core.settings,r=s.center||s.autoWidth||s.dotsData?1:s.dotsEach||s.items;if("page"!==s.slideBy&&(s.slideBy=Math.min(s.slideBy,s.items)),s.dots||"page"==s.slideBy)for(this._pages=[],t=i,e=0;t<n;t++){if(r<=e||0===e){if(this._pages.push({start:Math.min(o,t-i),end:t-i+r-1}),Math.min(o,t-i)===o)break;e=0,0}e+=this._core.mergers(this._core.relative(t))}},n.prototype.draw=function(){var t,e=this._core.settings,i=this._core.items().length<=e.items,n=this._core.relative(this._core.current()),o=e.loop||e.rewind;this._controls.$relative.toggleClass("disabled",!e.nav||i),e.nav&&(this._controls.$previous.toggleClass("disabled",!o&&n<=this._core.minimum(!0)),this._controls.$next.toggleClass("disabled",!o&&n>=this._core.maximum(!0))),this._controls.$absolute.toggleClass("disabled",!e.dots||i),e.dots&&(t=this._pages.length-this._controls.$absolute.children().length,e.dotsData&&0!==t?this._controls.$absolute.html(this._templates.join("")):0<t?this._controls.$absolute.append(new Array(t+1).join(this._templates[0])):t<0&&this._controls.$absolute.children().slice(t).remove(),this._controls.$absolute.find(".active").removeClass("active"),this._controls.$absolute.children().eq(s.inArray(this.current(),this._pages)).addClass("active"))},n.prototype.onTrigger=function(t){var e=this._core.settings;t.page={index:s.inArray(this.current(),this._pages),count:this._pages.length,size:e&&(e.center||e.autoWidth||e.dotsData?1:e.dotsEach||e.items)}},n.prototype.current=function(){var i=this._core.relative(this._core.current());return s.grep(this._pages,s.proxy(function(t,e){return t.start<=i&&t.end>=i},this)).pop()},n.prototype.getPosition=function(t){var e,i,n=this._core.settings;return"page"==n.slideBy?(e=s.inArray(this.current(),this._pages),i=this._pages.length,t?++e:--e,e=this._pages[(e%i+i)%i].start):(e=this._core.relative(this._core.current()),i=this._core.items().length,t?e+=n.slideBy:e-=n.slideBy),e},n.prototype.next=function(t){s.proxy(this._overrides.to,this._core)(this.getPosition(!0),t)},n.prototype.prev=function(t){s.proxy(this._overrides.to,this._core)(this.getPosition(!1),t)},n.prototype.to=function(t,e,i){var n;!i&&this._pages.length?(n=this._pages.length,s.proxy(this._overrides.to,this._core)(this._pages[(t%n+n)%n].start,e)):s.proxy(this._overrides.to,this._core)(t,e)},s.fn.owlCarousel.Constructor.Plugins.Navigation=n}(window.Zepto||window.jQuery,window,document),function(n,o,t,e){"use strict";var i=function(t){this._core=t,this._hashes={},this.$element=this._core.$element,this._handlers={"initialized.owl.carousel":n.proxy(function(t){t.namespace&&"URLHash"===this._core.settings.startPosition&&n(o).trigger("hashchange.owl.navigation")},this),"prepared.owl.carousel":n.proxy(function(t){if(t.namespace){var e=n(t.content).find("[data-hash]").addBack("[data-hash]").attr("data-hash");if(!e)return;this._hashes[e]=t.content}},this),"changed.owl.carousel":n.proxy(function(t){if(t.namespace&&"position"===t.property.name){var i=this._core.items(this._core.relative(this._core.current())),e=n.map(this._hashes,function(t,e){return t===i?e:null}).join();if(!e||o.location.hash.slice(1)===e)return;o.location.hash=e}},this)},this._core.options=n.extend({},i.Defaults,this._core.options),this.$element.on(this._handlers),n(o).on("hashchange.owl.navigation",n.proxy(function(t){var e=o.location.hash.substring(1),i=this._core.$stage.children(),n=this._hashes[e]&&i.index(this._hashes[e]);void 0!==n&&n!==this._core.current()&&this._core.to(this._core.relative(n),!1,!0)},this))};i.Defaults={URLhashListener:!1},i.prototype.destroy=function(){var t,e;for(t in n(o).off("hashchange.owl.navigation"),this._handlers)this._core.$element.off(t,this._handlers[t]);for(e in Object.getOwnPropertyNames(this))"function"!=typeof this[e]&&(this[e]=null)},n.fn.owlCarousel.Constructor.Plugins.Hash=i}(window.Zepto||window.jQuery,window,document),function(o,t,e,s){function i(t,i){var n=!1,e=t.charAt(0).toUpperCase()+t.slice(1);return o.each((t+" "+a.join(e+" ")+e).split(" "),function(t,e){if(r[e]!==s)return n=!i||e,!1}),n}function n(t){return i(t,!0)}var r=o("<support>").get(0).style,a="Webkit Moz O ms".split(" "),l={transition:{end:{WebkitTransition:"webkitTransitionEnd",MozTransition:"transitionend",OTransition:"oTransitionEnd",transition:"transitionend"}},animation:{end:{WebkitAnimation:"webkitAnimationEnd",MozAnimation:"animationend",OAnimation:"oAnimationEnd",animation:"animationend"}}},c=function(){return!!i("transform")},d=function(){return!!i("perspective")},u=function(){return!!i("animation")};(function(){return!!i("transition")})()&&(o.support.transition=new String(n("transition")),o.support.transition.end=l.transition.end[o.support.transition]),u()&&(o.support.animation=new String(n("animation")),o.support.animation.end=l.animation.end[o.support.animation]),c()&&(o.support.transform=new String(n("transform")),o.support.transform3d=d())}(window.Zepto||window.jQuery,window,document),function(t){"use strict";"function"==typeof define&&define.amd?define(["jquery"],t):"undefined"!=typeof exports?module.exports=t(require("jquery")):t(jQuery)}(function(c){"use strict";var o,r=window.Slick||{};(o=0,r=function(t,e){var i,n=this;n.defaults={accessibility:!0,adaptiveHeight:!1,appendArrows:c(t),appendDots:c(t),arrows:!0,asNavFor:null,prevArrow:'<button class="slick-prev" aria-label="Previous" type="button">Previous</button>',nextArrow:'<button class="slick-next" aria-label="Next" type="button">Next</button>',autoplay:!1,autoplaySpeed:3e3,centerMode:!1,centerPadding:"50px",cssEase:"ease",customPaging:function(t,e){return c('<button type="button" />').text(e+1)},dots:!1,dotsClass:"slick-dots",draggable:!0,easing:"linear",edgeFriction:.35,fade:!1,focusOnSelect:!1,focusOnChange:!1,infinite:!0,initialSlide:0,lazyLoad:"ondemand",mobileFirst:!1,pauseOnHover:!0,pauseOnFocus:!0,pauseOnDotsHover:!1,respondTo:"window",responsive:null,rows:1,rtl:!1,slide:"",slidesPerRow:1,slidesToShow:1,slidesToScroll:1,speed:500,swipe:!0,swipeToSlide:!1,touchMove:!0,touchThreshold:5,useCSS:!0,useTransform:!0,variableWidth:!1,vertical:!1,verticalSwiping:!1,waitForAnimate:!0,zIndex:1e3},n.initials={animating:!1,dragging:!1,autoPlayTimer:null,currentDirection:0,currentLeft:null,currentSlide:0,direction:1,$dots:null,listWidth:null,listHeight:null,loadIndex:0,$nextArrow:null,$prevArrow:null,scrolling:!1,slideCount:null,slideWidth:null,$slideTrack:null,$slides:null,sliding:!1,slideOffset:0,swipeLeft:null,swiping:!1,$list:null,touchObject:{},transformsEnabled:!1,unslicked:!1},c.extend(n,n.initials),n.activeBreakpoint=null,n.animType=null,n.animProp=null,n.breakpoints=[],n.breakpointSettings=[],n.cssTransitions=!1,n.focussed=!1,n.interrupted=!1,n.hidden="hidden",n.paused=!0,n.positionProp=null,n.respondTo=null,n.rowCount=1,n.shouldClick=!0,n.$slider=c(t),n.$slidesCache=null,n.transformType=null,n.transitionType=null,n.visibilityChange="visibilitychange",n.windowWidth=0,n.windowTimer=null,i=c(t).data("slick")||{},n.options=c.extend({},n.defaults,e,i),n.currentSlide=n.options.initialSlide,n.originalSettings=n.options,void 0!==document.mozHidden?(n.hidden="mozHidden",n.visibilityChange="mozvisibilitychange"):void 0!==document.webkitHidden&&(n.hidden="webkitHidden",n.visibilityChange="webkitvisibilitychange"),n.autoPlay=c.proxy(n.autoPlay,n),n.autoPlayClear=c.proxy(n.autoPlayClear,n),n.autoPlayIterator=c.proxy(n.autoPlayIterator,n),n.changeSlide=c.proxy(n.changeSlide,n),n.clickHandler=c.proxy(n.clickHandler,n),n.selectHandler=c.proxy(n.selectHandler,n),n.setPosition=c.proxy(n.setPosition,n),n.swipeHandler=c.proxy(n.swipeHandler,n),n.dragHandler=c.proxy(n.dragHandler,n),n.keyHandler=c.proxy(n.keyHandler,n),n.instanceUid=o++,n.htmlExpr=/^(?:\s*(<[\w\W]+>)[^>]*)$/,n.registerBreakpoints(),n.init(!0)}).prototype.activateADA=function(){this.$slideTrack.find(".slick-active").attr({"aria-hidden":"false"}).find("a, input, button, select").attr({tabindex:"0"})},r.prototype.addSlide=r.prototype.slickAdd=function(t,e,i){var n=this;if("boolean"==typeof e)i=e,e=null;else if(e<0||e>=n.slideCount)return!1;n.unload(),"number"==typeof e?0===e&&0===n.$slides.length?c(t).appendTo(n.$slideTrack):i?c(t).insertBefore(n.$slides.eq(e)):c(t).insertAfter(n.$slides.eq(e)):!0===i?c(t).prependTo(n.$slideTrack):c(t).appendTo(n.$slideTrack),n.$slides=n.$slideTrack.children(this.options.slide),n.$slideTrack.children(this.options.slide).detach(),n.$slideTrack.append(n.$slides),n.$slides.each(function(t,e){c(e).attr("data-slick-index",t)}),n.$slidesCache=n.$slides,n.reinit()},r.prototype.animateHeight=function(){var t=this;if(1===t.options.slidesToShow&&!0===t.options.adaptiveHeight&&!1===t.options.vertical){var e=t.$slides.eq(t.currentSlide).outerHeight(!0);t.$list.animate({height:e},t.options.speed)}},r.prototype.animateSlide=function(t,e){var i={},n=this;n.animateHeight(),!0===n.options.rtl&&!1===n.options.vertical&&(t=-t),!1===n.transformsEnabled?!1===n.options.vertical?n.$slideTrack.animate({left:t},n.options.speed,n.options.easing,e):n.$slideTrack.animate({top:t},n.options.speed,n.options.easing,e):!1===n.cssTransitions?(!0===n.options.rtl&&(n.currentLeft=-n.currentLeft),c({animStart:n.currentLeft}).animate({animStart:t},{duration:n.options.speed,easing:n.options.easing,step:function(t){t=Math.ceil(t),!1===n.options.vertical?i[n.animType]="translate("+t+"px, 0px)":i[n.animType]="translate(0px,"+t+"px)",n.$slideTrack.css(i)},complete:function(){e&&e.call()}})):(n.applyTransition(),t=Math.ceil(t),!1===n.options.vertical?i[n.animType]="translate3d("+t+"px, 0px, 0px)":i[n.animType]="translate3d(0px,"+t+"px, 0px)",n.$slideTrack.css(i),e&&setTimeout(function(){n.disableTransition(),e.call()},n.options.speed))},r.prototype.getNavTarget=function(){var t=this.options.asNavFor;return t&&null!==t&&(t=c(t).not(this.$slider)),t},r.prototype.asNavFor=function(e){var t=this.getNavTarget();null!==t&&"object"==typeof t&&t.each(function(){var t=c(this).slick("getSlick");t.unslicked||t.slideHandler(e,!0)})},r.prototype.applyTransition=function(t){var e=this,i={};!1===e.options.fade?i[e.transitionType]=e.transformType+" "+e.options.speed+"ms "+e.options.cssEase:i[e.transitionType]="opacity "+e.options.speed+"ms "+e.options.cssEase,!1===e.options.fade?e.$slideTrack.css(i):e.$slides.eq(t).css(i)},r.prototype.autoPlay=function(){var t=this;t.autoPlayClear(),t.slideCount>t.options.slidesToShow&&(t.autoPlayTimer=setInterval(t.autoPlayIterator,t.options.autoplaySpeed))},r.prototype.autoPlayClear=function(){this.autoPlayTimer&&clearInterval(this.autoPlayTimer)},r.prototype.autoPlayIterator=function(){var t=this,e=t.currentSlide+t.options.slidesToScroll;t.paused||t.interrupted||t.focussed||(!1===t.options.infinite&&(1===t.direction&&t.currentSlide+1===t.slideCount-1?t.direction=0:0===t.direction&&(e=t.currentSlide-t.options.slidesToScroll,t.currentSlide-1==0&&(t.direction=1))),t.slideHandler(e))},r.prototype.buildArrows=function(){var t=this;!0===t.options.arrows&&(t.$prevArrow=c(t.options.prevArrow).addClass("slick-arrow"),t.$nextArrow=c(t.options.nextArrow).addClass("slick-arrow"),t.slideCount>t.options.slidesToShow?(t.$prevArrow.removeClass("slick-hidden").removeAttr("aria-hidden tabindex"),t.$nextArrow.removeClass("slick-hidden").removeAttr("aria-hidden tabindex"),t.htmlExpr.test(t.options.prevArrow)&&t.$prevArrow.prependTo(t.options.appendArrows),t.htmlExpr.test(t.options.nextArrow)&&t.$nextArrow.appendTo(t.options.appendArrows),!0!==t.options.infinite&&t.$prevArrow.addClass("slick-disabled").attr("aria-disabled","true")):t.$prevArrow.add(t.$nextArrow).addClass("slick-hidden").attr({"aria-disabled":"true",tabindex:"-1"}))},r.prototype.buildDots=function(){var t,e,i=this;if(!0===i.options.dots){for(i.$slider.addClass("slick-dotted"),e=c("<ul />").addClass(i.options.dotsClass),t=0;t<=i.getDotCount();t+=1)e.append(c("<li />").append(i.options.customPaging.call(this,i,t)));i.$dots=e.appendTo(i.options.appendDots),i.$dots.find("li").first().addClass("slick-active")}},r.prototype.buildOut=function(){var t=this;t.$slides=t.$slider.children(t.options.slide+":not(.slick-cloned)").addClass("slick-slide"),t.slideCount=t.$slides.length,t.$slides.each(function(t,e){c(e).attr("data-slick-index",t).data("originalStyling",c(e).attr("style")||"")}),t.$slider.addClass("slick-slider"),t.$slideTrack=0===t.slideCount?c('<div class="slick-track"/>').appendTo(t.$slider):t.$slides.wrapAll('<div class="slick-track"/>').parent(),t.$list=t.$slideTrack.wrap('<div class="slick-list"/>').parent(),t.$slideTrack.css("opacity",0),!0!==t.options.centerMode&&!0!==t.options.swipeToSlide||(t.options.slidesToScroll=1),c("img[data-lazy]",t.$slider).not("[src]").addClass("slick-loading"),t.setupInfinite(),t.buildArrows(),t.buildDots(),t.updateDots(),t.setSlideClasses("number"==typeof t.currentSlide?t.currentSlide:0),!0===t.options.draggable&&t.$list.addClass("draggable")},r.prototype.buildRows=function(){var t,e,i,n,o,s,r,a=this;if(n=document.createDocumentFragment(),s=a.$slider.children(),1<a.options.rows){for(r=a.options.slidesPerRow*a.options.rows,o=Math.ceil(s.length/r),t=0;t<o;t++){var l=document.createElement("div");for(e=0;e<a.options.rows;e++){var c=document.createElement("div");for(i=0;i<a.options.slidesPerRow;i++){var d=t*r+(e*a.options.slidesPerRow+i);s.get(d)&&c.appendChild(s.get(d))}l.appendChild(c)}n.appendChild(l)}a.$slider.empty().append(n),a.$slider.children().children().children().css({width:100/a.options.slidesPerRow+"%",display:"inline-block"})}},r.prototype.checkResponsive=function(t,e){var i,n,o,s=this,r=!1,a=s.$slider.width(),l=window.innerWidth||c(window).width();if("window"===s.respondTo?o=l:"slider"===s.respondTo?o=a:"min"===s.respondTo&&(o=Math.min(l,a)),s.options.responsive&&s.options.responsive.length&&null!==s.options.responsive){for(i in n=null,s.breakpoints)s.breakpoints.hasOwnProperty(i)&&(!1===s.originalSettings.mobileFirst?o<s.breakpoints[i]&&(n=s.breakpoints[i]):o>s.breakpoints[i]&&(n=s.breakpoints[i]));null!==n?null!==s.activeBreakpoint?(n!==s.activeBreakpoint||e)&&(s.activeBreakpoint=n,"unslick"===s.breakpointSettings[n]?s.unslick(n):(s.options=c.extend({},s.originalSettings,s.breakpointSettings[n]),!0===t&&(s.currentSlide=s.options.initialSlide),s.refresh(t)),r=n):(s.activeBreakpoint=n,"unslick"===s.breakpointSettings[n]?s.unslick(n):(s.options=c.extend({},s.originalSettings,s.breakpointSettings[n]),!0===t&&(s.currentSlide=s.options.initialSlide),s.refresh(t)),r=n):null!==s.activeBreakpoint&&(s.activeBreakpoint=null,s.options=s.originalSettings,!0===t&&(s.currentSlide=s.options.initialSlide),s.refresh(t),r=n),t||!1===r||s.$slider.trigger("breakpoint",[s,r])}},r.prototype.changeSlide=function(t,e){var i,n,o=this,s=c(t.currentTarget);switch(s.is("a")&&t.preventDefault(),s.is("li")||(s=s.closest("li")),i=o.slideCount%o.options.slidesToScroll!=0?0:(o.slideCount-o.currentSlide)%o.options.slidesToScroll,t.data.message){case"previous":n=0===i?o.options.slidesToScroll:o.options.slidesToShow-i,o.slideCount>o.options.slidesToShow&&o.slideHandler(o.currentSlide-n,!1,e);break;case"next":n=0===i?o.options.slidesToScroll:i,o.slideCount>o.options.slidesToShow&&o.slideHandler(o.currentSlide+n,!1,e);break;case"index":var r=0===t.data.index?0:t.data.index||s.index()*o.options.slidesToScroll;o.slideHandler(o.checkNavigable(r),!1,e),s.children().trigger("focus");break;default:return}},r.prototype.checkNavigable=function(t){var e,i;if(i=0,t>(e=this.getNavigableIndexes())[e.length-1])t=e[e.length-1];else for(var n in e){if(t<e[n]){t=i;break}i=e[n]}return t},r.prototype.cleanUpEvents=function(){var t=this;t.options.dots&&null!==t.$dots&&(c("li",t.$dots).off("click.slick",t.changeSlide).off("mouseenter.slick",c.proxy(t.interrupt,t,!0)).off("mouseleave.slick",c.proxy(t.interrupt,t,!1)),!0===t.options.accessibility&&t.$dots.off("keydown.slick",t.keyHandler)),t.$slider.off("focus.slick blur.slick"),!0===t.options.arrows&&t.slideCount>t.options.slidesToShow&&(t.$prevArrow&&t.$prevArrow.off("click.slick",t.changeSlide),t.$nextArrow&&t.$nextArrow.off("click.slick",t.changeSlide),!0===t.options.accessibility&&(t.$prevArrow&&t.$prevArrow.off("keydown.slick",t.keyHandler),t.$nextArrow&&t.$nextArrow.off("keydown.slick",t.keyHandler))),t.$list.off("touchstart.slick mousedown.slick",t.swipeHandler),t.$list.off("touchmove.slick mousemove.slick",t.swipeHandler),t.$list.off("touchend.slick mouseup.slick",t.swipeHandler),t.$list.off("touchcancel.slick mouseleave.slick",t.swipeHandler),t.$list.off("click.slick",t.clickHandler),c(document).off(t.visibilityChange,t.visibility),t.cleanUpSlideEvents(),!0===t.options.accessibility&&t.$list.off("keydown.slick",t.keyHandler),!0===t.options.focusOnSelect&&c(t.$slideTrack).children().off("click.slick",t.selectHandler),c(window).off("orientationchange.slick.slick-"+t.instanceUid,t.orientationChange),c(window).off("resize.slick.slick-"+t.instanceUid,t.resize),c("[draggable!=true]",t.$slideTrack).off("dragstart",t.preventDefault),c(window).off("load.slick.slick-"+t.instanceUid,t.setPosition)},r.prototype.cleanUpSlideEvents=function(){var t=this;t.$list.off("mouseenter.slick",c.proxy(t.interrupt,t,!0)),t.$list.off("mouseleave.slick",c.proxy(t.interrupt,t,!1))},r.prototype.cleanUpRows=function(){var t;1<this.options.rows&&((t=this.$slides.children().children()).removeAttr("style"),this.$slider.empty().append(t))},r.prototype.clickHandler=function(t){!1===this.shouldClick&&(t.stopImmediatePropagation(),t.stopPropagation(),t.preventDefault())},r.prototype.destroy=function(t){var e=this;e.autoPlayClear(),e.touchObject={},e.cleanUpEvents(),c(".slick-cloned",e.$slider).detach(),e.$dots&&e.$dots.remove(),e.$prevArrow&&e.$prevArrow.length&&(e.$prevArrow.removeClass("slick-disabled slick-arrow slick-hidden").removeAttr("aria-hidden aria-disabled tabindex").css("display",""),e.htmlExpr.test(e.options.prevArrow)&&e.$prevArrow.remove()),e.$nextArrow&&e.$nextArrow.length&&(e.$nextArrow.removeClass("slick-disabled slick-arrow slick-hidden").removeAttr("aria-hidden aria-disabled tabindex").css("display",""),e.htmlExpr.test(e.options.nextArrow)&&e.$nextArrow.remove()),e.$slides&&(e.$slides.removeClass("slick-slide slick-active slick-center slick-visible slick-current").removeAttr("aria-hidden").removeAttr("data-slick-index").each(function(){c(this).attr("style",c(this).data("originalStyling"))}),e.$slideTrack.children(this.options.slide).detach(),e.$slideTrack.detach(),e.$list.detach(),e.$slider.append(e.$slides)),e.cleanUpRows(),e.$slider.removeClass("slick-slider"),e.$slider.removeClass("slick-initialized"),e.$slider.removeClass("slick-dotted"),e.unslicked=!0,t||e.$slider.trigger("destroy",[e])},r.prototype.disableTransition=function(t){var e={};e[this.transitionType]="",!1===this.options.fade?this.$slideTrack.css(e):this.$slides.eq(t).css(e)},r.prototype.fadeSlide=function(t,e){var i=this;!1===i.cssTransitions?(i.$slides.eq(t).css({zIndex:i.options.zIndex}),i.$slides.eq(t).animate({opacity:1},i.options.speed,i.options.easing,e)):(i.applyTransition(t),i.$slides.eq(t).css({opacity:1,zIndex:i.options.zIndex}),e&&setTimeout(function(){i.disableTransition(t),e.call()},i.options.speed))},r.prototype.fadeSlideOut=function(t){var e=this;!1===e.cssTransitions?e.$slides.eq(t).animate({opacity:0,zIndex:e.options.zIndex-2},e.options.speed,e.options.easing):(e.applyTransition(t),e.$slides.eq(t).css({opacity:0,zIndex:e.options.zIndex-2}))},r.prototype.filterSlides=r.prototype.slickFilter=function(t){var e=this;null!==t&&(e.$slidesCache=e.$slides,e.unload(),e.$slideTrack.children(this.options.slide).detach(),e.$slidesCache.filter(t).appendTo(e.$slideTrack),e.reinit())},r.prototype.focusHandler=function(){var i=this;i.$slider.off("focus.slick blur.slick").on("focus.slick blur.slick","*",function(t){t.stopImmediatePropagation();var e=c(this);setTimeout(function(){i.options.pauseOnFocus&&(i.focussed=e.is(":focus"),i.autoPlay())},0)})},r.prototype.getCurrent=r.prototype.slickCurrentSlide=function(){return this.currentSlide},r.prototype.getDotCount=function(){var t=this,e=0,i=0,n=0;if(!0===t.options.infinite)if(t.slideCount<=t.options.slidesToShow)++n;else for(;e<t.slideCount;)++n,e=i+t.options.slidesToScroll,i+=t.options.slidesToScroll<=t.options.slidesToShow?t.options.slidesToScroll:t.options.slidesToShow;else if(!0===t.options.centerMode)n=t.slideCount;else if(t.options.asNavFor)for(;e<t.slideCount;)++n,e=i+t.options.slidesToScroll,i+=t.options.slidesToScroll<=t.options.slidesToShow?t.options.slidesToScroll:t.options.slidesToShow;else n=1+Math.ceil((t.slideCount-t.options.slidesToShow)/t.options.slidesToScroll);return n-1},r.prototype.getLeft=function(t){var e,i,n,o,s=this,r=0;return s.slideOffset=0,i=s.$slides.first().outerHeight(!0),!0===s.options.infinite?(s.slideCount>s.options.slidesToShow&&(s.slideOffset=s.slideWidth*s.options.slidesToShow*-1,o=-1,!0===s.options.vertical&&!0===s.options.centerMode&&(2===s.options.slidesToShow?o=-1.5:1===s.options.slidesToShow&&(o=-2)),r=i*s.options.slidesToShow*o),s.slideCount%s.options.slidesToScroll!=0&&t+s.options.slidesToScroll>s.slideCount&&s.slideCount>s.options.slidesToShow&&(t>s.slideCount?(s.slideOffset=(s.options.slidesToShow-(t-s.slideCount))*s.slideWidth*-1,r=(s.options.slidesToShow-(t-s.slideCount))*i*-1):(s.slideOffset=s.slideCount%s.options.slidesToScroll*s.slideWidth*-1,r=s.slideCount%s.options.slidesToScroll*i*-1))):t+s.options.slidesToShow>s.slideCount&&(s.slideOffset=(t+s.options.slidesToShow-s.slideCount)*s.slideWidth,r=(t+s.options.slidesToShow-s.slideCount)*i),s.slideCount<=s.options.slidesToShow&&(r=s.slideOffset=0),!0===s.options.centerMode&&s.slideCount<=s.options.slidesToShow?s.slideOffset=s.slideWidth*Math.floor(s.options.slidesToShow)/2-s.slideWidth*s.slideCount/2:!0===s.options.centerMode&&!0===s.options.infinite?s.slideOffset+=s.slideWidth*Math.floor(s.options.slidesToShow/2)-s.slideWidth:!0===s.options.centerMode&&(s.slideOffset=0,s.slideOffset+=s.slideWidth*Math.floor(s.options.slidesToShow/2)),e=!1===s.options.vertical?t*s.slideWidth*-1+s.slideOffset:t*i*-1+r,!0===s.options.variableWidth&&(n=s.slideCount<=s.options.slidesToShow||!1===s.options.infinite?s.$slideTrack.children(".slick-slide").eq(t):s.$slideTrack.children(".slick-slide").eq(t+s.options.slidesToShow),e=!0===s.options.rtl?n[0]?-1*(s.$slideTrack.width()-n[0].offsetLeft-n.width()):0:n[0]?-1*n[0].offsetLeft:0,!0===s.options.centerMode&&(n=s.slideCount<=s.options.slidesToShow||!1===s.options.infinite?s.$slideTrack.children(".slick-slide").eq(t):s.$slideTrack.children(".slick-slide").eq(t+s.options.slidesToShow+1),e=!0===s.options.rtl?n[0]?-1*(s.$slideTrack.width()-n[0].offsetLeft-n.width()):0:n[0]?-1*n[0].offsetLeft:0,e+=(s.$list.width()-n.outerWidth())/2)),e},r.prototype.getOption=r.prototype.slickGetOption=function(t){return this.options[t]},r.prototype.getNavigableIndexes=function(){var t,e=this,i=0,n=0,o=[];for(!1===e.options.infinite?t=e.slideCount:(i=-1*e.options.slidesToScroll,n=-1*e.options.slidesToScroll,t=2*e.slideCount);i<t;)o.push(i),i=n+e.options.slidesToScroll,n+=e.options.slidesToScroll<=e.options.slidesToShow?e.options.slidesToScroll:e.options.slidesToShow;return o},r.prototype.getSlick=function(){return this},r.prototype.getSlideCount=function(){var i,n,o=this;return n=!0===o.options.centerMode?o.slideWidth*Math.floor(o.options.slidesToShow/2):0,!0===o.options.swipeToSlide?(o.$slideTrack.find(".slick-slide").each(function(t,e){if(e.offsetLeft-n+c(e).outerWidth()/2>-1*o.swipeLeft)return i=e,!1}),Math.abs(c(i).attr("data-slick-index")-o.currentSlide)||1):o.options.slidesToScroll},r.prototype.goTo=r.prototype.slickGoTo=function(t,e){this.changeSlide({data:{message:"index",index:parseInt(t)}},e)},r.prototype.init=function(t){var e=this;c(e.$slider).hasClass("slick-initialized")||(c(e.$slider).addClass("slick-initialized"),e.buildRows(),e.buildOut(),e.setProps(),e.startLoad(),e.loadSlider(),e.initializeEvents(),e.updateArrows(),e.updateDots(),e.checkResponsive(!0),e.focusHandler()),t&&e.$slider.trigger("init",[e]),!0===e.options.accessibility&&e.initADA(),e.options.autoplay&&(e.paused=!1,e.autoPlay())},r.prototype.initADA=function(){var i=this,n=Math.ceil(i.slideCount/i.options.slidesToShow),o=i.getNavigableIndexes().filter(function(t){return 0<=t&&t<i.slideCount});i.$slides.add(i.$slideTrack.find(".slick-cloned")).attr({"aria-hidden":"true",tabindex:"-1"}).find("a, input, button, select").attr({tabindex:"-1"}),null!==i.$dots&&(i.$slides.not(i.$slideTrack.find(".slick-cloned")).each(function(t){var e=o.indexOf(t);c(this).attr({role:"tabpanel",id:"slick-slide"+i.instanceUid+t,tabindex:-1}),-1!==e&&c(this).attr({"aria-describedby":"slick-slide-control"+i.instanceUid+e})}),i.$dots.attr("role","tablist").find("li").each(function(t){var e=o[t];c(this).attr({role:"presentation"}),c(this).find("button").first().attr({role:"tab",id:"slick-slide-control"+i.instanceUid+t,"aria-controls":"slick-slide"+i.instanceUid+e,"aria-label":t+1+" of "+n,"aria-selected":null,tabindex:"-1"})}).eq(i.currentSlide).find("button").attr({"aria-selected":"true",tabindex:"0"}).end());for(var t=i.currentSlide,e=t+i.options.slidesToShow;t<e;t++)i.$slides.eq(t).attr("tabindex",0);i.activateADA()},r.prototype.initArrowEvents=function(){var t=this;!0===t.options.arrows&&t.slideCount>t.options.slidesToShow&&(t.$prevArrow.off("click.slick").on("click.slick",{message:"previous"},t.changeSlide),t.$nextArrow.off("click.slick").on("click.slick",{message:"next"},t.changeSlide),!0===t.options.accessibility&&(t.$prevArrow.on("keydown.slick",t.keyHandler),t.$nextArrow.on("keydown.slick",t.keyHandler)))},r.prototype.initDotEvents=function(){var t=this;!0===t.options.dots&&(c("li",t.$dots).on("click.slick",{message:"index"},t.changeSlide),!0===t.options.accessibility&&t.$dots.on("keydown.slick",t.keyHandler)),!0===t.options.dots&&!0===t.options.pauseOnDotsHover&&c("li",t.$dots).on("mouseenter.slick",c.proxy(t.interrupt,t,!0)).on("mouseleave.slick",c.proxy(t.interrupt,t,!1))},r.prototype.initSlideEvents=function(){var t=this;t.options.pauseOnHover&&(t.$list.on("mouseenter.slick",c.proxy(t.interrupt,t,!0)),t.$list.on("mouseleave.slick",c.proxy(t.interrupt,t,!1)))},r.prototype.initializeEvents=function(){var t=this;t.initArrowEvents(),t.initDotEvents(),t.initSlideEvents(),t.$list.on("touchstart.slick mousedown.slick",{action:"start"},t.swipeHandler),t.$list.on("touchmove.slick mousemove.slick",{action:"move"},t.swipeHandler),t.$list.on("touchend.slick mouseup.slick",{action:"end"},t.swipeHandler),t.$list.on("touchcancel.slick mouseleave.slick",{action:"end"},t.swipeHandler),t.$list.on("click.slick",t.clickHandler),c(document).on(t.visibilityChange,c.proxy(t.visibility,t)),!0===t.options.accessibility&&t.$list.on("keydown.slick",t.keyHandler),!0===t.options.focusOnSelect&&c(t.$slideTrack).children().on("click.slick",t.selectHandler),c(window).on("orientationchange.slick.slick-"+t.instanceUid,c.proxy(t.orientationChange,t)),c(window).on("resize.slick.slick-"+t.instanceUid,c.proxy(t.resize,t)),c("[draggable!=true]",t.$slideTrack).on("dragstart",t.preventDefault),c(window).on("load.slick.slick-"+t.instanceUid,t.setPosition),c(t.setPosition)},r.prototype.initUI=function(){var t=this;!0===t.options.arrows&&t.slideCount>t.options.slidesToShow&&(t.$prevArrow.show(),t.$nextArrow.show()),!0===t.options.dots&&t.slideCount>t.options.slidesToShow&&t.$dots.show()},r.prototype.keyHandler=function(t){var e=this;t.target.tagName.match("TEXTAREA|INPUT|SELECT")||(37===t.keyCode&&!0===e.options.accessibility?e.changeSlide({data:{message:!0===e.options.rtl?"next":"previous"}}):39===t.keyCode&&!0===e.options.accessibility&&e.changeSlide({data:{message:!0===e.options.rtl?"previous":"next"}}))},r.prototype.lazyLoad=function(){function t(t){c("img[data-lazy]",t).each(function(){var t=c(this),e=c(this).attr("data-lazy"),i=c(this).attr("data-srcset"),n=c(this).attr("data-sizes")||s.$slider.attr("data-sizes"),o=document.createElement("img");o.onload=function(){t.animate({opacity:0},100,function(){i&&(t.attr("srcset",i),n&&t.attr("sizes",n)),t.attr("src",e).animate({opacity:1},200,function(){t.removeAttr("data-lazy data-srcset data-sizes").removeClass("slick-loading")}),s.$slider.trigger("lazyLoaded",[s,t,e])})},o.onerror=function(){t.removeAttr("data-lazy").removeClass("slick-loading").addClass("slick-lazyload-error"),s.$slider.trigger("lazyLoadError",[s,t,e])},o.src=e})}var e,i,n,s=this;if(!0===s.options.centerMode?!0===s.options.infinite?n=(i=s.currentSlide+(s.options.slidesToShow/2+1))+s.options.slidesToShow+2:(i=Math.max(0,s.currentSlide-(s.options.slidesToShow/2+1)),n=s.options.slidesToShow/2+1+2+s.currentSlide):(i=s.options.infinite?s.options.slidesToShow+s.currentSlide:s.currentSlide,n=Math.ceil(i+s.options.slidesToShow),!0===s.options.fade&&(0<i&&i--,n<=s.slideCount&&n++)),e=s.$slider.find(".slick-slide").slice(i,n),"anticipated"===s.options.lazyLoad)for(var o=i-1,r=n,a=s.$slider.find(".slick-slide"),l=0;l<s.options.slidesToScroll;l++)o<0&&(o=s.slideCount-1),e=(e=e.add(a.eq(o))).add(a.eq(r)),o--,r++;t(e),s.slideCount<=s.options.slidesToShow?t(s.$slider.find(".slick-slide")):s.currentSlide>=s.slideCount-s.options.slidesToShow?t(s.$slider.find(".slick-cloned").slice(0,s.options.slidesToShow)):0===s.currentSlide&&t(s.$slider.find(".slick-cloned").slice(-1*s.options.slidesToShow))},r.prototype.loadSlider=function(){var t=this;t.setPosition(),t.$slideTrack.css({opacity:1}),t.$slider.removeClass("slick-loading"),t.initUI(),"progressive"===t.options.lazyLoad&&t.progressiveLazyLoad()},r.prototype.next=r.prototype.slickNext=function(){this.changeSlide({data:{message:"next"}})},r.prototype.orientationChange=function(){this.checkResponsive(),this.setPosition()},r.prototype.pause=r.prototype.slickPause=function(){this.autoPlayClear(),this.paused=!0},r.prototype.play=r.prototype.slickPlay=function(){var t=this;t.autoPlay(),t.options.autoplay=!0,t.paused=!1,t.focussed=!1,t.interrupted=!1},r.prototype.postSlide=function(t){var e=this;e.unslicked||(e.$slider.trigger("afterChange",[e,t]),e.animating=!1,e.slideCount>e.options.slidesToShow&&e.setPosition(),e.swipeLeft=null,e.options.autoplay&&e.autoPlay(),!0===e.options.accessibility&&(e.initADA(),e.options.focusOnChange&&c(e.$slides.get(e.currentSlide)).attr("tabindex",0).focus()))},r.prototype.prev=r.prototype.slickPrev=function(){this.changeSlide({data:{message:"previous"}})},r.prototype.preventDefault=function(t){t.preventDefault()},r.prototype.progressiveLazyLoad=function(t){t=t||1;var e,i,n,o,s,r=this,a=c("img[data-lazy]",r.$slider);a.length?(e=a.first(),i=e.attr("data-lazy"),n=e.attr("data-srcset"),o=e.attr("data-sizes")||r.$slider.attr("data-sizes"),(s=document.createElement("img")).onload=function(){n&&(e.attr("srcset",n),o&&e.attr("sizes",o)),e.attr("src",i).removeAttr("data-lazy data-srcset data-sizes").removeClass("slick-loading"),!0===r.options.adaptiveHeight&&r.setPosition(),r.$slider.trigger("lazyLoaded",[r,e,i]),r.progressiveLazyLoad()},s.onerror=function(){t<3?setTimeout(function(){r.progressiveLazyLoad(t+1)},500):(e.removeAttr("data-lazy").removeClass("slick-loading").addClass("slick-lazyload-error"),r.$slider.trigger("lazyLoadError",[r,e,i]),r.progressiveLazyLoad())},s.src=i):r.$slider.trigger("allImagesLoaded",[r])},r.prototype.refresh=function(t){var e,i,n=this;i=n.slideCount-n.options.slidesToShow,!n.options.infinite&&n.currentSlide>i&&(n.currentSlide=i),n.slideCount<=n.options.slidesToShow&&(n.currentSlide=0),e=n.currentSlide,n.destroy(!0),c.extend(n,n.initials,{currentSlide:e}),n.init(),t||n.changeSlide({data:{message:"index",index:e}},!1)},r.prototype.registerBreakpoints=function(){var t,e,i,n=this,o=n.options.responsive||null;if("array"===c.type(o)&&o.length){for(t in n.respondTo=n.options.respondTo||"window",o)if(i=n.breakpoints.length-1,o.hasOwnProperty(t)){for(e=o[t].breakpoint;0<=i;)n.breakpoints[i]&&n.breakpoints[i]===e&&n.breakpoints.splice(i,1),i--;n.breakpoints.push(e),n.breakpointSettings[e]=o[t].settings}n.breakpoints.sort(function(t,e){return n.options.mobileFirst?t-e:e-t})}},r.prototype.reinit=function(){var t=this;t.$slides=t.$slideTrack.children(t.options.slide).addClass("slick-slide"),t.slideCount=t.$slides.length,t.currentSlide>=t.slideCount&&0!==t.currentSlide&&(t.currentSlide=t.currentSlide-t.options.slidesToScroll),t.slideCount<=t.options.slidesToShow&&(t.currentSlide=0),t.registerBreakpoints(),t.setProps(),t.setupInfinite(),t.buildArrows(),t.updateArrows(),t.initArrowEvents(),t.buildDots(),t.updateDots(),t.initDotEvents(),t.cleanUpSlideEvents(),t.initSlideEvents(),t.checkResponsive(!1,!0),!0===t.options.focusOnSelect&&c(t.$slideTrack).children().on("click.slick",t.selectHandler),t.setSlideClasses("number"==typeof t.currentSlide?t.currentSlide:0),t.setPosition(),t.focusHandler(),t.paused=!t.options.autoplay,t.autoPlay(),t.$slider.trigger("reInit",[t])},r.prototype.resize=function(){var t=this;c(window).width()!==t.windowWidth&&(clearTimeout(t.windowDelay),t.windowDelay=window.setTimeout(function(){t.windowWidth=c(window).width(),t.checkResponsive(),t.unslicked||t.setPosition()},50))},r.prototype.removeSlide=r.prototype.slickRemove=function(t,e,i){var n=this;if(t="boolean"==typeof t?!0===(e=t)?0:n.slideCount-1:!0===e?--t:t,n.slideCount<1||t<0||t>n.slideCount-1)return!1;n.unload(),!0===i?n.$slideTrack.children().remove():n.$slideTrack.children(this.options.slide).eq(t).remove(),n.$slides=n.$slideTrack.children(this.options.slide),n.$slideTrack.children(this.options.slide).detach(),n.$slideTrack.append(n.$slides),n.$slidesCache=n.$slides,n.reinit()},r.prototype.setCSS=function(t){var e,i,n=this,o={};!0===n.options.rtl&&(t=-t),e="left"==n.positionProp?Math.ceil(t)+"px":"0px",i="top"==n.positionProp?Math.ceil(t)+"px":"0px",o[n.positionProp]=t,!1===n.transformsEnabled||(!(o={})===n.cssTransitions?o[n.animType]="translate("+e+", "+i+")":o[n.animType]="translate3d("+e+", "+i+", 0px)"),n.$slideTrack.css(o)},r.prototype.setDimensions=function(){var t=this;!1===t.options.vertical?!0===t.options.centerMode&&t.$list.css({padding:"0px "+t.options.centerPadding}):(t.$list.height(t.$slides.first().outerHeight(!0)*t.options.slidesToShow),!0===t.options.centerMode&&t.$list.css({padding:t.options.centerPadding+" 0px"})),t.listWidth=t.$list.width(),t.listHeight=t.$list.height(),!1===t.options.vertical&&!1===t.options.variableWidth?(t.slideWidth=Math.ceil(t.listWidth/t.options.slidesToShow),t.$slideTrack.width(Math.ceil(t.slideWidth*t.$slideTrack.children(".slick-slide").length))):!0===t.options.variableWidth?t.$slideTrack.width(5e3*t.slideCount):(t.slideWidth=Math.ceil(t.listWidth),t.$slideTrack.height(Math.ceil(t.$slides.first().outerHeight(!0)*t.$slideTrack.children(".slick-slide").length)));var e=t.$slides.first().outerWidth(!0)-t.$slides.first().width();!1===t.options.variableWidth&&t.$slideTrack.children(".slick-slide").width(t.slideWidth-e)},r.prototype.setFade=function(){var i,n=this;n.$slides.each(function(t,e){i=n.slideWidth*t*-1,!0===n.options.rtl?c(e).css({position:"relative",right:i,top:0,zIndex:n.options.zIndex-2,opacity:0}):c(e).css({position:"relative",left:i,top:0,zIndex:n.options.zIndex-2,opacity:0})}),n.$slides.eq(n.currentSlide).css({zIndex:n.options.zIndex-1,opacity:1})},r.prototype.setHeight=function(){var t=this;if(1===t.options.slidesToShow&&!0===t.options.adaptiveHeight&&!1===t.options.vertical){var e=t.$slides.eq(t.currentSlide).outerHeight(!0);t.$list.css("height",e)}},r.prototype.setOption=r.prototype.slickSetOption=function(){var t,e,i,n,o,s=this,r=!1;if("object"===c.type(arguments[0])?(i=arguments[0],r=arguments[1],o="multiple"):"string"===c.type(arguments[0])&&(i=arguments[0],n=arguments[1],r=arguments[2],"responsive"===arguments[0]&&"array"===c.type(arguments[1])?o="responsive":void 0!==arguments[1]&&(o="single")),"single"===o)s.options[i]=n;else if("multiple"===o)c.each(i,function(t,e){s.options[t]=e});else if("responsive"===o)for(e in n)if("array"!==c.type(s.options.responsive))s.options.responsive=[n[e]];else{for(t=s.options.responsive.length-1;0<=t;)s.options.responsive[t].breakpoint===n[e].breakpoint&&s.options.responsive.splice(t,1),t--;s.options.responsive.push(n[e])}r&&(s.unload(),s.reinit())},r.prototype.setPosition=function(){var t=this;t.setDimensions(),t.setHeight(),!1===t.options.fade?t.setCSS(t.getLeft(t.currentSlide)):t.setFade(),t.$slider.trigger("setPosition",[t])},r.prototype.setProps=function(){var t=this,e=document.body.style;t.positionProp=!0===t.options.vertical?"top":"left","top"===t.positionProp?t.$slider.addClass("slick-vertical"):t.$slider.removeClass("slick-vertical"),void 0===e.WebkitTransition&&void 0===e.MozTransition&&void 0===e.msTransition||!0===t.options.useCSS&&(t.cssTransitions=!0),t.options.fade&&("number"==typeof t.options.zIndex?t.options.zIndex<3&&(t.options.zIndex=3):t.options.zIndex=t.defaults.zIndex),void 0!==e.OTransform&&(t.animType="OTransform",t.transformType="-o-transform",t.transitionType="OTransition",void 0===e.perspectiveProperty&&void 0===e.webkitPerspective&&(t.animType=!1)),void 0!==e.MozTransform&&(t.animType="MozTransform",t.transformType="-moz-transform",t.transitionType="MozTransition",void 0===e.perspectiveProperty&&void 0===e.MozPerspective&&(t.animType=!1)),void 0!==e.webkitTransform&&(t.animType="webkitTransform",t.transformType="-webkit-transform",t.transitionType="webkitTransition",void 0===e.perspectiveProperty&&void 0===e.webkitPerspective&&(t.animType=!1)),void 0!==e.msTransform&&(t.animType="msTransform",t.transformType="-ms-transform",t.transitionType="msTransition",void 0===e.msTransform&&(t.animType=!1)),void 0!==e.transform&&!1!==t.animType&&(t.animType="transform",t.transformType="transform",t.transitionType="transition"),t.transformsEnabled=t.options.useTransform&&null!==t.animType&&!1!==t.animType},r.prototype.setSlideClasses=function(t){var e,i,n,o,s=this;if(i=s.$slider.find(".slick-slide").removeClass("slick-active slick-center slick-current").attr("aria-hidden","true"),s.$slides.eq(t).addClass("slick-current"),!0===s.options.centerMode){var r=s.options.slidesToShow%2==0?1:0;e=Math.floor(s.options.slidesToShow/2),!0===s.options.infinite&&(e<=t&&t<=s.slideCount-1-e?s.$slides.slice(t-e+r,t+e+1).addClass("slick-active").attr("aria-hidden","false"):(n=s.options.slidesToShow+t,i.slice(n-e+1+r,n+e+2).addClass("slick-active").attr("aria-hidden","false")),0===t?i.eq(i.length-1-s.options.slidesToShow).addClass("slick-center"):t===s.slideCount-1&&i.eq(s.options.slidesToShow).addClass("slick-center")),s.$slides.eq(t).addClass("slick-center")}else 0<=t&&t<=s.slideCount-s.options.slidesToShow?s.$slides.slice(t,t+s.options.slidesToShow).addClass("slick-active").attr("aria-hidden","false"):i.length<=s.options.slidesToShow?i.addClass("slick-active").attr("aria-hidden","false"):(o=s.slideCount%s.options.slidesToShow,n=!0===s.options.infinite?s.options.slidesToShow+t:t,s.options.slidesToShow==s.options.slidesToScroll&&s.slideCount-t<s.options.slidesToShow?i.slice(n-(s.options.slidesToShow-o),n+o).addClass("slick-active").attr("aria-hidden","false"):i.slice(n,n+s.options.slidesToShow).addClass("slick-active").attr("aria-hidden","false"));"ondemand"!==s.options.lazyLoad&&"anticipated"!==s.options.lazyLoad||s.lazyLoad()},r.prototype.setupInfinite=function(){var t,e,i,n=this;if(!0===n.options.fade&&(n.options.centerMode=!1),!0===n.options.infinite&&!1===n.options.fade&&(e=null,n.slideCount>n.options.slidesToShow)){for(i=!0===n.options.centerMode?n.options.slidesToShow+1:n.options.slidesToShow,t=n.slideCount;t>n.slideCount-i;t-=1)e=t-1,c(n.$slides[e]).clone(!0).attr("id","").attr("data-slick-index",e-n.slideCount).prependTo(n.$slideTrack).addClass("slick-cloned");for(t=0;t<i+n.slideCount;t+=1)e=t,c(n.$slides[e]).clone(!0).attr("id","").attr("data-slick-index",e+n.slideCount).appendTo(n.$slideTrack).addClass("slick-cloned");n.$slideTrack.find(".slick-cloned").find("[id]").each(function(){c(this).attr("id","")})}},r.prototype.interrupt=function(t){t||this.autoPlay(),this.interrupted=t},r.prototype.selectHandler=function(t){var e=c(t.target).is(".slick-slide")?c(t.target):c(t.target).parents(".slick-slide"),i=parseInt(e.attr("data-slick-index"));i||(i=0),this.slideCount<=this.options.slidesToShow?this.slideHandler(i,!1,!0):this.slideHandler(i)},r.prototype.slideHandler=function(t,e,i){var n,o,s,r,a,l=null,c=this;if(e=e||!1,!(!0===c.animating&&!0===c.options.waitForAnimate||!0===c.options.fade&&c.currentSlide===t))if(!1===e&&c.asNavFor(t),n=t,l=c.getLeft(n),r=c.getLeft(c.currentSlide),c.currentLeft=null===c.swipeLeft?r:c.swipeLeft,!1===c.options.infinite&&!1===c.options.centerMode&&(t<0||t>c.getDotCount()*c.options.slidesToScroll))!1===c.options.fade&&(n=c.currentSlide,!0!==i?c.animateSlide(r,function(){c.postSlide(n)}):c.postSlide(n));else if(!1===c.options.infinite&&!0===c.options.centerMode&&(t<0||t>c.slideCount-c.options.slidesToScroll))!1===c.options.fade&&(n=c.currentSlide,!0!==i?c.animateSlide(r,function(){c.postSlide(n)}):c.postSlide(n));else{if(c.options.autoplay&&clearInterval(c.autoPlayTimer),o=n<0?c.slideCount%c.options.slidesToScroll!=0?c.slideCount-c.slideCount%c.options.slidesToScroll:c.slideCount+n:n>=c.slideCount?c.slideCount%c.options.slidesToScroll!=0?0:n-c.slideCount:n,c.animating=!0,c.$slider.trigger("beforeChange",[c,c.currentSlide,o]),s=c.currentSlide,c.currentSlide=o,c.setSlideClasses(c.currentSlide),c.options.asNavFor&&(a=(a=c.getNavTarget()).slick("getSlick")).slideCount<=a.options.slidesToShow&&a.setSlideClasses(c.currentSlide),c.updateDots(),c.updateArrows(),!0===c.options.fade)return!0!==i?(c.fadeSlideOut(s),c.fadeSlide(o,function(){c.postSlide(o)})):c.postSlide(o),void c.animateHeight();!0!==i?c.animateSlide(l,function(){c.postSlide(o)}):c.postSlide(o)}},r.prototype.startLoad=function(){var t=this;!0===t.options.arrows&&t.slideCount>t.options.slidesToShow&&(t.$prevArrow.hide(),t.$nextArrow.hide()),!0===t.options.dots&&t.slideCount>t.options.slidesToShow&&t.$dots.hide(),t.$slider.addClass("slick-loading")},r.prototype.swipeDirection=function(){var t,e,i,n,o=this;return t=o.touchObject.startX-o.touchObject.curX,e=o.touchObject.startY-o.touchObject.curY,i=Math.atan2(e,t),(n=Math.round(180*i/Math.PI))<0&&(n=360-Math.abs(n)),n<=45&&0<=n?!1===o.options.rtl?"left":"right":n<=360&&315<=n?!1===o.options.rtl?"left":"right":135<=n&&n<=225?!1===o.options.rtl?"right":"left":!0===o.options.verticalSwiping?35<=n&&n<=135?"down":"up":"vertical"},r.prototype.swipeEnd=function(t){var e,i,n=this;if(n.dragging=!1,n.swiping=!1,n.scrolling)return n.scrolling=!1;if(n.interrupted=!1,n.shouldClick=!(10<n.touchObject.swipeLength),void 0===n.touchObject.curX)return!1;if(!0===n.touchObject.edgeHit&&n.$slider.trigger("edge",[n,n.swipeDirection()]),n.touchObject.swipeLength>=n.touchObject.minSwipe){switch(i=n.swipeDirection()){case"left":case"down":e=n.options.swipeToSlide?n.checkNavigable(n.currentSlide+n.getSlideCount()):n.currentSlide+n.getSlideCount(),n.currentDirection=0;break;case"right":case"up":e=n.options.swipeToSlide?n.checkNavigable(n.currentSlide-n.getSlideCount()):n.currentSlide-n.getSlideCount(),n.currentDirection=1}"vertical"!=i&&(n.slideHandler(e),n.touchObject={},n.$slider.trigger("swipe",[n,i]))}else n.touchObject.startX!==n.touchObject.curX&&(n.slideHandler(n.currentSlide),n.touchObject={})},r.prototype.swipeHandler=function(t){var e=this;if(!(!1===e.options.swipe||"ontouchend"in document&&!1===e.options.swipe||!1===e.options.draggable&&-1!==t.type.indexOf("mouse")))switch(e.touchObject.fingerCount=t.originalEvent&&void 0!==t.originalEvent.touches?t.originalEvent.touches.length:1,e.touchObject.minSwipe=e.listWidth/e.options.touchThreshold,!0===e.options.verticalSwiping&&(e.touchObject.minSwipe=e.listHeight/e.options.touchThreshold),t.data.action){case"start":e.swipeStart(t);break;case"move":e.swipeMove(t);break;case"end":e.swipeEnd(t)}},r.prototype.swipeMove=function(t){var e,i,n,o,s,r,a=this;return s=void 0!==t.originalEvent?t.originalEvent.touches:null,!(!a.dragging||a.scrolling||s&&1!==s.length)&&(e=a.getLeft(a.currentSlide),a.touchObject.curX=void 0!==s?s[0].pageX:t.clientX,a.touchObject.curY=void 0!==s?s[0].pageY:t.clientY,a.touchObject.swipeLength=Math.round(Math.sqrt(Math.pow(a.touchObject.curX-a.touchObject.startX,2))),r=Math.round(Math.sqrt(Math.pow(a.touchObject.curY-a.touchObject.startY,2))),!a.options.verticalSwiping&&!a.swiping&&4<r?!(a.scrolling=!0):(!0===a.options.verticalSwiping&&(a.touchObject.swipeLength=r),i=a.swipeDirection(),void 0!==t.originalEvent&&4<a.touchObject.swipeLength&&(a.swiping=!0,t.preventDefault()),o=(!1===a.options.rtl?1:-1)*(a.touchObject.curX>a.touchObject.startX?1:-1),!0===a.options.verticalSwiping&&(o=a.touchObject.curY>a.touchObject.startY?1:-1),n=a.touchObject.swipeLength,(a.touchObject.edgeHit=!1)===a.options.infinite&&(0===a.currentSlide&&"right"===i||a.currentSlide>=a.getDotCount()&&"left"===i)&&(n=a.touchObject.swipeLength*a.options.edgeFriction,a.touchObject.edgeHit=!0),!1===a.options.vertical?a.swipeLeft=e+n*o:a.swipeLeft=e+n*(a.$list.height()/a.listWidth)*o,!0===a.options.verticalSwiping&&(a.swipeLeft=e+n*o),!0!==a.options.fade&&!1!==a.options.touchMove&&(!0===a.animating?(a.swipeLeft=null,!1):void a.setCSS(a.swipeLeft))))},r.prototype.swipeStart=function(t){var e,i=this;if(i.interrupted=!0,1!==i.touchObject.fingerCount||i.slideCount<=i.options.slidesToShow)return!(i.touchObject={});void 0!==t.originalEvent&&void 0!==t.originalEvent.touches&&(e=t.originalEvent.touches[0]),i.touchObject.startX=i.touchObject.curX=void 0!==e?e.pageX:t.clientX,i.touchObject.startY=i.touchObject.curY=void 0!==e?e.pageY:t.clientY,i.dragging=!0},r.prototype.unfilterSlides=r.prototype.slickUnfilter=function(){var t=this;null!==t.$slidesCache&&(t.unload(),t.$slideTrack.children(this.options.slide).detach(),t.$slidesCache.appendTo(t.$slideTrack),t.reinit())},r.prototype.unload=function(){var t=this;c(".slick-cloned",t.$slider).remove(),t.$dots&&t.$dots.remove(),t.$prevArrow&&t.htmlExpr.test(t.options.prevArrow)&&t.$prevArrow.remove(),t.$nextArrow&&t.htmlExpr.test(t.options.nextArrow)&&t.$nextArrow.remove(),t.$slides.removeClass("slick-slide slick-active slick-visible slick-current").attr("aria-hidden","true").css("width","")},r.prototype.unslick=function(t){this.$slider.trigger("unslick",[this,t]),this.destroy()},r.prototype.updateArrows=function(){var t=this;Math.floor(t.options.slidesToShow/2),!0===t.options.arrows&&t.slideCount>t.options.slidesToShow&&!t.options.infinite&&(t.$prevArrow.removeClass("slick-disabled").attr("aria-disabled","false"),t.$nextArrow.removeClass("slick-disabled").attr("aria-disabled","false"),0===t.currentSlide?(t.$prevArrow.addClass("slick-disabled").attr("aria-disabled","true"),t.$nextArrow.removeClass("slick-disabled").attr("aria-disabled","false")):t.currentSlide>=t.slideCount-t.options.slidesToShow&&!1===t.options.centerMode?(t.$nextArrow.addClass("slick-disabled").attr("aria-disabled","true"),t.$prevArrow.removeClass("slick-disabled").attr("aria-disabled","false")):t.currentSlide>=t.slideCount-1&&!0===t.options.centerMode&&(t.$nextArrow.addClass("slick-disabled").attr("aria-disabled","true"),t.$prevArrow.removeClass("slick-disabled").attr("aria-disabled","false")))},r.prototype.updateDots=function(){var t=this;null!==t.$dots&&(t.$dots.find("li").removeClass("slick-active").end(),t.$dots.find("li").eq(Math.floor(t.currentSlide/t.options.slidesToScroll)).addClass("slick-active"))},r.prototype.visibility=function(){this.options.autoplay&&(document[this.hidden]?this.interrupted=!0:this.interrupted=!1)},c.fn.slick=function(){var t,e,i=this,n=arguments[0],o=Array.prototype.slice.call(arguments,1),s=i.length;for(t=0;t<s;t++)if("object"==typeof n||void 0===n?i[t].slick=new r(i[t],n):e=i[t].slick[n].apply(i[t].slick,o),void 0!==e)return e;return i}}),function(d,c,g,m){"use strict";function i(t,e){var i,n,o,s=[],r=0;t&&t.isDefaultPrevented()||(t.preventDefault(),e=e||{},t&&t.data&&(e=u(t.data.options,e)),i=e.$target||g(t.currentTarget).trigger("blur"),(o=g.fancybox.getInstance())&&o.$trigger&&o.$trigger.is(i)||(e.selector?s=g(e.selector):(n=i.attr("data-fancybox")||"")?s=(s=t.data?t.data.items:[]).length?s.filter('[data-fancybox="'+n+'"]'):g('[data-fancybox="'+n+'"]'):s=[i],(r=g(s).index(i))<0&&(r=0),(o=g.fancybox.open(s,e,r)).$trigger=i))}if(d.console=d.console||{info:function(t){}},g){if(g.fn.fancybox)return console.info("fancyBox already initialized");var t={closeExisting:!1,loop:!1,gutter:50,keyboard:!0,arrows:!0,infobar:!0,smallBtn:"auto",toolbar:"auto",buttons:["zoom","slideShow","thumbs","close"],idleTime:3,protect:!1,modal:!1,image:{preload:!1},ajax:{settings:{data:{fancybox:!0}}},iframe:{tpl:'<iframe id="fancybox-frame{rnd}" name="fancybox-frame{rnd}" class="fancybox-iframe" allowfullscreen allow="fullscreen autoplay" src=""></iframe>',preload:!0,css:{},attr:{scrolling:"auto"}},video:{tpl:'<video class="fancybox-video" controls controlsList="nodownload"><source src="{{src}}" type="{{format}}" />Your browser doesn\'t support HTML5 video</video>',format:"",autoStart:!0},defaultType:"image",animationEffect:"zoom",animationDuration:366,zoomOpacity:"auto",transitionEffect:"fade",transitionDuration:366,slideClass:"",baseClass:"",baseTpl:'<div class="fancybox-container" role="dialog" tabindex="-1"><div class="fancybox-bg"></div><div class="fancybox-inner"><div class="fancybox-infobar"><span data-fancybox-index></span>&nbsp;/&nbsp;<span data-fancybox-count></span></div><div class="fancybox-toolbar">{{buttons}}</div><div class="fancybox-navigation">{{arrows}}</div><div class="fancybox-stage"></div><div class="fancybox-caption"></div></div></div>',spinnerTpl:'<div class="fancybox-loading"></div>',errorTpl:'<div class="fancybox-error"><p>{{ERROR}}</p></div>',btnTpl:{download:'<a download data-fancybox-download class="fancybox-button fancybox-button--download" title="{{DOWNLOAD}}" href="javascript:;"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M18.62 17.09V19H5.38v-1.91zm-2.97-6.96L17 11.45l-5 4.87-5-4.87 1.36-1.32 2.68 2.64V5h1.92v7.77z"/></svg></a>',zoom:'<button data-fancybox-zoom class="fancybox-button fancybox-button--zoom" title="{{ZOOM}}"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M18.7 17.3l-3-3a5.9 5.9 0 0 0-.6-7.6 5.9 5.9 0 0 0-8.4 0 5.9 5.9 0 0 0 0 8.4 5.9 5.9 0 0 0 7.7.7l3 3a1 1 0 0 0 1.3 0c.4-.5.4-1 0-1.5zM8.1 13.8a4 4 0 0 1 0-5.7 4 4 0 0 1 5.7 0 4 4 0 0 1 0 5.7 4 4 0 0 1-5.7 0z"/></svg></button>',close:'<button data-fancybox-close class="fancybox-button fancybox-button--close" title="{{CLOSE}}"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M12 10.6L6.6 5.2 5.2 6.6l5.4 5.4-5.4 5.4 1.4 1.4 5.4-5.4 5.4 5.4 1.4-1.4-5.4-5.4 5.4-5.4-1.4-1.4-5.4 5.4z"/></svg></button>',arrowLeft:'<button data-fancybox-prev class="fancybox-button fancybox-button--arrow_left" title="{{PREV}}"><div><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M11.28 15.7l-1.34 1.37L5 12l4.94-5.07 1.34 1.38-2.68 2.72H19v1.94H8.6z"/></svg></div></button>',arrowRight:'<button data-fancybox-next class="fancybox-button fancybox-button--arrow_right" title="{{NEXT}}"><div><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M15.4 12.97l-2.68 2.72 1.34 1.38L19 12l-4.94-5.07-1.34 1.38 2.68 2.72H5v1.94z"/></svg></div></button>',smallBtn:'<button type="button" data-fancybox-close class="fancybox-button fancybox-close-small" title="{{CLOSE}}"><svg xmlns="http://www.w3.org/2000/svg" version="1" viewBox="0 0 24 24"><path d="M13 12l5-5-1-1-5 5-5-5-1 1 5 5-5 5 1 1 5-5 5 5 1-1z"/></svg></button>'},parentEl:"body",hideScrollbar:!0,autoFocus:!0,backFocus:!0,trapFocus:!0,fullScreen:{autoStart:!1},touch:{vertical:!0,momentum:!0},hash:null,media:{},slideShow:{autoStart:!1,speed:3e3},thumbs:{autoStart:!1,hideOnClose:!0,parentEl:".fancybox-container",axis:"y"},wheel:"auto",onInit:g.noop,beforeLoad:g.noop,afterLoad:g.noop,beforeShow:g.noop,afterShow:g.noop,beforeClose:g.noop,afterClose:g.noop,onActivate:g.noop,onDeactivate:g.noop,clickContent:function(t,e){return"image"===t.type&&"zoom"},clickSlide:"close",clickOutside:"close",dblclickContent:!1,dblclickSlide:!1,dblclickOutside:!1,mobile:{idleTime:!1,clickContent:function(t,e){return"image"===t.type&&"toggleControls"},clickSlide:function(t,e){return"image"===t.type?"toggleControls":"close"},dblclickContent:function(t,e){return"image"===t.type&&"zoom"},dblclickSlide:function(t,e){return"image"===t.type&&"zoom"}},lang:"en",i18n:{en:{CLOSE:"Close",NEXT:"Next",PREV:"Previous",ERROR:"The requested content cannot be loaded. <br/> Please try again later.",PLAY_START:"Start slideshow",PLAY_STOP:"Pause slideshow",FULL_SCREEN:"Full screen",THUMBS:"Thumbnails",DOWNLOAD:"Download",SHARE:"Share",ZOOM:"Zoom"},de:{CLOSE:"Schliessen",NEXT:"Weiter",PREV:"ZurÃ¼ck",ERROR:"Die angeforderten Daten konnten nicht geladen werden. <br/> Bitte versuchen Sie es spÃ¤ter nochmal.",PLAY_START:"Diaschau starten",PLAY_STOP:"Diaschau beenden",FULL_SCREEN:"Vollbild",THUMBS:"Vorschaubilder",DOWNLOAD:"Herunterladen",SHARE:"Teilen",ZOOM:"MaÃstab"}}},o=g(d),s=g(c),r=0,h=d.requestAnimationFrame||d.webkitRequestAnimationFrame||d.mozRequestAnimationFrame||d.oRequestAnimationFrame||function(t){return d.setTimeout(t,1e3/60)},p=function(){var t,e=c.createElement("fakeelement"),i={transition:"transitionend",OTransition:"oTransitionEnd",MozTransition:"transitionend",WebkitTransition:"webkitTransitionEnd"};for(t in i)if(e.style[t]!==m)return i[t];return"transitionend"}(),f=function(t){return t&&t.length&&t[0].offsetHeight},u=function(t,e){var i=g.extend(!0,{},t,e);return g.each(e,function(t,e){g.isArray(e)&&(i[t]=e)}),i},n=function(t,e,i){var n=this;n.opts=u({index:i},g.fancybox.defaults),g.isPlainObject(e)&&(n.opts=u(n.opts,e)),g.fancybox.isMobile&&(n.opts=u(n.opts,n.opts.mobile)),n.id=n.opts.id||++r,n.currIndex=parseInt(n.opts.index,10)||0,n.prevIndex=null,n.prevPos=null,n.currPos=0,n.firstRun=!0,n.group=[],n.slides={},n.addContent(t),n.group.length&&n.init()};g.extend(n.prototype,{init:function(){var e,i,n=this,o=n.group[n.currIndex].opts;o.closeExisting&&g.fancybox.close(!0),g("body").addClass("fancybox-active"),!g.fancybox.getInstance()&&!1!==o.hideScrollbar&&!g.fancybox.isMobile&&c.body.scrollHeight>d.innerHeight&&(g("head").append('<style id="fancybox-style-noscroll" type="text/css">.compensate-for-scrollbar{margin-right:'+(d.innerWidth-c.documentElement.clientWidth)+"px;}</style>"),g("body").addClass("compensate-for-scrollbar")),i="",g.each(o.buttons,function(t,e){i+=o.btnTpl[e]||""}),e=g(n.translate(n,o.baseTpl.replace("{{buttons}}",i).replace("{{arrows}}",o.btnTpl.arrowLeft+o.btnTpl.arrowRight))).attr("id","fancybox-container-"+n.id).addClass(o.baseClass).data("FancyBox",n).appendTo(o.parentEl),n.$refs={container:e},["bg","inner","infobar","toolbar","stage","caption","navigation"].forEach(function(t){n.$refs[t]=e.find(".fancybox-"+t)}),n.trigger("onInit"),n.activate(),n.jumpTo(n.currIndex)},translate:function(t,e){var n=t.opts.i18n[t.opts.lang];return e.replace(/\{\{(\w+)\}\}/g,function(t,e){var i=n[e];return i===m?t:i})},addContent:function(t){var e,c=this,i=g.makeArray(t);g.each(i,function(t,e){var i,n,o,s,r,a={},l={};g.isPlainObject(e)?l=(a=e).opts||e:"object"===g.type(e)&&g(e).length?(l=(i=g(e)).data()||{},(l=g.extend(!0,{},l,l.options)).$orig=i,a.src=c.opts.src||l.src||i.attr("href"),a.type||a.src||(a.type="inline",a.src=e)):a={type:"html",src:e+""},a.opts=g.extend(!0,{},c.opts,l),g.isArray(l.buttons)&&(a.opts.buttons=l.buttons),g.fancybox.isMobile&&a.opts.mobile&&(a.opts=u(a.opts,a.opts.mobile)),n=a.type||a.opts.type,s=a.src||"",!n&&s&&((o=s.match(/\.(mp4|mov|ogv|webm)((\?|#).*)?$/i))?(n="video",a.opts.video.format||(a.opts.video.format="video/"+("ogv"===o[1]?"ogg":o[1]))):s.match(/(^data:image\/[a-z0-9+\/=]*,)|(\.(jp(e|g|eg)|gif|png|bmp|webp|svg|ico)((\?|#).*)?$)/i)?n="image":s.match(/\.(pdf)((\?|#).*)?$/i)?n="iframe":"#"===s.charAt(0)&&(n="inline")),n?a.type=n:c.trigger("objectNeedsType",a),a.contentType||(a.contentType=-1<g.inArray(a.type,["html","inline","ajax"])?"html":a.type),a.index=c.group.length,"auto"==a.opts.smallBtn&&(a.opts.smallBtn=-1<g.inArray(a.type,["html","inline","ajax"])),"auto"===a.opts.toolbar&&(a.opts.toolbar=!a.opts.smallBtn),a.opts.$trigger&&a.index===c.opts.index&&(a.opts.$thumb=a.opts.$trigger.find("img:first"),a.opts.$thumb.length&&(a.opts.$orig=a.opts.$trigger)),a.opts.$thumb&&a.opts.$thumb.length||!a.opts.$orig||(a.opts.$thumb=a.opts.$orig.find("img:first")),"function"===g.type(a.opts.caption)&&(a.opts.caption=a.opts.caption.apply(e,[c,a])),"function"===g.type(c.opts.caption)&&(a.opts.caption=c.opts.caption.apply(e,[c,a])),a.opts.caption instanceof g||(a.opts.caption=a.opts.caption===m?"":a.opts.caption+""),"ajax"===a.type&&(1<(r=s.split(/\s+/,2)).length&&(a.src=r.shift(),a.opts.filter=r.shift())),a.opts.modal&&(a.opts=g.extend(!0,a.opts,{trapFocus:!0,infobar:0,toolbar:0,smallBtn:0,keyboard:0,slideShow:0,fullScreen:0,thumbs:0,touch:0,clickContent:!1,clickSlide:!1,clickOutside:!1,dblclickContent:!1,dblclickSlide:!1,dblclickOutside:!1})),c.group.push(a)}),Object.keys(c.slides).length&&(c.updateControls(),(e=c.Thumbs)&&e.isActive&&(e.create(),e.focus()))},addEvents:function(){var n=this;n.removeEvents(),n.$refs.container.on("click.fb-close","[data-fancybox-close]",function(t){t.stopPropagation(),t.preventDefault(),n.close(t)}).on("touchstart.fb-prev click.fb-prev","[data-fancybox-prev]",function(t){t.stopPropagation(),t.preventDefault(),n.previous()}).on("touchstart.fb-next click.fb-next","[data-fancybox-next]",function(t){t.stopPropagation(),t.preventDefault(),n.next()}).on("click.fb","[data-fancybox-zoom]",function(t){n[n.isScaledDown()?"scaleToActual":"scaleToFit"]()}),o.on("orientationchange.fb resize.fb",function(t){t&&t.originalEvent&&"resize"===t.originalEvent.type?h(function(){n.update()}):(n.current&&"iframe"===n.current.type&&n.$refs.stage.hide(),setTimeout(function(){n.$refs.stage.show(),n.update()},g.fancybox.isMobile?600:250))}),s.on("keydown.fb",function(t){var e=(g.fancybox?g.fancybox.getInstance():null).current,i=t.keyCode||t.which;if(9!=i)return!e.opts.keyboard||t.ctrlKey||t.altKey||t.shiftKey||g(t.target).is("input")||g(t.target).is("textarea")?void 0:8===i||27===i?(t.preventDefault(),void n.close(t)):37===i||38===i?(t.preventDefault(),void n.previous()):39===i||40===i?(t.preventDefault(),void n.next()):void n.trigger("afterKeydown",t,i);e.opts.trapFocus&&n.focus(t)}),n.group[n.currIndex].opts.idleTime&&(n.idleSecondsCounter=0,s.on("mousemove.fb-idle mouseleave.fb-idle mousedown.fb-idle touchstart.fb-idle touchmove.fb-idle scroll.fb-idle keydown.fb-idle",function(t){n.idleSecondsCounter=0,n.isIdle&&n.showControls(),n.isIdle=!1}),n.idleInterval=d.setInterval(function(){n.idleSecondsCounter++,n.idleSecondsCounter>=n.group[n.currIndex].opts.idleTime&&!n.isDragging&&(n.isIdle=!0,n.idleSecondsCounter=0,n.hideControls())},1e3))},removeEvents:function(){o.off("orientationchange.fb resize.fb"),s.off("keydown.fb .fb-idle"),this.$refs.container.off(".fb-close .fb-prev .fb-next"),this.idleInterval&&(d.clearInterval(this.idleInterval),this.idleInterval=null)},previous:function(t){return this.jumpTo(this.currPos-1,t)},next:function(t){return this.jumpTo(this.currPos+1,t)},jumpTo:function(t,n){var e,i,o,s,r,a,l,c,d=this,u=d.group.length;if(!(d.isDragging||d.isClosing||d.isAnimating&&d.firstRun)){if(t=parseInt(t,10),!(o=d.current?d.current.opts.loop:d.opts.loop)&&(t<0||u<=t))return!1;if(e=d.firstRun=!Object.keys(d.slides).length,r=d.current,d.prevIndex=d.currIndex,d.prevPos=d.currPos,s=d.createSlide(t),1<u&&((o||s.index<u-1)&&d.createSlide(t+1),(o||0<s.index)&&d.createSlide(t-1)),d.current=s,d.currIndex=s.index,d.currPos=s.pos,d.trigger("beforeShow",e),d.updateControls(),s.forcedDuration=m,g.isNumeric(n)?s.forcedDuration=n:n=s.opts[e?"animationDuration":"transitionDuration"],n=parseInt(n,10),i=d.isMoved(r),s.$slide.addClass("fancybox-slide--current"),e)return s.opts.animationEffect&&n&&d.$refs.container.css("transition-duration",n+"ms"),d.$refs.container.addClass("fancybox-is-open").trigger("focus"),d.loadSlide(s),void d.preload("image");a=g.fancybox.getTranslate(r.$slide),l=g.fancybox.getTranslate(d.$refs.stage),g.each(d.slides,function(t,e){g.fancybox.stop(e.$slide,!0)}),r.pos!==s.pos&&(r.isComplete=!1,r.$slide.removeClass("fancybox-slide--complete fancybox-slide--current")),i?(c=a.left-(r.pos*a.width+r.pos*r.opts.gutter),g.each(d.slides,function(t,e){var i=e.pos*a.width+e.pos*e.opts.gutter;g.fancybox.setTranslate(e.$slide,{top:0,left:i+c-l.left}),e.pos!==s.pos&&e.$slide.addClass("fancybox-slide--"+(e.pos>s.pos?"next":"previous")),f(e.$slide),h(function(){g.fancybox.animate(e.$slide,{top:0,left:(e.pos-s.pos)*a.width+(e.pos-s.pos)*e.opts.gutter},n,function(){e.$slide.removeAttr("style").removeClass("fancybox-slide--next fancybox-slide--previous"),e.pos===d.currPos&&d.complete()})})})):(s.$slide.parent().children().removeAttr("style"),n&&s.opts.transitionEffect&&g.fancybox.animate(r.$slide,"fancybox-animated fancybox-slide--"+(r.pos>s.pos?"next":"previous")+" fancybox-fx-"+s.opts.transitionEffect,n,null,!1)),s.isLoaded?d.revealContent(s):d.loadSlide(s),d.preload("image")}},createSlide:function(t){var e,i,n=this;return i=(i=t%n.group.length)<0?n.group.length+i:i,!n.slides[t]&&n.group[i]&&(e=g('<div class="fancybox-slide"></div>').appendTo(n.$refs.stage),n.slides[t]=g.extend(!0,{},n.group[i],{pos:t,$slide:e,isLoaded:!1}),n.updateSlide(n.slides[t])),n.slides[t]},scaleToActual:function(t,e,i){var n,o,s,r,a,l=this,c=l.current,d=c.$content,u=g.fancybox.getTranslate(c.$slide).width,h=g.fancybox.getTranslate(c.$slide).height,p=c.width,f=c.height;!l.isAnimating&&d&&"image"==c.type&&c.isLoaded&&!c.hasError&&(g.fancybox.stop(d),l.isAnimating=!0,t=t===m?.5*u:t,e=e===m?.5*h:e,(n=g.fancybox.getTranslate(d)).top-=g.fancybox.getTranslate(c.$slide).top,n.left-=g.fancybox.getTranslate(c.$slide).left,r=p/n.width,a=f/n.height,o=.5*u-.5*p,s=.5*h-.5*f,u<p&&(0<(o=n.left*r-(t*r-t))&&(o=0),o<u-p&&(o=u-p)),h<f&&(0<(s=n.top*a-(e*a-e))&&(s=0),s<h-f&&(s=h-f)),l.updateCursor(p,f),g.fancybox.animate(d,{top:s,left:o,scaleX:r,scaleY:a},i||330,function(){l.isAnimating=!1}),l.SlideShow&&l.SlideShow.isActive&&l.SlideShow.stop())},scaleToFit:function(t){var e,i=this,n=i.current,o=n.$content;!i.isAnimating&&o&&"image"==n.type&&n.isLoaded&&!n.hasError&&(g.fancybox.stop(o),i.isAnimating=!0,e=i.getFitPos(n),i.updateCursor(e.width,e.height),g.fancybox.animate(o,{top:e.top,left:e.left,scaleX:e.width/o.width(),scaleY:e.height/o.height()},t||330,function(){i.isAnimating=!1}))},getFitPos:function(t){var e,i,n,o,s=t.$content,r=t.$slide,a=t.width||t.opts.width,l=t.height||t.opts.height,c={};return!!(t.isLoaded&&s&&s.length)&&(e=g.fancybox.getTranslate(this.$refs.stage).width,i=g.fancybox.getTranslate(this.$refs.stage).height,e-=parseFloat(r.css("paddingLeft"))+parseFloat(r.css("paddingRight"))+parseFloat(s.css("marginLeft"))+parseFloat(s.css("marginRight")),i-=parseFloat(r.css("paddingTop"))+parseFloat(r.css("paddingBottom"))+parseFloat(s.css("marginTop"))+parseFloat(s.css("marginBottom")),a&&l||(a=e,l=i),e-.5<(a*=n=Math.min(1,e/a,i/l))&&(a=e),i-.5<(l*=n)&&(l=i),"image"===t.type?(c.top=Math.floor(.5*(i-l))+parseFloat(r.css("paddingTop")),c.left=Math.floor(.5*(e-a))+parseFloat(r.css("paddingLeft"))):"video"===t.contentType&&(a/(o=t.opts.width&&t.opts.height?a/l:t.opts.ratio||16/9)<l?l=a/o:l*o<a&&(a=l*o)),c.width=a,c.height=l,c)},update:function(){var i=this;g.each(i.slides,function(t,e){i.updateSlide(e)})},updateSlide:function(t){var e=this,i=t&&t.$content,n=t.width||t.opts.width,o=t.height||t.opts.height,s=t.$slide;i&&(n||o||"video"===t.contentType)&&!t.hasError&&(g.fancybox.stop(i),g.fancybox.setTranslate(i,e.getFitPos(t)),t.pos===e.currPos&&(e.isAnimating=!1,e.updateCursor())),s.length&&(s.trigger("refresh"),e.$refs.toolbar.toggleClass("compensate-for-scrollbar",s.get(0).scrollHeight>s.get(0).clientHeight)),e.trigger("onUpdate",t)},centerSlide:function(t,e){var i,n,o=this;o.current&&(i=Math.round(t.$slide.width()),n=t.pos-o.current.pos,g.fancybox.animate(t.$slide,{top:0,left:n*i+n*t.opts.gutter,opacity:1},e===m?0:e,function(){t.$slide.siblings().removeAttr("style").removeClass("fancybox-slide--previous fancybox-slide--next"),t.isComplete||o.complete()},!1))},isMoved:function(t){var e,i,n=t||this.current;return!!n&&(i=g.fancybox.getTranslate(this.$refs.stage),e=g.fancybox.getTranslate(n.$slide),(0<Math.abs(e.top-i.top)||0<Math.abs(e.left-i.left))&&!n.$slide.hasClass("fancybox-animated"))},updateCursor:function(t,e){var i,n=this,o=n.current,s=n.$refs.container;o&&!n.isClosing&&n.Guestures&&(s.removeClass("fancybox-is-zoomable fancybox-can-zoomIn fancybox-can-zoomOut fancybox-can-swipe fancybox-can-pan"),i=n.isZoomable(),s.toggleClass("fancybox-is-zoomable",i),g("[data-fancybox-zoom]").prop("disabled",!i),n.canPan(t,e)?s.addClass("fancybox-can-pan"):i&&("zoom"===o.opts.clickContent||g.isFunction(o.opts.clickContent)&&"zoom"==o.opts.clickContent(o))?s.addClass("fancybox-can-zoomIn"):o.opts.touch&&(o.opts.touch.vertical||1<n.group.length)&&"video"!==o.contentType&&s.addClass("fancybox-can-swipe"))},isZoomable:function(){var t,e=this.current;if(e&&!this.isClosing&&"image"===e.type&&!e.hasError){if(!e.isLoaded)return!0;if(t=this.getFitPos(e),e.width>t.width||e.height>t.height)return!0}return!1},isScaledDown:function(t,e){var i=!1,n=this.current,o=n.$content;return t!==m&&e!==m?i=t<n.width&&e<n.height:o&&(i=(i=g.fancybox.getTranslate(o)).width<n.width&&i.height<n.height),i},canPan:function(t,e){var i,n,o=!1,s=this.current;return"image"===s.type&&(i=s.$content)&&!s.hasError&&(o=this.getFitPos(s),n=t!==m&&e!==m?{width:t,height:e}:g.fancybox.getTranslate(i),o=1.5<Math.abs(n.width-o.width)||1.5<Math.abs(n.height-o.height)),o},loadSlide:function(i){var t,e,n,o=this;if(!i.isLoading&&!i.isLoaded){if(!(i.isLoading=!0)===o.trigger("beforeLoad",i))return i.isLoading=!1;switch(t=i.type,(e=i.$slide).off("refresh").trigger("onReset").addClass(i.opts.slideClass),t){case"image":o.setImage(i);break;case"iframe":o.setIframe(i);break;case"html":o.setContent(i,i.src||i.content);break;case"video":o.setContent(i,i.opts.video.tpl.replace("{{src}}",i.src).replace("{{format}}",i.opts.videoFormat||i.opts.video.format));break;case"inline":g(i.src).length?o.setContent(i,g(i.src)):o.setError(i);break;case"ajax":o.showLoading(i),n=g.ajax(g.extend({},i.opts.ajax.settings,{url:i.src,success:function(t,e){"success"===e&&o.setContent(i,t)},error:function(t,e){t&&"abort"!==e&&o.setError(i)}})),e.one("onReset",function(){n.abort()});break;default:o.setError(i)}return!0}},setImage:function(e){var t,i,n,o,s,r=this,a=e.opts.srcset||e.opts.image.srcset;if(h(function(){h(function(){var t=e.$image;r.isClosing||!e.isLoading||t&&t.length&&t[0].complete||e.hasError||r.showLoading(e)})}),a){o=d.devicePixelRatio||1,s=d.innerWidth*o,(n=a.split(",").map(function(t){var n={};return t.trim().split(/\s+/).forEach(function(t,e){var i=parseInt(t.substring(0,t.length-1),10);return 0===e?n.url=t:void(i&&(n.value=i,n.postfix=t[t.length-1]))}),n})).sort(function(t,e){return t.value-e.value});for(var l=0;l<n.length;l++){var c=n[l];if("w"===c.postfix&&c.value>=s||"x"===c.postfix&&c.value>=o){i=c;break}}!i&&n.length&&(i=n[n.length-1]),i&&(e.src=i.url,e.width&&e.height&&"w"==i.postfix&&(e.height=e.width/e.height*i.value,e.width=i.value),e.opts.srcset=a)}e.$content=g('<div class="fancybox-content"></div>').addClass("fancybox-is-hidden").appendTo(e.$slide.addClass("fancybox-slide--image")),t=e.opts.thumb||!(!e.opts.$thumb||!e.opts.$thumb.length)&&e.opts.$thumb.attr("src"),!1!==e.opts.preload&&e.opts.width&&e.opts.height&&t&&(e.width=e.opts.width,e.height=e.opts.height,e.$ghost=g("<img />").one("error",function(){g(this).remove(),e.$ghost=null}).one("load",function(){r.afterLoad(e)}).addClass("fancybox-image").appendTo(e.$content).attr("src",t)),r.setBigImage(e)},setBigImage:function(e){var i=this,n=g("<img />");e.$image=n.one("error",function(){i.setError(e)}).one("load",function(){var t;e.$ghost||(i.resolveImageSlideSize(e,this.naturalWidth,this.naturalHeight),i.afterLoad(e)),i.isClosing||(e.opts.srcset&&((t=e.opts.sizes)&&"auto"!==t||(t=(1<e.width/e.height&&1<o.width()/o.height()?"100":Math.round(e.width/e.height*100))+"vw"),n.attr("sizes",t).attr("srcset",e.opts.srcset)),e.$ghost&&setTimeout(function(){e.$ghost&&!i.isClosing&&e.$ghost.hide()},Math.min(300,Math.max(1e3,e.height/1600))),i.hideLoading(e))}).addClass("fancybox-image").attr("src",e.src).appendTo(e.$content),(n[0].complete||"complete"==n[0].readyState)&&n[0].naturalWidth&&n[0].naturalHeight?n.trigger("load"):n[0].error&&n.trigger("error")},resolveImageSlideSize:function(t,e,i){var n=parseInt(t.opts.width,10),o=parseInt(t.opts.height,10);t.width=e,t.height=i,0<n&&(t.width=n,t.height=Math.floor(n*i/e)),0<o&&(t.width=Math.floor(o*e/i),t.height=o)},setIframe:function(o){var s,e=this,r=o.opts.iframe,a=o.$slide;o.$content=g('<div class="fancybox-content'+(r.preload?" fancybox-is-hidden":"")+'"></div>').css(r.css).appendTo(a),a.addClass("fancybox-slide--"+o.contentType),o.$iframe=s=g(r.tpl.replace(/\{rnd\}/g,(new Date).getTime())).attr(r.attr).appendTo(o.$content),r.preload?(e.showLoading(o),s.on("load.fb error.fb",function(t){this.isReady=1,o.$slide.trigger("refresh"),e.afterLoad(o)}),a.on("refresh.fb",function(){var t,e=o.$content,i=r.css.width,n=r.css.height;if(1===s[0].isReady){try{t=s.contents().find("body")}catch(t){}t&&t.length&&t.children().length&&(a.css("overflow","visible"),e.css({width:"100%","max-width":"100%",height:"9999px"}),i===m&&(i=Math.ceil(Math.max(t[0].clientWidth,t.outerWidth(!0)))),e.css("width",i||"").css("max-width",""),n===m&&(n=Math.ceil(Math.max(t[0].clientHeight,t.outerHeight(!0)))),e.css("height",n||""),a.css("overflow","auto")),e.removeClass("fancybox-is-hidden")}})):this.afterLoad(o),s.attr("src",o.src),a.one("onReset",function(){try{g(this).find("iframe").hide().unbind().attr("src","//about:blank")}catch(t){}g(this).off("refresh.fb").empty(),o.isLoaded=!1,o.isRevealed=!1})},setContent:function(t,e){var i;this.isClosing||(this.hideLoading(t),t.$content&&g.fancybox.stop(t.$content),t.$slide.empty(),(i=e)&&i.hasOwnProperty&&i instanceof g&&e.parent().length?(e.hasClass("fancybox-content")&&e.parent(".fancybox-slide--html").trigger("onReset"),t.$placeholder=g("<div>").hide().insertAfter(e),e.css("display","inline-block")):t.hasError||("string"===g.type(e)&&(e=g("<div>").append(g.trim(e)).contents()),t.opts.filter&&(e=g("<div>").html(e).find(t.opts.filter))),t.$slide.one("onReset",function(){g(this).find("video,audio").trigger("pause"),t.$placeholder&&(t.$placeholder.after(e.removeClass("fancybox-content").hide()).remove(),t.$placeholder=null),t.$smallBtn&&(t.$smallBtn.remove(),t.$smallBtn=null),t.hasError||(g(this).empty(),t.isLoaded=!1,t.isRevealed=!1)}),g(e).appendTo(t.$slide),g(e).is("video,audio")&&(g(e).addClass("fancybox-video"),g(e).wrap("<div></div>"),t.contentType="video",t.opts.width=t.opts.width||g(e).attr("width"),t.opts.height=t.opts.height||g(e).attr("height")),t.$content=t.$slide.children().filter("div,form,main,video,audio,article,.fancybox-content").first(),t.$content.siblings().hide(),t.$content.length||(t.$content=t.$slide.wrapInner("<div></div>").children().first()),t.$content.addClass("fancybox-content"),t.$slide.addClass("fancybox-slide--"+t.contentType),this.afterLoad(t))},setError:function(t){t.hasError=!0,t.$slide.trigger("onReset").removeClass("fancybox-slide--"+t.contentType).addClass("fancybox-slide--error"),t.contentType="html",this.setContent(t,this.translate(t,t.opts.errorTpl)),t.pos===this.currPos&&(this.isAnimating=!1)},showLoading:function(t){(t=t||this.current)&&!t.$spinner&&(t.$spinner=g(this.translate(this,this.opts.spinnerTpl)).appendTo(t.$slide).hide().fadeIn())},hideLoading:function(t){(t=t||this.current)&&t.$spinner&&(t.$spinner.stop().remove(),delete t.$spinner)},afterLoad:function(t){var e=this;e.isClosing||(t.isLoading=!1,t.isLoaded=!0,e.trigger("afterLoad",t),e.hideLoading(t),t.pos===e.currPos&&e.updateCursor(),!t.opts.smallBtn||t.$smallBtn&&t.$smallBtn.length||(t.$smallBtn=g(e.translate(t,t.opts.btnTpl.smallBtn)).appendTo(t.$content)),t.opts.protect&&t.$content&&!t.hasError&&(t.$content.on("contextmenu.fb",function(t){return 2==t.button&&t.preventDefault(),!0}),"image"===t.type&&g('<div class="fancybox-spaceball"></div>').appendTo(t.$content)),e.revealContent(t))},revealContent:function(t){var e,i,n,o,s=this,r=t.$slide,a=!1,l=!1,c=s.isMoved(t),d=t.isRevealed;return t.isRevealed=!0,e=t.opts[s.firstRun?"animationEffect":"transitionEffect"],n=t.opts[s.firstRun?"animationDuration":"transitionDuration"],n=parseInt(t.forcedDuration===m?n:t.forcedDuration,10),t.pos===s.currPos&&(t.isComplete||(s.isAnimating=!0)),!c&&t.pos===s.currPos&&n||(e=!1),"zoom"===e&&(t.pos===s.currPos&&n&&"image"===t.type&&!t.hasError&&(l=s.getThumbPos(t))?a=s.getFitPos(t):e="fade"),"zoom"===e?(a.scaleX=a.width/l.width,a.scaleY=a.height/l.height,"auto"==(o=t.opts.zoomOpacity)&&(o=.1<Math.abs(t.width/t.height-l.width/l.height)),o&&(l.opacity=.1,a.opacity=1),g.fancybox.setTranslate(t.$content.removeClass("fancybox-is-hidden"),l),void g.fancybox.animate(t.$content,a,n,function(){s.isAnimating=!1,s.complete()})):(s.updateSlide(t),e?(g.fancybox.stop(r),i="fancybox-animated fancybox-slide--"+(t.pos>=s.prevPos?"next":"previous")+" fancybox-fx-"+e,r.removeClass("fancybox-slide--current").addClass(i),t.$content.removeClass("fancybox-is-hidden"),r.hide().show(0),void g.fancybox.animate(r,"fancybox-slide--current",n,function(){r.removeClass(i).removeAttr("style"),t.pos===s.currPos&&s.complete()},!0)):(t.$content.removeClass("fancybox-is-hidden"),void(d||!c||"image"!==t.type||t.hasError||t.$content.hide().fadeIn("fast"))))},getThumbPos:function(t){var e,i=!1,n=t.opts.$thumb,o=n&&n.length&&n[0].ownerDocument===c?n.offset():0;return o&&10<=function(t){for(var e=t[0],n=e.getBoundingClientRect(),i=[],o=g(d).height(),s=g(c).scrollTop(),r=n.top+s,a=s-r,l=r+n.height-(s+o);null!==e.parentElement;)"hidden"!==g(e.parentElement).css("overflow")&&"auto"!==g(e.parentElement).css("overflow")||i.push(e.parentElement.getBoundingClientRect()),e=e.parentElement;return!i.every(function(t){var e=Math.min(n.right,t.right)-Math.max(n.left,t.left),i=Math.min(n.bottom,t.bottom)-Math.max(n.top,t.top);return 0<e&&0<i})||s>r+n.height||s+o<r?0:0<a?100-100*a/n.height:0<l?100-100*l/n.height:100}(n)&&(e=this.$refs.stage.offset(),i={top:o.top-e.top+parseFloat(n.css("border-top-width")||0),left:o.left-e.left+parseFloat(n.css("border-left-width")||0),width:n.width(),height:n.height(),scaleX:1,scaleY:1}),i},complete:function(){var t,i=this,e=i.current,n={};!i.isMoved()&&e.isLoaded&&(e.isComplete||(e.isComplete=!0,e.$slide.siblings().trigger("onReset"),i.preload("inline"),f(e.$slide),e.$slide.addClass("fancybox-slide--complete"),g.each(i.slides,function(t,e){e.pos>=i.currPos-1&&e.pos<=i.currPos+1?n[e.pos]=e:e&&(g.fancybox.stop(e.$slide),e.$slide.off().remove())}),i.slides=n),i.isAnimating=!1,i.updateCursor(),i.trigger("afterShow"),e.opts.video.autoStart&&e.$slide.find("video,audio").filter(":visible:first").trigger("play").on("ended",g.proxy(i.next,i)),e.opts.autoFocus&&"html"===e.contentType&&((t=e.$content.find("input[autofocus]:enabled:visible:first")).length?t.trigger("focus"):i.focus(null,!0)),e.$slide.scrollTop(0).scrollLeft(0))},preload:function(t){var e=this,i=e.slides[e.currPos+1],n=e.slides[e.currPos-1];n&&n.type===t&&e.loadSlide(n),i&&i.type===t&&e.loadSlide(i)},focus:function(t,e){var i,n,o=this,s=["a[href]","area[href]",'input:not([disabled]):not([type="hidden"]):not([aria-hidden])',"select:not([disabled]):not([aria-hidden])","textarea:not([disabled]):not([aria-hidden])","button:not([disabled]):not([aria-hidden])","iframe","object","embed","[contenteditable]",'[tabindex]:not([tabindex^="-"])'].join(",");o.isClosing||((i=(i=!t&&o.current&&o.current.isComplete?o.current.$slide.find("*:visible"+(e?":not(.fancybox-close-small)":"")):o.$refs.container.find("*:visible")).filter(s).filter(function(){return"hidden"!==g(this).css("visibility")&&!g(this).hasClass("disabled")})).length?(n=i.index(c.activeElement),t&&t.shiftKey?(n<0||0==n)&&(t.preventDefault(),i.eq(i.length-1).trigger("focus")):(n<0||n==i.length-1)&&(t&&t.preventDefault(),i.eq(0).trigger("focus"))):o.$refs.container.trigger("focus"))},activate:function(){var e=this;g(".fancybox-container").each(function(){var t=g(this).data("FancyBox");t&&t.id!==e.id&&!t.isClosing&&(t.trigger("onDeactivate"),t.removeEvents(),t.isVisible=!1)}),e.isVisible=!0,(e.current||e.isIdle)&&(e.update(),e.updateControls()),e.trigger("onActivate"),e.addEvents()},close:function(t,e){var i,n,o,s,r,a,l,c=this,d=c.current,u=function(){c.cleanUp(t)};return!c.isClosing&&(!(c.isClosing=!0)===c.trigger("beforeClose",t)?(c.isClosing=!1,h(function(){c.update()}),!1):(c.removeEvents(),o=d.$content,i=d.opts.animationEffect,n=g.isNumeric(e)?e:i?d.opts.animationDuration:0,d.$slide.off(p).removeClass("fancybox-slide--complete fancybox-slide--next fancybox-slide--previous fancybox-animated"),d.$slide.siblings().trigger("onReset").remove(),n&&c.$refs.container.removeClass("fancybox-is-open").addClass("fancybox-is-closing"),c.hideLoading(d),c.hideControls(),c.updateCursor(),"zoom"!==i||!0!==t&&o&&n&&"image"===d.type&&!d.hasError&&(l=c.getThumbPos(d))||(i="fade"),"zoom"===i?(g.fancybox.stop(o),a={top:(s=g.fancybox.getTranslate(o)).top,left:s.left,scaleX:s.width/l.width,scaleY:s.height/l.height,width:l.width,height:l.height},"auto"==(r=d.opts.zoomOpacity)&&(r=.1<Math.abs(d.width/d.height-l.width/l.height)),r&&(l.opacity=0),g.fancybox.setTranslate(o,a),f(o),g.fancybox.animate(o,l,n,u)):i&&n?!0===t?setTimeout(u,n):g.fancybox.animate(d.$slide.removeClass("fancybox-slide--current"),"fancybox-animated fancybox-slide--previous fancybox-fx-"+i,n,u):u(),!0))},cleanUp:function(t){var e,i,n,o=this.current.opts.$orig;this.current.$slide.trigger("onReset"),this.$refs.container.empty().remove(),this.trigger("afterClose",t),this.current.opts.backFocus&&(o&&o.length&&o.is(":visible")||(o=this.$trigger),o&&o.length&&(i=d.scrollX,n=d.scrollY,o.trigger("focus"),g("html, body").scrollTop(n).scrollLeft(i))),this.current=null,(e=g.fancybox.getInstance())?e.activate():(g("body").removeClass("fancybox-active compensate-for-scrollbar"),g("#fancybox-style-noscroll").remove())},trigger:function(t,e){var i,n=Array.prototype.slice.call(arguments,1),o=e&&e.opts?e:this.current;return o?n.unshift(o):o=this,n.unshift(this),g.isFunction(o.opts[t])&&(i=o.opts[t].apply(o,n)),!1===i?i:void("afterClose"!==t&&this.$refs?this.$refs.container.trigger(t+".fb",n):s.trigger(t+".fb",n))},updateControls:function(){var t=this,e=t.current,i=e.index,n=e.opts.caption,o=t.$refs.container,s=t.$refs.caption;e.$slide.trigger("refresh"),t.$caption=n&&n.length?s.html(n):null,t.isHiddenControls||t.isIdle||t.showControls(),o.find("[data-fancybox-count]").html(t.group.length),o.find("[data-fancybox-index]").html(i+1),o.find("[data-fancybox-prev]").prop("disabled",!e.opts.loop&&i<=0),o.find("[data-fancybox-next]").prop("disabled",!e.opts.loop&&i>=t.group.length-1),"image"===e.type?o.find("[data-fancybox-zoom]").show().end().find("[data-fancybox-download]").attr("href",e.opts.image.src||e.src).show():e.opts.toolbar&&o.find("[data-fancybox-download],[data-fancybox-zoom]").hide(),g(c.activeElement).is(":hidden,[disabled]")&&t.$refs.container.trigger("focus")},hideControls:function(){this.isHiddenControls=!0,this.$refs.container.removeClass("fancybox-show-infobar fancybox-show-toolbar fancybox-show-caption fancybox-show-nav")},showControls:function(){var t=this.current?this.current.opts:this.opts,e=this.$refs.container;this.isHiddenControls=!1,this.idleSecondsCounter=0,e.toggleClass("fancybox-show-toolbar",!(!t.toolbar||!t.buttons)).toggleClass("fancybox-show-infobar",!!(t.infobar&&1<this.group.length)).toggleClass("fancybox-show-caption",!!this.$caption).toggleClass("fancybox-show-nav",!!(t.arrows&&1<this.group.length)).toggleClass("fancybox-is-modal",!!t.modal)},toggleControls:function(){this.isHiddenControls?this.showControls():this.hideControls()}}),g.fancybox={version:"3.4.2",defaults:t,getInstance:function(t){var e=g('.fancybox-container:not(".fancybox-is-closing"):last').data("FancyBox"),i=Array.prototype.slice.call(arguments,1);return e instanceof n&&("string"===g.type(t)?e[t].apply(e,i):"function"===g.type(t)&&t.apply(e,i),e)},open:function(t,e,i){return new n(t,e,i)},close:function(t){var e=this.getInstance();e&&(e.close(),!0===t&&this.close(t))},destroy:function(){this.close(!0),s.add("body").off("click.fb-start","**")},isMobile:/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent),use3d:(v=c.createElement("div"),d.getComputedStyle&&d.getComputedStyle(v)&&d.getComputedStyle(v).getPropertyValue("transform")&&!(c.documentMode&&c.documentMode<11)),getTranslate:function(t){var e;return!(!t||!t.length)&&{top:(e=t[0].getBoundingClientRect()).top||0,left:e.left||0,width:e.width,height:e.height,opacity:parseFloat(t.css("opacity"))}},setTranslate:function(t,e){var i="",n={};if(t&&e)return e.left===m&&e.top===m||(i=(e.left===m?t.position().left:e.left)+"px, "+(e.top===m?t.position().top:e.top)+"px",i=this.use3d?"translate3d("+i+", 0px)":"translate("+i+")"),e.scaleX!==m&&e.scaleY!==m?i+=" scale("+e.scaleX+", "+e.scaleY+")":e.scaleX!==m&&(i+=" scaleX("+e.scaleX+")"),i.length&&(n.transform=i),e.opacity!==m&&(n.opacity=e.opacity),e.width!==m&&(n.width=e.width),e.height!==m&&(n.height=e.height),t.css(n)},animate:function(e,i,n,o,s){var t,r=this,a=!1;g.isFunction(n)&&(o=n,n=null),g.isPlainObject(i)||e.removeAttr("style"),r.stop(e),e.on(p,function(t){(!t||!t.originalEvent||e.is(t.originalEvent.target)&&"z-index"!=t.originalEvent.propertyName)&&(r.stop(e),a&&r.setTranslate(e,a),g.isNumeric(n)&&e.css("transition-duration",""),g.isPlainObject(i)?!1===s&&e.removeAttr("style"):!0!==s&&e.removeClass(i),g.isFunction(o)&&o(t))}),g.isNumeric(n)&&e.css("transition-duration",n+"ms"),g.isPlainObject(i)?(i.scaleX!==m&&i.scaleY!==m&&(t=g.fancybox.getTranslate(e),a=g.extend({},i,{width:t.width*i.scaleX,height:t.height*i.scaleY,scaleX:1,scaleY:1}),delete i.width,delete i.height,e.parent().hasClass("fancybox-slide--image")&&e.parent().addClass("fancybox-is-scaling")),g.fancybox.setTranslate(e,i)):e.addClass(i),e.data("timer",setTimeout(function(){e.trigger("transitionend")},n+16))},stop:function(t,e){t&&t.length&&(clearTimeout(t.data("timer")),e&&t.trigger(p),t.off(p).css("transition-duration",""),t.parent().removeClass("fancybox-is-scaling"))}},g.fn.fancybox=function(t){var e;return(e=(t=t||{}).selector||!1)?g("body").off("click.fb-start",e).on("click.fb-start",e,{options:t},i):this.off("click.fb-start").on("click.fb-start",{items:this,options:t},i),this},s.on("click.fb-start","[data-fancybox]",i),s.on("click.fb-start","[data-fancybox-trigger]",function(t){g('[data-fancybox="'+g(this).attr("data-fancybox-trigger")+'"]').eq(g(this).attr("data-fancybox-index")||0).trigger("click.fb-start",{$trigger:g(this)})}),e=".fancybox-button",a="fancybox-focus",l=null,s.on("mousedown mouseup focus blur",e,function(t){switch(t.type){case"mousedown":l=g(this);break;case"mouseup":l=null;break;case"focusin":g(e).removeClass(a),g(this).is(l)||g(this).is("[disabled]")||g(this).addClass(a);break;case"focusout":g(e).removeClass(a)}})}var e,a,l,v}(window,document,jQuery),function(p){"use strict";var n={youtube:{matcher:/(youtube\.com|youtu\.be|youtube\-nocookie\.com)\/(watch\?(.*&)?v=|v\/|u\/|embed\/?)?(videoseries\?list=(.*)|[\w-]{11}|\?listType=(.*)&list=(.*))(.*)/i,params:{autoplay:1,autohide:1,fs:1,rel:0,hd:1,wmode:"transparent",enablejsapi:1,html5:1},paramPlace:8,type:"iframe",url:"//www.youtube-nocookie.com/embed/$4",thumb:"//img.youtube.com/vi/$4/hqdefault.jpg"},vimeo:{matcher:/^.+vimeo.com\/(.*\/)?([\d]+)(.*)?/,params:{autoplay:1,hd:1,show_title:1,show_byline:1,show_portrait:0,fullscreen:1},paramPlace:3,type:"iframe",url:"//player.vimeo.com/video/$2"},instagram:{matcher:/(instagr\.am|instagram\.com)\/p\/([a-zA-Z0-9_\-]+)\/?/i,type:"image",url:"//$1/p/$2/media/?size=l"},gmap_place:{matcher:/(maps\.)?google\.([a-z]{2,3}(\.[a-z]{2})?)\/(((maps\/(place\/(.*)\/)?\@(.*),(\d+.?\d+?)z))|(\?ll=))(.*)?/i,type:"iframe",url:function(t){return"//maps.google."+t[2]+"/?ll="+(t[9]?t[9]+"&z="+Math.floor(t[10])+(t[12]?t[12].replace(/^\//,"&"):""):t[12]+"").replace(/\?/,"&")+"&output="+(t[12]&&0<t[12].indexOf("layer=c")?"svembed":"embed")}},gmap_search:{matcher:/(maps\.)?google\.([a-z]{2,3}(\.[a-z]{2})?)\/(maps\/search\/)(.*)/i,type:"iframe",url:function(t){return"//maps.google."+t[2]+"/maps?q="+t[5].replace("query=","q=").replace("api=1","")+"&output=embed"}}},f=function(i,t,e){if(i)return e=e||"","object"===p.type(e)&&(e=p.param(e,!0)),p.each(t,function(t,e){i=i.replace("$"+t,e||"")}),e.length&&(i+=(0<i.indexOf("?")?"&":"?")+e),i};p(document).on("objectNeedsType.fb",function(t,e,o){var i,s,r,a,l,c,d,u=o.src||"",h=!1;i=p.extend(!0,{},n,o.opts.media),p.each(i,function(t,e){if(r=u.match(e.matcher)){if(h=e.type,d=t,c={},e.paramPlace&&r[e.paramPlace]){"?"==(l=r[e.paramPlace])[0]&&(l=l.substring(1)),l=l.split("&");for(var i=0;i<l.length;++i){var n=l[i].split("=",2);2==n.length&&(c[n[0]]=decodeURIComponent(n[1].replace(/\+/g," ")))}}return a=p.extend(!0,{},e.params,o.opts[t],c),u="function"===p.type(e.url)?e.url.call(this,r,a,o):f(e.url,r,a),s="function"===p.type(e.thumb)?e.thumb.call(this,r,a,o):f(e.thumb,r),"youtube"===t?u=u.replace(/&t=((\d+)m)?(\d+)s/,function(t,e,i,n){return"&start="+((i?60*parseInt(i,10):0)+parseInt(n,10))}):"vimeo"===t&&(u=u.replace("&%23","#")),!1}}),h?(o.opts.thumb||o.opts.$thumb&&o.opts.$thumb.length||(o.opts.thumb=s),"iframe"===h&&(o.opts=p.extend(!0,o.opts,{iframe:{preload:!1,attr:{scrolling:"no"}}})),p.extend(o,{type:h,src:u,origSrc:o.src,contentSource:d,contentType:"image"===h?"image":"gmap_place"==d||"gmap_search"==d?"map":"video"})):u&&(o.type=o.opts.defaultType)});var o={youtube:{src:"https://www.youtube.com/iframe_api",class:"YT",loading:!1,loaded:!1},vimeo:{src:"https://player.vimeo.com/api/player.js",class:"Vimeo",loading:!1,loaded:!1},load:function(t){var e,i=this;return this[t].loaded?void setTimeout(function(){i.done(t)}):void(this[t].loading||(this[t].loading=!0,(e=document.createElement("script")).type="text/javascript",e.src=this[t].src,"youtube"===t?window.onYouTubeIframeAPIReady=function(){i[t].loaded=!0,i.done(t)}:e.onload=function(){i[t].loaded=!0,i.done(t)},document.body.appendChild(e)))},done:function(t){var e,i;"youtube"===t&&delete window.onYouTubeIframeAPIReady,(e=p.fancybox.getInstance())&&(i=e.current.$content.find("iframe"),"youtube"===t&&void 0!==YT&&YT?new YT.Player(i.attr("id"),{events:{onStateChange:function(t){0==t.data&&e.next()}}}):"vimeo"===t&&void 0!==Vimeo&&Vimeo&&new Vimeo.Player(i).on("ended",function(){e.next()}))}};p(document).on({"afterShow.fb":function(t,e,i){1<e.group.length&&("youtube"===i.contentSource||"vimeo"===i.contentSource)&&o.load(i.contentSource)}})}(jQuery),function(g,l,m){"use strict";var v=g.requestAnimationFrame||g.webkitRequestAnimationFrame||g.mozRequestAnimationFrame||g.oRequestAnimationFrame||function(t){return g.setTimeout(t,1e3/60)},y=g.cancelAnimationFrame||g.webkitCancelAnimationFrame||g.mozCancelAnimationFrame||g.oCancelAnimationFrame||function(t){g.clearTimeout(t)},d=function(t){var e=[];for(var i in t=(t=t.originalEvent||t||g.e).touches&&t.touches.length?t.touches:t.changedTouches&&t.changedTouches.length?t.changedTouches:[t])t[i].pageX?e.push({x:t[i].pageX,y:t[i].pageY}):t[i].clientX&&e.push({x:t[i].clientX,y:t[i].clientY});return e},b=function(t,e,i){return e&&t?"x"===i?t.x-e.x:"y"===i?t.y-e.y:Math.sqrt(Math.pow(t.x-e.x,2)+Math.pow(t.y-e.y,2)):0},c=function(t){if(t.is('a,area,button,[role="button"],input,label,select,summary,textarea,video,audio')||m.isFunction(t.get(0).onclick)||t.data("selectable"))return!0;for(var e=0,i=t[0].attributes,n=i.length;e<n;e++)if("data-fancybox-"===i[e].nodeName.substr(0,14))return!0;return!1},u=function(t){for(var e=!1;(i=t.get(0),void 0,n=g.getComputedStyle(i)["overflow-y"],o=g.getComputedStyle(i)["overflow-x"],s=("scroll"===n||"auto"===n)&&i.scrollHeight>i.clientHeight,r=("scroll"===o||"auto"===o)&&i.scrollWidth>i.clientWidth,!(e=s||r))&&((t=t.parent()).length&&!t.hasClass("fancybox-stage")&&!t.is("body")););var i,n,o,s,r;return e},i=function(t){this.instance=t,this.$bg=t.$refs.bg,this.$stage=t.$refs.stage,this.$container=t.$refs.container,this.destroy(),this.$container.on("touchstart.fb.touch mousedown.fb.touch",m.proxy(this,"ontouchstart"))};i.prototype.destroy=function(){this.$container.off(".fb.touch")},i.prototype.ontouchstart=function(t){var e=this,i=m(t.target),n=e.instance,o=n.current,s=o.$slide,r=o.$content,a="touchstart"==t.type;if(a&&e.$container.off("mousedown.fb.touch"),(!t.originalEvent||2!=t.originalEvent.button)&&s.length&&i.length&&!c(i)&&!c(i.parent())&&(i.is("img")||!(t.originalEvent.clientX>i[0].clientWidth+i.offset().left))){if(!o||n.isAnimating||n.isClosing)return t.stopPropagation(),void t.preventDefault();if(e.realPoints=e.startPoints=d(t),e.startPoints.length){if(o.touch&&t.stopPropagation(),e.startEvent=t,e.canTap=!o.$slide.hasClass("fancybox-animated"),e.$target=i,e.$content=r,e.opts=o.opts.touch,e.isPanning=!1,e.isSwiping=!1,e.isZooming=!1,e.isScrolling=!1,e.canPan=n.canPan(),e.startTime=(new Date).getTime(),e.distanceX=e.distanceY=e.distance=0,e.canvasWidth=Math.round(s[0].clientWidth),e.canvasHeight=Math.round(s[0].clientHeight),e.contentLastPos=null,e.contentStartPos=m.fancybox.getTranslate(e.$content)||{top:0,left:0},e.sliderStartPos=e.sliderLastPos||m.fancybox.getTranslate(s),e.stagePos=m.fancybox.getTranslate(n.$refs.stage),e.sliderStartPos.top-=e.stagePos.top,e.sliderStartPos.left-=e.stagePos.left,e.contentStartPos.top-=e.stagePos.top,e.contentStartPos.left-=e.stagePos.left,m(l).off(".fb.touch").on(a?"touchend.fb.touch touchcancel.fb.touch":"mouseup.fb.touch mouseleave.fb.touch",m.proxy(e,"ontouchend")).on(a?"touchmove.fb.touch":"mousemove.fb.touch",m.proxy(e,"ontouchmove")),m.fancybox.isMobile&&l.addEventListener("scroll",e.onscroll,!0),!e.opts&&!e.canPan||!i.is(e.$stage)&&!e.$stage.find(i).length)return void(i.is(".fancybox-image")&&t.preventDefault());e.isScrollable=u(i)||u(i.parent()),m.fancybox.isMobile&&e.isScrollable||t.preventDefault(),(1===e.startPoints.length||o.hasError)&&(e.canPan?(m.fancybox.stop(e.$content),e.isPanning=!0):e.isSwiping=!0,e.$container.addClass("fancybox-is-grabbing")),2===e.startPoints.length&&"image"===o.type&&(o.isLoaded||o.$ghost)&&(e.canTap=!1,e.isSwiping=!1,e.isPanning=!1,e.isZooming=!0,m.fancybox.stop(e.$content),e.centerPointStartX=.5*(e.startPoints[0].x+e.startPoints[1].x)-m(g).scrollLeft(),e.centerPointStartY=.5*(e.startPoints[0].y+e.startPoints[1].y)-m(g).scrollTop(),e.percentageOfImageAtPinchPointX=(e.centerPointStartX-e.contentStartPos.left)/e.contentStartPos.width,e.percentageOfImageAtPinchPointY=(e.centerPointStartY-e.contentStartPos.top)/e.contentStartPos.height,e.startDistanceBetweenFingers=b(e.startPoints[0],e.startPoints[1]))}}},i.prototype.onscroll=function(t){this.isScrolling=!0,l.removeEventListener("scroll",this.onscroll,!0)},i.prototype.ontouchmove=function(t){var e=this;return void 0!==t.originalEvent.buttons&&0===t.originalEvent.buttons?void e.ontouchend(t):e.isScrolling?void(e.canTap=!1):(e.newPoints=d(t),void((e.opts||e.canPan)&&e.newPoints.length&&e.newPoints.length&&(e.isSwiping&&!0===e.isSwiping||t.preventDefault(),e.distanceX=b(e.newPoints[0],e.startPoints[0],"x"),e.distanceY=b(e.newPoints[0],e.startPoints[0],"y"),e.distance=b(e.newPoints[0],e.startPoints[0]),0<e.distance&&(e.isSwiping?e.onSwipe(t):e.isPanning?e.onPan():e.isZooming&&e.onZoom()))))},i.prototype.onSwipe=function(t){var e,o=this,s=o.instance,i=o.isSwiping,n=o.sliderStartPos.left||0;if(!0!==i)"x"==i&&(0<o.distanceX&&(o.instance.group.length<2||0===o.instance.current.index&&!o.instance.current.opts.loop)?n+=Math.pow(o.distanceX,.8):o.distanceX<0&&(o.instance.group.length<2||o.instance.current.index===o.instance.group.length-1&&!o.instance.current.opts.loop)?n-=Math.pow(-o.distanceX,.8):n+=o.distanceX),o.sliderLastPos={top:"x"==i?0:o.sliderStartPos.top+o.distanceY,left:n},o.requestId&&(y(o.requestId),o.requestId=null),o.requestId=v(function(){o.sliderLastPos&&(m.each(o.instance.slides,function(t,e){var i=e.pos-o.instance.currPos;m.fancybox.setTranslate(e.$slide,{top:o.sliderLastPos.top,left:o.sliderLastPos.left+i*o.canvasWidth+i*e.opts.gutter})}),o.$container.addClass("fancybox-is-sliding"))});else if(10<Math.abs(o.distance)){if(o.canTap=!1,s.group.length<2&&o.opts.vertical?o.isSwiping="y":s.isDragging||!1===o.opts.vertical||"auto"===o.opts.vertical&&800<m(g).width()?o.isSwiping="x":(e=Math.abs(180*Math.atan2(o.distanceY,o.distanceX)/Math.PI),o.isSwiping=45<e&&e<135?"y":"x"),"y"===o.isSwiping&&m.fancybox.isMobile&&o.isScrollable)return void(o.isScrolling=!0);s.isDragging=o.isSwiping,o.startPoints=o.newPoints,m.each(s.slides,function(t,e){var i,n;m.fancybox.stop(e.$slide),i=m.fancybox.getTranslate(e.$slide),n=m.fancybox.getTranslate(s.$refs.stage),e.$slide.removeAttr("style").removeClass("fancybox-animated").removeClass(function(t,e){return(e.match(/(^|\s)fancybox-fx-\S+/g)||[]).join(" ")}),e.pos===s.current.pos&&(o.sliderStartPos.left=i.left-n.left),m.fancybox.setTranslate(e.$slide,{top:i.top-n.top,left:i.left-n.left})}),s.SlideShow&&s.SlideShow.isActive&&s.SlideShow.stop()}},i.prototype.onPan=function(){var t=this;return b(t.newPoints[0],t.realPoints[0])<(m.fancybox.isMobile?10:5)?void(t.startPoints=t.newPoints):(t.canTap=!1,t.contentLastPos=t.limitMovement(),t.requestId&&(y(t.requestId),t.requestId=null),void(t.requestId=v(function(){m.fancybox.setTranslate(t.$content,t.contentLastPos)})))},i.prototype.limitMovement=function(){var t,e,i,n,o,s,r=this.canvasWidth,a=this.canvasHeight,l=this.distanceX,c=this.distanceY,d=this.contentStartPos,u=d.left,h=d.top,p=d.width,f=d.height;return o=r<p?u+l:u,s=h+c,t=Math.max(0,.5*r-.5*p),e=Math.max(0,.5*a-.5*f),i=Math.min(r-p,.5*r-.5*p),n=Math.min(a-f,.5*a-.5*f),0<l&&t<o&&(o=t-1+Math.pow(-t+u+l,.8)||0),l<0&&o<i&&(o=i+1-Math.pow(i-u-l,.8)||0),0<c&&e<s&&(s=e-1+Math.pow(-e+h+c,.8)||0),c<0&&s<n&&(s=n+1-Math.pow(n-h-c,.8)||0),{top:s,left:o}},i.prototype.limitPosition=function(t,e,i,n){var o=this.canvasWidth,s=this.canvasHeight;return o<i?t=(t=0<t?0:t)<o-i?o-i:t:t=Math.max(0,o/2-i/2),s<n?e=(e=0<e?0:e)<s-n?s-n:e:e=Math.max(0,s/2-n/2),{top:e,left:t}},i.prototype.onZoom=function(){var t=this,e=t.contentStartPos,i=e.width,n=e.height,o=e.left,s=e.top,r=b(t.newPoints[0],t.newPoints[1])/t.startDistanceBetweenFingers,a=Math.floor(i*r),l=Math.floor(n*r),c=(i-a)*t.percentageOfImageAtPinchPointX,d=(n-l)*t.percentageOfImageAtPinchPointY,u=(t.newPoints[0].x+t.newPoints[1].x)/2-m(g).scrollLeft(),h=(t.newPoints[0].y+t.newPoints[1].y)/2-m(g).scrollTop(),p=u-t.centerPointStartX,f={top:s+(d+(h-t.centerPointStartY)),left:o+(c+p),scaleX:r,scaleY:r};t.canTap=!1,t.newWidth=a,t.newHeight=l,t.contentLastPos=f,t.requestId&&(y(t.requestId),t.requestId=null),t.requestId=v(function(){m.fancybox.setTranslate(t.$content,t.contentLastPos)})},i.prototype.ontouchend=function(t){var e=this,i=e.isSwiping,n=e.isPanning,o=e.isZooming,s=e.isScrolling;return e.endPoints=d(t),e.dMs=Math.max((new Date).getTime()-e.startTime,1),e.$container.removeClass("fancybox-is-grabbing"),m(l).off(".fb.touch"),l.removeEventListener("scroll",e.onscroll,!0),e.requestId&&(y(e.requestId),e.requestId=null),e.isSwiping=!1,e.isPanning=!1,e.isZooming=!1,e.isScrolling=!1,e.instance.isDragging=!1,e.canTap?e.onTap(t):(e.speed=100,e.velocityX=e.distanceX/e.dMs*.5,e.velocityY=e.distanceY/e.dMs*.5,void(n?e.endPanning():o?e.endZooming():e.endSwiping(i,s)))},i.prototype.endSwiping=function(t,e){var i=this,n=!1,o=i.instance.group.length,s=Math.abs(i.velocityX),r=Math.abs(i.distanceX),a="x"==t&&1<o&&(130<i.dMs&&10<r||50<r),l=.8<Math.abs(s*i.canvasWidth/i.canvasWidth)?366:500;i.sliderLastPos=null,"y"==t&&!e&&50<Math.abs(i.distanceY)?(m.fancybox.animate(i.instance.current.$slide,{top:i.sliderStartPos.top+i.distanceY+150*i.velocityY,opacity:0},200),n=i.instance.close(!0,200)):a&&0<i.distanceX?n=i.instance.previous(l):a&&i.distanceX<0&&(n=i.instance.next(l)),!1!==n||"x"!=t&&"y"!=t||i.instance.centerSlide(i.instance.current,150),i.$container.removeClass("fancybox-is-sliding")},i.prototype.endPanning=function(){var t,e,i,n=this;n.contentLastPos&&(!1===n.opts.momentum||350<n.dMs?(t=n.contentLastPos.left,e=n.contentLastPos.top):(t=n.contentLastPos.left+500*n.velocityX,e=n.contentLastPos.top+500*n.velocityY),(i=n.limitPosition(t,e,n.contentStartPos.width,n.contentStartPos.height)).width=n.contentStartPos.width,i.height=n.contentStartPos.height,m.fancybox.animate(n.$content,i,330))},i.prototype.endZooming=function(){var t,e,i,n,o=this,s=o.instance.current,r=o.newWidth,a=o.newHeight;o.contentLastPos&&(t=o.contentLastPos.left,n={top:e=o.contentLastPos.top,left:t,width:r,height:a,scaleX:1,scaleY:1},m.fancybox.setTranslate(o.$content,n),r<o.canvasWidth&&a<o.canvasHeight?o.instance.scaleToFit(150):r>s.width||a>s.height?o.instance.scaleToActual(o.centerPointStartX,o.centerPointStartY,150):(i=o.limitPosition(t,e,r,a),m.fancybox.setTranslate(o.$content,m.fancybox.getTranslate(o.$content)),m.fancybox.animate(o.$content,i,150)))},i.prototype.onTap=function(i){var t,n=this,e=m(i.target),o=n.instance,s=o.current,r=i&&d(i)||n.startPoints,a=r[0]?r[0].x-m(g).scrollLeft()-n.stagePos.left:0,l=r[0]?r[0].y-m(g).scrollTop()-n.stagePos.top:0,c=function(t){var e=s.opts[t];if(m.isFunction(e)&&(e=e.apply(o,[s,i])),e)switch(e){case"close":o.close(n.startEvent);break;case"toggleControls":o.toggleControls(!0);break;case"next":o.next();break;case"nextOrClose":1<o.group.length?o.next():o.close(n.startEvent);break;case"zoom":"image"==s.type&&(s.isLoaded||s.$ghost)&&(o.canPan()?o.scaleToFit():o.isScaledDown()?o.scaleToActual(a,l):o.group.length<2&&o.close(n.startEvent))}};if((!i.originalEvent||2!=i.originalEvent.button)&&(e.is("img")||!(a>e[0].clientWidth+e.offset().left))){if(e.is(".fancybox-bg,.fancybox-inner,.fancybox-outer,.fancybox-container"))t="Outside";else if(e.is(".fancybox-slide"))t="Slide";else{if(!o.current.$content||!o.current.$content.find(e).addBack().filter(e).length)return;t="Content"}if(n.tapped){if(clearTimeout(n.tapped),n.tapped=null,50<Math.abs(a-n.tapX)||50<Math.abs(l-n.tapY))return this;c("dblclick"+t)}else n.tapX=a,n.tapY=l,s.opts["dblclick"+t]&&s.opts["dblclick"+t]!==s.opts["click"+t]?n.tapped=setTimeout(function(){n.tapped=null,c("click"+t)},500):c("click"+t);return this}},m(l).on("onActivate.fb",function(t,e){e&&!e.Guestures&&(e.Guestures=new i(e))})}(window,document,jQuery),function(r,a){"use strict";a.extend(!0,a.fancybox.defaults,{btnTpl:{slideShow:'<button data-fancybox-play class="fancybox-button fancybox-button--play" title="{{PLAY_START}}"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M6.5 5.4v13.2l11-6.6z"/></svg><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M8.33 5.75h2.2v12.5h-2.2V5.75zm5.15 0h2.2v12.5h-2.2V5.75z"/></svg></button>'},slideShow:{autoStart:!1,speed:3e3,progress:!0}});var i=function(t){this.instance=t,this.init()};a.extend(i.prototype,{timer:null,isActive:!1,$button:null,init:function(){var t=this,e=t.instance,i=e.group[e.currIndex].opts.slideShow;t.$button=e.$refs.toolbar.find("[data-fancybox-play]").on("click",function(){t.toggle()}),e.group.length<2||!i?t.$button.hide():i.progress&&(t.$progress=a('<div class="fancybox-progress"></div>').appendTo(e.$refs.inner))},set:function(t){var e=this.instance,i=e.current;i&&(!0===t||i.opts.loop||e.currIndex<e.group.length-1)?this.isActive&&"video"!==i.contentType&&(this.$progress&&a.fancybox.animate(this.$progress.show(),{scaleX:1},i.opts.slideShow.speed),this.timer=setTimeout(function(){e.jumpTo((e.currIndex+1)%e.group.length)},i.opts.slideShow.speed)):(this.stop(),e.idleSecondsCounter=0,e.showControls())},clear:function(){clearTimeout(this.timer),this.timer=null,this.$progress&&this.$progress.removeAttr("style").hide()},start:function(){var t=this.instance.current;t&&(this.$button.attr("title",t.opts.i18n[t.opts.lang].PLAY_STOP).removeClass("fancybox-button--play").addClass("fancybox-button--pause"),this.isActive=!0,t.isComplete&&this.set(!0),this.instance.trigger("onSlideShowChange",!0))},stop:function(){var t=this.instance.current;this.clear(),this.$button.attr("title",t.opts.i18n[t.opts.lang].PLAY_START).removeClass("fancybox-button--pause").addClass("fancybox-button--play"),this.isActive=!1,this.instance.trigger("onSlideShowChange",!1),this.$progress&&this.$progress.removeAttr("style").hide()},toggle:function(){this.isActive?this.stop():this.start()}}),a(r).on({"onInit.fb":function(t,e){e&&!e.SlideShow&&(e.SlideShow=new i(e))},"beforeShow.fb":function(t,e,i,n){var o=e&&e.SlideShow;n?o&&i.opts.slideShow.autoStart&&o.start():o&&o.isActive&&o.clear()},"afterShow.fb":function(t,e,i){var n=e&&e.SlideShow;n&&n.isActive&&n.set()},"afterKeydown.fb":function(t,e,i,n,o){var s=e&&e.SlideShow;!s||!i.opts.slideShow||80!==o&&32!==o||a(r.activeElement).is("button,a,input")||(n.preventDefault(),s.toggle())},"beforeClose.fb onDeactivate.fb":function(t,e){var i=e&&e.SlideShow;i&&i.stop()}}),a(r).on("visibilitychange",function(){var t=a.fancybox.getInstance(),e=t&&t.SlideShow;e&&e.isActive&&(r.hidden?e.clear():e.set())})}(document,jQuery),function(s,i){"use strict";var n=function(){for(var t=[["requestFullscreen","exitFullscreen","fullscreenElement","fullscreenEnabled","fullscreenchange","fullscreenerror"],["webkitRequestFullscreen","webkitExitFullscreen","webkitFullscreenElement","webkitFullscreenEnabled","webkitfullscreenchange","webkitfullscreenerror"],["webkitRequestFullScreen","webkitCancelFullScreen","webkitCurrentFullScreenElement","webkitCancelFullScreen","webkitfullscreenchange","webkitfullscreenerror"],["mozRequestFullScreen","mozCancelFullScreen","mozFullScreenElement","mozFullScreenEnabled","mozfullscreenchange","mozfullscreenerror"],["msRequestFullscreen","msExitFullscreen","msFullscreenElement","msFullscreenEnabled","MSFullscreenChange","MSFullscreenError"]],e={},i=0;i<t.length;i++){var n=t[i];if(n&&n[1]in s){for(var o=0;o<n.length;o++)e[t[0][o]]=n[o];return e}}return!1}();if(n){var o={request:function(t){(t=t||s.documentElement)[n.requestFullscreen](t.ALLOW_KEYBOARD_INPUT)},exit:function(){s[n.exitFullscreen]()},toggle:function(t){t=t||s.documentElement,this.isFullscreen()?this.exit():this.request(t)},isFullscreen:function(){return Boolean(s[n.fullscreenElement])},enabled:function(){return Boolean(s[n.fullscreenEnabled])}};i.extend(!0,i.fancybox.defaults,{btnTpl:{fullScreen:'<button data-fancybox-fullscreen class="fancybox-button fancybox-button--fsenter" title="{{FULL_SCREEN}}"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M7 14H5v5h5v-2H7v-3zm-2-4h2V7h3V5H5v5zm12 7h-3v2h5v-5h-2v3zM14 5v2h3v3h2V5h-5z"/></svg><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M5 16h3v3h2v-5H5zm3-8H5v2h5V5H8zm6 11h2v-3h3v-2h-5zm2-11V5h-2v5h5V8z"/></svg></button>'},fullScreen:{autoStart:!1}}),i(s).on(n.fullscreenchange,function(){var t=o.isFullscreen(),e=i.fancybox.getInstance();e&&(e.current&&"image"===e.current.type&&e.isAnimating&&(e.current.$content.css("transition","none"),e.isAnimating=!1,e.update(!0,!0,0)),e.trigger("onFullscreenChange",t),e.$refs.container.toggleClass("fancybox-is-fullscreen",t),e.$refs.toolbar.find("[data-fancybox-fullscreen]").toggleClass("fancybox-button--fsenter",!t).toggleClass("fancybox-button--fsexit",t))})}i(s).on({"onInit.fb":function(t,e){return n?void(e&&e.group[e.currIndex].opts.fullScreen?(e.$refs.container.on("click.fb-fullscreen","[data-fancybox-fullscreen]",function(t){t.stopPropagation(),t.preventDefault(),o.toggle()}),e.opts.fullScreen&&!0===e.opts.fullScreen.autoStart&&o.request(),e.FullScreen=o):e&&e.$refs.toolbar.find("[data-fancybox-fullscreen]").hide()):void e.$refs.toolbar.find("[data-fancybox-fullscreen]").remove()},"afterKeydown.fb":function(t,e,i,n,o){e&&e.FullScreen&&70===o&&(n.preventDefault(),e.FullScreen.toggle())},"beforeClose.fb":function(t,e){e&&e.FullScreen&&e.$refs.container.hasClass("fancybox-is-fullscreen")&&o.exit()}})}(document,jQuery),function(t,s){"use strict";var r="fancybox-thumbs",a=r+"-active";s.fancybox.defaults=s.extend(!0,{btnTpl:{thumbs:'<button data-fancybox-thumbs class="fancybox-button fancybox-button--thumbs" title="{{THUMBS}}"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M14.59 14.59h3.76v3.76h-3.76v-3.76zm-4.47 0h3.76v3.76h-3.76v-3.76zm-4.47 0h3.76v3.76H5.65v-3.76zm8.94-4.47h3.76v3.76h-3.76v-3.76zm-4.47 0h3.76v3.76h-3.76v-3.76zm-4.47 0h3.76v3.76H5.65v-3.76zm8.94-4.47h3.76v3.76h-3.76V5.65zm-4.47 0h3.76v3.76h-3.76V5.65zm-4.47 0h3.76v3.76H5.65V5.65z"/></svg></button>'},thumbs:{autoStart:!1,hideOnClose:!0,parentEl:".fancybox-container",axis:"y"}},s.fancybox.defaults);var n=function(t){this.init(t)};s.extend(n.prototype,{$button:null,$grid:null,$list:null,isVisible:!1,isActive:!1,init:function(t){var e,i,n=this;((n.instance=t).Thumbs=n).opts=t.group[t.currIndex].opts.thumbs,e=(e=t.group[0]).opts.thumb||!(!e.opts.$thumb||!e.opts.$thumb.length)&&e.opts.$thumb.attr("src"),1<t.group.length&&(i=(i=t.group[1]).opts.thumb||!(!i.opts.$thumb||!i.opts.$thumb.length)&&i.opts.$thumb.attr("src")),n.$button=t.$refs.toolbar.find("[data-fancybox-thumbs]"),n.opts&&e&&i?(n.$button.show().on("click",function(){n.toggle()}),n.isActive=!0):n.$button.hide()},create:function(){var i,t=this,e=t.instance,n=t.opts.parentEl,o=[];t.$grid||(t.$grid=s('<div class="'+r+" "+r+"-"+t.opts.axis+'"></div>').appendTo(e.$refs.container.find(n).addBack().filter(n)),t.$grid.on("click","a",function(){e.jumpTo(s(this).attr("data-index"))})),t.$list||(t.$list=s('<div class="'+r+'__list">').appendTo(t.$grid)),s.each(e.group,function(t,e){(i=e.opts.thumb||(e.opts.$thumb?e.opts.$thumb.attr("src"):null))||"image"!==e.type||(i=e.src),o.push('<a href="javascript:;" tabindex="0" data-index="'+t+'"'+(i&&i.length?' style="background-image:url('+i+')"':"")+"></a>")}),t.$list[0].innerHTML=o.join(""),"x"===t.opts.axis&&t.$list.width(parseInt(t.$grid.css("padding-right"),10)+e.group.length*t.$list.children().eq(0).outerWidth(!0))},focus:function(t){var e,i,n=this.$list,o=this.$grid;this.instance.current&&(i=(e=n.children().removeClass(a).filter('[data-index="'+this.instance.current.index+'"]').addClass(a)).position(),"y"===this.opts.axis&&(i.top<0||i.top>n.height()-e.outerHeight())?n.stop().animate({scrollTop:n.scrollTop()+i.top},t):"x"===this.opts.axis&&(i.left<o.scrollLeft()||i.left>o.scrollLeft()+(o.width()-e.outerWidth()))&&n.parent().stop().animate({scrollLeft:i.left},t))},update:function(){this.instance.$refs.container.toggleClass("fancybox-show-thumbs",this.isVisible),this.isVisible?(this.$grid||this.create(),this.instance.trigger("onThumbsShow"),this.focus(0)):this.$grid&&this.instance.trigger("onThumbsHide"),this.instance.update()},hide:function(){this.isVisible=!1,this.update()},show:function(){this.isVisible=!0,this.update()},toggle:function(){this.isVisible=!this.isVisible,this.update()}}),s(t).on({"onInit.fb":function(t,e){var i;e&&!e.Thumbs&&((i=new n(e)).isActive&&!0===i.opts.autoStart&&i.show())},"beforeShow.fb":function(t,e,i,n){var o=e&&e.Thumbs;o&&o.isVisible&&o.focus(n?0:250)},"afterKeydown.fb":function(t,e,i,n,o){var s=e&&e.Thumbs;s&&s.isActive&&71===o&&(n.preventDefault(),s.toggle())},"beforeClose.fb":function(t,e){var i=e&&e.Thumbs;i&&i.isVisible&&!1!==i.opts.hideOnClose&&i.$grid.hide()}})}(document,jQuery),function(t,r){"use strict";r.extend(!0,r.fancybox.defaults,{btnTpl:{share:'<button data-fancybox-share class="fancybox-button fancybox-button--share" title="{{SHARE}}"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M2.55 19c1.4-8.4 9.1-9.8 11.9-9.8V5l7 7-7 6.3v-3.5c-2.8 0-10.5 2.1-11.9 4.2z"/></svg></button>'},share:{url:function(t,e){return!t.currentHash&&"inline"!==e.type&&"html"!==e.type&&(e.origSrc||e.src)||window.location},tpl:'<div class="fancybox-share"><h1>{{SHARE}}</h1><p><a class="fancybox-share__button fancybox-share__button--fb" href="https://www.facebook.com/sharer/sharer.php?u={{url}}"><svg viewBox="0 0 512 512" xmlns="http://www.w3.org/2000/svg"><path d="m287 456v-299c0-21 6-35 35-35h38v-63c-7-1-29-3-55-3-54 0-91 33-91 94v306m143-254h-205v72h196" /></svg><span>Facebook</span></a><a class="fancybox-share__button fancybox-share__button--tw" href="https://twitter.com/intent/tweet?url={{url}}&text={{descr}}"><svg viewBox="0 0 512 512" xmlns="http://www.w3.org/2000/svg"><path d="m456 133c-14 7-31 11-47 13 17-10 30-27 37-46-15 10-34 16-52 20-61-62-157-7-141 75-68-3-129-35-169-85-22 37-11 86 26 109-13 0-26-4-37-9 0 39 28 72 65 80-12 3-25 4-37 2 10 33 41 57 77 57-42 30-77 38-122 34 170 111 378-32 359-208 16-11 30-25 41-42z" /></svg><span>Twitter</span></a><a class="fancybox-share__button fancybox-share__button--pt" href="https://www.pinterest.com/pin/create/button/?url={{url}}&description={{descr}}&media={{media}}"><svg viewBox="0 0 512 512" xmlns="http://www.w3.org/2000/svg"><path d="m265 56c-109 0-164 78-164 144 0 39 15 74 47 87 5 2 10 0 12-5l4-19c2-6 1-8-3-13-9-11-15-25-15-45 0-58 43-110 113-110 62 0 96 38 96 88 0 67-30 122-73 122-24 0-42-19-36-44 6-29 20-60 20-81 0-19-10-35-31-35-25 0-44 26-44 60 0 21 7 36 7 36l-30 125c-8 37-1 83 0 87 0 3 4 4 5 2 2-3 32-39 42-75l16-64c8 16 31 29 56 29 74 0 124-67 124-157 0-69-58-132-146-132z" fill="#fff"/></svg><span>Pinterest</span></a></p><p><input class="fancybox-share__input" type="text" value="{{url_raw}}" onclick="select()" /></p></div>'}}),r(t).on("click","[data-fancybox-share]",function(){var t,e,i,n,o=r.fancybox.getInstance(),s=o.current||null;s&&("function"===r.type(s.opts.share.url)&&(t=s.opts.share.url.apply(s,[o,s])),e=s.opts.share.tpl.replace(/\{\{media\}\}/g,"image"===s.type?encodeURIComponent(s.src):"").replace(/\{\{url\}\}/g,encodeURIComponent(t)).replace(/\{\{url_raw\}\}/g,(i=t,n={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#39;","/":"&#x2F;","`":"&#x60;","=":"&#x3D;"},String(i).replace(/[&<>"'`=\/]/g,function(t){return n[t]}))).replace(/\{\{descr\}\}/g,o.$caption?encodeURIComponent(o.$caption.text()):""),r.fancybox.open({src:o.translate(o,e),type:"html",opts:{touch:!1,animationEffect:!1,afterLoad:function(t,e){o.$refs.container.one("beforeClose.fb",function(){t.close(null,0)}),e.$content.find(".fancybox-share__button").click(function(){return window.open(this.href,"Share","width=550, height=450"),!1})},mobile:{autoFocus:!1}}}))})}(document,jQuery),function(s,r,o){"use strict";function a(){var t=s.location.hash.substr(1),e=t.split("-"),i=1<e.length&&/^\+?\d+$/.test(e[e.length-1])&&parseInt(e.pop(-1),10)||1;return{hash:t,index:i<1?1:i,gallery:e.join("-")}}function e(t){""!==t.gallery&&o("[data-fancybox='"+o.escapeSelector(t.gallery)+"']").eq(t.index-1).focus().trigger("click.fb-start")}function l(t){var e,i;return!!t&&(""!==(i=(e=t.current?t.current.opts:t.opts).hash||(e.$orig?e.$orig.data("fancybox")||e.$orig.data("fancybox-trigger"):""))&&i)}o.escapeSelector||(o.escapeSelector=function(t){return(t+"").replace(/([\0-\x1f\x7f]|^-?\d)|^-$|[^\x80-\uFFFF\w-]/g,function(t,e){return e?"\0"===t?"ï¿½":t.slice(0,-1)+"\\"+t.charCodeAt(t.length-1).toString(16)+" ":"\\"+t})}),o(function(){!1!==o.fancybox.defaults.hash&&(o(r).on({"onInit.fb":function(t,e){var i,n;!1!==e.group[e.currIndex].opts.hash&&(i=a(),(n=l(e))&&i.gallery&&n==i.gallery&&(e.currIndex=i.index-1))},"beforeShow.fb":function(t,e,i,n){var o;i&&!1!==i.opts.hash&&((o=l(e))&&(e.currentHash=o+(1<e.group.length?"-"+(i.index+1):""),s.location.hash!=="#"+e.currentHash&&(n&&!e.origHash&&(e.origHash=s.location.hash),e.hashTimer&&clearTimeout(e.hashTimer),e.hashTimer=setTimeout(function(){"replaceState"in s.history?(s.history[n?"pushState":"replaceState"]({},r.title,s.location.pathname+s.location.search+"#"+e.currentHash),n&&(e.hasCreatedHistory=!0)):s.location.hash=e.currentHash,e.hashTimer=null},300))))},"beforeClose.fb":function(t,e,i){!1!==i.opts.hash&&(clearTimeout(e.hashTimer),e.currentHash&&e.hasCreatedHistory?s.history.back():e.currentHash&&("replaceState"in s.history?s.history.replaceState({},r.title,s.location.pathname+s.location.search+(e.origHash||"")):s.location.hash=e.origHash),e.currentHash=null)}}),o(s).on("hashchange.fb",function(){var t=a(),n=null;o.each(o(".fancybox-container").get().reverse(),function(t,e){var i=o(e).data("FancyBox");if(i&&i.currentHash)return n=i,!1}),n?n.currentHash===t.gallery+"-"+t.index||1===t.index&&n.currentHash==t.gallery||(n.currentHash=null,n.close()):""!==t.gallery&&e(t)}),setTimeout(function(){o.fancybox.getInstance()||e(a())},50))})}(window,document,jQuery),function(t,e){"use strict";var o=(new Date).getTime();e(t).on({"onInit.fb":function(t,n,e){n.$refs.stage.on("mousewheel DOMMouseScroll wheel MozMousePixelScroll",function(t){var e=n.current,i=(new Date).getTime();n.group.length<2||!1===e.opts.wheel||"auto"===e.opts.wheel&&"image"!==e.type||(t.preventDefault(),t.stopPropagation(),e.$slide.hasClass("fancybox-animated")||(t=t.originalEvent||t,i-o<250||(o=i,n[(-t.deltaY||-t.deltaX||t.wheelDelta||-t.detail)<0?"next":"previous"]())))})}})}(document,jQuery),function(t){"function"==typeof define&&define.amd?define(["jquery"],t):t("object"==typeof exports?require("jquery"):jQuery)}(function(C){var n,t=navigator.userAgent,S=/iphone/i.test(t),o=/chrome/i.test(t),k=/android/i.test(t);C.mask={definitions:{9:"[0-9]",a:"[A-Za-z]","*":"[A-Za-z0-9]"},autoclear:!0,dataName:"rawMaskFn",placeholder:"_"},C.fn.extend({caret:function(t,e){var i;if(0!==this.length&&!this.is(":hidden"))return"number"==typeof t?(e="number"==typeof e?e:t,this.each(function(){this.setSelectionRange?this.setSelectionRange(t,e):this.createTextRange&&((i=this.createTextRange()).collapse(!0),i.moveEnd("character",e),i.moveStart("character",t),i.select())})):(this[0].setSelectionRange?(t=this[0].selectionStart,e=this[0].selectionEnd):document.selection&&document.selection.createRange&&(i=document.selection.createRange(),t=0-i.duplicate().moveStart("character",-1e5),e=t+i.text.length),{begin:t,end:e})},unmask:function(){return this.trigger("unmask")},mask:function(e,v){var i,y,b,w,x,_,T;if(!e&&0<this.length){var t=C(this[0]).data(C.mask.dataName);return t?t():void 0}return v=C.extend({autoclear:C.mask.autoclear,placeholder:C.mask.placeholder,completed:null},v),i=C.mask.definitions,y=[],b=_=e.length,w=null,C.each(e.split(""),function(t,e){"?"==e?(_--,b=t):i[e]?(y.push(new RegExp(i[e])),null===w&&(w=y.length-1),t<b&&(x=y.length-1)):y.push(null)}),this.trigger("unmask").each(function(){function r(){if(v.completed){for(var t=w;t<=x;t++)if(y[t]&&f[t]===a(t))return;v.completed.call(p)}}function a(t){return v.placeholder.charAt(t<v.placeholder.length?t:0)}function l(t){for(;++t<_&&!y[t];);return t}function c(t,e){var i,n;if(!(t<0)){for(i=t,n=l(e);i<_;i++)if(y[i]){if(!(n<_&&y[i].test(f[n])))break;f[i]=f[n],f[n]=a(n),n=l(n)}u(),p.caret(Math.max(w,t))}}function s(){h(),p.val()!=m&&p.change()}function d(t,e){var i;for(i=t;i<e&&i<_;i++)y[i]&&(f[i]=a(i))}function u(){p.val(f.join(""))}function h(t){var e,i,n,o=p.val(),s=-1;for(n=e=0;e<_;e++)if(y[e]){for(f[e]=a(e);n++<o.length;)if(i=o.charAt(n-1),y[e].test(i)){f[e]=i,s=e;break}if(n>o.length){d(e+1,_);break}}else f[e]===o.charAt(n)&&n++,e<b&&(s=e);return t?u():s+1<b?v.autoclear||f.join("")===g?(p.val()&&p.val(""),d(0,_)):u():(u(),p.val(p.val().substring(0,s+1))),b?e:w}var p=C(this),f=C.map(e.split(""),function(t,e){return"?"!=t?i[t]?a(e):t:void 0}),g=f.join(""),m=p.val();p.data(C.mask.dataName,function(){return C.map(f,function(t,e){return y[e]&&t!=a(e)?t:null}).join("")}),p.one("unmask",function(){p.off(".mask").removeData(C.mask.dataName)}).on("focus.mask",function(){var t;p.prop("readonly")||(clearTimeout(n),m=p.val(),t=h(),n=setTimeout(function(){p.get(0)===document.activeElement&&(u(),t==e.replace("?","").length?p.caret(0,t):p.caret(t))},10))}).on("blur.mask",s).on("keydown.mask",function(t){if(!p.prop("readonly")){var e,i,n,o=t.which||t.keyCode;T=p.val(),8===o||46===o||S&&127===o?(i=(e=p.caret()).begin,(n=e.end)-i==0&&(i=46!==o?function(t){for(;0<=--t&&!y[t];);return t}(i):n=l(i-1),n=46===o?l(n):n),d(i,n),c(i,n-1),t.preventDefault()):13===o?s.call(this,t):27===o&&(p.val(m),p.caret(0,h()),t.preventDefault())}}).on("keypress.mask",function(t){if(!p.prop("readonly")){var e,i,n,o=t.which||t.keyCode,s=p.caret();t.ctrlKey||t.altKey||t.metaKey||o<32||!o||13===o||(s.end-s.begin!=0&&(d(s.begin,s.end),c(s.begin,s.end-1)),(e=l(s.begin-1))<_&&(i=String.fromCharCode(o),y[e].test(i))&&(function(t){var e,i,n,o;for(i=a(e=t);e<_;e++)if(y[e]){if(n=l(e),o=f[e],f[e]=i,!(n<_&&y[n].test(o)))break;i=o}}(e),f[e]=i,u(),n=l(e),k?setTimeout(function(){C.proxy(C.fn.caret,p,n)()},0):p.caret(n),s.begin<=x&&r()),t.preventDefault())}}).on("input.mask paste.mask",function(){p.prop("readonly")||setTimeout(function(){var t=h(!0);p.caret(t),r()},0)}),o&&k&&p.off("input.mask").on("input.mask",function(){var t=p.val(),e=p.caret();if(T&&T.length&&T.length>t.length){for(h(!0);0<e.begin&&!y[e.begin-1];)e.begin--;if(0===e.begin)for(;e.begin<w&&!y[e.begin];)e.begin++;p.caret(e.begin,e.begin)}else{for(h(!0);e.begin<_&&!y[e.begin];)e.begin++;p.caret(e.begin,e.begin)}r()}),h()})}})}),function(){"use strict";function t(t){var e=$(".block-fixed"),i=$(".wpar-fixed").children(".block-fixed").outerHeight(),n=e.offset().top+i;$(".wpar-fixed").height(i),$(window).on("scroll resize",function(){$(this).scrollTop()>n?(e.addClass("is-fixed"),$(".fixed-phone").addClass("col-md-12")):$(this).scrollTop()<20&&(e.removeClass("is-fixed"),$(".fixed-phone").removeClass("col-md-12"))})}function s(t,e,i){return e=t.data(e)||0==t.data(e)?t.data(e):i}$(document).ready(function(){$('input[type="tel"]').mask("+7 (999) 999-99-99")}),$("*").is(".block-fixed")&&($(".block-fixed").wrapAll('<div class="wpar-fixed"></div>'),t(),$(window).on("resize",t)),$(document).ready(function(){var t=$(".header:not(.is-clone)"),e=$(".header.is-clone"),i=t.innerHeight(),n=t.offset().top+i,o=e.innerHeight(),s=Number(i+o);$(".header.is-clone").css({top:"-"+s+"px"}),$(window).scroll(function(){$(this).scrollTop()>n?$(".header.is-clone").addClass("is-fixed"):($(".header.is-clone").removeClass("is-fixed"),$(".header.is-clone").css({top:"-"+s+"px"}))})}),$(document).ready(function(){$(".carousel").each(function(t){var e=$(this),i={items:e.data("items")||1,margin:Number(e.data("margin"))||15,loop:!e.data("loop")||e.data("loop"),nav:s(e,"nav",!0),navText:["",""],dots:s(e,"dots",!1),autoplay:s(e,"autoplay",!1),autoplayTimeout:2e3,autoplaySpeed:1e3,animateOut:s(e,"animate",!1),stageOuterClass:"carousel__content",stageClass:"carousel__inner",navContainerClass:"carousel__nav",navClass:["carousel__nav-item carousel__nav-item--prev","carousel__nav-item carousel__nav-item--next"],dotsClass:"carousel__dots",dotClass:"carousel__dots-item",responsive:{}};"fade"==e.data("animate")&&(i.mouseDrag=!1);var n=(e.data("max-width")?e.data("max-width"):1200)/(i.items-1);if(e.attr("id","owl-carousel-"+t),$(this).hasClass("slider")&&(i.navContainerClass+=" carousel__nav--slider"),$(this).hasClass("slider--widget")&&(i.navContainerClass+=" carousel__nav--slider-widget",i.dotsClass+=" carousel__dots--slider-widget"),1<i.items)for(t=0;t<=i.items-1;t++){var o=String(n*t);i.responsive[o]={items:t+1}}e.owlCarousel(i)})}),$(document).ready(function(){$('[href*="#anchor-"]').on("click",function(){var t=$(this).attr("href"),e="[name="+t.replace("#","")+"]";if($("*").is(t)||$("*").is(e)){var i=$("*").is(t)?t:e,n=$(i).offset().top,o=768<=$(document).width()?".header-clone":".header-mobile",s=$(o).outerHeight(),r=n-s;console.log(o+" "+s),$("html:not(:animated),body:not(:animated)").animate({scrollTop:r},800)}return!1})}),$(function(){var t=$(".c-slide-nav__button-link"),i=$(".c-slide-nav");t.on("click",function(t){t.preventDefault();var e=$(this).data("control");i.removeClass("--is-active"),$(".c-slide-nav[data-control="+e+"]").show(),$(".c-slide-nav[data-control="+e+"]").addClass("--is-active")}),$(".c-slide-nav__open-list").on("click",function(){$(this).next().slideToggle("slow"),$(".c-slide-nav__open-list").toggleClass("--minus")}),$(".c-slide-nav__close-menu").on("click",function(){$(".c-slide-nav").removeClass("--is-active")}),$(document).mouseup(function(t){var e=$(".c-slide-nav");e.is(t.target)||0!==e.has(t.target).length||$(".c-slide-nav").removeClass("--is-active")})}),$("[data-control]").on("click",function(t){t.preventDefault();$(this).data("control");$(".header-mobile--mobile").slideToggle()}),$(".c-hidden__btn").on("click",function(t){t.preventDefault(),$(".c-hidden").slideToggle()});var e=document.getElementById("video");e.play(),e.playbackRate=.5,$(function(){var e=$(".c-modal__container");$(".c-form-message__item--close").on("click",function(t){t.preventDefault(),e.fadeOut(300)})})}(jQuery),function(d){d.extend(d.easing,{spincrementEasing:function(t,e,i,n,o){return e===o?i+n:n*(1-Math.pow(2,-10*e/o))+i}}),d.fn.spincrement=function(t){function l(t,e){if(t=t.toFixed(e),0<e&&"."!==c.decimalPoint&&(t=t.replace(".",c.decimalPoint)),c.thousandSeparator)for(;i.test(t);)t=t.replace(i,"$1"+c.thousandSeparator+"$2");return t}var c=d.extend({from:0,to:null,decimalPlaces:null,decimalPoint:".",thousandSeparator:"",duration:1e3,leeway:50,easing:"spincrementEasing",fade:!0,complete:null},t),i=new RegExp(/^(-?[0-9]+)([0-9]{3})/);return this.each(function(){var e,i=d(this),t=c.from;if(i.attr("data-from")&&(t=parseFloat(i.attr("data-from"))),i.attr("data-to"))e=parseFloat(i.attr("data-to"));else if(null!==c.to)e=c.to;else{var n=-1<d.inArray(c.thousandSeparator,["\\","^","$","*","+","?","."])?"\\"+c.thousandSeparator:c.thousandSeparator,o=new RegExp(n,"g");e=parseFloat(i.text().replace(o,""))}var s,r=c.duration;if(c.leeway&&(r+=Math.round(c.duration*(2*Math.random()-1)*c.leeway/100)),i.attr("data-dp"))s=parseInt(i.attr("data-dp"),10);else if(null!==c.decimalPlaces)s=c.decimalPlaces;else{var a=i.text().indexOf(c.decimalPoint);s=-1<a?i.text().length-(a+1):0}i.css("counter",t),c.fade&&i.css("opacity",0),i.animate({counter:e,opacity:1},{easing:c.easing,duration:r,step:function(t){i.html(l(t*e,s))},complete:function(){i.css("counter",null),i.html(l(e,s)),c.complete&&c.complete(i)}})})}}(jQuery);
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1haW4uanMiXSwibmFtZXMiOlsiZ2xvYmFsIiwiZmFjdG9yeSIsIm1vZHVsZSIsImV4cG9ydHMiLCJkb2N1bWVudCIsInciLCJFcnJvciIsIndpbmRvdyIsInRoaXMiLCJub0dsb2JhbCIsImFyciIsImdldFByb3RvIiwiT2JqZWN0IiwiZ2V0UHJvdG90eXBlT2YiLCJzbGljZSIsImNvbmNhdCIsInB1c2giLCJpbmRleE9mIiwiY2xhc3MydHlwZSIsInRvU3RyaW5nIiwiaGFzT3duIiwiaGFzT3duUHJvcGVydHkiLCJmblRvU3RyaW5nIiwiT2JqZWN0RnVuY3Rpb25TdHJpbmciLCJjYWxsIiwic3VwcG9ydCIsImlzRnVuY3Rpb24iLCJvYmoiLCJub2RlVHlwZSIsImlzV2luZG93IiwicHJlc2VydmVkU2NyaXB0QXR0cmlidXRlcyIsInR5cGUiLCJzcmMiLCJub01vZHVsZSIsIkRPTUV2YWwiLCJjb2RlIiwiZG9jIiwibm9kZSIsImkiLCJzY3JpcHQiLCJjcmVhdGVFbGVtZW50IiwidGV4dCIsImhlYWQiLCJhcHBlbmRDaGlsZCIsInBhcmVudE5vZGUiLCJyZW1vdmVDaGlsZCIsInRvVHlwZSIsInZlcnNpb24iLCJqUXVlcnkiLCJzZWxlY3RvciIsImNvbnRleHQiLCJmbiIsImluaXQiLCJydHJpbSIsImlzQXJyYXlMaWtlIiwibGVuZ3RoIiwicHJvdG90eXBlIiwianF1ZXJ5IiwiY29uc3RydWN0b3IiLCJ0b0FycmF5IiwiZ2V0IiwibnVtIiwicHVzaFN0YWNrIiwiZWxlbXMiLCJyZXQiLCJtZXJnZSIsInByZXZPYmplY3QiLCJlYWNoIiwiY2FsbGJhY2siLCJtYXAiLCJlbGVtIiwiYXBwbHkiLCJhcmd1bWVudHMiLCJmaXJzdCIsImVxIiwibGFzdCIsImxlbiIsImoiLCJlbmQiLCJzb3J0Iiwic3BsaWNlIiwiZXh0ZW5kIiwib3B0aW9ucyIsIm5hbWUiLCJjb3B5IiwiY29weUlzQXJyYXkiLCJjbG9uZSIsInRhcmdldCIsImRlZXAiLCJpc1BsYWluT2JqZWN0IiwiQXJyYXkiLCJpc0FycmF5IiwidW5kZWZpbmVkIiwiZXhwYW5kbyIsIk1hdGgiLCJyYW5kb20iLCJyZXBsYWNlIiwiaXNSZWFkeSIsImVycm9yIiwibXNnIiwibm9vcCIsInByb3RvIiwiQ3RvciIsImlzRW1wdHlPYmplY3QiLCJnbG9iYWxFdmFsIiwidHJpbSIsIm1ha2VBcnJheSIsInJlc3VsdHMiLCJpbkFycmF5Iiwic2Vjb25kIiwiZ3JlcCIsImludmVydCIsIm1hdGNoZXMiLCJjYWxsYmFja0V4cGVjdCIsImFyZyIsInZhbHVlIiwiZ3VpZCIsIlN5bWJvbCIsIml0ZXJhdG9yIiwic3BsaXQiLCJ0b0xvd2VyQ2FzZSIsIlNpenpsZSIsIkV4cHIiLCJnZXRUZXh0IiwiaXNYTUwiLCJ0b2tlbml6ZSIsImNvbXBpbGUiLCJzZWxlY3QiLCJvdXRlcm1vc3RDb250ZXh0Iiwic29ydElucHV0IiwiaGFzRHVwbGljYXRlIiwic2V0RG9jdW1lbnQiLCJkb2NFbGVtIiwiZG9jdW1lbnRJc0hUTUwiLCJyYnVnZ3lRU0EiLCJyYnVnZ3lNYXRjaGVzIiwiY29udGFpbnMiLCJEYXRlIiwicHJlZmVycmVkRG9jIiwiZGlycnVucyIsImRvbmUiLCJjbGFzc0NhY2hlIiwiY3JlYXRlQ2FjaGUiLCJ0b2tlbkNhY2hlIiwiY29tcGlsZXJDYWNoZSIsInNvcnRPcmRlciIsImEiLCJiIiwicG9wIiwicHVzaF9uYXRpdmUiLCJsaXN0IiwiYm9vbGVhbnMiLCJ3aGl0ZXNwYWNlIiwiaWRlbnRpZmllciIsImF0dHJpYnV0ZXMiLCJwc2V1ZG9zIiwicndoaXRlc3BhY2UiLCJSZWdFeHAiLCJyY29tbWEiLCJyY29tYmluYXRvcnMiLCJyYXR0cmlidXRlUXVvdGVzIiwicnBzZXVkbyIsInJpZGVudGlmaWVyIiwibWF0Y2hFeHByIiwiSUQiLCJDTEFTUyIsIlRBRyIsIkFUVFIiLCJQU0VVRE8iLCJDSElMRCIsImJvb2wiLCJuZWVkc0NvbnRleHQiLCJyaW5wdXRzIiwicmhlYWRlciIsInJuYXRpdmUiLCJycXVpY2tFeHByIiwicnNpYmxpbmciLCJydW5lc2NhcGUiLCJmdW5lc2NhcGUiLCJfIiwiZXNjYXBlZCIsImVzY2FwZWRXaGl0ZXNwYWNlIiwiaGlnaCIsIlN0cmluZyIsImZyb21DaGFyQ29kZSIsInJjc3Nlc2NhcGUiLCJmY3NzZXNjYXBlIiwiY2giLCJhc0NvZGVQb2ludCIsImNoYXJDb2RlQXQiLCJ1bmxvYWRIYW5kbGVyIiwiZGlzYWJsZWRBbmNlc3RvciIsImFkZENvbWJpbmF0b3IiLCJkaXNhYmxlZCIsImRpciIsIm5leHQiLCJjaGlsZE5vZGVzIiwiZSIsImVscyIsInNlZWQiLCJtIiwibmlkIiwibWF0Y2giLCJncm91cHMiLCJuZXdTZWxlY3RvciIsIm5ld0NvbnRleHQiLCJvd25lckRvY3VtZW50IiwiZXhlYyIsImdldEVsZW1lbnRCeUlkIiwiaWQiLCJnZXRFbGVtZW50c0J5VGFnTmFtZSIsImdldEVsZW1lbnRzQnlDbGFzc05hbWUiLCJxc2EiLCJ0ZXN0Iiwibm9kZU5hbWUiLCJnZXRBdHRyaWJ1dGUiLCJzZXRBdHRyaWJ1dGUiLCJ0b1NlbGVjdG9yIiwiam9pbiIsInRlc3RDb250ZXh0IiwicXVlcnlTZWxlY3RvckFsbCIsInFzYUVycm9yIiwicmVtb3ZlQXR0cmlidXRlIiwia2V5cyIsImNhY2hlIiwia2V5IiwiY2FjaGVMZW5ndGgiLCJzaGlmdCIsIm1hcmtGdW5jdGlvbiIsImFzc2VydCIsImVsIiwiYWRkSGFuZGxlIiwiYXR0cnMiLCJoYW5kbGVyIiwiYXR0ckhhbmRsZSIsInNpYmxpbmdDaGVjayIsImN1ciIsImRpZmYiLCJzb3VyY2VJbmRleCIsIm5leHRTaWJsaW5nIiwiY3JlYXRlSW5wdXRQc2V1ZG8iLCJjcmVhdGVCdXR0b25Qc2V1ZG8iLCJjcmVhdGVEaXNhYmxlZFBzZXVkbyIsImlzRGlzYWJsZWQiLCJjcmVhdGVQb3NpdGlvbmFsUHNldWRvIiwiYXJndW1lbnQiLCJtYXRjaEluZGV4ZXMiLCJkb2N1bWVudEVsZW1lbnQiLCJoYXNDb21wYXJlIiwic3ViV2luZG93IiwiZGVmYXVsdFZpZXciLCJ0b3AiLCJhZGRFdmVudExpc3RlbmVyIiwiYXR0YWNoRXZlbnQiLCJjbGFzc05hbWUiLCJjcmVhdGVDb21tZW50IiwiZ2V0QnlJZCIsImdldEVsZW1lbnRzQnlOYW1lIiwiZmlsdGVyIiwiYXR0cklkIiwiZmluZCIsImdldEF0dHJpYnV0ZU5vZGUiLCJ0YWciLCJ0bXAiLCJpbm5lckhUTUwiLCJpbnB1dCIsIm1hdGNoZXNTZWxlY3RvciIsIndlYmtpdE1hdGNoZXNTZWxlY3RvciIsIm1vek1hdGNoZXNTZWxlY3RvciIsIm9NYXRjaGVzU2VsZWN0b3IiLCJtc01hdGNoZXNTZWxlY3RvciIsImRpc2Nvbm5lY3RlZE1hdGNoIiwiY29tcGFyZURvY3VtZW50UG9zaXRpb24iLCJhZG93biIsImJ1cCIsImNvbXBhcmUiLCJzb3J0RGV0YWNoZWQiLCJhdXAiLCJhcCIsImJwIiwidW5zaGlmdCIsImV4cHIiLCJlbGVtZW50cyIsImF0dHIiLCJ2YWwiLCJzcGVjaWZpZWQiLCJlc2NhcGUiLCJzZWwiLCJ1bmlxdWVTb3J0IiwiZHVwbGljYXRlcyIsImRldGVjdER1cGxpY2F0ZXMiLCJzb3J0U3RhYmxlIiwidGV4dENvbnRlbnQiLCJmaXJzdENoaWxkIiwibm9kZVZhbHVlIiwic2VsZWN0b3JzIiwiY3JlYXRlUHNldWRvIiwicmVsYXRpdmUiLCI+IiwiICIsIisiLCJ+IiwicHJlRmlsdGVyIiwiZXhjZXNzIiwidW5xdW90ZWQiLCJub2RlTmFtZVNlbGVjdG9yIiwicGF0dGVybiIsIm9wZXJhdG9yIiwiY2hlY2siLCJyZXN1bHQiLCJ3aGF0Iiwic2ltcGxlIiwiZm9yd2FyZCIsIm9mVHlwZSIsInhtbCIsInVuaXF1ZUNhY2hlIiwib3V0ZXJDYWNoZSIsIm5vZGVJbmRleCIsInN0YXJ0IiwicGFyZW50IiwidXNlQ2FjaGUiLCJsYXN0Q2hpbGQiLCJ1bmlxdWVJRCIsInBzZXVkbyIsImFyZ3MiLCJzZXRGaWx0ZXJzIiwiaWR4IiwibWF0Y2hlZCIsIm5vdCIsIm1hdGNoZXIiLCJ1bm1hdGNoZWQiLCJoYXMiLCJpbm5lclRleHQiLCJsYW5nIiwiZWxlbUxhbmciLCJoYXNoIiwibG9jYXRpb24iLCJyb290IiwiZm9jdXMiLCJhY3RpdmVFbGVtZW50IiwiaGFzRm9jdXMiLCJocmVmIiwidGFiSW5kZXgiLCJlbmFibGVkIiwiY2hlY2tlZCIsInNlbGVjdGVkIiwic2VsZWN0ZWRJbmRleCIsImVtcHR5IiwiaGVhZGVyIiwiYnV0dG9uIiwiZXZlbiIsIm9kZCIsImx0IiwiZ3QiLCJyYWRpbyIsImNoZWNrYm94IiwiZmlsZSIsInBhc3N3b3JkIiwiaW1hZ2UiLCJzdWJtaXQiLCJyZXNldCIsInRva2VucyIsImNvbWJpbmF0b3IiLCJiYXNlIiwic2tpcCIsImNoZWNrTm9uRWxlbWVudHMiLCJkb25lTmFtZSIsIm9sZENhY2hlIiwibmV3Q2FjaGUiLCJlbGVtZW50TWF0Y2hlciIsIm1hdGNoZXJzIiwiY29uZGVuc2UiLCJuZXdVbm1hdGNoZWQiLCJtYXBwZWQiLCJzZXRNYXRjaGVyIiwicG9zdEZpbHRlciIsInBvc3RGaW5kZXIiLCJwb3N0U2VsZWN0b3IiLCJ0ZW1wIiwicHJlTWFwIiwicG9zdE1hcCIsInByZWV4aXN0aW5nIiwiY29udGV4dHMiLCJtdWx0aXBsZUNvbnRleHRzIiwibWF0Y2hlckluIiwibWF0Y2hlck91dCIsIm1hdGNoZXJGcm9tVG9rZW5zIiwiY2hlY2tDb250ZXh0IiwibGVhZGluZ1JlbGF0aXZlIiwiaW1wbGljaXRSZWxhdGl2ZSIsIm1hdGNoQ29udGV4dCIsIm1hdGNoQW55Q29udGV4dCIsImZpbHRlcnMiLCJwYXJzZU9ubHkiLCJzb0ZhciIsInByZUZpbHRlcnMiLCJjYWNoZWQiLCJlbGVtZW50TWF0Y2hlcnMiLCJzZXRNYXRjaGVycyIsImJ5U2V0IiwiYnlFbGVtZW50Iiwic3VwZXJNYXRjaGVyIiwib3V0ZXJtb3N0IiwibWF0Y2hlZENvdW50Iiwic2V0TWF0Y2hlZCIsImNvbnRleHRCYWNrdXAiLCJkaXJydW5zVW5pcXVlIiwidG9rZW4iLCJjb21waWxlZCIsImRlZmF1bHRWYWx1ZSIsInVuaXF1ZSIsImlzWE1MRG9jIiwiZXNjYXBlU2VsZWN0b3IiLCJ1bnRpbCIsInRydW5jYXRlIiwiaXMiLCJzaWJsaW5ncyIsIm4iLCJybmVlZHNDb250ZXh0IiwicnNpbmdsZVRhZyIsIndpbm5vdyIsInF1YWxpZmllciIsInNlbGYiLCJyb290alF1ZXJ5IiwicGFyc2VIVE1MIiwicmVhZHkiLCJycGFyZW50c3ByZXYiLCJndWFyYW50ZWVkVW5pcXVlIiwiY2hpbGRyZW4iLCJjb250ZW50cyIsInByZXYiLCJzaWJsaW5nIiwidGFyZ2V0cyIsImwiLCJjbG9zZXN0IiwiaW5kZXgiLCJwcmV2QWxsIiwiYWRkIiwiYWRkQmFjayIsInBhcmVudHMiLCJwYXJlbnRzVW50aWwiLCJuZXh0QWxsIiwibmV4dFVudGlsIiwicHJldlVudGlsIiwiY29udGVudERvY3VtZW50IiwiY29udGVudCIsInJldmVyc2UiLCJybm90aHRtbHdoaXRlIiwiSWRlbnRpdHkiLCJ2IiwiVGhyb3dlciIsImV4IiwiYWRvcHRWYWx1ZSIsInJlc29sdmUiLCJyZWplY3QiLCJub1ZhbHVlIiwibWV0aG9kIiwicHJvbWlzZSIsImZhaWwiLCJ0aGVuIiwiQ2FsbGJhY2tzIiwib2JqZWN0IiwiZmxhZyIsImZpcmluZyIsIm1lbW9yeSIsImZpcmVkIiwibG9ja2VkIiwicXVldWUiLCJmaXJpbmdJbmRleCIsImZpcmUiLCJvbmNlIiwic3RvcE9uRmFsc2UiLCJyZW1vdmUiLCJkaXNhYmxlIiwibG9jayIsImZpcmVXaXRoIiwiRGVmZXJyZWQiLCJmdW5jIiwidHVwbGVzIiwic3RhdGUiLCJhbHdheXMiLCJkZWZlcnJlZCIsImNhdGNoIiwicGlwZSIsImZucyIsIm5ld0RlZmVyIiwidHVwbGUiLCJyZXR1cm5lZCIsInByb2dyZXNzIiwibm90aWZ5Iiwib25GdWxmaWxsZWQiLCJvblJlamVjdGVkIiwib25Qcm9ncmVzcyIsIm1heERlcHRoIiwiZGVwdGgiLCJzcGVjaWFsIiwidGhhdCIsIm1pZ2h0VGhyb3ciLCJUeXBlRXJyb3IiLCJub3RpZnlXaXRoIiwicmVzb2x2ZVdpdGgiLCJwcm9jZXNzIiwiZXhjZXB0aW9uSG9vayIsInN0YWNrVHJhY2UiLCJyZWplY3RXaXRoIiwiZ2V0U3RhY2tIb29rIiwic2V0VGltZW91dCIsInN0YXRlU3RyaW5nIiwid2hlbiIsInNpbmdsZVZhbHVlIiwicmVtYWluaW5nIiwicmVzb2x2ZUNvbnRleHRzIiwicmVzb2x2ZVZhbHVlcyIsIm1hc3RlciIsInVwZGF0ZUZ1bmMiLCJyZXJyb3JOYW1lcyIsInN0YWNrIiwiY29uc29sZSIsIndhcm4iLCJtZXNzYWdlIiwicmVhZHlFeGNlcHRpb24iLCJyZWFkeUxpc3QiLCJjb21wbGV0ZWQiLCJyZW1vdmVFdmVudExpc3RlbmVyIiwicmVhZHlXYWl0Iiwid2FpdCIsInJlYWR5U3RhdGUiLCJkb1Njcm9sbCIsImFjY2VzcyIsImNoYWluYWJsZSIsImVtcHR5R2V0IiwicmF3IiwiYnVsayIsInJtc1ByZWZpeCIsInJkYXNoQWxwaGEiLCJmY2FtZWxDYXNlIiwiYWxsIiwibGV0dGVyIiwidG9VcHBlckNhc2UiLCJjYW1lbENhc2UiLCJzdHJpbmciLCJhY2NlcHREYXRhIiwib3duZXIiLCJEYXRhIiwidWlkIiwiZGVmaW5lUHJvcGVydHkiLCJjb25maWd1cmFibGUiLCJzZXQiLCJkYXRhIiwicHJvcCIsImhhc0RhdGEiLCJkYXRhUHJpdiIsImRhdGFVc2VyIiwicmJyYWNlIiwicm11bHRpRGFzaCIsImRhdGFBdHRyIiwiSlNPTiIsInBhcnNlIiwicmVtb3ZlRGF0YSIsIl9kYXRhIiwiX3JlbW92ZURhdGEiLCJkZXF1ZXVlIiwic3RhcnRMZW5ndGgiLCJob29rcyIsIl9xdWV1ZUhvb2tzIiwic3RvcCIsInNldHRlciIsImNsZWFyUXVldWUiLCJjb3VudCIsImRlZmVyIiwicG51bSIsInNvdXJjZSIsInJjc3NOdW0iLCJjc3NFeHBhbmQiLCJpc0hpZGRlbldpdGhpblRyZWUiLCJzdHlsZSIsImRpc3BsYXkiLCJjc3MiLCJzd2FwIiwib2xkIiwiYWRqdXN0Q1NTIiwidmFsdWVQYXJ0cyIsInR3ZWVuIiwiYWRqdXN0ZWQiLCJzY2FsZSIsIm1heEl0ZXJhdGlvbnMiLCJjdXJyZW50VmFsdWUiLCJpbml0aWFsIiwidW5pdCIsImNzc051bWJlciIsImluaXRpYWxJblVuaXQiLCJkZWZhdWx0RGlzcGxheU1hcCIsInNob3dIaWRlIiwic2hvdyIsInZhbHVlcyIsImJvZHkiLCJoaWRlIiwidG9nZ2xlIiwicmNoZWNrYWJsZVR5cGUiLCJydGFnTmFtZSIsInJzY3JpcHRUeXBlIiwid3JhcE1hcCIsIm9wdGlvbiIsInRoZWFkIiwiY29sIiwidHIiLCJ0ZCIsIl9kZWZhdWx0IiwiZ2V0QWxsIiwic2V0R2xvYmFsRXZhbCIsInJlZkVsZW1lbnRzIiwib3B0Z3JvdXAiLCJ0Ym9keSIsInRmb290IiwiY29sZ3JvdXAiLCJjYXB0aW9uIiwidGgiLCJkaXYiLCJyaHRtbCIsImJ1aWxkRnJhZ21lbnQiLCJzY3JpcHRzIiwic2VsZWN0aW9uIiwiaWdub3JlZCIsIndyYXAiLCJmcmFnbWVudCIsImNyZWF0ZURvY3VtZW50RnJhZ21lbnQiLCJub2RlcyIsImh0bWxQcmVmaWx0ZXIiLCJjcmVhdGVUZXh0Tm9kZSIsImNoZWNrQ2xvbmUiLCJjbG9uZU5vZGUiLCJub0Nsb25lQ2hlY2tlZCIsInJrZXlFdmVudCIsInJtb3VzZUV2ZW50IiwicnR5cGVuYW1lc3BhY2UiLCJyZXR1cm5UcnVlIiwicmV0dXJuRmFsc2UiLCJzYWZlQWN0aXZlRWxlbWVudCIsImVyciIsIm9uIiwidHlwZXMiLCJvbmUiLCJvcmlnRm4iLCJldmVudCIsIm9mZiIsImhhbmRsZU9iakluIiwiZXZlbnRIYW5kbGUiLCJldmVudHMiLCJ0IiwiaGFuZGxlT2JqIiwiaGFuZGxlcnMiLCJuYW1lc3BhY2VzIiwib3JpZ1R5cGUiLCJlbGVtRGF0YSIsImhhbmRsZSIsInRyaWdnZXJlZCIsImRpc3BhdGNoIiwiZGVsZWdhdGVUeXBlIiwiYmluZFR5cGUiLCJuYW1lc3BhY2UiLCJkZWxlZ2F0ZUNvdW50Iiwic2V0dXAiLCJtYXBwZWRUeXBlcyIsIm9yaWdDb3VudCIsInRlYXJkb3duIiwicmVtb3ZlRXZlbnQiLCJuYXRpdmVFdmVudCIsImhhbmRsZXJRdWV1ZSIsImZpeCIsImRlbGVnYXRlVGFyZ2V0IiwicHJlRGlzcGF0Y2giLCJpc1Byb3BhZ2F0aW9uU3RvcHBlZCIsImN1cnJlbnRUYXJnZXQiLCJpc0ltbWVkaWF0ZVByb3BhZ2F0aW9uU3RvcHBlZCIsInJuYW1lc3BhY2UiLCJwcmV2ZW50RGVmYXVsdCIsInN0b3BQcm9wYWdhdGlvbiIsInBvc3REaXNwYXRjaCIsIm1hdGNoZWRIYW5kbGVycyIsIm1hdGNoZWRTZWxlY3RvcnMiLCJhZGRQcm9wIiwiaG9vayIsIkV2ZW50IiwiZW51bWVyYWJsZSIsIm9yaWdpbmFsRXZlbnQiLCJ3cml0YWJsZSIsImxvYWQiLCJub0J1YmJsZSIsInRyaWdnZXIiLCJibHVyIiwiY2xpY2siLCJiZWZvcmV1bmxvYWQiLCJyZXR1cm5WYWx1ZSIsInByb3BzIiwiaXNEZWZhdWx0UHJldmVudGVkIiwiZGVmYXVsdFByZXZlbnRlZCIsInJlbGF0ZWRUYXJnZXQiLCJ0aW1lU3RhbXAiLCJub3ciLCJpc1NpbXVsYXRlZCIsInN0b3BJbW1lZGlhdGVQcm9wYWdhdGlvbiIsImFsdEtleSIsImJ1YmJsZXMiLCJjYW5jZWxhYmxlIiwiY2hhbmdlZFRvdWNoZXMiLCJjdHJsS2V5IiwiZGV0YWlsIiwiZXZlbnRQaGFzZSIsIm1ldGFLZXkiLCJwYWdlWCIsInBhZ2VZIiwic2hpZnRLZXkiLCJ2aWV3IiwiY2hhciIsImNoYXJDb2RlIiwia2V5Q29kZSIsImJ1dHRvbnMiLCJjbGllbnRYIiwiY2xpZW50WSIsIm9mZnNldFgiLCJvZmZzZXRZIiwicG9pbnRlcklkIiwicG9pbnRlclR5cGUiLCJzY3JlZW5YIiwic2NyZWVuWSIsInRhcmdldFRvdWNoZXMiLCJ0b0VsZW1lbnQiLCJ0b3VjaGVzIiwid2hpY2giLCJtb3VzZWVudGVyIiwibW91c2VsZWF2ZSIsInBvaW50ZXJlbnRlciIsInBvaW50ZXJsZWF2ZSIsIm9yaWciLCJyZWxhdGVkIiwicnhodG1sVGFnIiwicm5vSW5uZXJodG1sIiwicmNoZWNrZWQiLCJyY2xlYW5TY3JpcHQiLCJtYW5pcHVsYXRpb25UYXJnZXQiLCJkaXNhYmxlU2NyaXB0IiwicmVzdG9yZVNjcmlwdCIsImNsb25lQ29weUV2ZW50IiwiZGVzdCIsInBkYXRhT2xkIiwicGRhdGFDdXIiLCJ1ZGF0YU9sZCIsInVkYXRhQ3VyIiwiZG9tTWFuaXAiLCJjb2xsZWN0aW9uIiwiaGFzU2NyaXB0cyIsImlOb0Nsb25lIiwidmFsdWVJc0Z1bmN0aW9uIiwiaHRtbCIsIl9ldmFsVXJsIiwia2VlcERhdGEiLCJjbGVhbkRhdGEiLCJkYXRhQW5kRXZlbnRzIiwiZGVlcERhdGFBbmRFdmVudHMiLCJzcmNFbGVtZW50cyIsImRlc3RFbGVtZW50cyIsImluUGFnZSIsImRldGFjaCIsImFwcGVuZCIsInByZXBlbmQiLCJpbnNlcnRCZWZvcmUiLCJiZWZvcmUiLCJhZnRlciIsInJlcGxhY2VXaXRoIiwicmVwbGFjZUNoaWxkIiwiYXBwZW5kVG8iLCJwcmVwZW5kVG8iLCJpbnNlcnRBZnRlciIsInJlcGxhY2VBbGwiLCJvcmlnaW5hbCIsImluc2VydCIsInJudW1ub25weCIsImdldFN0eWxlcyIsIm9wZW5lciIsImdldENvbXB1dGVkU3R5bGUiLCJyYm94U3R5bGUiLCJjdXJDU1MiLCJjb21wdXRlZCIsIndpZHRoIiwibWluV2lkdGgiLCJtYXhXaWR0aCIsImdldFByb3BlcnR5VmFsdWUiLCJwaXhlbEJveFN0eWxlcyIsImFkZEdldEhvb2tJZiIsImNvbmRpdGlvbkZuIiwiaG9va0ZuIiwiY29tcHV0ZVN0eWxlVGVzdHMiLCJjb250YWluZXIiLCJjc3NUZXh0IiwiZGl2U3R5bGUiLCJwaXhlbFBvc2l0aW9uVmFsIiwicmVsaWFibGVNYXJnaW5MZWZ0VmFsIiwicm91bmRQaXhlbE1lYXN1cmVzIiwibWFyZ2luTGVmdCIsInJpZ2h0IiwicGl4ZWxCb3hTdHlsZXNWYWwiLCJib3hTaXppbmdSZWxpYWJsZVZhbCIsInBvc2l0aW9uIiwic2Nyb2xsYm94U2l6ZVZhbCIsIm9mZnNldFdpZHRoIiwibWVhc3VyZSIsInJvdW5kIiwicGFyc2VGbG9hdCIsImJhY2tncm91bmRDbGlwIiwiY2xlYXJDbG9uZVN0eWxlIiwiYm94U2l6aW5nUmVsaWFibGUiLCJwaXhlbFBvc2l0aW9uIiwicmVsaWFibGVNYXJnaW5MZWZ0Iiwic2Nyb2xsYm94U2l6ZSIsInJkaXNwbGF5c3dhcCIsInJjdXN0b21Qcm9wIiwiY3NzU2hvdyIsInZpc2liaWxpdHkiLCJjc3NOb3JtYWxUcmFuc2Zvcm0iLCJsZXR0ZXJTcGFjaW5nIiwiZm9udFdlaWdodCIsImNzc1ByZWZpeGVzIiwiZW1wdHlTdHlsZSIsImZpbmFsUHJvcE5hbWUiLCJjc3NQcm9wcyIsImNhcE5hbWUiLCJ2ZW5kb3JQcm9wTmFtZSIsInNldFBvc2l0aXZlTnVtYmVyIiwic3VidHJhY3QiLCJtYXgiLCJib3hNb2RlbEFkanVzdG1lbnQiLCJkaW1lbnNpb24iLCJib3giLCJpc0JvcmRlckJveCIsInN0eWxlcyIsImNvbXB1dGVkVmFsIiwiZXh0cmEiLCJkZWx0YSIsImNlaWwiLCJnZXRXaWR0aE9ySGVpZ2h0IiwidmFsdWVJc0JvcmRlckJveCIsIlR3ZWVuIiwiZWFzaW5nIiwiY3NzSG9va3MiLCJvcGFjaXR5IiwiYW5pbWF0aW9uSXRlcmF0aW9uQ291bnQiLCJjb2x1bW5Db3VudCIsImZpbGxPcGFjaXR5IiwiZmxleEdyb3ciLCJmbGV4U2hyaW5rIiwibGluZUhlaWdodCIsIm9yZGVyIiwib3JwaGFucyIsIndpZG93cyIsInpJbmRleCIsInpvb20iLCJvcmlnTmFtZSIsImlzQ3VzdG9tUHJvcCIsInNldFByb3BlcnR5IiwiaXNGaW5pdGUiLCJnZXRDbGllbnRSZWN0cyIsImdldEJvdW5kaW5nQ2xpZW50UmVjdCIsImxlZnQiLCJtYXJnaW4iLCJwYWRkaW5nIiwiYm9yZGVyIiwicHJlZml4Iiwic3VmZml4IiwiZXhwYW5kIiwiZXhwYW5kZWQiLCJwYXJ0cyIsInByb3BIb29rcyIsInJ1biIsInBlcmNlbnQiLCJlYXNlZCIsImR1cmF0aW9uIiwicG9zIiwic3RlcCIsImZ4Iiwic2Nyb2xsVG9wIiwic2Nyb2xsTGVmdCIsImxpbmVhciIsInAiLCJzd2luZyIsImNvcyIsIlBJIiwiZnhOb3ciLCJpblByb2dyZXNzIiwib3B0IiwicmZ4dHlwZXMiLCJycnVuIiwic2NoZWR1bGUiLCJoaWRkZW4iLCJyZXF1ZXN0QW5pbWF0aW9uRnJhbWUiLCJpbnRlcnZhbCIsInRpY2siLCJjcmVhdGVGeE5vdyIsImdlbkZ4IiwiaW5jbHVkZVdpZHRoIiwiaGVpZ2h0IiwiY3JlYXRlVHdlZW4iLCJhbmltYXRpb24iLCJBbmltYXRpb24iLCJ0d2VlbmVycyIsInByb3BlcnRpZXMiLCJzdG9wcGVkIiwicHJlZmlsdGVycyIsImN1cnJlbnRUaW1lIiwic3RhcnRUaW1lIiwidHdlZW5zIiwib3B0cyIsInNwZWNpYWxFYXNpbmciLCJvcmlnaW5hbFByb3BlcnRpZXMiLCJvcmlnaW5hbE9wdGlvbnMiLCJnb3RvRW5kIiwicHJvcEZpbHRlciIsImJpbmQiLCJjb21wbGV0ZSIsInRpbWVyIiwiYW5pbSIsIioiLCJ0d2VlbmVyIiwib2xkZmlyZSIsInByb3BUd2VlbiIsInJlc3RvcmVEaXNwbGF5IiwiaXNCb3giLCJkYXRhU2hvdyIsInVucXVldWVkIiwib3ZlcmZsb3ciLCJvdmVyZmxvd1giLCJvdmVyZmxvd1kiLCJwcmVmaWx0ZXIiLCJzcGVlZCIsInNwZWVkcyIsImZhZGVUbyIsInRvIiwiYW5pbWF0ZSIsIm9wdGFsbCIsImRvQW5pbWF0aW9uIiwiZmluaXNoIiwic3RvcFF1ZXVlIiwidGltZXJzIiwiY3NzRm4iLCJzbGlkZURvd24iLCJzbGlkZVVwIiwic2xpZGVUb2dnbGUiLCJmYWRlSW4iLCJmYWRlT3V0IiwiZmFkZVRvZ2dsZSIsInNsb3ciLCJmYXN0IiwiZGVsYXkiLCJ0aW1lIiwidGltZW91dCIsImNsZWFyVGltZW91dCIsImNoZWNrT24iLCJvcHRTZWxlY3RlZCIsInJhZGlvVmFsdWUiLCJib29sSG9vayIsInJlbW92ZUF0dHIiLCJuVHlwZSIsImF0dHJIb29rcyIsImF0dHJOYW1lcyIsImdldHRlciIsImxvd2VyY2FzZU5hbWUiLCJyZm9jdXNhYmxlIiwicmNsaWNrYWJsZSIsInN0cmlwQW5kQ29sbGFwc2UiLCJnZXRDbGFzcyIsImNsYXNzZXNUb0FycmF5IiwicmVtb3ZlUHJvcCIsInByb3BGaXgiLCJ0YWJpbmRleCIsInBhcnNlSW50IiwiZm9yIiwiY2xhc3MiLCJhZGRDbGFzcyIsImNsYXNzZXMiLCJjdXJWYWx1ZSIsImNsYXp6IiwiZmluYWxWYWx1ZSIsInJlbW92ZUNsYXNzIiwidG9nZ2xlQ2xhc3MiLCJzdGF0ZVZhbCIsImlzVmFsaWRWYWx1ZSIsImNsYXNzTmFtZXMiLCJoYXNDbGFzcyIsInJyZXR1cm4iLCJ2YWxIb29rcyIsIm9wdGlvblNldCIsImZvY3VzaW4iLCJyZm9jdXNNb3JwaCIsInN0b3BQcm9wYWdhdGlvbkNhbGxiYWNrIiwib25seUhhbmRsZXJzIiwiYnViYmxlVHlwZSIsIm9udHlwZSIsImxhc3RFbGVtZW50IiwiZXZlbnRQYXRoIiwiaXNUcmlnZ2VyIiwicGFyZW50V2luZG93Iiwic2ltdWxhdGUiLCJ0cmlnZ2VySGFuZGxlciIsImF0dGFjaGVzIiwibm9uY2UiLCJycXVlcnkiLCJwYXJzZVhNTCIsIkRPTVBhcnNlciIsInBhcnNlRnJvbVN0cmluZyIsInJicmFja2V0IiwickNSTEYiLCJyc3VibWl0dGVyVHlwZXMiLCJyc3VibWl0dGFibGUiLCJidWlsZFBhcmFtcyIsInRyYWRpdGlvbmFsIiwicGFyYW0iLCJzIiwidmFsdWVPckZ1bmN0aW9uIiwiZW5jb2RlVVJJQ29tcG9uZW50Iiwic2VyaWFsaXplIiwic2VyaWFsaXplQXJyYXkiLCJyMjAiLCJyaGFzaCIsInJhbnRpQ2FjaGUiLCJyaGVhZGVycyIsInJub0NvbnRlbnQiLCJycHJvdG9jb2wiLCJ0cmFuc3BvcnRzIiwiYWxsVHlwZXMiLCJvcmlnaW5BbmNob3IiLCJhZGRUb1ByZWZpbHRlcnNPclRyYW5zcG9ydHMiLCJzdHJ1Y3R1cmUiLCJkYXRhVHlwZUV4cHJlc3Npb24iLCJkYXRhVHlwZSIsImRhdGFUeXBlcyIsImluc3BlY3RQcmVmaWx0ZXJzT3JUcmFuc3BvcnRzIiwianFYSFIiLCJpbnNwZWN0ZWQiLCJzZWVraW5nVHJhbnNwb3J0IiwiaW5zcGVjdCIsInByZWZpbHRlck9yRmFjdG9yeSIsImRhdGFUeXBlT3JUcmFuc3BvcnQiLCJhamF4RXh0ZW5kIiwiZmxhdE9wdGlvbnMiLCJhamF4U2V0dGluZ3MiLCJhY3RpdmUiLCJsYXN0TW9kaWZpZWQiLCJldGFnIiwidXJsIiwiaXNMb2NhbCIsInByb3RvY29sIiwicHJvY2Vzc0RhdGEiLCJhc3luYyIsImNvbnRlbnRUeXBlIiwiYWNjZXB0cyIsImpzb24iLCJyZXNwb25zZUZpZWxkcyIsImNvbnZlcnRlcnMiLCIqIHRleHQiLCJ0ZXh0IGh0bWwiLCJ0ZXh0IGpzb24iLCJ0ZXh0IHhtbCIsImFqYXhTZXR1cCIsInNldHRpbmdzIiwiYWpheFByZWZpbHRlciIsImFqYXhUcmFuc3BvcnQiLCJhamF4IiwidHJhbnNwb3J0IiwiY2FjaGVVUkwiLCJyZXNwb25zZUhlYWRlcnNTdHJpbmciLCJyZXNwb25zZUhlYWRlcnMiLCJ0aW1lb3V0VGltZXIiLCJ1cmxBbmNob3IiLCJmaXJlR2xvYmFscyIsInVuY2FjaGVkIiwiY2FsbGJhY2tDb250ZXh0IiwiZ2xvYmFsRXZlbnRDb250ZXh0IiwiY29tcGxldGVEZWZlcnJlZCIsInN0YXR1c0NvZGUiLCJyZXF1ZXN0SGVhZGVycyIsInJlcXVlc3RIZWFkZXJzTmFtZXMiLCJzdHJBYm9ydCIsImdldFJlc3BvbnNlSGVhZGVyIiwiZ2V0QWxsUmVzcG9uc2VIZWFkZXJzIiwic2V0UmVxdWVzdEhlYWRlciIsIm92ZXJyaWRlTWltZVR5cGUiLCJtaW1lVHlwZSIsInN0YXR1cyIsImFib3J0Iiwic3RhdHVzVGV4dCIsImZpbmFsVGV4dCIsImNyb3NzRG9tYWluIiwiaG9zdCIsImhhc0NvbnRlbnQiLCJpZk1vZGlmaWVkIiwiaGVhZGVycyIsImJlZm9yZVNlbmQiLCJzdWNjZXNzIiwic2VuZCIsIm5hdGl2ZVN0YXR1c1RleHQiLCJyZXNwb25zZXMiLCJpc1N1Y2Nlc3MiLCJyZXNwb25zZSIsIm1vZGlmaWVkIiwiY3QiLCJmaW5hbERhdGFUeXBlIiwiZmlyc3REYXRhVHlwZSIsImFqYXhIYW5kbGVSZXNwb25zZXMiLCJjb252MiIsImN1cnJlbnQiLCJjb252IiwiZGF0YUZpbHRlciIsInRocm93cyIsImFqYXhDb252ZXJ0IiwiZ2V0SlNPTiIsImdldFNjcmlwdCIsIndyYXBBbGwiLCJmaXJzdEVsZW1lbnRDaGlsZCIsIndyYXBJbm5lciIsImh0bWxJc0Z1bmN0aW9uIiwidW53cmFwIiwidmlzaWJsZSIsIm9mZnNldEhlaWdodCIsInhociIsIlhNTEh0dHBSZXF1ZXN0IiwieGhyU3VjY2Vzc1N0YXR1cyIsIjAiLCIxMjIzIiwieGhyU3VwcG9ydGVkIiwiY29ycyIsImVycm9yQ2FsbGJhY2siLCJvcGVuIiwidXNlcm5hbWUiLCJ4aHJGaWVsZHMiLCJvbmxvYWQiLCJvbmVycm9yIiwib25hYm9ydCIsIm9udGltZW91dCIsIm9ucmVhZHlzdGF0ZWNoYW5nZSIsInJlc3BvbnNlVHlwZSIsInJlc3BvbnNlVGV4dCIsImJpbmFyeSIsInRleHQgc2NyaXB0IiwiY2hhcnNldCIsInNjcmlwdENoYXJzZXQiLCJldnQiLCJvbGRDYWxsYmFja3MiLCJyanNvbnAiLCJqc29ucCIsImpzb25wQ2FsbGJhY2siLCJvcmlnaW5hbFNldHRpbmdzIiwiY2FsbGJhY2tOYW1lIiwib3ZlcndyaXR0ZW4iLCJyZXNwb25zZUNvbnRhaW5lciIsImpzb25Qcm9wIiwiY3JlYXRlSFRNTERvY3VtZW50IiwiaW1wbGVtZW50YXRpb24iLCJrZWVwU2NyaXB0cyIsInBhcnNlZCIsInBhcmFtcyIsImFuaW1hdGVkIiwib2Zmc2V0Iiwic2V0T2Zmc2V0IiwiY3VyUG9zaXRpb24iLCJjdXJMZWZ0IiwiY3VyQ1NTVG9wIiwiY3VyVG9wIiwiY3VyT2Zmc2V0IiwiY3VyQ1NTTGVmdCIsImN1ckVsZW0iLCJ1c2luZyIsInJlY3QiLCJ3aW4iLCJwYWdlWU9mZnNldCIsInBhZ2VYT2Zmc2V0Iiwib2Zmc2V0UGFyZW50IiwicGFyZW50T2Zmc2V0Iiwic2Nyb2xsVG8iLCJIZWlnaHQiLCJXaWR0aCIsIiIsImRlZmF1bHRFeHRyYSIsImZ1bmNOYW1lIiwiaG92ZXIiLCJmbk92ZXIiLCJmbk91dCIsInVuYmluZCIsImRlbGVnYXRlIiwidW5kZWxlZ2F0ZSIsInByb3h5IiwiaG9sZFJlYWR5IiwiaG9sZCIsInBhcnNlSlNPTiIsImlzTnVtZXJpYyIsImlzTmFOIiwiZGVmaW5lIiwiYW1kIiwiX2pRdWVyeSIsIl8kIiwiJCIsIm5vQ29uZmxpY3QiLCJyZXF1aXJlIiwiYm9vdHN0cmFwIiwiUG9wcGVyIiwiaCIsInIiLCJvIiwiZ2V0T3duUHJvcGVydHlTeW1ib2xzIiwiZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yIiwiZm9yRWFjaCIsImRlZmF1bHQiLCJjIiwidSIsInkiLCJFIiwiQyIsIlQiLCJJIiwiTyIsImsiLCJQIiwiSCIsIkwiLCJSIiwieCIsIlciLCJVIiwicSIsIkYiLCJRIiwiViIsIlgiLCJvdCIsInN0IiwiYXQiLCJodCIsInV0IiwiZnQiLCJkdCIsIl90IiwibXQiLCJwdCIsIkN0IiwiVHQiLCJidCIsIlN0IiwiSXQiLCJBdCIsIkR0Iiwid3QiLCJOdCIsIk90Iiwia3QiLCJQdCIsIlJ0IiwiV3QiLCJxdCIsIkp0IiwiWnQiLCJHdCIsIiR0IiwiWHQiLCJ0ZSIsImVlIiwibmUiLCJpZSIsInJlIiwib2UiLCJsZSIsImNlIiwiaGUiLCJnZSIsIl9lIiwibWUiLCJwZSIsInZlIiwieWUiLCJFZSIsIkNlIiwiVGUiLCJiZSIsIlNlIiwiSWUiLCJBZSIsIkRlIiwiTmUiLCJPZSIsImtlIiwiSGUiLCJMZSIsIldlIiwiVWUiLCJxZSIsIkZlIiwiS2UiLCJNZSIsIlFlIiwiQmUiLCJWZSIsIlllIiwiJGUiLCJYZSIsInRuIiwiZW4iLCJubiIsInJuIiwic24iLCJhbiIsImxuIiwiaG4iLCJkbiIsImduIiwibW4iLCJDbiIsIlRuIiwiYm4iLCJTbiIsIkluIiwiQW4iLCJEbiIsIk5uIiwiTG4iLCJSbiIsInFuIiwiRm4iLCJUUkFOU0lUSU9OX0VORCIsImdldFVJRCIsImdldFNlbGVjdG9yRnJvbUVsZW1lbnQiLCJxdWVyeVNlbGVjdG9yIiwiZ2V0VHJhbnNpdGlvbkR1cmF0aW9uRnJvbUVsZW1lbnQiLCJyZWZsb3ciLCJ0cmlnZ2VyVHJhbnNpdGlvbkVuZCIsInN1cHBvcnRzVHJhbnNpdGlvbkVuZCIsIkJvb2xlYW4iLCJpc0VsZW1lbnQiLCJ0eXBlQ2hlY2tDb25maWciLCJlbXVsYXRlVHJhbnNpdGlvbkVuZCIsIktuIiwiQ0xPU0UiLCJDTE9TRUQiLCJDTElDS19EQVRBX0FQSSIsIl9lbGVtZW50IiwiY2xvc2UiLCJfZ2V0Um9vdEVsZW1lbnQiLCJfdHJpZ2dlckNsb3NlRXZlbnQiLCJfcmVtb3ZlRWxlbWVudCIsImRpc3Bvc2UiLCJfZGVzdHJveUVsZW1lbnQiLCJfalF1ZXJ5SW50ZXJmYWNlIiwiX2hhbmRsZURpc21pc3MiLCJDb25zdHJ1Y3RvciIsIk1uIiwiRk9DVVNfQkxVUl9EQVRBX0FQSSIsImNsYXNzTGlzdCIsImhhc0F0dHJpYnV0ZSIsIlFuIiwia2V5Ym9hcmQiLCJzbGlkZSIsInBhdXNlIiwiU0xJREUiLCJTTElEIiwiS0VZRE9XTiIsIk1PVVNFRU5URVIiLCJNT1VTRUxFQVZFIiwiVE9VQ0hFTkQiLCJMT0FEX0RBVEFfQVBJIiwiX2l0ZW1zIiwiX2ludGVydmFsIiwiX2FjdGl2ZUVsZW1lbnQiLCJfaXNQYXVzZWQiLCJfaXNTbGlkaW5nIiwidG91Y2hUaW1lb3V0IiwiX2NvbmZpZyIsIl9nZXRDb25maWciLCJfaW5kaWNhdG9yc0VsZW1lbnQiLCJfYWRkRXZlbnRMaXN0ZW5lcnMiLCJfc2xpZGUiLCJuZXh0V2hlblZpc2libGUiLCJjeWNsZSIsImNsZWFySW50ZXJ2YWwiLCJzZXRJbnRlcnZhbCIsInZpc2liaWxpdHlTdGF0ZSIsIl9nZXRJdGVtSW5kZXgiLCJfa2V5ZG93biIsInRhZ05hbWUiLCJfZ2V0SXRlbUJ5RGlyZWN0aW9uIiwiX3RyaWdnZXJTbGlkZUV2ZW50IiwiZGlyZWN0aW9uIiwiZnJvbSIsIl9zZXRBY3RpdmVJbmRpY2F0b3JFbGVtZW50IiwiZiIsIl9kYXRhQXBpQ2xpY2tIYW5kbGVyIiwiQm4iLCJTSE9XIiwiU0hPV04iLCJISURFIiwiSElEREVOIiwiX2lzVHJhbnNpdGlvbmluZyIsIl90cmlnZ2VyQXJyYXkiLCJfc2VsZWN0b3IiLCJfcGFyZW50IiwiX2dldFBhcmVudCIsIl9hZGRBcmlhQW5kQ29sbGFwc2VkQ2xhc3MiLCJfZ2V0RGltZW5zaW9uIiwic2V0VHJhbnNpdGlvbmluZyIsIl9nZXRUYXJnZXRGcm9tRWxlbWVudCIsIlZuIiwiQ0xJQ0siLCJLRVlET1dOX0RBVEFfQVBJIiwiS0VZVVBfREFUQV9BUEkiLCJmbGlwIiwiYm91bmRhcnkiLCJyZWZlcmVuY2UiLCJfcG9wcGVyIiwiX21lbnUiLCJfZ2V0TWVudUVsZW1lbnQiLCJfaW5OYXZiYXIiLCJfZGV0ZWN0TmF2YmFyIiwiX2dldFBhcmVudEZyb21FbGVtZW50IiwiX2NsZWFyTWVudXMiLCJfZ2V0UG9wcGVyQ29uZmlnIiwiZGVzdHJveSIsInVwZGF0ZSIsInNjaGVkdWxlVXBkYXRlIiwiRGVmYXVsdCIsIkRlZmF1bHRUeXBlIiwiX2dldFBsYWNlbWVudCIsIm9mZnNldHMiLCJwbGFjZW1lbnQiLCJtb2RpZmllcnMiLCJwcmV2ZW50T3ZlcmZsb3ciLCJib3VuZGFyaWVzRWxlbWVudCIsImFwcGx5U3R5bGUiLCJjbGlja0V2ZW50IiwiX2RhdGFBcGlLZXlkb3duSGFuZGxlciIsIlluIiwiYmFja2Ryb3AiLCJGT0NVU0lOIiwiUkVTSVpFIiwiQ0xJQ0tfRElTTUlTUyIsIktFWURPV05fRElTTUlTUyIsIk1PVVNFVVBfRElTTUlTUyIsIk1PVVNFRE9XTl9ESVNNSVNTIiwiX2RpYWxvZyIsIl9iYWNrZHJvcCIsIl9pc1Nob3duIiwiX2lzQm9keU92ZXJmbG93aW5nIiwiX2lnbm9yZUJhY2tkcm9wQ2xpY2siLCJfc2Nyb2xsYmFyV2lkdGgiLCJfY2hlY2tTY3JvbGxiYXIiLCJfc2V0U2Nyb2xsYmFyIiwiX2FkanVzdERpYWxvZyIsIl9zZXRFc2NhcGVFdmVudCIsIl9zZXRSZXNpemVFdmVudCIsIl9zaG93QmFja2Ryb3AiLCJfc2hvd0VsZW1lbnQiLCJfaGlkZU1vZGFsIiwiaGFuZGxlVXBkYXRlIiwiTm9kZSIsIkVMRU1FTlRfTk9ERSIsIl9lbmZvcmNlRm9jdXMiLCJfcmVzZXRBZGp1c3RtZW50cyIsIl9yZXNldFNjcm9sbGJhciIsIl9yZW1vdmVCYWNrZHJvcCIsInNjcm9sbEhlaWdodCIsImNsaWVudEhlaWdodCIsInBhZGRpbmdMZWZ0IiwicGFkZGluZ1JpZ2h0IiwiaW5uZXJXaWR0aCIsIl9nZXRTY3JvbGxiYXJXaWR0aCIsIm1hcmdpblJpZ2h0IiwiY2xpZW50V2lkdGgiLCJ6biIsInRlbXBsYXRlIiwidGl0bGUiLCJBVVRPIiwiVE9QIiwiUklHSFQiLCJCT1RUT00iLCJMRUZUIiwiZmFsbGJhY2tQbGFjZW1lbnQiLCJJTlNFUlRFRCIsIkZPQ1VTT1VUIiwiX2lzRW5hYmxlZCIsIl90aW1lb3V0IiwiX2hvdmVyU3RhdGUiLCJfYWN0aXZlVHJpZ2dlciIsImVsZW1lbnQiLCJjb25maWciLCJ0aXAiLCJfc2V0TGlzdGVuZXJzIiwiZW5hYmxlIiwidG9nZ2xlRW5hYmxlZCIsIkRBVEFfS0VZIiwiX2dldERlbGVnYXRlQ29uZmlnIiwiX2lzV2l0aEFjdGl2ZVRyaWdnZXIiLCJfZW50ZXIiLCJfbGVhdmUiLCJnZXRUaXBFbGVtZW50IiwiRVZFTlRfS0VZIiwiaXNXaXRoQ29udGVudCIsIk5BTUUiLCJzZXRDb250ZW50IiwiX2dldEF0dGFjaG1lbnQiLCJhZGRBdHRhY2htZW50Q2xhc3MiLCJiZWhhdmlvciIsImFycm93Iiwib25DcmVhdGUiLCJvcmlnaW5hbFBsYWNlbWVudCIsIl9oYW5kbGVQb3BwZXJQbGFjZW1lbnRDaGFuZ2UiLCJvblVwZGF0ZSIsIl9maXhUcmFuc2l0aW9uIiwiX2NsZWFuVGlwQ2xhc3MiLCJnZXRUaXRsZSIsInNldEVsZW1lbnRDb250ZW50IiwiX2ZpeFRpdGxlIiwiaW5zdGFuY2UiLCJwb3BwZXIiLCJKbiIsImNyZWF0ZSIsIl9fcHJvdG9fXyIsIl9nZXRDb250ZW50IiwiemUiLCJabiIsIkFDVElWQVRFIiwiU0NST0xMIiwiX3Njcm9sbEVsZW1lbnQiLCJfb2Zmc2V0cyIsIl90YXJnZXRzIiwiX2FjdGl2ZVRhcmdldCIsIl9zY3JvbGxIZWlnaHQiLCJfcHJvY2VzcyIsInJlZnJlc2giLCJfZ2V0U2Nyb2xsVG9wIiwiX2dldFNjcm9sbEhlaWdodCIsIl9nZXRPZmZzZXRIZWlnaHQiLCJpbm5lckhlaWdodCIsIl9hY3RpdmF0ZSIsIl9jbGVhciIsIkduIiwidGFiIiwiX3RyYW5zaXRpb25Db21wbGV0ZSIsIlBuIiwiVXRpbCIsIkFsZXJ0IiwiQnV0dG9uIiwiQ2Fyb3VzZWwiLCJDb2xsYXBzZSIsIkRyb3Bkb3duIiwiTW9kYWwiLCJQb3BvdmVyIiwiU2Nyb2xsc3B5IiwiVGFiIiwiVG9vbHRpcCIsImQiLCJEZWZhdWx0cyIsIiRlbGVtZW50IiwiX2hhbmRsZXJzIiwiX3BsdWdpbnMiLCJfc3VwcmVzcyIsIl9jdXJyZW50IiwiX3NwZWVkIiwiX2Nvb3JkaW5hdGVzIiwiX2JyZWFrcG9pbnQiLCJfd2lkdGgiLCJfY2xvbmVzIiwiX21lcmdlcnMiLCJfd2lkdGhzIiwiX2ludmFsaWRhdGVkIiwiX3BpcGUiLCJfZHJhZyIsInBvaW50ZXIiLCJzdGFnZSIsIl9zdGF0ZXMiLCJ0YWdzIiwiaW5pdGlhbGl6aW5nIiwiYW5pbWF0aW5nIiwiZHJhZ2dpbmciLCJQbHVnaW5zIiwiY2hhckF0IiwiV29ya2VycyIsImluaXRpYWxpemUiLCJpdGVtcyIsImxvb3AiLCJjZW50ZXIiLCJyZXdpbmQiLCJjaGVja1Zpc2liaWxpdHkiLCJtb3VzZURyYWciLCJ0b3VjaERyYWciLCJwdWxsRHJhZyIsImZyZWVEcmFnIiwic3RhZ2VQYWRkaW5nIiwibWVyZ2VGaXQiLCJhdXRvV2lkdGgiLCJzdGFydFBvc2l0aW9uIiwicnRsIiwic21hcnRTcGVlZCIsImZsdWlkU3BlZWQiLCJkcmFnRW5kU3BlZWQiLCJyZXNwb25zaXZlIiwicmVzcG9uc2l2ZVJlZnJlc2hSYXRlIiwicmVzcG9uc2l2ZUJhc2VFbGVtZW50IiwiZmFsbGJhY2tFYXNpbmciLCJzbGlkZVRyYW5zaXRpb24iLCJpbmZvIiwibmVzdGVkSXRlbVNlbGVjdG9yIiwiaXRlbUVsZW1lbnQiLCJzdGFnZUVsZW1lbnQiLCJyZWZyZXNoQ2xhc3MiLCJsb2FkZWRDbGFzcyIsImxvYWRpbmdDbGFzcyIsInJ0bENsYXNzIiwicmVzcG9uc2l2ZUNsYXNzIiwiZHJhZ0NsYXNzIiwiaXRlbUNsYXNzIiwic3RhZ2VDbGFzcyIsInN0YWdlT3V0ZXJDbGFzcyIsImdyYWJDbGFzcyIsIklubmVyIiwiT3V0ZXIiLCJUeXBlIiwiU3RhdGUiLCIkc3RhZ2UiLCJtYXJnaW4tbGVmdCIsIm1hcmdpbi1yaWdodCIsInRvRml4ZWQiLCJtaW4iLCJnIiwibm9ybWFsaXplIiwib3V0ZXJIVE1MIiwiYWJzIiwicGFkZGluZy1sZWZ0IiwicGFkZGluZy1yaWdodCIsIm1pbmltdW0iLCJtYXhpbXVtIiwiY29vcmRpbmF0ZXMiLCJvcCIsImluaXRpYWxpemVTdGFnZSIsImluaXRpYWxpemVJdGVtcyIsImlzVmlzaWJsZSIsImludmFsaWRhdGUiLCJlbnRlciIsInByZWxvYWRBdXRvV2lkdGhJbWFnZXMiLCJyZWdpc3RlckV2ZW50SGFuZGxlcnMiLCJsZWF2ZSIsInZpZXdwb3J0IiwiTnVtYmVyIiwicHJvcGVydHkiLCJvcHRpb25zTG9naWMiLCJwcmVwYXJlIiwib25UaHJvdHRsZWRSZXNpemUiLCJyZXNpemVUaW1lciIsIm9uUmVzaXplIiwidHJhbnNpdGlvbiIsIm9uVHJhbnNpdGlvbkVuZCIsIm9uRHJhZ1N0YXJ0Iiwib25EcmFnRW5kIiwidHJhbnNmb3JtIiwiZ2V0VGltZSIsImRpZmZlcmVuY2UiLCJvbkRyYWdNb3ZlIiwidHJhbnNmb3JtM2QiLCJzdXBwcmVzcyIsInJlbGVhc2UiLCJtZXJnZXJzIiwiY2xvbmVzIiwic3JjRWxlbWVudCIsIm9yaWdpbmFsVGFyZ2V0IiwiSW1hZ2UiLCJkZXRhY2hFdmVudCIsIml0ZW0iLCJvblRyaWdnZXIiLCJyZWdpc3RlciIsIm93bCIsIm93bENhcm91c2VsIiwiWmVwdG8iLCJfY29yZSIsIl92aXNpYmxlIiwiaW5pdGlhbGl6ZWQub3dsLmNhcm91c2VsIiwiYXV0b1JlZnJlc2giLCJ3YXRjaCIsImF1dG9SZWZyZXNoSW50ZXJ2YWwiLCJnZXRPd25Qcm9wZXJ0eU5hbWVzIiwiQXV0b1JlZnJlc2giLCJfbG9hZGVkIiwiaW5pdGlhbGl6ZWQub3dsLmNhcm91c2VsIGNoYW5nZS5vd2wuY2Fyb3VzZWwgcmVzaXplZC5vd2wuY2Fyb3VzZWwiLCJsYXp5TG9hZCIsImxhenlMb2FkRWFnZXIiLCJkZXZpY2VQaXhlbFJhdGlvIiwiYmFja2dyb3VuZC1pbWFnZSIsIkxhenkiLCJfcHJldmlvdXNIZWlnaHQiLCJpbml0aWFsaXplZC5vd2wuY2Fyb3VzZWwgcmVmcmVzaGVkLm93bC5jYXJvdXNlbCIsImF1dG9IZWlnaHQiLCJjaGFuZ2VkLm93bC5jYXJvdXNlbCIsImxvYWRlZC5vd2wubGF6eSIsIl9pbnRlcnZhbElkIiwicmVzaXplIiwiYXV0b0hlaWdodENsYXNzIiwiQXV0b0hlaWdodCIsIl92aWRlb3MiLCJfcGxheWluZyIsInJlc2l6ZS5vd2wuY2Fyb3VzZWwiLCJ2aWRlbyIsImlzSW5GdWxsU2NyZWVuIiwicmVmcmVzaGVkLm93bC5jYXJvdXNlbCIsInByZXBhcmVkLm93bC5jYXJvdXNlbCIsImZldGNoIiwicGxheSIsInZpZGVvSGVpZ2h0IiwidmlkZW9XaWR0aCIsInRodW1ibmFpbCIsInNyY1R5cGUiLCJ0aHVtYm5haWxfbGFyZ2UiLCJmcmFtZWdyYWJfdXJsIiwiZnVsbHNjcmVlbkVsZW1lbnQiLCJtb3pGdWxsU2NyZWVuRWxlbWVudCIsIndlYmtpdEZ1bGxzY3JlZW5FbGVtZW50IiwiVmlkZW8iLCJjb3JlIiwic3dhcHBpbmciLCJwcmV2aW91cyIsImNoYW5nZS5vd2wuY2Fyb3VzZWwiLCJkcmFnLm93bC5jYXJvdXNlbCBkcmFnZ2VkLm93bC5jYXJvdXNlbCB0cmFuc2xhdGVkLm93bC5jYXJvdXNlbCIsInRyYW5zbGF0ZS5vd2wuY2Fyb3VzZWwiLCJhbmltYXRlT3V0IiwiYW5pbWF0ZUluIiwiY2xlYXIiLCJBbmltYXRlIiwiX2NhbGwiLCJfdGltZSIsIl9wYXVzZWQiLCJhdXRvcGxheSIsInBsYXkub3dsLmF1dG9wbGF5Iiwic3RvcC5vd2wuYXV0b3BsYXkiLCJtb3VzZW92ZXIub3dsLmF1dG9wbGF5IiwiYXV0b3BsYXlIb3ZlclBhdXNlIiwibW91c2VsZWF2ZS5vd2wuYXV0b3BsYXkiLCJ0b3VjaHN0YXJ0Lm93bC5jb3JlIiwidG91Y2hlbmQub3dsLmNvcmUiLCJhdXRvcGxheVRpbWVvdXQiLCJhdXRvcGxheVNwZWVkIiwiX25leHQiLCJyZWFkIiwiX2luaXRpYWxpemVkIiwiX3BhZ2VzIiwiX2NvbnRyb2xzIiwiX3RlbXBsYXRlcyIsIl9vdmVycmlkZXMiLCJkb3RzRGF0YSIsImRvdENsYXNzIiwiYWRkZWQub3dsLmNhcm91c2VsIiwicmVtb3ZlLm93bC5jYXJvdXNlbCIsImRyYXciLCJuYXYiLCJuYXZUZXh0IiwibmF2U3BlZWQiLCJuYXZFbGVtZW50IiwibmF2Q29udGFpbmVyIiwibmF2Q29udGFpbmVyQ2xhc3MiLCJuYXZDbGFzcyIsInNsaWRlQnkiLCJkb3RzQ2xhc3MiLCJkb3RzIiwiZG90c0VhY2giLCJkb3RzU3BlZWQiLCJkb3RzQ29udGFpbmVyIiwiJHJlbGF0aXZlIiwiJHByZXZpb3VzIiwiJG5leHQiLCIkYWJzb2x1dGUiLCJvdmVyaWRlcyIsInBhZ2UiLCJzaXplIiwiZ2V0UG9zaXRpb24iLCJOYXZpZ2F0aW9uIiwiX2hhc2hlcyIsInN1YnN0cmluZyIsIlVSTGhhc2hMaXN0ZW5lciIsIkhhc2giLCJXZWJraXRUcmFuc2l0aW9uIiwiTW96VHJhbnNpdGlvbiIsIk9UcmFuc2l0aW9uIiwiV2Via2l0QW5pbWF0aW9uIiwiTW96QW5pbWF0aW9uIiwiT0FuaW1hdGlvbiIsIlNsaWNrIiwiZGVmYXVsdHMiLCJhY2Nlc3NpYmlsaXR5IiwiYWRhcHRpdmVIZWlnaHQiLCJhcHBlbmRBcnJvd3MiLCJhcHBlbmREb3RzIiwiYXJyb3dzIiwiYXNOYXZGb3IiLCJwcmV2QXJyb3ciLCJuZXh0QXJyb3ciLCJjZW50ZXJNb2RlIiwiY2VudGVyUGFkZGluZyIsImNzc0Vhc2UiLCJjdXN0b21QYWdpbmciLCJkcmFnZ2FibGUiLCJlZGdlRnJpY3Rpb24iLCJmYWRlIiwiZm9jdXNPblNlbGVjdCIsImZvY3VzT25DaGFuZ2UiLCJpbmZpbml0ZSIsImluaXRpYWxTbGlkZSIsIm1vYmlsZUZpcnN0IiwicGF1c2VPbkhvdmVyIiwicGF1c2VPbkZvY3VzIiwicGF1c2VPbkRvdHNIb3ZlciIsInJlc3BvbmRUbyIsInJvd3MiLCJzbGlkZXNQZXJSb3ciLCJzbGlkZXNUb1Nob3ciLCJzbGlkZXNUb1Njcm9sbCIsInN3aXBlIiwic3dpcGVUb1NsaWRlIiwidG91Y2hNb3ZlIiwidG91Y2hUaHJlc2hvbGQiLCJ1c2VDU1MiLCJ1c2VUcmFuc2Zvcm0iLCJ2YXJpYWJsZVdpZHRoIiwidmVydGljYWwiLCJ2ZXJ0aWNhbFN3aXBpbmciLCJ3YWl0Rm9yQW5pbWF0ZSIsImluaXRpYWxzIiwiYXV0b1BsYXlUaW1lciIsImN1cnJlbnREaXJlY3Rpb24iLCJjdXJyZW50TGVmdCIsImN1cnJlbnRTbGlkZSIsIiRkb3RzIiwibGlzdFdpZHRoIiwibGlzdEhlaWdodCIsImxvYWRJbmRleCIsIiRuZXh0QXJyb3ciLCIkcHJldkFycm93Iiwic2Nyb2xsaW5nIiwic2xpZGVDb3VudCIsInNsaWRlV2lkdGgiLCIkc2xpZGVUcmFjayIsIiRzbGlkZXMiLCJzbGlkaW5nIiwic2xpZGVPZmZzZXQiLCJzd2lwZUxlZnQiLCJzd2lwaW5nIiwiJGxpc3QiLCJ0b3VjaE9iamVjdCIsInRyYW5zZm9ybXNFbmFibGVkIiwidW5zbGlja2VkIiwiYWN0aXZlQnJlYWtwb2ludCIsImFuaW1UeXBlIiwiYW5pbVByb3AiLCJicmVha3BvaW50cyIsImJyZWFrcG9pbnRTZXR0aW5ncyIsImNzc1RyYW5zaXRpb25zIiwiZm9jdXNzZWQiLCJpbnRlcnJ1cHRlZCIsInBhdXNlZCIsInBvc2l0aW9uUHJvcCIsInJvd0NvdW50Iiwic2hvdWxkQ2xpY2siLCIkc2xpZGVyIiwiJHNsaWRlc0NhY2hlIiwidHJhbnNmb3JtVHlwZSIsInRyYW5zaXRpb25UeXBlIiwidmlzaWJpbGl0eUNoYW5nZSIsIndpbmRvd1dpZHRoIiwid2luZG93VGltZXIiLCJtb3pIaWRkZW4iLCJ3ZWJraXRIaWRkZW4iLCJhdXRvUGxheSIsImF1dG9QbGF5Q2xlYXIiLCJhdXRvUGxheUl0ZXJhdG9yIiwiY2hhbmdlU2xpZGUiLCJjbGlja0hhbmRsZXIiLCJzZWxlY3RIYW5kbGVyIiwic2V0UG9zaXRpb24iLCJzd2lwZUhhbmRsZXIiLCJkcmFnSGFuZGxlciIsImtleUhhbmRsZXIiLCJpbnN0YW5jZVVpZCIsImh0bWxFeHByIiwicmVnaXN0ZXJCcmVha3BvaW50cyIsImFjdGl2YXRlQURBIiwiYXJpYS1oaWRkZW4iLCJhZGRTbGlkZSIsInNsaWNrQWRkIiwidW5sb2FkIiwicmVpbml0IiwiYW5pbWF0ZUhlaWdodCIsIm91dGVySGVpZ2h0IiwiYW5pbWF0ZVNsaWRlIiwiYW5pbVN0YXJ0IiwiYXBwbHlUcmFuc2l0aW9uIiwiZGlzYWJsZVRyYW5zaXRpb24iLCJnZXROYXZUYXJnZXQiLCJzbGljayIsInNsaWRlSGFuZGxlciIsImJ1aWxkQXJyb3dzIiwiYXJpYS1kaXNhYmxlZCIsImJ1aWxkRG90cyIsImdldERvdENvdW50IiwiYnVpbGRPdXQiLCJzZXR1cEluZmluaXRlIiwidXBkYXRlRG90cyIsInNldFNsaWRlQ2xhc3NlcyIsImJ1aWxkUm93cyIsImNoZWNrUmVzcG9uc2l2ZSIsInVuc2xpY2siLCJjaGVja05hdmlnYWJsZSIsImdldE5hdmlnYWJsZUluZGV4ZXMiLCJjbGVhblVwRXZlbnRzIiwiaW50ZXJydXB0IiwiY2xlYW5VcFNsaWRlRXZlbnRzIiwib3JpZW50YXRpb25DaGFuZ2UiLCJjbGVhblVwUm93cyIsImZhZGVTbGlkZSIsImZhZGVTbGlkZU91dCIsImZpbHRlclNsaWRlcyIsInNsaWNrRmlsdGVyIiwiZm9jdXNIYW5kbGVyIiwiZ2V0Q3VycmVudCIsInNsaWNrQ3VycmVudFNsaWRlIiwiZ2V0TGVmdCIsImZsb29yIiwib2Zmc2V0TGVmdCIsIm91dGVyV2lkdGgiLCJnZXRPcHRpb24iLCJzbGlja0dldE9wdGlvbiIsImdldFNsaWNrIiwiZ2V0U2xpZGVDb3VudCIsImdvVG8iLCJzbGlja0dvVG8iLCJzZXRQcm9wcyIsInN0YXJ0TG9hZCIsImxvYWRTbGlkZXIiLCJpbml0aWFsaXplRXZlbnRzIiwidXBkYXRlQXJyb3dzIiwiaW5pdEFEQSIsInJvbGUiLCJhcmlhLWRlc2NyaWJlZGJ5IiwiYXJpYS1jb250cm9scyIsImFyaWEtbGFiZWwiLCJhcmlhLXNlbGVjdGVkIiwiaW5pdEFycm93RXZlbnRzIiwiaW5pdERvdEV2ZW50cyIsImluaXRTbGlkZUV2ZW50cyIsImFjdGlvbiIsImluaXRVSSIsInByb2dyZXNzaXZlTGF6eUxvYWQiLCJzbGlja05leHQiLCJzbGlja1BhdXNlIiwic2xpY2tQbGF5IiwicG9zdFNsaWRlIiwic2xpY2tQcmV2IiwiYnJlYWtwb2ludCIsIndpbmRvd0RlbGF5IiwicmVtb3ZlU2xpZGUiLCJzbGlja1JlbW92ZSIsInNldENTUyIsInNldERpbWVuc2lvbnMiLCJzZXRGYWRlIiwic2V0SGVpZ2h0Iiwic2V0T3B0aW9uIiwic2xpY2tTZXRPcHRpb24iLCJtc1RyYW5zaXRpb24iLCJPVHJhbnNmb3JtIiwicGVyc3BlY3RpdmVQcm9wZXJ0eSIsIndlYmtpdFBlcnNwZWN0aXZlIiwiTW96VHJhbnNmb3JtIiwiTW96UGVyc3BlY3RpdmUiLCJ3ZWJraXRUcmFuc2Zvcm0iLCJtc1RyYW5zZm9ybSIsInN3aXBlRGlyZWN0aW9uIiwic3RhcnRYIiwiY3VyWCIsInN0YXJ0WSIsImN1clkiLCJhdGFuMiIsInN3aXBlRW5kIiwic3dpcGVMZW5ndGgiLCJlZGdlSGl0IiwibWluU3dpcGUiLCJmaW5nZXJDb3VudCIsInN3aXBlU3RhcnQiLCJzd2lwZU1vdmUiLCJzcXJ0IiwicG93IiwidW5maWx0ZXJTbGlkZXMiLCJzbGlja1VuZmlsdGVyIiwiJHRhcmdldCIsImZhbmN5Ym94IiwiZ2V0SW5zdGFuY2UiLCIkdHJpZ2dlciIsImNsb3NlRXhpc3RpbmciLCJndXR0ZXIiLCJpbmZvYmFyIiwic21hbGxCdG4iLCJ0b29sYmFyIiwiaWRsZVRpbWUiLCJwcm90ZWN0IiwibW9kYWwiLCJwcmVsb2FkIiwiaWZyYW1lIiwidHBsIiwiZm9ybWF0IiwiYXV0b1N0YXJ0IiwiZGVmYXVsdFR5cGUiLCJhbmltYXRpb25FZmZlY3QiLCJhbmltYXRpb25EdXJhdGlvbiIsInpvb21PcGFjaXR5IiwidHJhbnNpdGlvbkVmZmVjdCIsInRyYW5zaXRpb25EdXJhdGlvbiIsInNsaWRlQ2xhc3MiLCJiYXNlQ2xhc3MiLCJiYXNlVHBsIiwic3Bpbm5lclRwbCIsImVycm9yVHBsIiwiYnRuVHBsIiwiZG93bmxvYWQiLCJhcnJvd0xlZnQiLCJhcnJvd1JpZ2h0IiwicGFyZW50RWwiLCJoaWRlU2Nyb2xsYmFyIiwiYXV0b0ZvY3VzIiwiYmFja0ZvY3VzIiwidHJhcEZvY3VzIiwiZnVsbFNjcmVlbiIsInRvdWNoIiwibW9tZW50dW0iLCJtZWRpYSIsInNsaWRlU2hvdyIsInRodW1icyIsImhpZGVPbkNsb3NlIiwiYXhpcyIsIndoZWVsIiwib25Jbml0IiwiYmVmb3JlTG9hZCIsImFmdGVyTG9hZCIsImJlZm9yZVNob3ciLCJhZnRlclNob3ciLCJiZWZvcmVDbG9zZSIsImFmdGVyQ2xvc2UiLCJvbkFjdGl2YXRlIiwib25EZWFjdGl2YXRlIiwiY2xpY2tDb250ZW50IiwiY2xpY2tTbGlkZSIsImNsaWNrT3V0c2lkZSIsImRibGNsaWNrQ29udGVudCIsImRibGNsaWNrU2xpZGUiLCJkYmxjbGlja091dHNpZGUiLCJtb2JpbGUiLCJpMThuIiwiTkVYVCIsIlBSRVYiLCJFUlJPUiIsIlBMQVlfU1RBUlQiLCJQTEFZX1NUT1AiLCJGVUxMX1NDUkVFTiIsIlRIVU1CUyIsIkRPV05MT0FEIiwiU0hBUkUiLCJaT09NIiwiZGUiLCJ3ZWJraXRSZXF1ZXN0QW5pbWF0aW9uRnJhbWUiLCJtb3pSZXF1ZXN0QW5pbWF0aW9uRnJhbWUiLCJvUmVxdWVzdEFuaW1hdGlvbkZyYW1lIiwiaXNNb2JpbGUiLCJjdXJySW5kZXgiLCJwcmV2SW5kZXgiLCJwcmV2UG9zIiwiY3VyclBvcyIsImZpcnN0UnVuIiwiZ3JvdXAiLCJzbGlkZXMiLCJhZGRDb250ZW50IiwidHJhbnNsYXRlIiwiJHJlZnMiLCJhY3RpdmF0ZSIsImp1bXBUbyIsIiRvcmlnIiwiJHRodW1iIiwidXBkYXRlQ29udHJvbHMiLCJUaHVtYnMiLCJpc0FjdGl2ZSIsImFkZEV2ZW50cyIsInJlbW92ZUV2ZW50cyIsImlzU2NhbGVkRG93biIsImlkbGVTZWNvbmRzQ291bnRlciIsImlzSWRsZSIsInNob3dDb250cm9scyIsImlkbGVJbnRlcnZhbCIsImlzRHJhZ2dpbmciLCJoaWRlQ29udHJvbHMiLCJpc0Nsb3NpbmciLCJpc0FuaW1hdGluZyIsImNyZWF0ZVNsaWRlIiwiZm9yY2VkRHVyYXRpb24iLCJpc01vdmVkIiwiJHNsaWRlIiwibG9hZFNsaWRlIiwiZ2V0VHJhbnNsYXRlIiwiaXNDb21wbGV0ZSIsInNldFRyYW5zbGF0ZSIsImlzTG9hZGVkIiwicmV2ZWFsQ29udGVudCIsInVwZGF0ZVNsaWRlIiwic2NhbGVUb0FjdHVhbCIsIiRjb250ZW50IiwiaGFzRXJyb3IiLCJ1cGRhdGVDdXJzb3IiLCJzY2FsZVgiLCJzY2FsZVkiLCJTbGlkZVNob3ciLCJzY2FsZVRvRml0IiwiZ2V0Rml0UG9zIiwicmF0aW8iLCJjZW50ZXJTbGlkZSIsIkd1ZXN0dXJlcyIsImlzWm9vbWFibGUiLCJjYW5QYW4iLCJpc0xvYWRpbmciLCJzZXRJbWFnZSIsInNldElmcmFtZSIsInZpZGVvRm9ybWF0Iiwic2V0RXJyb3IiLCJzaG93TG9hZGluZyIsInNyY3NldCIsIiRpbWFnZSIsInBvc3RmaXgiLCJ0aHVtYiIsIiRnaG9zdCIsInNldEJpZ0ltYWdlIiwicmVzb2x2ZUltYWdlU2xpZGVTaXplIiwibmF0dXJhbFdpZHRoIiwibmF0dXJhbEhlaWdodCIsInNpemVzIiwiaGlkZUxvYWRpbmciLCIkaWZyYW1lIiwibWF4LXdpZHRoIiwiaXNSZXZlYWxlZCIsIiRwbGFjZWhvbGRlciIsIiRzbWFsbEJ0biIsIiRzcGlubmVyIiwiZ2V0VGh1bWJQb3MiLCJwYXJlbnRFbGVtZW50IiwiZXZlcnkiLCJib3R0b20iLCJjbGVhblVwIiwic2Nyb2xsWCIsInNjcm9sbFkiLCIkY2FwdGlvbiIsImlzSGlkZGVuQ29udHJvbHMiLCJ0b2dnbGVDb250cm9scyIsIm5hdmlnYXRvciIsInVzZXJBZ2VudCIsInVzZTNkIiwiZG9jdW1lbnRNb2RlIiwicHJvcGVydHlOYW1lIiwieW91dHViZSIsImF1dG9oaWRlIiwiZnMiLCJyZWwiLCJoZCIsIndtb2RlIiwiZW5hYmxlanNhcGkiLCJodG1sNSIsInBhcmFtUGxhY2UiLCJ2aW1lbyIsInNob3dfdGl0bGUiLCJzaG93X2J5bGluZSIsInNob3dfcG9ydHJhaXQiLCJmdWxsc2NyZWVuIiwiaW5zdGFncmFtIiwiZ21hcF9wbGFjZSIsImdtYXBfc2VhcmNoIiwiZGVjb2RlVVJJQ29tcG9uZW50Iiwib3JpZ1NyYyIsImNvbnRlbnRTb3VyY2UiLCJsb2FkaW5nIiwibG9hZGVkIiwib25Zb3VUdWJlSWZyYW1lQVBJUmVhZHkiLCJZVCIsIlBsYXllciIsIm9uU3RhdGVDaGFuZ2UiLCJWaW1lbyIsImFmdGVyU2hvdy5mYiIsImNhbmNlbEFuaW1hdGlvbkZyYW1lIiwid2Via2l0Q2FuY2VsQW5pbWF0aW9uRnJhbWUiLCJtb3pDYW5jZWxBbmltYXRpb25GcmFtZSIsIm9DYW5jZWxBbmltYXRpb25GcmFtZSIsIm9uY2xpY2siLCJzdWJzdHIiLCJzY3JvbGxXaWR0aCIsIiRiZyIsImJnIiwiJGNvbnRhaW5lciIsIm9udG91Y2hzdGFydCIsInJlYWxQb2ludHMiLCJzdGFydFBvaW50cyIsInN0YXJ0RXZlbnQiLCJjYW5UYXAiLCJpc1Bhbm5pbmciLCJpc1N3aXBpbmciLCJpc1pvb21pbmciLCJpc1Njcm9sbGluZyIsImRpc3RhbmNlWCIsImRpc3RhbmNlWSIsImRpc3RhbmNlIiwiY2FudmFzV2lkdGgiLCJjYW52YXNIZWlnaHQiLCJjb250ZW50TGFzdFBvcyIsImNvbnRlbnRTdGFydFBvcyIsInNsaWRlclN0YXJ0UG9zIiwic2xpZGVyTGFzdFBvcyIsInN0YWdlUG9zIiwib25zY3JvbGwiLCJpc1Njcm9sbGFibGUiLCJjZW50ZXJQb2ludFN0YXJ0WCIsImNlbnRlclBvaW50U3RhcnRZIiwicGVyY2VudGFnZU9mSW1hZ2VBdFBpbmNoUG9pbnRYIiwicGVyY2VudGFnZU9mSW1hZ2VBdFBpbmNoUG9pbnRZIiwic3RhcnREaXN0YW5jZUJldHdlZW5GaW5nZXJzIiwib250b3VjaG1vdmUiLCJvbnRvdWNoZW5kIiwibmV3UG9pbnRzIiwib25Td2lwZSIsIm9uUGFuIiwib25ab29tIiwicmVxdWVzdElkIiwibGltaXRNb3ZlbWVudCIsImxpbWl0UG9zaXRpb24iLCJTIiwibmV3V2lkdGgiLCJuZXdIZWlnaHQiLCJlbmRQb2ludHMiLCJkTXMiLCJvblRhcCIsInZlbG9jaXR5WCIsInZlbG9jaXR5WSIsImVuZFBhbm5pbmciLCJlbmRab29taW5nIiwiZW5kU3dpcGluZyIsInRhcHBlZCIsInRhcFgiLCJ0YXBZIiwiJGJ1dHRvbiIsIiRwcm9ncmVzcyIsImlubmVyIiwib25Jbml0LmZiIiwiYmVmb3JlU2hvdy5mYiIsImFmdGVyS2V5ZG93bi5mYiIsImJlZm9yZUNsb3NlLmZiIG9uRGVhY3RpdmF0ZS5mYiIsInJlcXVlc3QiLCJyZXF1ZXN0RnVsbHNjcmVlbiIsIkFMTE9XX0tFWUJPQVJEX0lOUFVUIiwiZXhpdCIsImV4aXRGdWxsc2NyZWVuIiwiaXNGdWxsc2NyZWVuIiwiZnVsbHNjcmVlbkVuYWJsZWQiLCJmdWxsc2NyZWVuY2hhbmdlIiwiRnVsbFNjcmVlbiIsImJlZm9yZUNsb3NlLmZiIiwiJGdyaWQiLCJzaGFyZSIsImN1cnJlbnRIYXNoIiwiJiIsIjwiLCJcIiIsIiciLCIvIiwiYCIsIj0iLCJnYWxsZXJ5Iiwib3JpZ0hhc2giLCJoYXNoVGltZXIiLCJoaXN0b3J5IiwicGF0aG5hbWUiLCJzZWFyY2giLCJoYXNDcmVhdGVkSGlzdG9yeSIsImJhY2siLCJyZXBsYWNlU3RhdGUiLCJkZWx0YVkiLCJkZWx0YVgiLCJ3aGVlbERlbHRhIiwibWFzayIsImRlZmluaXRpb25zIiwiOSIsImF1dG9jbGVhciIsImRhdGFOYW1lIiwicGxhY2Vob2xkZXIiLCJjYXJldCIsInNldFNlbGVjdGlvblJhbmdlIiwiY3JlYXRlVGV4dFJhbmdlIiwiY29sbGFwc2UiLCJtb3ZlRW5kIiwibW92ZVN0YXJ0Iiwic2VsZWN0aW9uU3RhcnQiLCJzZWxlY3Rpb25FbmQiLCJjcmVhdGVSYW5nZSIsImR1cGxpY2F0ZSIsImJlZ2luIiwidW5tYXNrIiwiQiIsInoiLCJBIiwiY2hhbmdlIiwiRCIsImJsb2NrRml4ZWQiLCJCRiIsImZpeGVkSGVpZ2h0IiwidG9wU2Nyb2xsIiwic2V0X3ZhbHVlIiwiY2Fyb3VzZWwiLCJkZWZhdWx0X3ZhbHVlIiwiaE1haW4iLCJoQ2xvbmUiLCJoTWFpbkhlaWdodCIsInRvcEhlaWdodCIsImhDbG9uZUhlaWdodCIsImhBbGwiLCJzY3JvbGwiLCJpdGVtU2l6ZSIsIml0ZW1JZCIsIml0ZW1OYW1lIiwiaXRlbVRvcCIsImhlaWdodEhlYWRlciIsImRlc3RpbmF0aW9uIiwibG9nIiwic2xpZGVyIiwiZGF0YUNvbnRyb2wiLCJtb3VzZXVwIiwicGxheWJhY2tSYXRlIiwic3BpbmNyZW1lbnRFYXNpbmciLCJzcGluY3JlbWVudCIsImRlY2ltYWxQb2ludCIsInRob3VzYW5kU2VwYXJhdG9yIiwiZGVjaW1hbFBsYWNlcyIsImxlZXdheSIsImNvdW50ZXIiXSwibWFwcGluZ3MiOiJDQWdCQSxTQUFZQSxFQUFRQyxHQUVuQixhQUV1QixpQkFBWEMsUUFBaUQsaUJBQW5CQSxPQUFPQyxRQVNoREQsT0FBT0MsUUFBVUgs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RUFBRSxLQUFLK29DLEVBQUU5WSxXQUFXcnBCLEVBQUV6RyxPQUFPdUQsUUFBUWlWLEVBQUUsS0FBSyxJQUE0RnNrQixFQUF4Rm1NLEVBQUVOLEVBQUV6VSxTQUFzRixHQUE3RXlVLEVBQUU4bUMsU0FBU3htQyxHQUFHNWxDLEtBQUt3c0IsTUFBTThZLEVBQUV6VSxVQUFVLEVBQUU3d0IsS0FBS0MsU0FBUyxHQUFHcWxDLEVBQUU4bUMsT0FBTyxNQUFlaHBFLEVBQUV5SSxLQUFLLFdBQVc0dEIsRUFBRTFDLFNBQVMzekIsRUFBRXlJLEtBQUssV0FBVyxTQUFTLEdBQUcsT0FBT3k1QixFQUFFNm1DLGNBQWMxeUMsRUFBRTZMLEVBQUU2bUMsa0JBQWtCLENBQUMsSUFBSWh4QixFQUFFLzNDLEVBQUV6RyxPQUFPeEIsUUFBUW1xQyxFQUFFMm1DLGNBQWN4eUMsR0FBSyxFQUFIMGhCLEVBQUsvM0MsRUFBRXpHLE9BQU9jLFFBQVEwOUMsRUFBRSxHQUFHLEVBQUUvM0MsRUFBRSthLElBQUksVUFBVWhLLEdBQUdteEIsRUFBRXFsQixNQUFNdm5ELEVBQUUrYSxJQUFJLFVBQVUsR0FBRy9hLEVBQUVzeEIsUUFBUSxDQUFDMjNDLFFBQVE5bUMsRUFBRXpXLFFBQVEsR0FBRyxDQUFDRixPQUFPMFcsRUFBRTFXLE9BQU9pQyxTQUFTK1UsRUFBRTdVLEtBQUssU0FBU3JPLEdBQUd0ZixFQUFFK2xCLEtBQUs1aUIsRUFBRW1jLEVBQUU2aUIsRUFBRTlMLEtBQUtsRyxTQUFTLFdBQVdud0IsRUFBRSthLElBQUksVUFBVSxNQUFNL2EsRUFBRStsQixLQUFLNWlCLEVBQUVnL0IsRUFBRTlMLElBQUk2TCxFQUFFL1IsVUFBVStSLEVBQUUvUixTQUFTbndCLFNBQTMzQyxDQUFxNENsRyIsImZpbGUiOiJtYWluLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLypcclxuICog0J/QvtC00LrQu9GO0YfQtdC90LjQtSDQsdC40LHQu9C40L7RgtC10Log0LIg0L7QtNC40L0gSlNcclxuICovXHJcbi8qIVxyXG4gKiBqUXVlcnkgSmF2YVNjcmlwdCBMaWJyYXJ5IHYzLjMuMVxyXG4gKiBodHRwczovL2pxdWVyeS5jb20vXHJcbiAqXHJcbiAqIEluY2x1ZGVzIFNpenpsZS5qc1xyXG4gKiBodHRwczovL3NpenpsZWpzLmNvbS9cclxuICpcclxuICogQ29weXJpZ2h0IEpTIEZvdW5kYXRpb24gYW5kIG90aGVyIGNvbnRyaWJ1dG9yc1xyXG4gKiBSZWxlYXNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2VcclxuICogaHR0cHM6Ly9qcXVlcnkub3JnL2xpY2Vuc2VcclxuICpcclxuICogRGF0ZTogMjAxOC0wMS0yMFQxNzoyNFpcclxuICovXHJcbiggZnVuY3Rpb24oIGdsb2JhbCwgZmFjdG9yeSApIHtcclxuXHJcblx0XCJ1c2Ugc3RyaWN0XCI7XHJcblxyXG5cdGlmICggdHlwZW9mIG1vZHVsZSA9PT0gXCJvYmplY3RcIiAmJiB0eXBlb2YgbW9kdWxlLmV4cG9ydHMgPT09IFwib2JqZWN0XCIgKSB7XHJcblxyXG5cdFx0Ly8gRm9yIENvbW1vbkpTIGFuZCBDb21tb25KUy1saWtlIGVudmlyb25tZW50cyB3aGVyZSBhIHByb3BlciBgd2luZG93YFxyXG5cdFx0Ly8gaXMgcHJlc2VudCwgZXhlY3V0ZSB0aGUgZmFjdG9yeSBhbmQgZ2V0IGpRdWVyeS5cclxuXHRcdC8vIEZvciBlbnZpcm9ubWVudHMgdGhhdCBkbyBub3QgaGF2ZSBhIGB3aW5kb3dgIHdpdGggYSBgZG9jdW1lbnRgXHJcblx0XHQvLyAoc3VjaCBhcyBOb2RlLmpzKSwgZXhwb3NlIGEgZmFjdG9yeSBhcyBtb2R1bGUuZXhwb3J0cy5cclxuXHRcdC8vIFRoaXMgYWNjZW50dWF0ZXMgdGhlIG5lZWQgZm9yIHRoZSBjcmVhdGlvbiBvZiBhIHJlYWwgYHdpbmRvd2AuXHJcblx0XHQvLyBlLmcuIHZhciBqUXVlcnkgPSByZXF1aXJlKFwianF1ZXJ5XCIpKHdpbmRvdyk7XHJcblx0XHQvLyBTZWUgdGlja2V0ICMxNDU0OSBmb3IgbW9yZSBpbmZvLlxyXG5cdFx0bW9kdWxlLmV4cG9ydHMgPSBnbG9iYWwuZG9jdW1lbnQgP1xyXG5cdFx0XHRmYWN0b3J5KCBnbG9iYWwsIHRydWUgKSA6XHJcblx0XHRcdGZ1bmN0aW9uKCB3ICkge1xyXG5cdFx0XHRcdGlmICggIXcuZG9jdW1lbnQgKSB7XHJcblx0XHRcdFx0XHR0aHJvdyBuZXcgRXJyb3IoIFwialF1ZXJ5IHJlcXVpcmVzIGEgd2luZG93IHdpdGggYSBkb2N1bWVudFwiICk7XHJcblx0XHRcdFx0fVxyXG5cdFx0XHRcdHJldHVybiBmYWN0b3J5KCB3ICk7XHJcblx0XHRcdH07XHJcblx0fSBlbHNlIHtcclxuXHRcdGZhY3RvcnkoIGdsb2JhbCApO1xyXG5cdH1cclxuXHJcbi8vIFBhc3MgdGhpcyBpZiB3aW5kb3cgaXMgbm90IGRlZmluZWQgeWV0XHJcbn0gKSggdHlwZW9mIHdpbmRvdyAhPT0gXCJ1bmRlZmluZWRcIiA/IHdpbmRvdyA6IHRoaXMsIGZ1bmN0aW9uKCB3aW5kb3csIG5vR2xvYmFsICkge1xyXG5cclxuLy8gRWRnZSA8PSAxMiAtIDEzKywgRmlyZWZveCA8PTE4IC0gNDUrLCBJRSAxMCAtIDExLCBTYWZhcmkgNS4xIC0gOSssIGlPUyA2IC0gOS4xXHJcbi8vIHRocm93IGV4Y2VwdGlvbnMgd2hlbiBub24tc3RyaWN0IGNvZGUgKGUuZy4sIEFTUC5ORVQgNC41KSBhY2Nlc3NlcyBzdHJpY3QgbW9kZVxyXG4vLyBhcmd1bWVudHMuY2FsbGVlLmNhbGxlciAodHJhYy0xMzMzNSkuIEJ1dCBhcyBvZiBqUXVlcnkgMy4wICgyMDE2KSwgc3RyaWN0IG1vZGUgc2hvdWxkIGJlIGNvbW1vblxyXG4vLyBlbm91Z2ggdGhhdCBhbGwgc3VjaCBhdHRlbXB0cyBhcmUgZ3VhcmRlZCBpbiBhIHRyeSBibG9jay5cclxuXCJ1c2Ugc3RyaWN0XCI7XHJcblxyXG52YXIgYXJyID0gW107XHJcblxyXG52YXIgZG9jdW1lbnQgPSB3aW5kb3cuZG9jdW1lbnQ7XHJcblxyXG52YXIgZ2V0UHJvdG8gPSBPYmplY3QuZ2V0UHJvdG90eXBlT2Y7XHJcblxyXG52YXIgc2xpY2UgPSBhcnIuc2xpY2U7XHJcblxyXG52YXIgY29uY2F0ID0gYXJyLmNvbmNhdDtcclxuXHJcbnZhciBwdXNoID0gYXJyLnB1c2g7XHJcblxyXG52YXIgaW5kZXhPZiA9IGFyci5pbmRleE9mO1xyXG5cclxudmFyIGNsYXNzMnR5cGUgPSB7fTtcclxuXHJcbnZhciB0b1N0cmluZyA9IGNsYXNzMnR5cGUudG9TdHJpbmc7XHJcblxyXG52YXIgaGFzT3duID0gY2xhc3MydHlwZS5oYXNPd25Qcm9wZXJ0eTtcclxuXHJcbnZhciBmblRvU3RyaW5nID0gaGFzT3duLnRvU3RyaW5nO1xyXG5cclxudmFyIE9iamVjdEZ1bmN0aW9uU3RyaW5nID0gZm5Ub1N0cmluZy5jYWxsKCBPYmplY3QgKTtcclxuXHJcbnZhciBzdXBwb3J0ID0ge307XHJcblxyXG52YXIgaXNGdW5jdGlvbiA9IGZ1bmN0aW9uIGlzRnVuY3Rpb24oIG9iaiApIHtcclxuXHJcbiAgICAgIC8vIFN1cHBvcnQ6IENocm9tZSA8PTU3LCBGaXJlZm94IDw9NTJcclxuICAgICAgLy8gSW4gc29tZSBicm93c2VycywgdHlwZW9mIHJldHVybnMgXCJmdW5jdGlvblwiIGZvciBIVE1MIDxvYmplY3Q+IGVsZW1lbnRzXHJcbiAgICAgIC8vIChpLmUuLCBgdHlwZW9mIGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoIFwib2JqZWN0XCIgKSA9PT0gXCJmdW5jdGlvblwiYCkuXHJcbiAgICAgIC8vIFdlIGRvbid0IHdhbnQgdG8gY2xhc3NpZnkgKmFueSogRE9NIG5vZGUgYXMgYSBmdW5jdGlvbi5cclxuICAgICAgcmV0dXJuIHR5cGVvZiBvYmogPT09IFwiZnVuY3Rpb25cIiAmJiB0eXBlb2Ygb2JqLm5vZGVUeXBlICE9PSBcIm51bWJlclwiO1xyXG4gIH07XHJcblxyXG5cclxudmFyIGlzV2luZG93ID0gZnVuY3Rpb24gaXNXaW5kb3coIG9iaiApIHtcclxuXHRcdHJldHVybiBvYmogIT0gbnVsbCAmJiBvYmogPT09IG9iai53aW5kb3c7XHJcblx0fTtcclxuXHJcblxyXG5cclxuXHJcblx0dmFyIHByZXNlcnZlZFNjcmlwdEF0dHJpYnV0ZXMgPSB7XHJcblx0XHR0eXBlOiB0cnVlLFxyXG5cdFx0c3JjOiB0cnVlLFxyXG5cdFx0bm9Nb2R1bGU6IHRydWVcclxuXHR9O1xyXG5cclxuXHRmdW5jdGlvbiBET01FdmFsKCBjb2RlLCBkb2MsIG5vZGUgKSB7XHJcblx0XHRkb2MgPSBkb2MgfHwgZG9jdW1lbnQ7XHJcblxyXG5cdFx0dmFyIGksXHJcblx0XHRcdHNjcmlwdCA9IGRvYy5jcmVhdGVFbGVtZW50KCBcInNjcmlwdFwiICk7XHJcblxyXG5cdFx0c2NyaXB0LnRleHQgPSBjb2RlO1xyXG5cdFx0aWYgKCBub2RlICkge1xyXG5cdFx0XHRmb3IgKCBpIGluIHByZXNlcnZlZFNjcmlwdEF0dHJpYnV0ZXMgKSB7XHJcblx0XHRcdFx0aWYgKCBub2RlWyBpIF0gKSB7XHJcblx0XHRcdFx0XHRzY3JpcHRbIGkgXSA9IG5vZGVbIGkgXTtcclxuXHRcdFx0XHR9XHJcblx0XHRcdH1cclxuXHRcdH1cclxuXHRcdGRvYy5oZWFkLmFwcGVuZENoaWxkKCBzY3JpcHQgKS5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKCBzY3JpcHQgKTtcclxuXHR9XHJcblxyXG5cclxuZnVuY3Rpb24gdG9UeXBlKCBvYmogKSB7XHJcblx0aWYgKCBvYmogPT0gbnVsbCApIHtcclxuXHRcdHJldHVybiBvYmogKyBcIlwiO1xyXG5cdH1cclxuXHJcblx0Ly8gU3VwcG9ydDogQW5kcm9pZCA8PTIuMyBvbmx5IChmdW5jdGlvbmlzaCBSZWdFeHApXHJcblx0cmV0dXJuIHR5cGVvZiBvYmogPT09IFwib2JqZWN0XCIgfHwgdHlwZW9mIG9iaiA9PT0gXCJmdW5jdGlvblwiID9cclxuXHRcdGNsYXNzMnR5cGVbIHRvU3RyaW5nLmNhbGwoIG9iaiApIF0gfHwgXCJvYmplY3RcIiA6XHJcblx0XHR0eXBlb2Ygb2JqO1xyXG59XHJcbi8qIGdsb2JhbCBTeW1ib2wgKi9cclxuLy8gRGVmaW5pbmcgdGhpcyBnbG9iYWwgaW4gLmVzbGludHJjLmpzb24gd291bGQgY3JlYXRlIGEgZGFuZ2VyIG9mIHVzaW5nIHRoZSBnbG9iYWxcclxuLy8gdW5ndWFyZGVkIGluIGFub3RoZXIgcGxhY2UsIGl0IHNlZW1zIHNhZmVyIHRvIGRlZmluZSBnbG9iYWwgb25seSBmb3IgdGhpcyBtb2R1bGVcclxuXHJcblxyXG5cclxudmFyXHJcblx0dmVyc2lvbiA9IFwiMy4zLjFcIixcclxuXHJcblx0Ly8gRGVmaW5lIGEgbG9jYWwgY29weSBvZiBqUXVlcnlcclxuXHRqUXVlcnkgPSBmdW5jdGlvbiggc2VsZWN0b3IsIGNvbnRleHQgKSB7XHJcblxyXG5cdFx0Ly8gVGhlIGpRdWVyeSBvYmplY3QgaXMgYWN0dWFsbHkganVzdCB0aGUgaW5pdCBjb25zdHJ1Y3RvciAnZW5oYW5jZWQnXHJcblx0XHQvLyBOZWVkIGluaXQgaWYgalF1ZXJ5IGlzIGNhbGxlZCAoanVzdCBhbGxvdyBlcnJvciB0byBiZSB0aHJvd24gaWYgbm90IGluY2x1ZGVkKVxyXG5cdFx0cmV0dXJuIG5ldyBqUXVlcnkuZm4uaW5pdCggc2VsZWN0b3IsIGNvbnRleHQgKTtcclxuXHR9LFxyXG5cclxuXHQvLyBTdXBwb3J0OiBBbmRyb2lkIDw9NC4wIG9ubHlcclxuXHQvLyBNYWtlIHN1cmUgd2UgdHJpbSBCT00gYW5kIE5CU1BcclxuXHRydHJpbSA9IC9eW1xcc1xcdUZFRkZcXHhBMF0rfFtcXHNcXHVGRUZGXFx4QTBdKyQvZztcclxuXHJcbmpRdWVyeS5mbiA9IGpRdWVyeS5wcm90b3R5cGUgPSB7XHJcblxyXG5cdC8vIFRoZSBjdXJyZW50IHZlcnNpb24gb2YgalF1ZXJ5IGJlaW5nIHVzZWRcclxuXHRqcXVlcnk6IHZlcnNpb24sXHJcblxyXG5cdGNvbnN0cnVjdG9yOiBqUXVlcnksXHJcblxyXG5cdC8vIFRoZSBkZWZhdWx0IGxlbmd0aCBvZiBhIGpRdWVyeSBvYmplY3QgaXMgMFxyXG5cdGxlbmd0aDogMCxcclxuXHJcblx0dG9BcnJheTogZnVuY3Rpb24oKSB7XHJcblx0XHRyZXR1cm4gc2xpY2UuY2FsbCggdGhpcyApO1xyXG5cdH0sXHJcblxyXG5cdC8vIEdldCB0aGUgTnRoIGVsZW1lbnQgaW4gdGhlIG1hdGNoZWQgZWxlbWVudCBzZXQgT1JcclxuXHQvLyBHZXQgdGhlIHdob2xlIG1hdGNoZWQgZWxlbWVudCBzZXQgYXMgYSBjbGVhbiBhcnJheVxyXG5cdGdldDogZnVuY3Rpb24oIG51bSApIHtcclxuXHJcblx0XHQvLyBSZXR1cm4gYWxsIHRoZSBlbGVtZW50cyBpbiBhIGNsZWFuIGFycmF5XHJcblx0XHRpZiAoIG51bSA9PSBudWxsICkge1xyXG5cdFx0XHRyZXR1cm4gc2xpY2UuY2FsbCggdGhpcyApO1xyXG5cdFx0fVxyXG5cclxuXHRcdC8vIFJldHVybiBqdXN0IHRoZSBvbmUgZWxlbWVudCBmcm9tIHRoZSBzZXRcclxuXHRcdHJldHVybiBudW0gPCAwID8gdGhpc1sgbnVtICsgdGhpcy5sZW5ndGggXSA6IHRoaXNbIG51bSBdO1xyXG5cdH0sXHJcblxyXG5cdC8vIFRha2UgYW4gYXJyYXkgb2YgZWxlbWVudHMgYW5kIHB1c2ggaXQgb250byB0aGUgc3RhY2tcclxuXHQvLyAocmV0dXJuaW5nIHRoZSBuZXcgbWF0Y2hlZCBlbGVtZW50IHNldClcclxuXHRwdXNoU3RhY2s6IGZ1bmN0aW9uKCBlbGVtcyApIHtcclxuXHJcblx0XHQvLyBCdWlsZCBhIG5ldyBqUXVlcnkgbWF0Y2hlZCBlbGVtZW50IHNldFxyXG5cdFx0dmFyIHJldCA9IGpRdWVyeS5tZXJnZSggdGhpcy5jb25zdHJ1Y3RvcigpLCBlbGVtcyApO1xyXG5cclxuXHRcdC8vIEFkZCB0aGUgb2xkIG9iamVjdCBvbnRvIHRoZSBzdGFjayAoYXMgYSByZWZlcmVuY2UpXHJcblx0XHRyZXQucHJldk9iamVjdCA9IHRoaXM7XHJcblxyXG5cdFx0Ly8gUmV0dXJuIHRoZSBuZXdseS1mb3JtZWQgZWxlbWVudCBzZXRcclxuXHRcdHJldHVybiByZXQ7XHJcblx0fSxcclxuXHJcblx0Ly8gRXhlY3V0ZSBhIGNhbGxiYWNrIGZvciBldmVyeSBlbGVtZW50IGluIHRoZSBtYXRjaGVkIHNldC5cclxuXHRlYWNoOiBmdW5jdGlvbiggY2FsbGJhY2sgKSB7XHJcblx0XHRyZXR1cm4galF1ZXJ5LmVhY2goIHRoaXMsIGNhbGxiYWNrICk7XHJcblx0fSxcclxuXHJcblx0bWFwOiBmdW5jdGlvbiggY2FsbGJhY2sgKSB7XHJcblx0XHRyZXR1cm4gdGhpcy5wdXNoU3RhY2soIGpRdWVyeS5tYXAoIHRoaXMsIGZ1bmN0aW9uKCBlbGVtLCBpICkge1xyXG5cdFx0XHRyZXR1cm4gY2FsbGJhY2suY2FsbCggZWxlbSwgaSwgZWxlbSApO1xyXG5cdFx0fSApICk7XHJcblx0fSxcclxuXHJcblx0c2xpY2U6IGZ1bmN0aW9uKCkge1xyXG5cdFx0cmV0dXJuIHRoaXMucHVzaFN0YWNrKCBzbGljZS5hcHBseSggdGhpcywgYXJndW1lbnRzICkgKTtcclxuXHR9LFxyXG5cclxuXHRmaXJzdDogZnVuY3Rpb24oKSB7XHJcblx0XHRyZXR1cm4gdGhpcy5lcSggMCApO1xyXG5cdH0sXHJcblxyXG5cdGxhc3Q6IGZ1bmN0aW9uKCkge1xyXG5cdFx0cmV0dXJuIHRoaXMuZXEoIC0xICk7XHJcblx0fSxcclxuXHJcblx0ZXE6IGZ1bmN0aW9uKCBpICkge1xyXG5cdFx0dmFyIGxlbiA9IHRoaXMubGVuZ3RoLFxyXG5cdFx0XHRqID0gK2kgKyAoIGkgPCAwID8gbGVuIDogMCApO1xyXG5cdFx0cmV0dXJuIHRoaXMucHVzaFN0YWNrKCBqID49IDAgJiYgaiA8IGxlbiA/IFsgdGhpc1sgaiBdIF0gOiBbXSApO1xyXG5cdH0sXHJcblxyXG5cdGVuZDogZnVuY3Rpb24oKSB7XHJcblx0XHRyZXR1cm4gdGhpcy5wcmV2T2JqZWN0IHx8IHRoaXMuY29uc3RydWN0b3IoKTtcclxuXHR9LFxyXG5cclxuXHQvLyBGb3IgaW50ZXJuYWwgdXNlIG9ubHkuXHJcblx0Ly8gQmVoYXZlcyBsaWtlIGFuIEFycmF5J3MgbWV0aG9kLCBub3QgbGlrZSBhIGpRdWVyeSBtZXRob2QuXHJcblx0cHVzaDogcHVzaCxcclxuXHRzb3J0OiBhcnIuc29ydCxcclxuXHRzcGxpY2U6IGFyci5zcGxpY2VcclxufTtcclxuXHJcbmpRdWVyeS5leHRlbmQgPSBqUXVlcnkuZm4uZXh0ZW5kID0gZnVuY3Rpb24oKSB7XHJcblx0dmFyIG9wdGlvbnMsIG5hbWUsIHNyYywgY29weSwgY29weUlzQXJyYXksIGNsb25lLFxyXG5cdFx0dGFyZ2V0ID0gYXJndW1lbnRzWyAwIF0gfHwge30sXHJcblx0XHRpID0gMSxcclxuXHRcdGxlbmd0aCA9IGFyZ3VtZW50cy5sZW5ndGgsXHJcblx0XHRkZWVwID0gZmFsc2U7XHJcblxyXG5cdC8vIEhhbmRsZSBhIGRlZXAgY29weSBzaXR1YXRpb25cclxuXHRpZiAoIHR5cGVvZiB0YXJnZXQgPT09IFwiYm9vbGVhblwiICkge1xyXG5cdFx0ZGVlcCA9IHRhcmdldDtcclxuXHJcblx0XHQvLyBTa2lwIHRoZSBib29sZWFuIGFuZCB0aGUgdGFyZ2V0XHJcblx0XHR0YXJnZXQgPSBhcmd1bWVudHNbIGkgXSB8fCB7fTtcclxuXHRcdGkrKztcclxuXHR9XHJcblxyXG5cdC8vIEhhbmRsZSBjYXNlIHdoZW4gdGFyZ2V0IGlzIGEgc3RyaW5nIG9yIHNvbWV0aGluZyAocG9zc2libGUgaW4gZGVlcCBjb3B5KVxyXG5cdGlmICggdHlwZW9mIHRhcmdldCAhPT0gXCJvYmplY3RcIiAmJiAhaXNGdW5jdGlvbiggdGFyZ2V0ICkgKSB7XHJcblx0XHR0YXJnZXQgPSB7fTtcclxuXHR9XHJcblxyXG5cdC8vIEV4dGVuZCBqUXVlcnkgaXRzZWxmIGlmIG9ubHkgb25lIGFyZ3VtZW50IGlzIHBhc3NlZFxyXG5cdGlmICggaSA9PT0gbGVuZ3RoICkge1xyXG5cdFx0dGFyZ2V0ID0gdGhpcztcclxuXHRcdGktLTtcclxuXHR9XHJcblxyXG5cdGZvciAoIDsgaSA8IGxlbmd0aDsgaSsrICkge1xyXG5cclxuXHRcdC8vIE9ubHkgZGVhbCB3aXRoIG5vbi1udWxsL3VuZGVmaW5lZCB2YWx1ZXNcclxuXHRcdGlmICggKCBvcHRpb25zID0gYXJndW1lbnRzWyBpIF0gKSAhPSBudWxsICkge1xyXG5cclxuXHRcdFx0Ly8gRXh0ZW5kIHRoZSBiYXNlIG9iamVjdFxyXG5cdFx0XHRmb3IgKCBuYW1lIGluIG9wdGlvbnMgKSB7XHJcblx0XHRcdFx0c3JjID0gdGFyZ2V0WyBuYW1lIF07XHJcblx0XHRcdFx0Y29weSA9IG9wdGlvbnNbIG5hbWUgXTtcclxuXHJcblx0XHRcdFx0Ly8gUHJldmVudCBuZXZlci1lbmRpbmcgbG9vcFxyXG5cdFx0XHRcdGlmICggdGFyZ2V0ID09PSBjb3B5ICkge1xyXG5cdFx0XHRcdFx0Y29udGludWU7XHJcblx0XHRcdFx0fVxyXG5cclxuXHRcdFx0XHQvLyBSZWN1cnNlIGlmIHdlJ3JlIG1lcmdpbmcgcGxhaW4gb2JqZWN0cyBvciBhcnJheXNcclxuXHRcdFx0XHRpZiAoIGRlZXAgJiYgY29weSAmJiAoIGpRdWVyeS5pc1BsYWluT2JqZWN0KCBjb3B5ICkgfHxcclxuXHRcdFx0XHRcdCggY29weUlzQXJyYXkgPSBBcnJheS5pc0FycmF5KCBjb3B5ICkgKSApICkge1xyXG5cclxuXHRcdFx0XHRcdGlmICggY29weUlzQXJyYXkgKSB7XHJcblx0XHRcdFx0XHRcdGNvcHlJc0FycmF5ID0gZmFsc2U7XHJcblx0XHRcdFx0XHRcdGNsb25lID0gc3JjICYmIEFycmF5LmlzQXJyYXkoIHNyYyApID8gc3JjIDogW107XHJcblxyXG5cdFx0XHRcdFx0fSBlbHNlIHtcclxuXHRcdFx0XHRcdFx0Y2xvbmUgPSBzcmMgJiYgalF1ZXJ5LmlzUGxhaW5PYmplY3QoIHNyYyApID8gc3JjIDoge307XHJcblx0XHRcdFx0XHR9XHJcblxyXG5cdFx0XHRcdFx0Ly8gTmV2ZXIgbW92ZSBvcmlnaW5hbCBvYmplY3RzLCBjbG9uZSB0aGVtXHJcblx0XHRcdFx0XHR0YXJnZXRbIG5hbWUgXSA9IGpRdWVyeS5leHRlbmQoIGRlZXAsIGNsb25lLCBjb3B5ICk7XHJcblxyXG5cdFx0XHRcdC8vIERvbid0IGJyaW5nIGluIHVuZGVmaW5lZCB2YWx1ZXNcclxuXHRcdFx0XHR9IGVsc2UgaWYgKCBjb3B5ICE9PSB1bmRlZmluZWQgKSB7XHJcblx0XHRcdFx0XHR0YXJnZXRbIG5hbWUgXSA9IGNvcHk7XHJcblx0XHRcdFx0fVxyXG5cdFx0XHR9XHJcblx0XHR9XHJcblx0fVxyXG5cclxuXHQvLyBSZXR1cm4gdGhlIG1vZGlmaWVkIG9iamVjdFxyXG5cdHJldHVybiB0YXJnZXQ7XHJcbn07XHJcblxyXG5qUXVlcnkuZXh0ZW5kKCB7XHJcblxyXG5cdC8vIFVuaXF1ZSBmb3IgZWFjaCBjb3B5IG9mIGpRdWVyeSBvbiB0aGUgcGFnZVxyXG5cdGV4cGFuZG86IFwialF1ZXJ5XCIgKyAoIHZlcnNpb24gKyBNYXRoLnJhbmRvbSgpICkucmVwbGFjZSggL1xcRC9nLCBcIlwiICksXHJcblxyXG5cdC8vIEFzc3VtZSBqUXVlcnkgaXMgcmVhZHkgd2l0aG91dCB0aGUgcmVhZHkgbW9kdWxlXHJcblx0aXNSZWFkeTogdHJ1ZSxcclxuXHJcblx0ZXJyb3I6IGZ1bmN0aW9uKCBtc2cgKSB7XHJcblx0XHR0aHJvdyBuZXcgRXJyb3IoIG1zZyApO1xyXG5cdH0sXHJcblxyXG5cdG5vb3A6IGZ1bmN0aW9uKCkge30sXHJcblxyXG5cdGlzUGxhaW5PYmplY3Q6IGZ1bmN0aW9uKCBvYmogKSB7XHJcblx0XHR2YXIgcHJvdG8sIEN0b3I7XHJcblxyXG5cdFx0Ly8gRGV0ZWN0IG9idmlvdXMgbmVnYXRpdmVzXHJcblx0XHQvLyBVc2UgdG9TdHJpbmcgaW5zdGVhZCBvZiBqUXVlcnkudHlwZSB0byBjYXRjaCBob3N0IG9iamVjdHNcclxuXHRcdGlmICggIW9iaiB8fCB0b1N0cmluZy5jYWxsKCBvYmogKSAhPT0gXCJbb2JqZWN0IE9iamVjdF1cIiApIHtcclxuXHRcdFx0cmV0dXJuIGZhbHNlO1xyXG5cdFx0fVxyXG5cclxuXHRcdHByb3RvID0gZ2V0UHJvdG8oIG9iaiApO1xyXG5cclxuXHRcdC8vIE9iamVjdHMgd2l0aCBubyBwcm90b3R5cGUgKGUuZy4sIGBPYmplY3QuY3JlYXRlKCBudWxsIClgKSBhcmUgcGxhaW5cclxuXHRcdGlmICggIXByb3RvICkge1xyXG5cdFx0XHRyZXR1cm4gdHJ1ZTtcclxuXHRcdH1cclxuXHJcblx0XHQvLyBPYmplY3RzIHdpdGggcHJvdG90eXBlIGFyZSBwbGFpbiBpZmYgdGhleSB3ZXJlIGNvbnN0cnVjdGVkIGJ5IGEgZ2xvYmFsIE9iamVjdCBmdW5jdGlvblxyXG5cdFx0Q3RvciA9IGhhc093bi5jYWxsKCBwcm90bywgXCJjb25zdHJ1Y3RvclwiICkgJiYgcHJvdG8uY29uc3RydWN0b3I7XHJcblx0XHRyZXR1cm4gdHlwZW9mIEN0b3IgPT09IFwiZnVuY3Rpb25cIiAmJiBmblRvU3RyaW5nLmNhbGwoIEN0b3IgKSA9PT0gT2JqZWN0RnVuY3Rpb25TdHJpbmc7XHJcblx0fSxcclxuXHJcblx0aXNFbXB0eU9iamVjdDogZnVuY3Rpb24oIG9iaiApIHtcclxuXHJcblx0XHQvKiBlc2xpbnQtZGlzYWJsZSBuby11bnVzZWQtdmFycyAqL1xyXG5cdFx0Ly8gU2VlIGh0dHBzOi8vZ2l0aHViLmNvbS9lc2xpbnQvZXNsaW50L2lzc3Vlcy82MTI1XHJcblx0XHR2YXIgbmFtZTtcclxuXHJcblx0XHRmb3IgKCBuYW1lIGluIG9iaiApIHtcclxuXHRcdFx0cmV0dXJuIGZhbHNlO1xyXG5cdFx0fVxyXG5cdFx0cmV0dXJuIHRydWU7XHJcblx0fSxcclxuXHJcblx0Ly8gRXZhbHVhdGVzIGEgc2NyaXB0IGluIGEgZ2xvYmFsIGNvbnRleHRcclxuXHRnbG9iYWxFdmFsOiBmdW5jdGlvbiggY29kZSApIHtcclxuXHRcdERPTUV2YWwoIGNvZGUgKTtcclxuXHR9LFxyXG5cclxuXHRlYWNoOiBmdW5jdGlvbiggb2JqLCBjYWxsYmFjayApIHtcclxuXHRcdHZhciBsZW5ndGgsIGkgPSAwO1xyXG5cclxuXHRcdGlmICggaXNBcnJheUxpa2UoIG9iaiApICkge1xyXG5cdFx0XHRsZW5ndGggPSBvYmoubGVuZ3RoO1xyXG5cdFx0XHRmb3IgKCA7IGkgPCBsZW5ndGg7IGkrKyApIHtcclxuXHRcdFx0XHRpZiAoIGNhbGxiYWNrLmNhbGwoIG9ialsgaSBdLCBpLCBvYmpbIGkgXSApID09PSBmYWxzZSApIHtcclxuXHRcdFx0XHRcdGJyZWFrO1xyXG5cdFx0XHRcdH1cclxuXHRcdFx0fVxyXG5cdFx0fSBlbHNlIHtcclxuXHRcdFx0Zm9yICggaSBpbiBvYmogKSB7XHJcblx0XHRcdFx0aWYgKCBjYWxsYmFjay5jYWxsKCBvYmpbIGkgXSwgaSwgb2JqWyBpIF0gKSA9PT0gZmFsc2UgKSB7XHJcblx0XHRcdFx0XHRicmVhaztcclxuXHRcdFx0XHR9XHJcblx0XHRcdH1cclxuXHRcdH1cclxuXHJcblx0XHRyZXR1cm4gb2JqO1xyXG5cdH0sXHJcblxyXG5cdC8vIFN1cHBvcnQ6IEFuZHJvaWQgPD00LjAgb25seVxyXG5cdHRyaW06IGZ1bmN0aW9uKCB0ZXh0ICkge1xyXG5cdFx0cmV0dXJuIHRleHQgPT0gbnVsbCA/XHJcblx0XHRcdFwiXCIgOlxyXG5cdFx0XHQoIHRleHQgKyBcIlwiICkucmVwbGFjZSggcnRyaW0sIFwiXCIgKTtcclxuXHR9LFxyXG5cclxuXHQvLyByZXN1bHRzIGlzIGZvciBpbnRlcm5hbCB1c2FnZSBvbmx5XHJcblx0bWFrZUFycmF5OiBmdW5jdGlvbiggYXJyLCByZXN1bHRzICkge1xyXG5cdFx0dmFyIHJldCA9IHJlc3VsdHMgfHwgW107XHJcblxyXG5cdFx0aWYgKCBhcnIgIT0gbnVsbCApIHtcclxuXHRcdFx0aWYgKCBpc0FycmF5TGlrZSggT2JqZWN0KCBhcnIgKSApICkge1xyXG5cdFx0XHRcdGpRdWVyeS5tZXJnZSggcmV0LFxyXG5cdFx0XHRcdFx0dHlwZW9mIGFyciA9PT0gXCJzdHJpbmdcIiA/XHJcblx0XHRcdFx0XHRbIGFyciBdIDogYXJyXHJcblx0XHRcdFx0KTtcclxuXHRcdFx0fSBlbHNlIHtcclxuXHRcdFx0XHRwdXNoLmNhbGwoIHJldCwgYXJyICk7XHJcblx0XHRcdH1cclxuXHRcdH1cclxuXHJcblx0XHRyZXR1cm4gcmV0O1xyXG5cdH0sXHJcblxyXG5cdGluQXJyYXk6IGZ1bmN0aW9uKCBlbGVtLCBhcnIsIGkgKSB7XHJcblx0XHRyZXR1cm4gYXJyID09IG51bGwgPyAtMSA6IGluZGV4T2YuY2FsbCggYXJyLCBlbGVtLCBpICk7XHJcblx0fSxcclxuXHJcblx0Ly8gU3VwcG9ydDogQW5kcm9pZCA8PTQuMCBvbmx5LCBQaGFudG9tSlMgMSBvbmx5XHJcblx0Ly8gcHVzaC5hcHBseShfLCBhcnJheWxpa2UpIHRocm93cyBvbiBhbmNpZW50IFdlYktpdFxyXG5cdG1lcmdlOiBmdW5jdGlvbiggZmlyc3QsIHNlY29uZCApIHtcclxuXHRcdHZhciBsZW4gPSArc2Vjb25kLmxlbmd0aCxcclxuXHRcdFx0aiA9IDAsXHJcblx0XHRcdGkgPSBmaXJzdC5sZW5ndGg7XHJcblxyXG5cdFx0Zm9yICggOyBqIDwgbGVuOyBqKysgKSB7XHJcblx0XHRcdGZpcnN0WyBpKysgXSA9IHNlY29uZFsgaiBdO1xyXG5cdFx0fVxyXG5cclxuXHRcdGZpcnN0Lmxlbmd0aCA9IGk7XHJcblxyXG5cdFx0cmV0dXJuIGZpcnN0O1xyXG5cdH0sXHJcblxyXG5cdGdyZXA6IGZ1bmN0aW9uKCBlbGVtcywgY2FsbGJhY2ssIGludmVydCApIHtcclxuXHRcdHZhciBjYWxsYmFja0ludmVyc2UsXHJcblx0XHRcdG1hdGNoZXMgPSBbXSxcclxuXHRcdFx0aSA9IDAsXHJcblx0XHRcdGxlbmd0aCA9IGVsZW1zLmxlbmd0aCxcclxuXHRcdFx0Y2FsbGJhY2tFeHBlY3QgPSAhaW52ZXJ0O1xyXG5cclxuXHRcdC8vIEdvIHRocm91Z2ggdGhlIGFycmF5LCBvbmx5IHNhdmluZyB0aGUgaXRlbXNcclxuXHRcdC8vIHRoYXQgcGFzcyB0aGUgdmFsaWRhdG9yIGZ1bmN0aW9uXHJcblx0XHRmb3IgKCA7IGkgPCBsZW5ndGg7IGkrKyApIHtcclxuXHRcdFx0Y2FsbGJhY2tJbnZlcnNlID0gIWNhbGxiYWNrKCBlbGVtc1sgaSBdLCBpICk7XHJcblx0XHRcdGlmICggY2FsbGJhY2tJbnZlcnNlICE9PSBjYWxsYmFja0V4cGVjdCApIHtcclxuXHRcdFx0XHRtYXRjaGVzLnB1c2goIGVsZW1zWyBpIF0gKTtcclxuXHRcdFx0fVxyXG5cdFx0fVxyXG5cclxuXHRcdHJldHVybiBtYXRjaGVzO1xyXG5cdH0sXHJcblxyXG5cdC8vIGFyZyBpcyBmb3IgaW50ZXJuYWwgdXNhZ2Ugb25seVxyXG5cdG1hcDogZnVuY3Rpb24oIGVsZW1zLCBjYWxsYmFjaywgYXJnICkge1xyXG5cdFx0dmFyIGxlbmd0aCwgdmFsdWUsXHJcblx0XHRcdGkgPSAwLFxyXG5cdFx0XHRyZXQgPSBbXTtcclxuXHJcblx0XHQvLyBHbyB0aHJvdWdoIHRoZSBhcnJheSwgdHJhbnNsYXRpbmcgZWFjaCBvZiB0aGUgaXRlbXMgdG8gdGhlaXIgbmV3IHZhbHVlc1xyXG5cdFx0aWYgKCBpc0FycmF5TGlrZSggZWxlbXMgKSApIHtcclxuXHRcdFx0bGVuZ3RoID0gZWxlbXMubGVuZ3RoO1xyXG5cdFx0XHRmb3IgKCA7IGkgPCBsZW5ndGg7IGkrKyApIHtcclxuXHRcdFx0XHR2YWx1ZSA9IGNhbGxiYWNrKCBlbGVtc1sgaSBdLCBpLCBhcmcgKTtcclxuXHJcblx0XHRcdFx0aWYgKCB2YWx1ZSAhPSBudWxsICkge1xyXG5cdFx0XHRcdFx0cmV0LnB1c2goIHZhbHVlICk7XHJcblx0XHRcdFx0fVxyXG5cdFx0XHR9XHJcblxyXG5cdFx0Ly8gR28gdGhyb3VnaCBldmVyeSBrZXkgb24gdGhlIG9iamVjdCxcclxuXHRcdH0gZWxzZSB7XHJcblx0XHRcdGZvciAoIGkgaW4gZWxlbXMgKSB7XHJcblx0XHRcdFx0dmFsdWUgPSBjYWxsYmFjayggZWxlbXNbIGkgXSwgaSwgYXJnICk7XHJcblxyXG5cdFx0XHRcdGlmICggdmFsdWUgIT0gbnVsbCApIHtcclxuXHRcdFx0XHRcdHJldC5wdXNoKCB2YWx1ZSApO1xyXG5cdFx0XHRcdH1cclxuXHRcdFx0fVxyXG5cdFx0fVxyXG5cclxuXHRcdC8vIEZsYXR0ZW4gYW55IG5lc3RlZCBhcnJheXNcclxuXHRcdHJldHVybiBjb25jYXQuYXBwbHkoIFtdLCByZXQgKTtcclxuXHR9LFxyXG5cclxuXHQvLyBBIGdsb2JhbCBHVUlEIGNvdW50ZXIgZm9yIG9iamVjdHNcclxuXHRndWlkOiAxLFxyXG5cclxuXHQvLyBqUXVlcnkuc3VwcG9ydCBpcyBub3QgdXNlZCBpbiBDb3JlIGJ1dCBvdGhlciBwcm9qZWN0cyBhdHRhY2ggdGhlaXJcclxuXHQvLyBwcm9wZXJ0aWVzIHRvIGl0IHNvIGl0IG5lZWRzIHRvIGV4aXN0LlxyXG5cdHN1cHBvcnQ6IHN1cHBvcnRcclxufSApO1xyXG5cclxuaWYgKCB0eXBlb2YgU3ltYm9sID09PSBcImZ1bmN0aW9uXCIgKSB7XHJcblx0alF1ZXJ5LmZuWyBTeW1ib2wuaXRlcmF0b3IgXSA9IGFyclsgU3ltYm9sLml0ZXJhdG9yIF07XHJcbn1cclxuXHJcbi8vIFBvcHVsYXRlIHRoZSBjbGFzczJ0eXBlIG1hcFxyXG5qUXVlcnkuZWFjaCggXCJCb29sZWFuIE51bWJlciBTdHJpbmcgRnVuY3Rpb24gQXJyYXkgRGF0ZSBSZWdFeHAgT2JqZWN0IEVycm9yIFN5bWJvbFwiLnNwbGl0KCBcIiBcIiApLFxyXG5mdW5jdGlvbiggaSwgbmFtZSApIHtcclxuXHRjbGFzczJ0eXBlWyBcIltvYmplY3QgXCIgKyBuYW1lICsgXCJdXCIgXSA9IG5hbWUudG9Mb3dlckNhc2UoKTtcclxufSApO1xyXG5cclxuZnVuY3Rpb24gaXNBcnJheUxpa2UoIG9iaiApIHtcclxuXHJcblx0Ly8gU3VwcG9ydDogcmVhbCBpT1MgOC4yIG9ubHkgKG5vdCByZXByb2R1Y2libGUgaW4gc2ltdWxhdG9yKVxyXG5cdC8vIGBpbmAgY2hlY2sgdXNlZCB0byBwcmV2ZW50IEpJVCBlcnJvciAoZ2gtMjE0NSlcclxuXHQvLyBoYXNPd24gaXNuJ3QgdXNlZCBoZXJlIGR1ZSB0byBmYWxzZSBuZWdhdGl2ZXNcclxuXHQvLyByZWdhcmRpbmcgTm9kZWxpc3QgbGVuZ3RoIGluIElFXHJcblx0dmFyIGxlbmd0aCA9ICEhb2JqICYmIFwibGVuZ3RoXCIgaW4gb2JqICYmIG9iai5sZW5ndGgsXHJcblx0XHR0eXBlID0gdG9UeXBlKCBvYmogKTtcclxuXHJcblx0aWYgKCBpc0Z1bmN0aW9uKCBvYmogKSB8fCBpc1dpbmRvdyggb2JqICkgKSB7XHJcblx0XHRyZXR1cm4gZmFsc2U7XHJcblx0fVxyXG5cclxuXHRyZXR1cm4gdHlwZSA9PT0gXCJhcnJheVwiIHx8IGxlbmd0aCA9PT0gMCB8fFxyXG5cdFx0dHlwZW9mIGxlbmd0aCA9PT0gXCJudW1iZXJcIiAmJiBsZW5ndGggPiAwICYmICggbGVuZ3RoIC0gMSApIGluIG9iajtcclxufVxyXG52YXIgU2l6emxlID1cclxuLyohXHJcbiAqIFNpenpsZSBDU1MgU2VsZWN0b3IgRW5naW5lIHYyLjMuM1xyXG4gKiBodHRwczovL3NpenpsZWpzLmNvbS9cclxuICpcclxuICogQ29weXJpZ2h0IGpRdWVyeSBGb3VuZGF0aW9uIGFuZCBvdGhlciBjb250cmlidXRvcnNcclxuICogUmVsZWFzZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlXHJcbiAqIGh0dHA6Ly9qcXVlcnkub3JnL2xpY2Vuc2VcclxuICpcclxuICogRGF0ZTogMjAxNi0wOC0wOFxyXG4gKi9cclxuKGZ1bmN0aW9uKCB3aW5kb3cgKSB7XHJcblxyXG52YXIgaSxcclxuXHRzdXBwb3J0LFxyXG5cdEV4cHIsXHJcblx0Z2V0VGV4dCxcclxuXHRpc1hNTCxcclxuXHR0b2tlbml6ZSxcclxuXHRjb21waWxlLFxyXG5cdHNlbGVjdCxcclxuXHRvdXRlcm1vc3RDb250ZXh0LFxyXG5cdHNvcnRJbnB1dCxcclxuXHRoYXNEdXBsaWNhdGUsXHJcblxyXG5cdC8vIExvY2FsIGRvY3VtZW50IHZhcnNcclxuXHRzZXREb2N1bWVudCxcclxuXHRkb2N1bWVudCxcclxuXHRkb2NFbGVtLFxyXG5cdGRvY3VtZW50SXNIVE1MLFxyXG5cdHJidWdneVFTQSxcclxuXHRyYnVnZ3lNYXRjaGVzLFxyXG5cdG1hdGNoZXMsXHJcblx0Y29udGFpbnMsXHJcblxyXG5cdC8vIEluc3RhbmNlLXNwZWNpZmljIGRhdGFcclxuXHRleHBhbmRvID0gXCJzaXp6bGVcIiArIDEgKiBuZXcgRGF0ZSgpLFxyXG5cdHByZWZlcnJlZERvYyA9IHdpbmRvdy5kb2N1bWVudCxcclxuXHRkaXJydW5zID0gMCxcclxuXHRkb25lID0gMCxcclxuXHRjbGFzc0NhY2hlID0gY3JlYXRlQ2FjaGUoKSxcclxuXHR0b2tlbkNhY2hlID0gY3JlYXRlQ2FjaGUoKSxcclxuXHRjb21waWxlckNhY2hlID0gY3JlYXRlQ2FjaGUoKSxcclxuXHRzb3J0T3JkZXIgPSBmdW5jdGlvbiggYSwgYiApIHtcclxuXHRcdGlmICggYSA9PT0gYiApIHtcclxuXHRcdFx0aGFzRHVwbGljYXRlID0gdHJ1ZTtcclxuXHRcdH1cclxuXHRcdHJldHVybiAwO1xyXG5cdH0sXHJcblxyXG5cdC8vIEluc3RhbmNlIG1ldGhvZHNcclxuXHRoYXNPd24gPSAoe30pLmhhc093blByb3BlcnR5LFxyXG5cdGFyciA9IFtdLFxyXG5cdHBvcCA9IGFyci5wb3AsXHJcblx0cHVzaF9uYXRpdmUgPSBhcnIucHVzaCxcclxuXHRwdXNoID0gYXJyLnB1c2gsXHJcblx0c2xpY2UgPSBhcnIuc2xpY2UsXHJcblx0Ly8gVXNlIGEgc3RyaXBwZWQtZG93biBpbmRleE9mIGFzIGl0J3MgZmFzdGVyIHRoYW4gbmF0aXZlXHJcblx0Ly8gaHR0cHM6Ly9qc3BlcmYuY29tL3Rob3ItaW5kZXhvZi12cy1mb3IvNVxyXG5cdGluZGV4T2YgPSBmdW5jdGlvbiggbGlzdCwgZWxlbSApIHtcclxuXHRcdHZhciBpID0gMCxcclxuXHRcdFx0bGVuID0gbGlzdC5sZW5ndGg7XHJcblx0XHRmb3IgKCA7IGkgPCBsZW47IGkrKyApIHtcclxuXHRcdFx0aWYgKCBsaXN0W2ldID09PSBlbGVtICkge1xyXG5cdFx0XHRcdHJldHVybiBpO1xyXG5cdFx0XHR9XHJcblx0XHR9XHJcblx0XHRyZXR1cm4gLTE7XHJcblx0fSxcclxuXHJcblx0Ym9vbGVhbnMgPSBcImNoZWNrZWR8c2VsZWN0ZWR8YXN5bmN8YXV0b2ZvY3VzfGF1dG9wbGF5fGNvbnRyb2xzfGRlZmVyfGRpc2FibGVkfGhpZGRlbnxpc21hcHxsb29wfG11bHRpcGxlfG9wZW58cmVhZG9ubHl8cmVxdWlyZWR8c2NvcGVkXCIsXHJcblxyXG5cdC8vIFJlZ3VsYXIgZXhwcmVzc2lvbnNcclxuXHJcblx0Ly8gaHR0cDovL3d3dy53My5vcmcvVFIvY3NzMy1zZWxlY3RvcnMvI3doaXRlc3BhY2VcclxuXHR3aGl0ZXNwYWNlID0gXCJbXFxcXHgyMFxcXFx0XFxcXHJcXFxcblxcXFxmXVwiLFxyXG5cclxuXHQvLyBodHRwOi8vd3d3LnczLm9yZy9UUi9DU1MyMS9zeW5kYXRhLmh0bWwjdmFsdWUtZGVmLWlkZW50aWZpZXJcclxuXHRpZGVudGlmaWVyID0gXCIoPzpcXFxcXFxcXC58W1xcXFx3LV18W15cXDAtXFxcXHhhMF0pK1wiLFxyXG5cclxuXHQvLyBBdHRyaWJ1dGUgc2VsZWN0b3JzOiBodHRwOi8vd3d3LnczLm9yZy9UUi9zZWxlY3RvcnMvI2F0dHJpYnV0ZS1zZWxlY3RvcnNcclxuXHRhdHRyaWJ1dGVzID0gXCJcXFxcW1wiICsgd2hpdGVzcGFjZSArIFwiKihcIiArIGlkZW50aWZpZXIgKyBcIikoPzpcIiArIHdoaXRlc3BhY2UgK1xyXG5cdFx0Ly8gT3BlcmF0b3IgKGNhcHR1cmUgMilcclxuXHRcdFwiKihbKl4kfCF+XT89KVwiICsgd2hpdGVzcGFjZSArXHJcblx0XHQvLyBcIkF0dHJpYnV0ZSB2YWx1ZXMgbXVzdCBiZSBDU1MgaWRlbnRpZmllcnMgW2NhcHR1cmUgNV0gb3Igc3RyaW5ncyBbY2FwdHVyZSAzIG9yIGNhcHR1cmUgNF1cIlxyXG5cdFx0XCIqKD86JygoPzpcXFxcXFxcXC58W15cXFxcXFxcXCddKSopJ3xcXFwiKCg/OlxcXFxcXFxcLnxbXlxcXFxcXFxcXFxcIl0pKilcXFwifChcIiArIGlkZW50aWZpZXIgKyBcIikpfClcIiArIHdoaXRlc3BhY2UgK1xyXG5cdFx0XCIqXFxcXF1cIixcclxuXHJcblx0cHNldWRvcyA9IFwiOihcIiArIGlkZW50aWZpZXIgKyBcIikoPzpcXFxcKChcIiArXHJcblx0XHQvLyBUbyByZWR1Y2UgdGhlIG51bWJlciBvZiBzZWxlY3RvcnMgbmVlZGluZyB0b2tlbml6ZSBpbiB0aGUgcHJlRmlsdGVyLCBwcmVmZXIgYXJndW1lbnRzOlxyXG5cdFx0Ly8gMS4gcXVvdGVkIChjYXB0dXJlIDM7IGNhcHR1cmUgNCBvciBjYXB0dXJlIDUpXHJcblx0XHRcIignKCg/OlxcXFxcXFxcLnxbXlxcXFxcXFxcJ10pKiknfFxcXCIoKD86XFxcXFxcXFwufFteXFxcXFxcXFxcXFwiXSkqKVxcXCIpfFwiICtcclxuXHRcdC8vIDIuIHNpbXBsZSAoY2FwdHVyZSA2KVxyXG5cdFx0XCIoKD86XFxcXFxcXFwufFteXFxcXFxcXFwoKVtcXFxcXV18XCIgKyBhdHRyaWJ1dGVzICsgXCIpKil8XCIgK1xyXG5cdFx0Ly8gMy4gYW55dGhpbmcgZWxzZSAoY2FwdHVyZSAyKVxyXG5cdFx0XCIuKlwiICtcclxuXHRcdFwiKVxcXFwpfClcIixcclxuXHJcblx0Ly8gTGVhZGluZyBhbmQgbm9uLWVzY2FwZWQgdHJhaWxpbmcgd2hpdGVzcGFjZSwgY2FwdHVyaW5nIHNvbWUgbm9uLXdoaXRlc3BhY2UgY2hhcmFjdGVycyBwcmVjZWRpbmcgdGhlIGxhdHRlclxyXG5cdHJ3aGl0ZXNwYWNlID0gbmV3IFJlZ0V4cCggd2hpdGVzcGFjZSArIFwiK1wiLCBcImdcIiApLFxyXG5cdHJ0cmltID0gbmV3IFJlZ0V4cCggXCJeXCIgKyB3aGl0ZXNwYWNlICsgXCIrfCgoPzpefFteXFxcXFxcXFxdKSg/OlxcXFxcXFxcLikqKVwiICsgd2hpdGVzcGFjZSArIFwiKyRcIiwgXCJnXCIgKSxcclxuXHJcblx0cmNvbW1hID0gbmV3IFJlZ0V4cCggXCJeXCIgKyB3aGl0ZXNwYWNlICsgXCIqLFwiICsgd2hpdGVzcGFjZSArIFwiKlwiICksXHJcblx0cmNvbWJpbmF0b3JzID0gbmV3IFJlZ0V4cCggXCJeXCIgKyB3aGl0ZXNwYWNlICsgXCIqKFs+K35dfFwiICsgd2hpdGVzcGFjZSArIFwiKVwiICsgd2hpdGVzcGFjZSArIFwiKlwiICksXHJcblxyXG5cdHJhdHRyaWJ1dGVRdW90ZXMgPSBuZXcgUmVnRXhwKCBcIj1cIiArIHdoaXRlc3BhY2UgKyBcIiooW15cXFxcXSdcXFwiXSo/KVwiICsgd2hpdGVzcGFjZSArIFwiKlxcXFxdXCIsIFwiZ1wiICksXHJcblxyXG5cdHJwc2V1ZG8gPSBuZXcgUmVnRXhwKCBwc2V1ZG9zICksXHJcblx0cmlkZW50aWZpZXIgPSBuZXcgUmVnRXhwKCBcIl5cIiArIGlkZW50aWZpZXIgKyBcIiRcIiApLFxyXG5cclxuXHRtYXRjaEV4cHIgPSB7XHJcblx0XHRcIklEXCI6IG5ldyBSZWdFeHAoIFwiXiMoXCIgKyBpZGVudGlmaWVyICsgXCIpXCIgKSxcclxuXHRcdFwiQ0xBU1NcIjogbmV3IFJlZ0V4cCggXCJeXFxcXC4oXCIgKyBpZGVudGlmaWVyICsgXCIpXCIgKSxcclxuXHRcdFwiVEFHXCI6IG5ldyBSZWdFeHAoIFwiXihcIiArIGlkZW50aWZpZXIgKyBcInxbKl0pXCIgKSxcclxuXHRcdFwiQVRUUlwiOiBuZXcgUmVnRXhwKCBcIl5cIiArIGF0dHJpYnV0ZXMgKSxcclxuXHRcdFwiUFNFVURPXCI6IG5ldyBSZWdFeHAoIFwiXlwiICsgcHNldWRvcyApLFxyXG5cdFx0XCJDSElMRFwiOiBuZXcgUmVnRXhwKCBcIl46KG9ubHl8Zmlyc3R8bGFzdHxudGh8bnRoLWxhc3QpLShjaGlsZHxvZi10eXBlKSg/OlxcXFwoXCIgKyB3aGl0ZXNwYWNlICtcclxuXHRcdFx0XCIqKGV2ZW58b2RkfCgoWystXXwpKFxcXFxkKilufClcIiArIHdoaXRlc3BhY2UgKyBcIiooPzooWystXXwpXCIgKyB3aGl0ZXNwYWNlICtcclxuXHRcdFx0XCIqKFxcXFxkKyl8KSlcIiArIHdoaXRlc3BhY2UgKyBcIipcXFxcKXwpXCIsIFwiaVwiICksXHJcblx0XHRcImJvb2xcIjogbmV3IFJlZ0V4cCggXCJeKD86XCIgKyBib29sZWFucyArIFwiKSRcIiwgXCJpXCIgKSxcclxuXHRcdC8vIEZvciB1c2UgaW4gbGlicmFyaWVzIGltcGxlbWVudGluZyAuaXMoKVxyXG5cdFx0Ly8gV2UgdXNlIHRoaXMgZm9yIFBPUyBtYXRjaGluZyBpbiBgc2VsZWN0YFxyXG5cdFx0XCJuZWVkc0NvbnRleHRcIjogbmV3IFJlZ0V4cCggXCJeXCIgKyB3aGl0ZXNwYWNlICsgXCIqWz4rfl18OihldmVufG9kZHxlcXxndHxsdHxudGh8Zmlyc3R8bGFzdCkoPzpcXFxcKFwiICtcclxuXHRcdFx0d2hpdGVzcGFjZSArIFwiKigoPzotXFxcXGQpP1xcXFxkKilcIiArIHdoaXRlc3BhY2UgKyBcIipcXFxcKXwpKD89W14tXXwkKVwiLCBcImlcIiApXHJcblx0fSxcclxuXHJcblx0cmlucHV0cyA9IC9eKD86aW5wdXR8c2VsZWN0fHRleHRhcmVhfGJ1dHRvbikkL2ksXHJcblx0cmhlYWRlciA9IC9eaFxcZCQvaSxcclxuXHJcblx0cm5hdGl2ZSA9IC9eW157XStcXHtcXHMqXFxbbmF0aXZlIFxcdy8sXHJcblxyXG5cdC8vIEVhc2lseS1wYXJzZWFibGUvcmV0cmlldmFibGUgSUQgb3IgVEFHIG9yIENMQVNTIHNlbGVjdG9yc1xyXG5cdHJxdWlja0V4cHIgPSAvXig/OiMoW1xcdy1dKyl8KFxcdyspfFxcLihbXFx3LV0rKSkkLyxcclxuXHJcblx0cnNpYmxpbmcgPSAvWyt+XS8sXHJcblxyXG5cdC8vIENTUyBlc2NhcGVzXHJcblx0Ly8gaHR0cDovL3d3dy53My5vcmcvVFIvQ1NTMjEvc3luZGF0YS5odG1sI2VzY2FwZWQtY2hhcmFjdGVyc1xyXG5cdHJ1bmVzY2FwZSA9IG5ldyBSZWdFeHAoIFwiXFxcXFxcXFwoW1xcXFxkYS1mXXsxLDZ9XCIgKyB3aGl0ZXNwYWNlICsgXCI/fChcIiArIHdoaXRlc3BhY2UgKyBcIil8LilcIiwgXCJpZ1wiICksXHJcblx0ZnVuZXNjYXBlID0gZnVuY3Rpb24oIF8sIGVzY2FwZWQsIGVzY2FwZWRXaGl0ZXNwYWNlICkge1xyXG5cdFx0dmFyIGhpZ2ggPSBcIjB4XCIgKyBlc2NhcGVkIC0gMHgxMDAwMDtcclxuXHRcdC8vIE5hTiBtZWFucyBub24tY29kZXBvaW50XHJcblx0XHQvLyBTdXBwb3J0OiBGaXJlZm94PDI0XHJcblx0XHQvLyBXb3JrYXJvdW5kIGVycm9uZW91cyBudW1lcmljIGludGVycHJldGF0aW9uIG9mICtcIjB4XCJcclxuXHRcdHJldHVybiBoaWdoICE9PSBoaWdoIHx8IGVzY2FwZWRXaGl0ZXNwYWNlID9cclxuXHRcdFx0ZXNjYXBlZCA6XHJcblx0XHRcdGhpZ2ggPCAwID9cclxuXHRcdFx0XHQvLyBCTVAgY29kZXBvaW50XHJcblx0XHRcdFx0U3RyaW5nLmZyb21DaGFyQ29kZSggaGlnaCArIDB4MTAwMDAgKSA6XHJcblx0XHRcdFx0Ly8gU3VwcGxlbWVudGFsIFBsYW5lIGNvZGVwb2ludCAoc3Vycm9nYXRlIHBhaXIpXHJcblx0XHRcdFx0U3RyaW5nLmZyb21DaGFyQ29kZSggaGlnaCA+PiAxMCB8IDB4RDgwMCwgaGlnaCAmIDB4M0ZGIHwgMHhEQzAwICk7XHJcblx0fSxcclxuXHJcblx0Ly8gQ1NTIHN0cmluZy9pZGVudGlmaWVyIHNlcmlhbGl6YXRpb25cclxuXHQvLyBodHRwczovL2RyYWZ0cy5jc3N3Zy5vcmcvY3Nzb20vI2NvbW1vbi1zZXJpYWxpemluZy1pZGlvbXNcclxuXHRyY3NzZXNjYXBlID0gLyhbXFwwLVxceDFmXFx4N2ZdfF4tP1xcZCl8Xi0kfFteXFwwLVxceDFmXFx4N2YtXFx1RkZGRlxcdy1dL2csXHJcblx0ZmNzc2VzY2FwZSA9IGZ1bmN0aW9uKCBjaCwgYXNDb2RlUG9pbnQgKSB7XHJcblx0XHRpZiAoIGFzQ29kZVBvaW50ICkge1xyXG5cclxuXHRcdFx0Ly8gVSswMDAwIE5VTEwgYmVjb21lcyBVK0ZGRkQgUkVQTEFDRU1FTlQgQ0hBUkFDVEVSXHJcblx0XHRcdGlmICggY2ggPT09IFwiXFwwXCIgKSB7XHJcblx0XHRcdFx0cmV0dXJuIFwiXFx1RkZGRFwiO1xyXG5cdFx0XHR9XHJcblxyXG5cdFx0XHQvLyBDb250cm9sIGNoYXJhY3RlcnMgYW5kIChkZXBlbmRlbnQgdXBvbiBwb3NpdGlvbikgbnVtYmVycyBnZXQgZXNjYXBlZCBhcyBjb2RlIHBvaW50c1xyXG5cdFx0XHRyZXR1cm4gY2guc2xpY2UoIDAsIC0xICkgKyBcIlxcXFxcIiArIGNoLmNoYXJDb2RlQXQoIGNoLmxlbmd0aCAtIDEgKS50b1N0cmluZyggMTYgKSArIFwiIFwiO1xyXG5cdFx0fVxyXG5cclxuXHRcdC8vIE90aGVyIHBvdGVudGlhbGx5LXNwZWNpYWwgQVNDSUkgY2hhcmFjdGVycyBnZXQgYmFja3NsYXNoLWVzY2FwZWRcclxuXHRcdHJldHVybiBcIlxcXFxcIiArIGNoO1xyXG5cdH0sXHJcblxyXG5cdC8vIFVzZWQgZm9yIGlmcmFtZXNcclxuXHQvLyBTZWUgc2V0RG9jdW1lbnQoKVxyXG5cdC8vIFJlbW92aW5nIHRoZSBmdW5jdGlvbiB3cmFwcGVyIGNhdXNlcyBhIFwiUGVybWlzc2lvbiBEZW5pZWRcIlxyXG5cdC8vIGVycm9yIGluIElFXHJcblx0dW5sb2FkSGFuZGxlciA9IGZ1bmN0aW9uKCkge1xyXG5cdFx0c2V0RG9jdW1lbnQoKTtcclxuXHR9LFxyXG5cclxuXHRkaXNhYmxlZEFuY2VzdG9yID0gYWRkQ29tYmluYXRvcihcclxuXHRcdGZ1bmN0aW9uKCBlbGVtICkge1xyXG5cdFx0XHRyZXR1cm4gZWxlbS5kaXNhYmxlZCA9PT0gdHJ1ZSAmJiAoXCJmb3JtXCIgaW4gZWxlbSB8fCBcImxhYmVsXCIgaW4gZWxlbSk7XHJcblx0XHR9LFxyXG5cdFx0eyBkaXI6IFwicGFyZW50Tm9kZVwiLCBuZXh0OiBcImxlZ2VuZFwiIH1cclxuXHQpO1xyXG5cclxuLy8gT3B0aW1pemUgZm9yIHB1c2guYXBwbHkoIF8sIE5vZGVMaXN0IClcclxudHJ5IHtcclxuXHRwdXNoLmFwcGx5KFxyXG5cdFx0KGFyciA9IHNsaWNlLmNhbGwoIHByZWZlcnJlZERvYy5jaGlsZE5vZGVzICkpLFxyXG5cdFx0cHJlZmVycmVkRG9jLmNoaWxkTm9kZXNcclxuXHQpO1xyXG5cdC8vIFN1cHBvcnQ6IEFuZHJvaWQ8NC4wXHJcblx0Ly8gRGV0ZWN0IHNpbGVudGx5IGZhaWxpbmcgcHVzaC5hcHBseVxyXG5cdGFyclsgcHJlZmVycmVkRG9jLmNoaWxkTm9kZXMubGVuZ3RoIF0ubm9kZVR5cGU7XHJcbn0gY2F0Y2ggKCBlICkge1xyXG5cdHB1c2ggPSB7IGFwcGx5OiBhcnIubGVuZ3RoID9cclxuXHJcblx0XHQvLyBMZXZlcmFnZSBzbGljZSBpZiBwb3NzaWJsZVxyXG5cdFx0ZnVuY3Rpb24oIHRhcmdldCwgZWxzICkge1xyXG5cdFx0XHRwdXNoX25hdGl2ZS5hcHBseSggdGFyZ2V0LCBzbGljZS5jYWxsKGVscykgKTtcclxuXHRcdH0gOlxyXG5cclxuXHRcdC8vIFN1cHBvcnQ6IElFPDlcclxuXHRcdC8vIE90aGVyd2lzZSBhcHBlbmQgZGlyZWN0bHlcclxuXHRcdGZ1bmN0aW9uKCB0YXJnZXQsIGVscyApIHtcclxuXHRcdFx0dmFyIGogPSB0YXJnZXQubGVuZ3RoLFxyXG5cdFx0XHRcdGkgPSAwO1xyXG5cdFx0XHQvLyBDYW4ndCB0cnVzdCBOb2RlTGlzdC5sZW5ndGhcclxuXHRcdFx0d2hpbGUgKCAodGFyZ2V0W2orK10gPSBlbHNbaSsrXSkgKSB7fVxyXG5cdFx0XHR0YXJnZXQubGVuZ3RoID0gaiAtIDE7XHJcblx0XHR9XHJcblx0fTtcclxufVxyXG5cclxuZnVuY3Rpb24gU2l6emxlKCBzZWxlY3RvciwgY29udGV4dCwgcmVzdWx0cywgc2VlZCApIHtcclxuXHR2YXIgbSwgaSwgZWxlbSwgbmlkLCBtYXRjaCwgZ3JvdXBzLCBuZXdTZWxlY3RvcixcclxuXHRcdG5ld0NvbnRleHQgPSBjb250ZXh0ICYmIGNvbnRleHQub3duZXJEb2N1bWVudCxcclxuXHJcblx0XHQvLyBub2RlVHlwZSBkZWZhdWx0cyB0byA5LCBzaW5jZSBjb250ZXh0IGRlZmF1bHRzIHRvIGRvY3VtZW50XHJcblx0XHRub2RlVHlwZSA9IGNvbnRleHQgPyBjb250ZXh0Lm5vZGVUeXBlIDogOTtcclxuXHJcblx0cmVzdWx0cyA9IHJlc3VsdHMgfHwgW107XHJcblxyXG5cdC8vIFJldHVybiBlYXJseSBmcm9tIGNhbGxzIHdpdGggaW52YWxpZCBzZWxlY3RvciBvciBjb250ZXh0XHJcblx0aWYgKCB0eXBlb2Ygc2VsZWN0b3IgIT09IFwic3RyaW5nXCIgfHwgIXNlbGVjdG9yIHx8XHJcblx0XHRub2RlVHlwZSAhPT0gMSAmJiBub2RlVHlwZSAhPT0gOSAmJiBub2RlVHlwZSAhPT0gMTEgKSB7XHJcblxyXG5cdFx0cmV0dXJuIHJlc3VsdHM7XHJcblx0fVxyXG5cclxuXHQvLyBUcnkgdG8gc2hvcnRjdXQgZmluZCBvcGVyYXRpb25zIChhcyBvcHBvc2VkIHRvIGZpbHRlcnMpIGluIEhUTUwgZG9jdW1lbnRzXHJcblx0aWYgKCAhc2VlZCApIHtcclxuXHJcblx0XHRpZiAoICggY29udGV4dCA/IGNvbnRleHQub3duZXJEb2N1bWVudCB8fCBjb250ZXh0IDogcHJlZmVycmVkRG9jICkgIT09IGRvY3VtZW50ICkge1xyXG5cdFx0XHRzZXREb2N1bWVudCggY29udGV4dCApO1xyXG5cdFx0fVxyXG5cdFx0Y29udGV4dCA9IGNvbnRleHQgfHwgZG9jdW1lbnQ7XHJcblxyXG5cdFx0aWYgKCBkb2N1bWVudElzSFRNTCApIHtcclxuXHJcblx0XHRcdC8vIElmIHRoZSBzZWxlY3RvciBpcyBzdWZmaWNpZW50bHkgc2ltcGxlLCB0cnkgdXNpbmcgYSBcImdldCpCeSpcIiBET00gbWV0aG9kXHJcblx0XHRcdC8vIChleGNlcHRpbmcgRG9jdW1lbnRGcmFnbWVudCBjb250ZXh0LCB3aGVyZSB0aGUgbWV0aG9kcyBkb24ndCBleGlzdClcclxuXHRcdFx0aWYgKCBub2RlVHlwZSAhPT0gMTEgJiYgKG1hdGNoID0gcnF1aWNrRXhwci5leGVjKCBzZWxlY3RvciApKSApIHtcclxuXHJcblx0XHRcdFx0Ly8gSUQgc2VsZWN0b3JcclxuXHRcdFx0XHRpZiAoIChtID0gbWF0Y2hbMV0pICkge1xyXG5cclxuXHRcdFx0XHRcdC8vIERvY3VtZW50IGNvbnRleHRcclxuXHRcdFx0XHRcdGlmICggbm9kZVR5cGUgPT09IDkgKSB7XHJcblx0XHRcdFx0XHRcdGlmICggKGVsZW0gPSBjb250ZXh0LmdldEVsZW1lbnRCeUlkKCBtICkpICkge1xyXG5cclxuXHRcdFx0XHRcdFx0XHQvLyBTdXBwb3J0OiBJRSwgT3BlcmEsIFdlYmtpdFxyXG5cdFx0XHRcdFx0XHRcdC8vIFRPRE86IGlkZW50aWZ5IHZlcnNpb25zXHJcblx0XHRcdFx0XHRcdFx0Ly8gZ2V0RWxlbWVudEJ5SWQgY2FuIG1hdGNoIGVsZW1lbnRzIGJ5IG5hbWUgaW5zdGVhZCBvZiBJRFxyXG5cdFx0XHRcdFx0XHRcdGlmICggZWxlbS5pZCA9PT0gbSApIHtcclxuXHRcdFx0XHRcdFx0XHRcdHJlc3VsdHMucHVzaCggZWxlbSApO1xyXG5cdFx0XHRcdFx0XHRcdFx0cmV0dXJuIHJlc3VsdHM7XHJcblx0XHRcdFx0XHRcdFx0fVxyXG5cdFx0XHRcdFx0XHR9IGVsc2Uge1xyXG5cdFx0XHRcdFx0XHRcdHJldHVybiByZXN1bHRzO1xyXG5cdFx0XHRcdFx0XHR9XHJcblxyXG5cdFx0XHRcdFx0Ly8gRWxlbWVudCBjb250ZXh0XHJcblx0XHRcdFx0XHR9IGVsc2Uge1xyXG5cclxuXHRcdFx0XHRcdFx0Ly8gU3VwcG9ydDogSUUsIE9wZXJhLCBXZWJraXRcclxuXHRcdFx0XHRcdFx0Ly8gVE9ETzogaWRlbnRpZnkgdmVyc2lvbnNcclxuXHRcdFx0XHRcdFx0Ly8gZ2V0RWxlbWVudEJ5SWQgY2FuIG1hdGNoIGVsZW1lbnRzIGJ5IG5hbWUgaW5zdGVhZCBvZiBJRFxyXG5cdFx0XHRcdFx0XHRpZiAoIG5ld0NvbnRleHQgJiYgKGVsZW0gPSBuZXdDb250ZXh0LmdldEVsZW1lbnRCeUlkKCBtICkpICYmXHJcblx0XHRcdFx0XHRcdFx0Y29udGFpbnMoIGNvbnRleHQsIGVsZW0gKSAmJlxyXG5cdFx0XHRcdFx0XHRcdGVsZW0uaWQgPT09IG0gKSB7XHJcblxyXG5cdFx0XHRcdFx0XHRcdHJlc3VsdHMucHVzaCggZWxlbSApO1xyXG5cdFx0XHRcdFx0XHRcdHJldHVybiByZXN1bHRzO1xyXG5cdFx0XHRcdFx0XHR9XHJcblx0XHRcdFx0XHR9XHJcblxyXG5cdFx0XHRcdC8vIFR5cGUgc2VsZWN0b3JcclxuXHRcdFx0XHR9IGVsc2UgaWYgKCBtYXRjaFsyXSApIHtcclxuXHRcdFx0XHRcdHB1c2guYXBwbHkoIHJlc3VsdHMsIGNvbnRleHQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoIHNlbGVjdG9yICkgKTtcclxuXHRcdFx0XHRcdHJldHVybiByZXN1bHRzO1xyXG5cclxuXHRcdFx0XHQvLyBDbGFzcyBzZWxlY3RvclxyXG5cdFx0XHRcdH0gZWxzZSBpZiAoIChtID0gbWF0Y2hbM10pICYmIHN1cHBvcnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSAmJlxyXG5cdFx0XHRcdFx0Y29udGV4dC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lICkge1xyXG5cclxuXHRcdFx0XHRcdHB1c2guYXBwbHkoIHJlc3VsdHMsIGNvbnRleHQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSggbSApICk7XHJcblx0XHRcdFx0XHRyZXR1cm4gcmVzdWx0cztcclxuXHRcdFx0XHR9XHJcblx0XHRcdH1cclxuXHJcblx0XHRcdC8vIFRha2UgYWR2YW50YWdlIG9mIHF1ZXJ5U2VsZWN0b3JBbGxcclxuXHRcdFx0aWYgKCBzdXBwb3J0LnFzYSAmJlxyXG5cdFx0XHRcdCFjb21waWxlckNhY2hlWyBzZWxlY3RvciArIFwiIFwiIF0gJiZcclxuXHRcdFx0XHQoIXJidWdneVFTQSB8fCAhcmJ1Z2d5UVNBLnRlc3QoIHNlbGVjdG9yICkpICkge1xyXG5cclxuXHRcdFx0XHRpZiAoIG5vZGVUeXBlICE9PSAxICkge1xyXG5cdFx0XHRcdFx0bmV3Q29udGV4dCA9IGNvbnRleHQ7XHJcblx0XHRcdFx0XHRuZXdTZWxlY3RvciA9IHNlbGVjdG9yO1xyXG5cclxuXHRcdFx0XHQvLyBxU0EgbG9va3Mgb3V0c2lkZSBFbGVtZW50IGNvbnRleHQsIHdoaWNoIGlzIG5vdCB3aGF0IHdlIHdhbnRcclxuXHRcdFx0XHQvLyBUaGFua3MgdG8gQW5kcmV3IER1cG9udCBmb3IgdGhpcyB3b3JrYXJvdW5kIHRlY2huaXF1ZVxyXG5cdFx0XHRcdC8vIFN1cHBvcnQ6IElFIDw9OFxyXG5cdFx0XHRcdC8vIEV4Y2x1ZGUgb2JqZWN0IGVsZW1lbnRzXHJcblx0XHRcdFx0fSBlbHNlIGlmICggY29udGV4dC5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpICE9PSBcIm9iamVjdFwiICkge1xyXG5cclxuXHRcdFx0XHRcdC8vIENhcHR1cmUgdGhlIGNvbnRleHQgSUQsIHNldHRpbmcgaXQgZmlyc3QgaWYgbmVjZXNzYXJ5XHJcblx0XHRcdFx0XHRpZiAoIChuaWQgPSBjb250ZXh0LmdldEF0dHJpYnV0ZSggXCJpZFwiICkpICkge1xyXG5cdFx0XHRcdFx0XHRuaWQgPSBuaWQucmVwbGFjZSggcmNzc2VzY2FwZSwgZmNzc2VzY2FwZSApO1xyXG5cdFx0XHRcdFx0fSBlbHNlIHtcclxuXHRcdFx0XHRcdFx0Y29udGV4dC5zZXRBdHRyaWJ1dGUoIFwiaWRcIiwgKG5pZCA9IGV4cGFuZG8pICk7XHJcblx0XHRcdFx0XHR9XHJcblxyXG5cdFx0XHRcdFx0Ly8gUHJlZml4IGV2ZXJ5IHNlbGVjdG9yIGluIHRoZSBsaXN0XHJcblx0XHRcdFx0XHRncm91cHMgPSB0b2tlbml6ZSggc2VsZWN0b3IgKTtcclxuXHRcdFx0XHRcdGkgPSBncm91cHMubGVuZ3RoO1xyXG5cdFx0XHRcdFx0d2hpbGUgKCBpLS0gKSB7XHJcblx0XHRcdFx0XHRcdGdyb3Vwc1tpXSA9IFwiI1wiICsgbmlkICsgXCIgXCIgKyB0b1NlbGVjdG9yKCBncm91cHNbaV0gKTtcclxuXHRcdFx0XHRcdH1cclxuXHRcdFx0XHRcdG5ld1NlbGVjdG9yID0gZ3JvdXBzLmpvaW4oIFwiLFwiICk7XHJcblxyXG5cdFx0XHRcdFx0Ly8gRXhwYW5kIGNvbnRleHQgZm9yIHNpYmxpbmcgc2VsZWN0b3JzXHJcblx0XHRcdFx0XHRuZXdDb250ZXh0ID0gcnNpYmxpbmcudGVzdCggc2VsZWN0b3IgKSAmJiB0ZXN0Q29udGV4dCggY29udGV4dC5wYXJlbnROb2RlICkgfHxcclxuXHRcdFx0XHRcdFx0Y29udGV4dDtcclxuXHRcdFx0XHR9XHJcblxyXG5cdFx0XHRcdGlmICggbmV3U2VsZWN0b3IgKSB7XHJcblx0XHRcdFx0XHR0cnkge1xyXG5cdFx0XHRcdFx0XHRwdXNoLmFwcGx5KCByZXN1bHRzLFxyXG5cdFx0XHRcdFx0XHRcdG5ld0NvbnRleHQucXVlcnlTZWxlY3RvckFsbCggbmV3U2VsZWN0b3IgKVxyXG5cdFx0XHRcdFx0XHQpO1xyXG5cdFx0XHRcdFx0XHRyZXR1cm4gcmVzdWx0cztcclxuXHRcdFx0XHRcdH0gY2F0Y2ggKCBxc2FFcnJvciApIHtcclxuXHRcdFx0XHRcdH0gZmluYWxseSB7XHJcblx0XHRcdFx0XHRcdGlmICggbmlkID09PSBleHBhbmRvICkge1xyXG5cdFx0XHRcdFx0XHRcdGNvbnRleHQucmVtb3ZlQXR0cmlidXRlKCBcImlkXCIgKTtcclxuXHRcdFx0XHRcdFx0fVxyXG5cdFx0XHRcdFx0fVxyXG5cdFx0XHRcdH1cclxuXHRcdFx0fVxyXG5cdFx0fVxyXG5cdH1cclxuXHJcblx0Ly8gQWxsIG90aGVyc1xyXG5cdHJldHVybiBzZWxlY3QoIHNlbGVjdG9yLnJlcGxhY2UoIHJ0cmltLCBcIiQxXCIgKSwgY29udGV4dCwgcmVzdWx0cywgc2VlZCApO1xyXG59XHJcblxyXG4vKipcclxuICogQ3JlYXRlIGtleS12YWx1ZSBjYWNoZXMgb2YgbGltaXRlZCBzaXplXHJcbiAqIEByZXR1cm5zIHtmdW5jdGlvbihzdHJpbmcsIG9iamVjdCl9IFJldHVybnMgdGhlIE9iamVjdCBkYXRhIGFmdGVyIHN0b3JpbmcgaXQgb24gaXRzZWxmIHdpdGhcclxuICpcdHByb3BlcnR5IG5hbWUgdGhlIChzcGFjZS1zdWZmaXhlZCkgc3RyaW5nIGFuZCAoaWYgdGhlIGNhY2hlIGlzIGxhcmdlciB0aGFuIEV4cHIuY2FjaGVMZW5ndGgpXHJcbiAqXHRkZWxldGluZyB0aGUgb2xkZXN0IGVudHJ5XHJcbiAqL1xyXG5mdW5jdGlvbiBjcmVhdGVDYWNoZSgpIHtcclxuXHR2YXIga2V5cyA9IFtdO1xyXG5cclxuXHRmdW5jdGlvbiBjYWNoZSgga2V5LCB2YWx1ZSApIHtcclxuXHRcdC8vIFVzZSAoa2V5ICsgXCIgXCIpIHRvIGF2b2lkIGNvbGxpc2lvbiB3aXRoIG5hdGl2ZSBwcm90b3R5cGUgcHJvcGVydGllcyAoc2VlIElzc3VlICMxNTcpXHJcblx0XHRpZiAoIGtleXMucHVzaCgga2V5ICsgXCIgXCIgKSA+IEV4cHIuY2FjaGVMZW5ndGggKSB7XHJcblx0XHRcdC8vIE9ubHkga2VlcCB0aGUgbW9zdCByZWNlbnQgZW50cmllc1xyXG5cdFx0XHRkZWxldGUgY2FjaGVbIGtleXMuc2hpZnQoKSBdO1xyXG5cdFx0fVxyXG5cdFx0cmV0dXJuIChjYWNoZVsga2V5ICsgXCIgXCIgXSA9IHZhbHVlKTtcclxuXHR9XHJcblx0cmV0dXJuIGNhY2hlO1xyXG59XHJcblxyXG4vKipcclxuICogTWFyayBhIGZ1bmN0aW9uIGZvciBzcGVjaWFsIHVzZSBieSBTaXp6bGVcclxuICogQHBhcmFtIHtGdW5jdGlvbn0gZm4gVGhlIGZ1bmN0aW9uIHRvIG1hcmtcclxuICovXHJcbmZ1bmN0aW9uIG1hcmtGdW5jdGlvbiggZm4gKSB7XHJcblx0Zm5bIGV4cGFuZG8gXSA9IHRydWU7XHJcblx0cmV0dXJuIGZuO1xyXG59XHJcblxyXG4vKipcclxuICogU3VwcG9ydCB0ZXN0aW5nIHVzaW5nIGFuIGVsZW1lbnRcclxuICogQHBhcmFtIHtGdW5jdGlvbn0gZm4gUGFzc2VkIHRoZSBjcmVhdGVkIGVsZW1lbnQgYW5kIHJldHVybnMgYSBib29sZWFuIHJlc3VsdFxyXG4gKi9cclxuZnVuY3Rpb24gYXNzZXJ0KCBmbiApIHtcclxuXHR2YXIgZWwgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZmllbGRzZXRcIik7XHJcblxyXG5cdHRyeSB7XHJcblx0XHRyZXR1cm4gISFmbiggZWwgKTtcclxuXHR9IGNhdGNoIChlKSB7XHJcblx0XHRyZXR1cm4gZmFsc2U7XHJcblx0fSBmaW5hbGx5IHtcclxuXHRcdC8vIFJlbW92ZSBmcm9tIGl0cyBwYXJlbnQgYnkgZGVmYXVsdFxyXG5cdFx0aWYgKCBlbC5wYXJlbnROb2RlICkge1xyXG5cdFx0XHRlbC5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKCBlbCApO1xyXG5cdFx0fVxyXG5cdFx0Ly8gcmVsZWFzZSBtZW1vcnkgaW4gSUVcclxuXHRcdGVsID0gbnVsbDtcclxuXHR9XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBBZGRzIHRoZSBzYW1lIGhhbmRsZXIgZm9yIGFsbCBvZiB0aGUgc3BlY2lmaWVkIGF0dHJzXHJcbiAqIEBwYXJhbSB7U3RyaW5nfSBhdHRycyBQaXBlLXNlcGFyYXRlZCBsaXN0IG9mIGF0dHJpYnV0ZXNcclxuICogQHBhcmFtIHtGdW5jdGlvbn0gaGFuZGxlciBUaGUgbWV0aG9kIHRoYXQgd2lsbCBiZSBhcHBsaWVkXHJcbiAqL1xyXG5mdW5jdGlvbiBhZGRIYW5kbGUoIGF0dHJzLCBoYW5kbGVyICkge1xyXG5cdHZhciBhcnIgPSBhdHRycy5zcGxpdChcInxcIiksXHJcblx0XHRpID0gYXJyLmxlbmd0aDtcclxuXHJcblx0d2hpbGUgKCBpLS0gKSB7XHJcblx0XHRFeHByLmF0dHJIYW5kbGVbIGFycltpXSBdID0gaGFuZGxlcjtcclxuXHR9XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBDaGVja3MgZG9jdW1lbnQgb3JkZXIgb2YgdHdvIHNpYmxpbmdzXHJcbiAqIEBwYXJhbSB7RWxlbWVudH0gYVxyXG4gKiBAcGFyYW0ge0VsZW1lbnR9IGJcclxuICogQHJldHVybnMge051bWJlcn0gUmV0dXJucyBsZXNzIHRoYW4gMCBpZiBhIHByZWNlZGVzIGIsIGdyZWF0ZXIgdGhhbiAwIGlmIGEgZm9sbG93cyBiXHJcbiAqL1xyXG5mdW5jdGlvbiBzaWJsaW5nQ2hlY2soIGEsIGIgKSB7XHJcblx0dmFyIGN1ciA9IGIgJiYgYSxcclxuXHRcdGRpZmYgPSBjdXIgJiYgYS5ub2RlVHlwZSA9PT0gMSAmJiBiLm5vZGVUeXBlID09PSAxICYmXHJcblx0XHRcdGEuc291cmNlSW5kZXggLSBiLnNvdXJjZUluZGV4O1xyXG5cclxuXHQvLyBVc2UgSUUgc291cmNlSW5kZXggaWYgYXZhaWxhYmxlIG9uIGJvdGggbm9kZXNcclxuXHRpZiAoIGRpZmYgKSB7XHJcblx0XHRyZXR1cm4gZGlmZjtcclxuXHR9XHJcblxyXG5cdC8vIENoZWNrIGlmIGIgZm9sbG93cyBhXHJcblx0aWYgKCBjdXIgKSB7XHJcblx0XHR3aGlsZSAoIChjdXIgPSBjdXIubmV4dFNpYmxpbmcpICkge1xyXG5cdFx0XHRpZiAoIGN1ciA9PT0gYiApIHtcclxuXHRcdFx0XHRyZXR1cm4gLTE7XHJcblx0XHRcdH1cclxuXHRcdH1cclxuXHR9XHJcblxyXG5cdHJldHVybiBhID8gMSA6IC0xO1xyXG59XHJcblxyXG4vKipcclxuICogUmV0dXJucyBhIGZ1bmN0aW9uIHRvIHVzZSBpbiBwc2V1ZG9zIGZvciBpbnB1dCB0eXBlc1xyXG4gKiBAcGFyYW0ge1N0cmluZ30gdHlwZVxyXG4gKi9cclxuZnVuY3Rpb24gY3JlYXRlSW5wdXRQc2V1ZG8oIHR5cGUgKSB7XHJcblx0cmV0dXJuIGZ1bmN0aW9uKCBlbGVtICkge1xyXG5cdFx0dmFyIG5hbWUgPSBlbGVtLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCk7XHJcblx0XHRyZXR1cm4gbmFtZSA9PT0gXCJpbnB1dFwiICYmIGVsZW0udHlwZSA9PT0gdHlwZTtcclxuXHR9O1xyXG59XHJcblxyXG4vKipcclxuICogUmV0dXJucyBhIGZ1bmN0aW9uIHRvIHVzZSBpbiBwc2V1ZG9zIGZvciBidXR0b25zXHJcbiAqIEBwYXJhbSB7U3RyaW5nfSB0eXBlXHJcbiAqL1xyXG5mdW5jdGlvbiBjcmVhdGVCdXR0b25Qc2V1ZG8oIHR5cGUgKSB7XHJcblx0cmV0dXJuIGZ1bmN0aW9uKCBlbGVtICkge1xyXG5cdFx0dmFyIG5hbWUgPSBlbGVtLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCk7XHJcblx0XHRyZXR1cm4gKG5hbWUgPT09IFwiaW5wdXRcIiB8fCBuYW1lID09PSBcImJ1dHRvblwiKSAmJiBlbGVtLnR5cGUgPT09IHR5cGU7XHJcblx0fTtcclxufVxyXG5cclxuLyoqXHJcbiAqIFJldHVybnMgYSBmdW5jdGlvbiB0byB1c2UgaW4gcHNldWRvcyBmb3IgOmVuYWJsZWQvOmRpc2FibGVkXHJcbiAqIEBwYXJhbSB7Qm9vbGVhbn0gZGlzYWJsZWQgdHJ1ZSBmb3IgOmRpc2FibGVkOyBmYWxzZSBmb3IgOmVuYWJsZWRcclxuICovXHJcbmZ1bmN0aW9uIGNyZWF0ZURpc2FibGVkUHNldWRvKCBkaXNhYmxlZCApIHtcclxuXHJcblx0Ly8gS25vd24gOmRpc2FibGVkIGZhbHNlIHBvc2l0aXZlczogZmllbGRzZXRbZGlzYWJsZWRdID4gbGVnZW5kOm50aC1vZi10eXBlKG4rMikgOmNhbi1kaXNhYmxlXHJcblx0cmV0dXJuIGZ1bmN0aW9uKCBlbGVtICkge1xyXG5cclxuXHRcdC8vIE9ubHkgY2VydGFpbiBlbGVtZW50cyBjYW4gbWF0Y2ggOmVuYWJsZWQgb3IgOmRpc2FibGVkXHJcblx0XHQvLyBodHRwczovL2h0bWwuc3BlYy53aGF0d2cub3JnL211bHRpcGFnZS9zY3JpcHRpbmcuaHRtbCNzZWxlY3Rvci1lbmFibGVkXHJcblx0XHQvLyBodHRwczovL2h0bWwuc3BlYy53aGF0d2cub3JnL211bHRpcGFnZS9zY3JpcHRpbmcuaHRtbCNzZWxlY3Rvci1kaXNhYmxlZFxyXG5cdFx0aWYgKCBcImZvcm1cIiBpbiBlbGVtICkge1xyXG5cclxuXHRcdFx0Ly8gQ2hlY2sgZm9yIGluaGVyaXRlZCBkaXNhYmxlZG5lc3Mgb24gcmVsZXZhbnQgbm9uLWRpc2FibGVkIGVsZW1lbnRzOlxyXG5cdFx0XHQvLyAqIGxpc3RlZCBmb3JtLWFzc29jaWF0ZWQgZWxlbWVudHMgaW4gYSBkaXNhYmxlZCBmaWVsZHNldFxyXG5cdFx0XHQvLyAgIGh0dHBzOi8vaHRtbC5zcGVjLndoYXR3Zy5vcmcvbXVsdGlwYWdlL2Zvcm1zLmh0bWwjY2F0ZWdvcnktbGlzdGVkXHJcblx0XHRcdC8vICAgaHR0cHM6Ly9odG1sLnNwZWMud2hhdHdnLm9yZy9tdWx0aXBhZ2UvZm9ybXMuaHRtbCNjb25jZXB0LWZlLWRpc2FibGVkXHJcblx0XHRcdC8vICogb3B0aW9uIGVsZW1lbnRzIGluIGEgZGlzYWJsZWQgb3B0Z3JvdXBcclxuXHRcdFx0Ly8gICBodHRwczovL2h0bWwuc3BlYy53aGF0d2cub3JnL211bHRpcGFnZS9mb3Jtcy5odG1sI2NvbmNlcHQtb3B0aW9uLWRpc2FibGVkXHJcblx0XHRcdC8vIEFsbCBzdWNoIGVsZW1lbnRzIGhhdmUgYSBcImZvcm1cIiBwcm9wZXJ0eS5cclxuXHRcdFx0aWYgKCBlbGVtLnBhcmVudE5vZGUgJiYgZWxlbS5kaXNhYmxlZCA9PT0gZmFsc2UgKSB7XHJcblxyXG5cdFx0XHRcdC8vIE9wdGlvbiBlbGVtZW50cyBkZWZlciB0byBhIHBhcmVudCBvcHRncm91cCBpZiBwcmVzZW50XHJcblx0XHRcdFx0aWYgKCBcImxhYmVsXCIgaW4gZWxlbSApIHtcclxuXHRcdFx0XHRcdGlmICggXCJsYWJlbFwiIGluIGVsZW0ucGFyZW50Tm9kZSApIHtcclxuXHRcdFx0XHRcdFx0cmV0dXJuIGVsZW0ucGFyZW50Tm9kZS5kaXNhYmxlZCA9PT0gZGlzYWJsZWQ7XHJcblx0XHRcdFx0XHR9IGVsc2Uge1xyXG5cdFx0XHRcdFx0XHRyZXR1cm4gZWxlbS5kaXNhYmxlZCA9PT0gZGlzYWJsZWQ7XHJcblx0XHRcdFx0XHR9XHJcblx0XHRcdFx0fVxyXG5cclxuXHRcdFx0XHQvLyBTdXBwb3J0OiBJRSA2IC0gMTFcclxuXHRcdFx0XHQvLyBVc2UgdGhlIGlzRGlzYWJsZWQgc2hvcnRjdXQgcHJvcGVydHkgdG8gY2hlY2sgZm9yIGRpc2FibGVkIGZpZWxkc2V0IGFuY2VzdG9yc1xyXG5cdFx0XHRcdHJldHVybiBlbGVtLmlzRGlzYWJsZWQgPT09IGRpc2FibGVkIHx8XHJcblxyXG5cdFx0XHRcdFx0Ly8gV2hlcmUgdGhlcmUgaXMgbm8gaXNEaXNhYmxlZCwgY2hlY2sgbWFudWFsbHlcclxuXHRcdFx0XHRcdC8qIGpzaGludCAtVzAxOCAqL1xyXG5cdFx0XHRcdFx0ZWxlbS5pc0Rpc2FibGVkICE9PSAhZGlzYWJsZWQgJiZcclxuXHRcdFx0XHRcdFx0ZGlzYWJsZWRBbmNlc3RvciggZWxlbSApID09PSBkaXNhYmxlZDtcclxuXHRcdFx0fVxyXG5cclxuXHRcdFx0cmV0dXJuIGVsZW0uZGlzYWJsZWQgPT09IGRpc2FibGVkO1xyXG5cclxuXHRcdC8vIFRyeSB0byB3aW5ub3cgb3V0IGVsZW1lbnRzIHRoYXQgY2FuJ3QgYmUgZGlzYWJsZWQgYmVmb3JlIHRydXN0aW5nIHRoZSBkaXNhYmxlZCBwcm9wZXJ0eS5cclxuXHRcdC8vIFNvbWUgdmljdGltcyBnZXQgY2F1Z2h0IGluIG91ciBuZXQgKGxhYmVsLCBsZWdlbmQsIG1lbnUsIHRyYWNrKSwgYnV0IGl0IHNob3VsZG4ndFxyXG5cdFx0Ly8gZXZlbiBleGlzdCBvbiB0aGVtLCBsZXQgYWxvbmUgaGF2ZSBhIGJvb2xlYW4gdmFsdWUuXHJcblx0XHR9IGVsc2UgaWYgKCBcImxhYmVsXCIgaW4gZWxlbSApIHtcclxuXHRcdFx0cmV0dXJuIGVsZW0uZGlzYWJsZWQgPT09IGRpc2FibGVkO1xyXG5cdFx0fVxyXG5cclxuXHRcdC8vIFJlbWFpbmluZyBlbGVtZW50cyBhcmUgbmVpdGhlciA6ZW5hYmxlZCBub3IgOmRpc2FibGVkXHJcblx0XHRyZXR1cm4gZmFsc2U7XHJcblx0fTtcclxufVxyXG5cclxuLyoqXHJcbiAqIFJldHVybnMgYSBmdW5jdGlvbiB0byB1c2UgaW4gcHNldWRvcyBmb3IgcG9zaXRpb25hbHNcclxuICogQHBhcmFtIHtGdW5jdGlvbn0gZm5cclxuICovXHJcbmZ1bmN0aW9uIGNyZWF0ZVBvc2l0aW9uYWxQc2V1ZG8oIGZuICkge1xyXG5cdHJldHVybiBtYXJrRnVuY3Rpb24oZnVuY3Rpb24oIGFyZ3VtZW50ICkge1xyXG5cdFx0YXJndW1lbnQgPSArYXJndW1lbnQ7XHJcblx0XHRyZXR1cm4gbWFya0Z1bmN0aW9uKGZ1bmN0aW9uKCBzZWVkLCBtYXRjaGVzICkge1xyXG5cdFx0XHR2YXIgaixcclxuXHRcdFx0XHRtYXRjaEluZGV4ZXMgPSBmbiggW10sIHNlZWQubGVuZ3RoLCBhcmd1bWVudCApLFxyXG5cdFx0XHRcdGkgPSBtYXRjaEluZGV4ZXMubGVuZ3RoO1xyXG5cclxuXHRcdFx0Ly8gTWF0Y2ggZWxlbWVudHMgZm91bmQgYXQgdGhlIHNwZWNpZmllZCBpbmRleGVzXHJcblx0XHRcdHdoaWxlICggaS0tICkge1xyXG5cdFx0XHRcdGlmICggc2VlZFsgKGogPSBtYXRjaEluZGV4ZXNbaV0pIF0gKSB7XHJcblx0XHRcdFx0XHRzZWVkW2pdID0gIShtYXRjaGVzW2pdID0gc2VlZFtqXSk7XHJcblx0XHRcdFx0fVxyXG5cdFx0XHR9XHJcblx0XHR9KTtcclxuXHR9KTtcclxufVxyXG5cclxuLyoqXHJcbiAqIENoZWNrcyBhIG5vZGUgZm9yIHZhbGlkaXR5IGFzIGEgU2l6emxlIGNvbnRleHRcclxuICogQHBhcmFtIHtFbGVtZW50fE9iamVjdD19IGNvbnRleHRcclxuICogQHJldHVybnMge0VsZW1lbnR8T2JqZWN0fEJvb2xlYW59IFRoZSBpbnB1dCBub2RlIGlmIGFjY2VwdGFibGUsIG90aGVyd2lzZSBhIGZhbHN5IHZhbHVlXHJcbiAqL1xyXG5mdW5jdGlvbiB0ZXN0Q29udGV4dCggY29udGV4dCApIHtcclxuXHRyZXR1cm4gY29udGV4dCAmJiB0eXBlb2YgY29udGV4dC5nZXRFbGVtZW50c0J5VGFnTmFtZSAhPT0gXCJ1bmRlZmluZWRcIiAmJiBjb250ZXh0O1xyXG59XHJcblxyXG4vLyBFeHBvc2Ugc3VwcG9ydCB2YXJzIGZvciBjb252ZW5pZW5jZVxyXG5zdXBwb3J0ID0gU2l6emxlLnN1cHBvcnQgPSB7fTtcclxuXHJcbi8qKlxyXG4gKiBEZXRlY3RzIFhNTCBub2Rlc1xyXG4gKiBAcGFyYW0ge0VsZW1lbnR8T2JqZWN0fSBlbGVtIEFuIGVsZW1lbnQgb3IgYSBkb2N1bWVudFxyXG4gKiBAcmV0dXJucyB7Qm9vbGVhbn0gVHJ1ZSBpZmYgZWxlbSBpcyBhIG5vbi1IVE1MIFhNTCBub2RlXHJcbiAqL1xyXG5pc1hNTCA9IFNpenpsZS5pc1hNTCA9IGZ1bmN0aW9uKCBlbGVtICkge1xyXG5cdC8vIGRvY3VtZW50RWxlbWVudCBpcyB2ZXJpZmllZCBmb3IgY2FzZXMgd2hlcmUgaXQgZG9lc24ndCB5ZXQgZXhpc3RcclxuXHQvLyAoc3VjaCBhcyBsb2FkaW5nIGlmcmFtZXMgaW4gSUUgLSAjNDgzMylcclxuXHR2YXIgZG9jdW1lbnRFbGVtZW50ID0gZWxlbSAmJiAoZWxlbS5vd25lckRvY3VtZW50IHx8IGVsZW0pLmRvY3VtZW50RWxlbWVudDtcclxuXHRyZXR1cm4gZG9jdW1lbnRFbGVtZW50ID8gZG9jdW1lbnRFbGVtZW50Lm5vZGVOYW1lICE9PSBcIkhUTUxcIiA6IGZhbHNlO1xyXG59O1xyXG5cclxuLyoqXHJcbiAqIFNldHMgZG9jdW1lbnQtcmVsYXRlZCB2YXJpYWJsZXMgb25jZSBiYXNlZCBvbiB0aGUgY3VycmVudCBkb2N1bWVudFxyXG4gKiBAcGFyYW0ge0VsZW1lbnR8T2JqZWN0fSBbZG9jXSBBbiBlbGVtZW50IG9yIGRvY3VtZW50IG9iamVjdCB0byB1c2UgdG8gc2V0IHRoZSBkb2N1bWVudFxyXG4gKiBAcmV0dXJucyB7T2JqZWN0fSBSZXR1cm5zIHRoZSBjdXJyZW50IGRvY3VtZW50XHJcbiAqL1xyXG5zZXREb2N1bWVudCA9IFNpenpsZS5zZXREb2N1bWVudCA9IGZ1bmN0aW9uKCBub2RlICkge1xyXG5cdHZhciBoYXNDb21wYXJlLCBzdWJXaW5kb3csXHJcblx0XHRkb2MgPSBub2RlID8gbm9kZS5vd25lckRvY3VtZW50IHx8IG5vZGUgOiBwcmVmZXJyZWREb2M7XHJcblxyXG5cdC8vIFJldHVybiBlYXJseSBpZiBkb2MgaXMgaW52YWxpZCBvciBhbHJlYWR5IHNlbGVjdGVkXHJcblx0aWYgKCBkb2MgPT09IGRvY3VtZW50IHx8IGRvYy5ub2RlVHlwZSAhPT0gOSB8fCAhZG9jLmRvY3VtZW50RWxlbWVudCApIHtcclxuXHRcdHJldHVybiBkb2N1bWVudDtcclxuXHR9XHJcblxyXG5cdC8vIFVwZGF0ZSBnbG9iYWwgdmFyaWFibGVzXHJcblx0ZG9jdW1lbnQgPSBkb2M7XHJcblx0ZG9jRWxlbSA9IGRvY3VtZW50LmRvY3VtZW50RWxlbWVudDtcclxuXHRkb2N1bWVudElzSFRNTCA9ICFpc1hNTCggZG9jdW1lbnQgKTtcclxuXHJcblx0Ly8gU3VwcG9ydDogSUUgOS0xMSwgRWRnZVxyXG5cdC8vIEFjY2Vzc2luZyBpZnJhbWUgZG9jdW1lbnRzIGFmdGVyIHVubG9hZCB0aHJvd3MgXCJwZXJtaXNzaW9uIGRlbmllZFwiIGVycm9ycyAoalF1ZXJ5ICMxMzkzNilcclxuXHRpZiAoIHByZWZlcnJlZERvYyAhPT0gZG9jdW1lbnQgJiZcclxuXHRcdChzdWJXaW5kb3cgPSBkb2N1bWVudC5kZWZhdWx0VmlldykgJiYgc3ViV2luZG93LnRvcCAhPT0gc3ViV2luZG93ICkge1xyXG5cclxuXHRcdC8vIFN1cHBvcnQ6IElFIDExLCBFZGdlXHJcblx0XHRpZiAoIHN1YldpbmRvdy5hZGRFdmVudExpc3RlbmVyICkge1xyXG5cdFx0XHRzdWJXaW5kb3cuYWRkRXZlbnRMaXN0ZW5lciggXCJ1bmxvYWRcIiwgdW5sb2FkSGFuZGxlciwgZmFsc2UgKTtcclxuXHJcblx0XHQvLyBTdXBwb3J0OiBJRSA5IC0gMTAgb25seVxyXG5cdFx0fSBlbHNlIGlmICggc3ViV2luZG93LmF0dGFjaEV2ZW50ICkge1xyXG5cdFx0XHRzdWJXaW5kb3cuYXR0YWNoRXZlbnQoIFwib251bmxvYWRcIiwgdW5sb2FkSGFuZGxlciApO1xyXG5cdFx0fVxyXG5cdH1cclxuXHJcblx0LyogQXR0cmlidXRlc1xyXG5cdC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi9cclxuXHJcblx0Ly8gU3VwcG9ydDogSUU8OFxyXG5cdC8vIFZlcmlmeSB0aGF0IGdldEF0dHJpYnV0ZSByZWFsbHkgcmV0dXJucyBhdHRyaWJ1dGVzIGFuZCBub3QgcHJvcGVydGllc1xyXG5cdC8vIChleGNlcHRpbmcgSUU4IGJvb2xlYW5zKVxyXG5cdHN1cHBvcnQuYXR0cmlidXRlcyA9IGFzc2VydChmdW5jdGlvbiggZWwgKSB7XHJcblx0XHRlbC5jbGFzc05hbWUgPSBcImlcIjtcclxuXHRcdHJldHVybiAhZWwuZ2V0QXR0cmlidXRlKFwiY2xhc3NOYW1lXCIpO1xyXG5cdH0pO1xyXG5cclxuXHQvKiBnZXRFbGVtZW50KHMpQnkqXHJcblx0LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAqL1xyXG5cclxuXHQvLyBDaGVjayBpZiBnZXRFbGVtZW50c0J5VGFnTmFtZShcIipcIikgcmV0dXJucyBvbmx5IGVsZW1lbnRzXHJcblx0c3VwcG9ydC5nZXRFbGVtZW50c0J5VGFnTmFtZSA9IGFzc2VydChmdW5jdGlvbiggZWwgKSB7XHJcblx0XHRlbC5hcHBlbmRDaGlsZCggZG9jdW1lbnQuY3JlYXRlQ29tbWVudChcIlwiKSApO1xyXG5cdFx0cmV0dXJuICFlbC5nZXRFbGVtZW50c0J5VGFnTmFtZShcIipcIikubGVuZ3RoO1xyXG5cdH0pO1xyXG5cclxuXHQvLyBTdXBwb3J0OiBJRTw5XHJcblx0c3VwcG9ydC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lID0gcm5hdGl2ZS50ZXN0KCBkb2N1bWVudC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lICk7XHJcblxyXG5cdC8vIFN1cHBvcnQ6IElFPDEwXHJcblx0Ly8gQ2hlY2sgaWYgZ2V0RWxlbWVudEJ5SWQgcmV0dXJucyBlbGVtZW50cyBieSBuYW1lXHJcblx0Ly8gVGhlIGJyb2tlbiBnZXRFbGVtZW50QnlJZCBtZXRob2RzIGRvbid0IHBpY2sgdXAgcHJvZ3JhbW1hdGljYWxseS1zZXQgbmFtZXMsXHJcblx0Ly8gc28gdXNlIGEgcm91bmRhYm91dCBnZXRFbGVtZW50c0J5TmFtZSB0ZXN0XHJcblx0c3VwcG9ydC5nZXRCeUlkID0gYXNzZXJ0KGZ1bmN0aW9uKCBlbCApIHtcclxuXHRcdGRvY0VsZW0uYXBwZW5kQ2hpbGQoIGVsICkuaWQgPSBleHBhbmRvO1xyXG5cdFx0cmV0dXJuICFkb2N1bWVudC5nZXRFbGVtZW50c0J5TmFtZSB8fCAhZG9jdW1lbnQuZ2V0RWxlbWVudHNCeU5hbWUoIGV4cGFuZG8gKS5sZW5ndGg7XHJcblx0fSk7XHJcblxyXG5cdC8vIElEIGZpbHRlciBhbmQgZmluZFxyXG5cdGlmICggc3VwcG9ydC5nZXRCeUlkICkge1xyXG5cdFx0RXhwci5maWx0ZXJbXCJJRFwiXSA9IGZ1bmN0aW9uKCBpZCApIHtcclxuXHRcdFx0dmFyIGF0dHJJZCA9IGlkLnJlcGxhY2UoIHJ1bmVzY2FwZSwgZnVuZXNjYXBlICk7XHJcblx0XHRcdHJldHVybiBmdW5jdGlvbiggZWxlbSApIHtcclxuXHRcdFx0XHRyZXR1cm4gZWxlbS5nZXRBdHRyaWJ1dGUoXCJpZFwiKSA9PT0gYXR0cklkO1xyXG5cdFx0XHR9O1xyXG5cdFx0fTtcclxuXHRcdEV4cHIuZmluZFtcIklEXCJdID0gZnVuY3Rpb24oIGlkLCBjb250ZXh0ICkge1xyXG5cdFx0XHRpZiAoIHR5cGVvZiBjb250ZXh0LmdldEVsZW1lbnRCeUlkICE9PSBcInVuZGVmaW5lZFwiICYmIGRvY3VtZW50SXNIVE1MICkge1xyXG5cdFx0XHRcdHZhciBlbGVtID0gY29udGV4dC5nZXRFbGVtZW50QnlJZCggaWQgKTtcclxuXHRcdFx0XHRyZXR1cm4gZWxlbSA/IFsgZWxlbSBdIDogW107XHJcblx0XHRcdH1cclxuXHRcdH07XHJcblx0fSBlbHNlIHtcclxuXHRcdEV4cHIuZmlsdGVyW1wiSURcIl0gPSAgZnVuY3Rpb24oIGlkICkge1xyXG5cdFx0XHR2YXIgYXR0cklkID0gaWQucmVwbGFjZSggcnVuZXNjYXBlLCBmdW5lc2NhcGUgKTtcclxuXHRcdFx0cmV0dXJuIGZ1bmN0aW9uKCBlbGVtICkge1xyXG5cdFx0XHRcdHZhciBub2RlID0gdHlwZW9mIGVsZW0uZ2V0QXR0cmlidXRlTm9kZSAhPT0gXCJ1bmRlZmluZWRcIiAmJlxyXG5cdFx0XHRcdFx0ZWxlbS5nZXRBdHRyaWJ1dGVOb2RlKFwiaWRcIik7XHJcblx0XHRcdFx0cmV0dXJuIG5vZGUgJiYgbm9kZS52YWx1ZSA9PT0gYXR0cklkO1xyXG5cdFx0XHR9O1xyXG5cdFx0fTtcclxuXHJcblx0XHQvLyBTdXBwb3J0OiBJRSA2IC0gNyBvbmx5XHJcblx0XHQvLyBnZXRFbGVtZW50QnlJZCBpcyBub3QgcmVsaWFibGUgYXMgYSBmaW5kIHNob3J0Y3V0XHJcblx0XHRFeHByLmZpbmRbXCJJRFwiXSA9IGZ1bmN0aW9uKCBpZCwgY29udGV4dCApIHtcclxuXHRcdFx0aWYgKCB0eXBlb2YgY29udGV4dC5nZXRFbGVtZW50QnlJZCAhPT0gXCJ1bmRlZmluZWRcIiAmJiBkb2N1bWVudElzSFRNTCApIHtcclxuXHRcdFx0XHR2YXIgbm9kZSwgaSwgZWxlbXMsXHJcblx0XHRcdFx0XHRlbGVtID0gY29udGV4dC5nZXRFbGVtZW50QnlJZCggaWQgKTtcclxuXHJcblx0XHRcdFx0aWYgKCBlbGVtICkge1xyXG5cclxuXHRcdFx0XHRcdC8vIFZlcmlmeSB0aGUgaWQgYXR0cmlidXRlXHJcblx0XHRcdFx0XHRub2RlID0gZWxlbS5nZXRBdHRyaWJ1dGVOb2RlKFwiaWRcIik7XHJcblx0XHRcdFx0XHRpZiAoIG5vZGUgJiYgbm9kZS52YWx1ZSA9PT0gaWQgKSB7XHJcblx0XHRcdFx0XHRcdHJldHVybiBbIGVsZW0gXTtcclxuXHRcdFx0XHRcdH1cclxuXHJcblx0XHRcdFx0XHQvLyBGYWxsIGJhY2sgb24gZ2V0RWxlbWVudHNCeU5hbWVcclxuXHRcdFx0XHRcdGVsZW1zID0gY29udGV4dC5nZXRFbGVtZW50c0J5TmFtZSggaWQgKTtcclxuXHRcdFx0XHRcdGkgPSAwO1xyXG5cdFx0XHRcdFx0d2hpbGUgKCAoZWxlbSA9IGVsZW1zW2krK10pICkge1xyXG5cdFx0XHRcdFx0XHRub2RlID0gZWxlbS5nZXRBdHRyaWJ1dGVOb2RlKFwiaWRcIik7XHJcblx0XHRcdFx0XHRcdGlmICggbm9kZSAmJiBub2RlLnZhbHVlID09PSBpZCApIHtcclxuXHRcdFx0XHRcdFx0XHRyZXR1cm4gWyBlbGVtIF07XHJcblx0XHRcdFx0XHRcdH1cclxuXHRcdFx0XHRcdH1cclxuXHRcdFx0XHR9XHJcblxyXG5cdFx0XHRcdHJldHVybiBbXTtcclxuXHRcdFx0fVxyXG5cdFx0fTtcclxuXHR9XHJcblxyXG5cdC8vIFRhZ1xyXG5cdEV4cHIuZmluZFtcIlRBR1wiXSA9IHN1cHBvcnQuZ2V0RWxlbWVudHNCeVRhZ05hbWUgP1xyXG5cdFx0ZnVuY3Rpb24oIHRhZywgY29udGV4dCApIHtcclxuXHRcdFx0aWYgKCB0eXBlb2YgY29udGV4dC5nZXRFbGVtZW50c0J5VGFnTmFtZSAhPT0gXCJ1bmRlZmluZWRcIiApIHtcclxuXHRcdFx0XHRyZXR1cm4gY29udGV4dC5nZXRFbGVtZW50c0J5VGFnTmFtZSggdGFnICk7XHJcblxyXG5cdFx0XHQvLyBEb2N1bWVudEZyYWdtZW50IG5vZGVzIGRvbid0IGhhdmUgZ0VCVE5cclxuXHRcdFx0fSBlbHNlIGlmICggc3VwcG9ydC5xc2EgKSB7XHJcblx0XHRcdFx0cmV0dXJuIGNvbnRleHQucXVlcnlTZWxlY3RvckFsbCggdGFnICk7XHJcblx0XHRcdH1cclxuXHRcdH0gOlxyXG5cclxuXHRcdGZ1bmN0aW9uKCB0YWcsIGNvbnRleHQgKSB7XHJcblx0XHRcdHZhciBlbGVtLFxyXG5cdFx0XHRcdHRtcCA9IFtdLFxyXG5cdFx0XHRcdGkgPSAwLFxyXG5cdFx0XHRcdC8vIEJ5IGhhcHB5IGNvaW5jaWRlbmNlLCBhIChicm9rZW4pIGdFQlROIGFwcGVhcnMgb24gRG9jdW1lbnRGcmFnbWVudCBub2RlcyB0b29cclxuXHRcdFx0XHRyZXN1bHRzID0gY29udGV4dC5nZXRFbGVtZW50c0J5VGFnTmFtZSggdGFnICk7XHJcblxyXG5cdFx0XHQvLyBGaWx0ZXIgb3V0IHBvc3NpYmxlIGNvbW1lbnRzXHJcblx0XHRcdGlmICggdGFnID09PSBcIipcIiApIHtcclxuXHRcdFx0XHR3aGlsZSAoIChlbGVtID0gcmVzdWx0c1tpKytdKSApIHtcclxuXHRcdFx0XHRcdGlmICggZWxlbS5ub2RlVHlwZSA9PT0gMSApIHtcclxuXHRcdFx0XHRcdFx0dG1wLnB1c2goIGVsZW0gKTtcclxuXHRcdFx0XHRcdH1cclxuXHRcdFx0XHR9XHJcblxyXG5cdFx0XHRcdHJldHVybiB0bXA7XHJcblx0XHRcdH1cclxuXHRcdFx0cmV0dXJuIHJlc3VsdHM7XHJcblx0XHR9O1xyXG5cclxuXHQvLyBDbGFzc1xyXG5cdEV4cHIuZmluZFtcIkNMQVNTXCJdID0gc3VwcG9ydC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lICYmIGZ1bmN0aW9uKCBjbGFzc05hbWUsIGNvbnRleHQgKSB7XHJcblx0XHRpZiAoIHR5cGVvZiBjb250ZXh0LmdldEVsZW1lbnRzQnlDbGFzc05hbWUgIT09IFwidW5kZWZpbmVkXCIgJiYgZG9jdW1lbnRJc0hUTUwgKSB7XHJcblx0XHRcdHJldHVybiBjb250ZXh0LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoIGNsYXNzTmFtZSApO1xyXG5cdFx0fVxyXG5cdH07XHJcblxyXG5cdC8qIFFTQS9tYXRjaGVzU2VsZWN0b3JcclxuXHQtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tICovXHJcblxyXG5cdC8vIFFTQSBhbmQgbWF0Y2hlc1NlbGVjdG9yIHN1cHBvcnRcclxuXHJcblx0Ly8gbWF0Y2hlc1NlbGVjdG9yKDphY3RpdmUpIHJlcG9ydHMgZmFsc2Ugd2hlbiB0cnVlIChJRTkvT3BlcmEgMTEuNSlcclxuXHRyYnVnZ3lNYXRjaGVzID0gW107XHJcblxyXG5cdC8vIHFTYSg6Zm9jdXMpIHJlcG9ydHMgZmFsc2Ugd2hlbiB0cnVlIChDaHJvbWUgMjEpXHJcblx0Ly8gV2UgYWxsb3cgdGhpcyBiZWNhdXNlIG9mIGEgYnVnIGluIElFOC85IHRoYXQgdGhyb3dzIGFuIGVycm9yXHJcblx0Ly8gd2hlbmV2ZXIgYGRvY3VtZW50LmFjdGl2ZUVsZW1lbnRgIGlzIGFjY2Vzc2VkIG9uIGFuIGlmcmFtZVxyXG5cdC8vIFNvLCB3ZSBhbGxvdyA6Zm9jdXMgdG8gcGFzcyB0aHJvdWdoIFFTQSBhbGwgdGhlIHRpbWUgdG8gYXZvaWQgdGhlIElFIGVycm9yXHJcblx0Ly8gU2VlIGh0dHBzOi8vYnVncy5qcXVlcnkuY29tL3RpY2tldC8xMzM3OFxyXG5cdHJidWdneVFTQSA9IFtdO1xyXG5cclxuXHRpZiAoIChzdXBwb3J0LnFzYSA9IHJuYXRpdmUudGVzdCggZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCApKSApIHtcclxuXHRcdC8vIEJ1aWxkIFFTQSByZWdleFxyXG5cdFx0Ly8gUmVnZXggc3RyYXRlZ3kgYWRvcHRlZCBmcm9tIERpZWdvIFBlcmluaVxyXG5cdFx0YXNzZXJ0KGZ1bmN0aW9uKCBlbCApIHtcclxuXHRcdFx0Ly8gU2VsZWN0IGlzIHNldCB0byBlbXB0eSBzdHJpbmcgb24gcHVycG9zZVxyXG5cdFx0XHQvLyBUaGlzIGlzIHRvIHRlc3QgSUUncyB0cmVhdG1lbnQgb2Ygbm90IGV4cGxpY2l0bHlcclxuXHRcdFx0Ly8gc2V0dGluZyBhIGJvb2xlYW4gY29udGVudCBhdHRyaWJ1dGUsXHJcblx0XHRcdC8vIHNpbmNlIGl0cyBwcmVzZW5jZSBzaG91bGQgYmUgZW5vdWdoXHJcblx0XHRcdC8vIGh0dHBzOi8vYnVncy5qcXVlcnkuY29tL3RpY2tldC8xMjM1OVxyXG5cdFx0XHRkb2NFbGVtLmFwcGVuZENoaWxkKCBlbCApLmlubmVySFRNTCA9IFwiPGEgaWQ9J1wiICsgZXhwYW5kbyArIFwiJz48L2E+XCIgK1xyXG5cdFx0XHRcdFwiPHNlbGVjdCBpZD0nXCIgKyBleHBhbmRvICsgXCItXFxyXFxcXCcgbXNhbGxvd2NhcHR1cmU9Jyc+XCIgK1xyXG5cdFx0XHRcdFwiPG9wdGlvbiBzZWxlY3RlZD0nJz48L29wdGlvbj48L3NlbGVjdD5cIjtcclxuXHJcblx0XHRcdC8vIFN1cHBvcnQ6IElFOCwgT3BlcmEgMTEtMTIuMTZcclxuXHRcdFx0Ly8gTm90aGluZyBzaG91bGQgYmUgc2VsZWN0ZWQgd2hlbiBlbXB0eSBzdHJpbmdzIGZvbGxvdyBePSBvciAkPSBvciAqPVxyXG5cdFx0XHQvLyBUaGUgdGVzdCBhdHRyaWJ1dGUgbXVzdCBiZSB1bmtub3duIGluIE9wZXJhIGJ1dCBcInNhZmVcIiBmb3IgV2luUlRcclxuXHRcdFx0Ly8gaHR0cHM6Ly9tc2RuLm1pY3Jvc29mdC5jb20vZW4tdXMvbGlicmFyeS9pZS9oaDQ2NTM4OC5hc3B4I2F0dHJpYnV0ZV9zZWN0aW9uXHJcblx0XHRcdGlmICggZWwucXVlcnlTZWxlY3RvckFsbChcIlttc2FsbG93Y2FwdHVyZV49JyddXCIpLmxlbmd0aCApIHtcclxuXHRcdFx0XHRyYnVnZ3lRU0EucHVzaCggXCJbKl4kXT1cIiArIHdoaXRlc3BhY2UgKyBcIiooPzonJ3xcXFwiXFxcIilcIiApO1xyXG5cdFx0XHR9XHJcblxyXG5cdFx0XHQvLyBTdXBwb3J0OiBJRThcclxuXHRcdFx0Ly8gQm9vbGVhbiBhdHRyaWJ1dGVzIGFuZCBcInZhbHVlXCIgYXJlIG5vdCB0cmVhdGVkIGNvcnJlY3RseVxyXG5cdFx0XHRpZiAoICFlbC5xdWVyeVNlbGVjdG9yQWxsKFwiW3NlbGVjdGVkXVwiKS5sZW5ndGggKSB7XHJcblx0XHRcdFx0cmJ1Z2d5UVNBLnB1c2goIFwiXFxcXFtcIiArIHdoaXRlc3BhY2UgKyBcIiooPzp2YWx1ZXxcIiArIGJvb2xlYW5zICsgXCIpXCIgKTtcclxuXHRcdFx0fVxyXG5cclxuXHRcdFx0Ly8gU3VwcG9ydDogQ2hyb21lPDI5LCBBbmRyb2lkPDQuNCwgU2FmYXJpPDcuMCssIGlPUzw3LjArLCBQaGFudG9tSlM8MS45LjgrXHJcblx0XHRcdGlmICggIWVsLnF1ZXJ5U2VsZWN0b3JBbGwoIFwiW2lkfj1cIiArIGV4cGFuZG8gKyBcIi1dXCIgKS5sZW5ndGggKSB7XHJcblx0XHRcdFx0cmJ1Z2d5UVNBLnB1c2goXCJ+PVwiKTtcclxuXHRcdFx0fVxyXG5cclxuXHRcdFx0Ly8gV2Via2l0L09wZXJhIC0gOmNoZWNrZWQgc2hvdWxkIHJldHVybiBzZWxlY3RlZCBvcHRpb24gZWxlbWVudHNcclxuXHRcdFx0Ly8gaHR0cDovL3d3dy53My5vcmcvVFIvMjAxMS9SRUMtY3NzMy1zZWxlY3RvcnMtMjAxMTA5MjkvI2NoZWNrZWRcclxuXHRcdFx0Ly8gSUU4IHRocm93cyBlcnJvciBoZXJlIGFuZCB3aWxsIG5vdCBzZWUgbGF0ZXIgdGVzdHNcclxuXHRcdFx0aWYgKCAhZWwucXVlcnlTZWxlY3RvckFsbChcIjpjaGVja2VkXCIpLmxlbmd0aCApIHtcclxuXHRcdFx0XHRyYnVnZ3lRU0EucHVzaChcIjpjaGVja2VkXCIpO1xyXG5cdFx0XHR9XHJcblxyXG5cdFx0XHQvLyBTdXBwb3J0OiBTYWZhcmkgOCssIGlPUyA4K1xyXG5cdFx0XHQvLyBodHRwczovL2J1Z3Mud2Via2l0Lm9yZy9zaG93X2J1Zy5jZ2k/aWQ9MTM2ODUxXHJcblx0XHRcdC8vIEluLXBhZ2UgYHNlbGVjdG9yI2lkIHNpYmxpbmctY29tYmluYXRvciBzZWxlY3RvcmAgZmFpbHNcclxuXHRcdFx0aWYgKCAhZWwucXVlcnlTZWxlY3RvckFsbCggXCJhI1wiICsgZXhwYW5kbyArIFwiKypcIiApLmxlbmd0aCApIHtcclxuXHRcdFx0XHRyYnVnZ3lRU0EucHVzaChcIi4jLitbK35dXCIpO1xyXG5cdFx0XHR9XHJcblx0XHR9KTtcclxuXHJcblx0XHRhc3NlcnQoZnVuY3Rpb24oIGVsICkge1xyXG5cdFx0XHRlbC5pbm5lckhUTUwgPSBcIjxhIGhyZWY9JycgZGlzYWJsZWQ9J2Rpc2FibGVkJz48L2E+XCIgK1xyXG5cdFx0XHRcdFwiPHNlbGVjdCBkaXNhYmxlZD0nZGlzYWJsZWQnPjxvcHRpb24vPjwvc2VsZWN0PlwiO1xyXG5cclxuXHRcdFx0Ly8gU3VwcG9ydDogV2luZG93cyA4IE5hdGl2ZSBBcHBzXHJcblx0XHRcdC8vIFRoZSB0eXBlIGFuZCBuYW1lIGF0dHJpYnV0ZXMgYXJlIHJlc3RyaWN0ZWQgZHVyaW5nIC5pbm5lckhUTUwgYXNzaWdubWVudFxyXG5cdFx0XHR2YXIgaW5wdXQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiaW5wdXRcIik7XHJcblx0XHRcdGlucHV0LnNldEF0dHJpYnV0ZSggXCJ0eXBlXCIsIFwiaGlkZGVuXCIgKTtcclxuXHRcdFx0ZWwuYXBwZW5kQ2hpbGQoIGlucHV0ICkuc2V0QXR0cmlidXRlKCBcIm5hbWVcIiwgXCJEXCIgKTtcclxuXHJcblx0XHRcdC8vIFN1cHBvcnQ6IElFOFxyXG5cdFx0XHQvLyBFbmZvcmNlIGNhc2Utc2Vuc2l0aXZpdHkgb2YgbmFtZSBhdHRyaWJ1dGVcclxuXHRcdFx0aWYgKCBlbC5xdWVyeVNlbGVjdG9yQWxsKFwiW25hbWU9ZF1cIikubGVuZ3RoICkge1xyXG5cdFx0XHRcdHJidWdneVFTQS5wdXNoKCBcIm5hbWVcIiArIHdoaXRlc3BhY2UgKyBcIipbKl4kfCF+XT89XCIgKTtcclxuXHRcdFx0fVxyXG5cclxuXHRcdFx0Ly8gRkYgMy41IC0gOmVuYWJsZWQvOmRpc2FibGVkIGFuZCBoaWRkZW4gZWxlbWVudHMgKGhpZGRlbiBlbGVtZW50cyBhcmUgc3RpbGwgZW5hYmxlZClcclxuXHRcdFx0Ly8gSUU4IHRocm93cyBlcnJvciBoZXJlIGFuZCB3aWxsIG5vdCBzZWUgbGF0ZXIgdGVzdHNcclxuXHRcdFx0aWYgKCBlbC5xdWVyeVNlbGVjdG9yQWxsKFwiOmVuYWJsZWRcIikubGVuZ3RoICE9PSAyICkge1xyXG5cdFx0XHRcdHJidWdneVFTQS5wdXNoKCBcIjplbmFibGVkXCIsIFwiOmRpc2FibGVkXCIgKTtcclxuXHRcdFx0fVxyXG5cclxuXHRcdFx0Ly8gU3VwcG9ydDogSUU5LTExK1xyXG5cdFx0XHQvLyBJRSdzIDpkaXNhYmxlZCBzZWxlY3RvciBkb2VzIG5vdCBwaWNrIHVwIHRoZSBjaGlsZHJlbiBvZiBkaXNhYmxlZCBmaWVsZHNldHNcclxuXHRcdFx0ZG9jRWxlbS5hcHBlbmRDaGlsZCggZWwgKS5kaXNhYmxlZCA9IHRydWU7XHJcblx0XHRcdGlmICggZWwucXVlcnlTZWxlY3RvckFsbChcIjpkaXNhYmxlZFwiKS5sZW5ndGggIT09IDIgKSB7XHJcblx0XHRcdFx0cmJ1Z2d5UVNBLnB1c2goIFwiOmVuYWJsZWRcIiwgXCI6ZGlzYWJsZWRcIiApO1xyXG5cdFx0XHR9XHJcblxyXG5cdFx0XHQvLyBPcGVyYSAxMC0xMSBkb2VzIG5vdCB0aHJvdyBvbiBwb3N0LWNvbW1hIGludmFsaWQgcHNldWRvc1xyXG5cdFx0XHRlbC5xdWVyeVNlbGVjdG9yQWxsKFwiKiw6eFwiKTtcclxuXHRcdFx0cmJ1Z2d5UVNBLnB1c2goXCIsLio6XCIpO1xyXG5cdFx0fSk7XHJcblx0fVxyXG5cclxuXHRpZiAoIChzdXBwb3J0Lm1hdGNoZXNTZWxlY3RvciA9IHJuYXRpdmUudGVzdCggKG1hdGNoZXMgPSBkb2NFbGVtLm1hdGNoZXMgfHxcclxuXHRcdGRvY0VsZW0ud2Via2l0TWF0Y2hlc1NlbGVjdG9yIHx8XHJcblx0XHRkb2NFbGVtLm1vek1hdGNoZXNTZWxlY3RvciB8fFxyXG5cdFx0ZG9jRWxlbS5vTWF0Y2hlc1NlbGVjdG9yIHx8XHJcblx0XHRkb2NFbGVtLm1zTWF0Y2hlc1NlbGVjdG9yKSApKSApIHtcclxuXHJcblx0XHRhc3NlcnQoZnVuY3Rpb24oIGVsICkge1xyXG5cdFx0XHQvLyBDaGVjayB0byBzZWUgaWYgaXQncyBwb3NzaWJsZSB0byBkbyBtYXRjaGVzU2VsZWN0b3JcclxuXHRcdFx0Ly8gb24gYSBkaXNjb25uZWN0ZWQgbm9kZSAoSUUgOSlcclxuXHRcdFx0c3VwcG9ydC5kaXNjb25uZWN0ZWRNYXRjaCA9IG1hdGNoZXMuY2FsbCggZWwsIFwiKlwiICk7XHJcblxyXG5cdFx0XHQvLyBUaGlzIHNob3VsZCBmYWlsIHdpdGggYW4gZXhjZXB0aW9uXHJcblx0XHRcdC8vIEdlY2tvIGRvZXMgbm90IGVycm9yLCByZXR1cm5zIGZhbHNlIGluc3RlYWRcclxuXHRcdFx0bWF0Y2hlcy5jYWxsKCBlbCwgXCJbcyE9JyddOnhcIiApO1xyXG5cdFx0XHRyYnVnZ3lNYXRjaGVzLnB1c2goIFwiIT1cIiwgcHNldWRvcyApO1xyXG5cdFx0fSk7XHJcblx0fVxyXG5cclxuXHRyYnVnZ3lRU0EgPSByYnVnZ3lRU0EubGVuZ3RoICYmIG5ldyBSZWdFeHAoIHJidWdneVFTQS5qb2luKFwifFwiKSApO1xyXG5cdHJidWdneU1hdGNoZXMgPSByYnVnZ3lNYXRjaGVzLmxlbmd0aCAmJiBuZXcgUmVnRXhwKCByYnVnZ3lNYXRjaGVzLmpvaW4oXCJ8XCIpICk7XHJcblxyXG5cdC8qIENvbnRhaW5zXHJcblx0LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAqL1xyXG5cdGhhc0NvbXBhcmUgPSBybmF0aXZlLnRlc3QoIGRvY0VsZW0uY29tcGFyZURvY3VtZW50UG9zaXRpb24gKTtcclxuXHJcblx0Ly8gRWxlbWVudCBjb250YWlucyBhbm90aGVyXHJcblx0Ly8gUHVycG9zZWZ1bGx5IHNlbGYtZXhjbHVzaXZlXHJcblx0Ly8gQXMgaW4sIGFuIGVsZW1lbnQgZG9lcyBub3QgY29udGFpbiBpdHNlbGZcclxuXHRjb250YWlucyA9IGhhc0NvbXBhcmUgfHwgcm5hdGl2ZS50ZXN0KCBkb2NFbGVtLmNvbnRhaW5zICkgP1xyXG5cdFx0ZnVuY3Rpb24oIGEsIGIgKSB7XHJcblx0XHRcdHZhciBhZG93biA9IGEubm9kZVR5cGUgPT09IDkgPyBhLmRvY3VtZW50RWxlbWVudCA6IGEsXHJcblx0XHRcdFx0YnVwID0gYiAmJiBiLnBhcmVudE5vZGU7XHJcblx0XHRcdHJldHVybiBhID09PSBidXAgfHwgISEoIGJ1cCAmJiBidXAubm9kZVR5cGUgPT09IDEgJiYgKFxyXG5cdFx0XHRcdGFkb3duLmNvbnRhaW5zID9cclxuXHRcdFx0XHRcdGFkb3duLmNvbnRhaW5zKCBidXAgKSA6XHJcblx0XHRcdFx0XHRhLmNvbXBhcmVEb2N1bWVudFBvc2l0aW9uICYmIGEuY29tcGFyZURvY3VtZW50UG9zaXRpb24oIGJ1cCApICYgMTZcclxuXHRcdFx0KSk7XHJcblx0XHR9IDpcclxuXHRcdGZ1bmN0aW9uKCBhLCBiICkge1xyXG5cdFx0XHRpZiAoIGIgKSB7XHJcblx0XHRcdFx0d2hpbGUgKCAoYiA9IGIucGFyZW50Tm9kZSkgKSB7XHJcblx0XHRcdFx0XHRpZiAoIGIgPT09IGEgKSB7XHJcblx0XHRcdFx0XHRcdHJldHVybiB0cnVlO1xyXG5cdFx0XHRcdFx0fVxyXG5cdFx0XHRcdH1cclxuXHRcdFx0fVxyXG5cdFx0XHRyZXR1cm4gZmFsc2U7XHJcblx0XHR9O1xyXG5cclxuXHQvKiBTb3J0aW5nXHJcblx0LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAqL1xyXG5cclxuXHQvLyBEb2N1bWVudCBvcmRlciBzb3J0aW5nXHJcblx0c29ydE9yZGVyID0gaGFzQ29tcGFyZSA/XHJcblx0ZnVuY3Rpb24oIGEsIGIgKSB7XHJcblxyXG5cdFx0Ly8gRmxhZyBmb3IgZHVwbGljYXRlIHJlbW92YWxcclxuXHRcdGlmICggYSA9PT0gYiApIHtcclxuXHRcdFx0aGFzRHVwbGljYXRlID0gdHJ1ZTtcclxuXHRcdFx0cmV0dXJuIDA7XHJcblx0XHR9XHJcblxyXG5cdFx0Ly8gU29ydCBvbiBtZXRob2QgZXhpc3RlbmNlIGlmIG9ubHkgb25lIGlucHV0IGhhcyBjb21wYXJlRG9jdW1lbnRQb3NpdGlvblxyXG5cdFx0dmFyIGNvbXBhcmUgPSAhYS5jb21wYXJlRG9jdW1lbnRQb3NpdGlvbiAtICFiLmNvbXBhcmVEb2N1bWVudFBvc2l0aW9uO1xyXG5cdFx0aWYgKCBjb21wYXJlICkge1xyXG5cdFx0XHRyZXR1cm4gY29tcGFyZTtcclxuXHRcdH1cclxuXHJcblx0XHQvLyBDYWxjdWxhdGUgcG9zaXRpb24gaWYgYm90aCBpbnB1dHMgYmVsb25nIHRvIHRoZSBzYW1lIGRvY3VtZW50XHJcblx0XHRjb21wYXJlID0gKCBhLm93bmVyRG9jdW1lbnQgfHwgYSApID09PSAoIGIub3duZXJEb2N1bWVudCB8fCBiICkgP1xyXG5cdFx0XHRhLmNvbXBhcmVEb2N1bWVudFBvc2l0aW9uKCBiICkgOlxyXG5cclxuXHRcdFx0Ly8gT3RoZXJ3aXNlIHdlIGtub3cgdGhleSBhcmUgZGlzY29ubmVjdGVkXHJcblx0XHRcdDE7XHJcblxyXG5cdFx0Ly8gRGlzY29ubmVjdGVkIG5vZGVzXHJcblx0XHRpZiAoIGNvbXBhcmUgJiAxIHx8XHJcblx0XHRcdCghc3VwcG9ydC5zb3J0RGV0YWNoZWQgJiYgYi5jb21wYXJlRG9jdW1lbnRQb3NpdGlvbiggYSApID09PSBjb21wYXJlKSApIHtcclxuXHJcblx0XHRcdC8vIENob29zZSB0aGUgZmlyc3QgZWxlbWVudCB0aGF0IGlzIHJlbGF0ZWQgdG8gb3VyIHByZWZlcnJlZCBkb2N1bWVudFxyXG5cdFx0XHRpZiAoIGEgPT09IGRvY3VtZW50IHx8IGEub3duZXJEb2N1bWVudCA9PT0gcHJlZmVycmVkRG9jICYmIGNvbnRhaW5zKHByZWZlcnJlZERvYywgYSkgKSB7XHJcblx0XHRcdFx0cmV0dXJuIC0xO1xyXG5cdFx0XHR9XHJcblx0XHRcdGlmICggYiA9PT0gZG9jdW1lbnQgfHwgYi5vd25lckRvY3VtZW50ID09PSBwcmVmZXJyZWREb2MgJiYgY29udGFpbnMocHJlZmVycmVkRG9jLCBiKSApIHtcclxuXHRcdFx0XHRyZXR1cm4gMTtcclxuXHRcdFx0fVxyXG5cclxuXHRcdFx0Ly8gTWFpbnRhaW4gb3JpZ2luYWwgb3JkZXJcclxuXHRcdFx0cmV0dXJuIHNvcnRJbnB1dCA/XHJcblx0XHRcdFx0KCBpbmRleE9mKCBzb3J0SW5wdXQsIGEgKSAtIGluZGV4T2YoIHNvcnRJbnB1dCwgYiApICkgOlxyXG5cdFx0XHRcdDA7XHJcblx0XHR9XHJcblxyXG5cdFx0cmV0dXJuIGNvbXBhcmUgJiA0ID8gLTEgOiAxO1xyXG5cdH0gOlxyXG5cdGZ1bmN0aW9uKCBhLCBiICkge1xyXG5cdFx0Ly8gRXhpdCBlYXJseSBpZiB0aGUgbm9kZXMgYXJlIGlkZW50aWNhbFxyXG5cdFx0aWYgKCBhID09PSBiICkge1xyXG5cdFx0XHRoYXNEdXBsaWNhdGUgPSB0cnVlO1xyXG5cdFx0XHRyZXR1cm4gMDtcclxuXHRcdH1cclxuXHJcblx0XHR2YXIgY3VyLFxyXG5cdFx0XHRpID0gMCxcclxuXHRcdFx0YXVwID0gYS5wYXJlbnROb2RlLFxyXG5cdFx0XHRidXAgPSBiLnBhcmVudE5vZGUsXHJcblx0XHRcdGFwID0gWyBhIF0sXHJcblx0XHRcdGJwID0gWyBiIF07XHJcblxyXG5cdFx0Ly8gUGFyZW50bGVzcyBub2RlcyBhcmUgZWl0aGVyIGRvY3VtZW50cyBvciBkaXNjb25uZWN0ZWRcclxuXHRcdGlmICggIWF1cCB8fCAhYnVwICkge1xyXG5cdFx0XHRyZXR1cm4gYSA9PT0gZG9jdW1lbnQgPyAtMSA6XHJcblx0XHRcdFx0YiA9PT0gZG9jdW1lbnQgPyAxIDpcclxuXHRcdFx0XHRhdXAgPyAtMSA6XHJcblx0XHRcdFx0YnVwID8gMSA6XHJcblx0XHRcdFx0c29ydElucHV0ID9cclxuXHRcdFx0XHQoIGluZGV4T2YoIHNvcnRJbnB1dCwgYSApIC0gaW5kZXhPZiggc29ydElucHV0LCBiICkgKSA6XHJcblx0XHRcdFx0MDtcclxuXHJcblx0XHQvLyBJZiB0aGUgbm9kZXMgYXJlIHNpYmxpbmdzLCB3ZSBjYW4gZG8gYSBxdWljayBjaGVja1xyXG5cdFx0fSBlbHNlIGlmICggYXVwID09PSBidXAgKSB7XHJcblx0XHRcdHJldHVybiBzaWJsaW5nQ2hlY2soIGEsIGIgKTtcclxuXHRcdH1cclxuXHJcblx0XHQvLyBPdGhlcndpc2Ugd2UgbmVlZCBmdWxsIGxpc3RzIG9mIHRoZWlyIGFuY2VzdG9ycyBmb3IgY29tcGFyaXNvblxyXG5cdFx0Y3VyID0gYTtcclxuXHRcdHdoaWxlICggKGN1ciA9IGN1ci5wYXJlbnROb2RlKSApIHtcclxuXHRcdFx0YXAudW5zaGlmdCggY3VyICk7XHJcblx0XHR9XHJcblx0XHRjdXIgPSBiO1xyXG5cdFx0d2hpbGUgKCAoY3VyID0gY3VyLnBhcmVudE5vZGUpICkge1xyXG5cdFx0XHRicC51bnNoaWZ0KCBjdXIgKTtcclxuXHRcdH1cclxuXHJcblx0XHQvLyBXYWxrIGRvd24gdGhlIHRyZWUgbG9va2luZyBmb3IgYSBkaXNjcmVwYW5jeVxyXG5cdFx0d2hpbGUgKCBhcFtpXSA9PT0gYnBbaV0gKSB7XHJcblx0XHRcdGkrKztcclxuXHRcdH1cclxuXHJcblx0XHRyZXR1cm4gaSA/XHJcblx0XHRcdC8vIERvIGEgc2libGluZyBjaGVjayBpZiB0aGUgbm9kZXMgaGF2ZSBhIGNvbW1vbiBhbmNlc3RvclxyXG5cdFx0XHRzaWJsaW5nQ2hlY2soIGFwW2ldLCBicFtpXSApIDpcclxuXHJcblx0XHRcdC8vIE90aGVyd2lzZSBub2RlcyBpbiBvdXIgZG9jdW1lbnQgc29ydCBmaXJzdFxyXG5cdFx0XHRhcFtpXSA9PT0gcHJlZmVycmVkRG9jID8gLTEgOlxyXG5cdFx0XHRicFtpXSA9PT0gcHJlZmVycmVkRG9jID8gMSA6XHJcblx0XHRcdDA7XHJcblx0fTtcclxuXHJcblx0cmV0dXJuIGRvY3VtZW50O1xyXG59O1xyXG5cclxuU2l6emxlLm1hdGNoZXMgPSBmdW5jdGlvbiggZXhwciwgZWxlbWVudHMgKSB7XHJcblx0cmV0dXJuIFNpenpsZSggZXhwciwgbnVsbCwgbnVsbCwgZWxlbWVudHMgKTtcclxufTtcclxuXHJcblNpenpsZS5tYXRjaGVzU2VsZWN0b3IgPSBmdW5jdGlvbiggZWxlbSwgZXhwciApIHtcclxuXHQvLyBTZXQgZG9jdW1lbnQgdmFycyBpZiBuZWVkZWRcclxuXHRpZiAoICggZWxlbS5vd25lckRvY3VtZW50IHx8IGVsZW0gKSAhPT0gZG9jdW1lbnQgKSB7XHJcblx0XHRzZXREb2N1bWVudCggZWxlbSApO1xyXG5cdH1cclxuXHJcblx0Ly8gTWFrZSBzdXJlIHRoYXQgYXR0cmlidXRlIHNlbGVjdG9ycyBhcmUgcXVvdGVkXHJcblx0ZXhwciA9IGV4cHIucmVwbGFjZSggcmF0dHJpYnV0ZVF1b3RlcywgXCI9JyQxJ11cIiApO1xyXG5cclxuXHRpZiAoIHN1cHBvcnQubWF0Y2hlc1NlbGVjdG9yICYmIGRvY3VtZW50SXNIVE1MICYmXHJcblx0XHQhY29tcGlsZXJDYWNoZVsgZXhwciArIFwiIFwiIF0gJiZcclxuXHRcdCggIXJidWdneU1hdGNoZXMgfHwgIXJidWdneU1hdGNoZXMudGVzdCggZXhwciApICkgJiZcclxuXHRcdCggIXJidWdneVFTQSAgICAgfHwgIXJidWdneVFTQS50ZXN0KCBleHByICkgKSApIHtcclxuXHJcblx0XHR0cnkge1xyXG5cdFx0XHR2YXIgcmV0ID0gbWF0Y2hlcy5jYWxsKCBlbGVtLCBleHByICk7XHJcblxyXG5cdFx0XHQvLyBJRSA5J3MgbWF0Y2hlc1NlbGVjdG9yIHJldHVybnMgZmFsc2Ugb24gZGlzY29ubmVjdGVkIG5vZGVzXHJcblx0XHRcdGlmICggcmV0IHx8IHN1cHBvcnQuZGlzY29ubmVjdGVkTWF0Y2ggfHxcclxuXHRcdFx0XHRcdC8vIEFzIHdlbGwsIGRpc2Nvbm5lY3RlZCBub2RlcyBhcmUgc2FpZCB0byBiZSBpbiBhIGRvY3VtZW50XHJcblx0XHRcdFx0XHQvLyBmcmFnbWVudCBpbiBJRSA5XHJcblx0XHRcdFx0XHRlbGVtLmRvY3VtZW50ICYmIGVsZW0uZG9jdW1lbnQubm9kZVR5cGUgIT09IDExICkge1xyXG5cdFx0XHRcdHJldHVybiByZXQ7XHJcblx0XHRcdH1cclxuXHRcdH0gY2F0Y2ggKGUpIHt9XHJcblx0fVxyXG5cclxuXHRyZXR1cm4gU2l6emxlKCBleHByLCBkb2N1bWVudCwgbnVsbCwgWyBlbGVtIF0gKS5sZW5ndGggPiAwO1xyXG59O1xyXG5cclxuU2l6emxlLmNvbnRhaW5zID0gZnVuY3Rpb24oIGNvbnRleHQsIGVsZW0gKSB7XHJcblx0Ly8gU2V0IGRvY3VtZW50IHZhcnMgaWYgbmVlZGVkXHJcblx0aWYgKCAoIGNvbnRleHQub3duZXJEb2N1bWVudCB8fCBjb250ZXh0ICkgIT09IGRvY3VtZW50ICkge1xyXG5cdFx0c2V0RG9jdW1lbnQoIGNvbnRleHQgKTtcclxuXHR9XHJcblx0cmV0dXJuIGNvbnRhaW5zKCBjb250ZXh0LCBlbGVtICk7XHJcbn07XHJcblxyXG5TaXp6bGUuYXR0ciA9IGZ1bmN0aW9uKCBlbGVtLCBuYW1lICkge1xyXG5cdC8vIFNldCBkb2N1bWVudCB2YXJzIGlmIG5lZWRlZFxyXG5cdGlmICggKCBlbGVtLm93bmVyRG9jdW1lbnQgfHwgZWxlbSApICE9PSBkb2N1bWVudCApIHtcclxuXHRcdHNldERvY3VtZW50KCBlbGVtICk7XHJcblx0fVxyXG5cclxuXHR2YXIgZm4gPSBFeHByLmF0dHJIYW5kbGVbIG5hbWUudG9Mb3dlckNhc2UoKSBdLFxyXG5cdFx0Ly8gRG9uJ3QgZ2V0IGZvb2xlZCBieSBPYmplY3QucHJvdG90eXBlIHByb3BlcnRpZXMgKGpRdWVyeSAjMTM4MDcpXHJcblx0XHR2YWwgPSBmbiAmJiBoYXNPd24uY2FsbCggRXhwci5hdHRySGFuZGxlLCBuYW1lLnRvTG93ZXJDYXNlKCkgKSA/XHJcblx0XHRcdGZuKCBlbGVtLCBuYW1lLCAhZG9jdW1lbnRJc0hUTUwgKSA6XHJcblx0XHRcdHVuZGVmaW5lZDtcclxuXHJcblx0cmV0dXJuIHZhbCAhPT0gdW5kZWZpbmVkID9cclxuXHRcdHZhbCA6XHJcblx0XHRzdXBwb3J0LmF0dHJpYnV0ZXMgfHwgIWRvY3VtZW50SXNIVE1MID9cclxuXHRcdFx0ZWxlbS5nZXRBdHRyaWJ1dGUoIG5hbWUgKSA6XHJcblx0XHRcdCh2YWwgPSBlbGVtLmdldEF0dHJpYnV0ZU5vZGUobmFtZSkpICYmIHZhbC5zcGVjaWZpZWQgP1xyXG5cdFx0XHRcdHZhbC52YWx1ZSA6XHJcblx0XHRcdFx0bnVsbDtcclxufTtcclxuXHJcblNpenpsZS5lc2NhcGUgPSBmdW5jdGlvbiggc2VsICkge1xyXG5cdHJldHVybiAoc2VsICsgXCJcIikucmVwbGFjZSggcmNzc2VzY2FwZSwgZmNzc2VzY2FwZSApO1xyXG59O1xyXG5cclxuU2l6emxlLmVycm9yID0gZnVuY3Rpb24oIG1zZyApIHtcclxuXHR0aHJvdyBuZXcgRXJyb3IoIFwiU3ludGF4IGVycm9yLCB1bnJlY29nbml6ZWQgZXhwcmVzc2lvbjogXCIgKyBtc2cgKTtcclxufTtcclxuXHJcbi8qKlxyXG4gKiBEb2N1bWVudCBzb3J0aW5nIGFuZCByZW1vdmluZyBkdXBsaWNhdGVzXHJcbiAqIEBwYXJhbSB7QXJyYXlMaWtlfSByZXN1bHRzXHJcbiAqL1xyXG5TaXp6bGUudW5pcXVlU29ydCA9IGZ1bmN0aW9uKCByZXN1bHRzICkge1xyXG5cdHZhciBlbGVtLFxyXG5cdFx0ZHVwbGljYXRlcyA9IFtdLFxyXG5cdFx0aiA9IDAsXHJcblx0XHRpID0gMDtcclxuXHJcblx0Ly8gVW5sZXNzIHdlICprbm93KiB3ZSBjYW4gZGV0ZWN0IGR1cGxpY2F0ZXMsIGFzc3VtZSB0aGVpciBwcmVzZW5jZVxyXG5cdGhhc0R1cGxpY2F0ZSA9ICFzdXBwb3J0LmRldGVjdER1cGxpY2F0ZXM7XHJcblx0c29ydElucHV0ID0gIXN1cHBvcnQuc29ydFN0YWJsZSAmJiByZXN1bHRzLnNsaWNlKCAwICk7XHJcblx0cmVzdWx0cy5zb3J0KCBzb3J0T3JkZXIgKTtcclxuXHJcblx0aWYgKCBoYXNEdXBsaWNhdGUgKSB7XHJcblx0XHR3aGlsZSAoIChlbGVtID0gcmVzdWx0c1tpKytdKSApIHtcclxuXHRcdFx0aWYgKCBlbGVtID09PSByZXN1bHRzWyBpIF0gKSB7XHJcblx0XHRcdFx0aiA9IGR1cGxpY2F0ZXMucHVzaCggaSApO1xyXG5cdFx0XHR9XHJcblx0XHR9XHJcblx0XHR3aGlsZSAoIGotLSApIHtcclxuXHRcdFx0cmVzdWx0cy5zcGxpY2UoIGR1cGxpY2F0ZXNbIGogXSwgMSApO1xyXG5cdFx0fVxyXG5cdH1cclxuXHJcblx0Ly8gQ2xlYXIgaW5wdXQgYWZ0ZXIgc29ydGluZyB0byByZWxlYXNlIG9iamVjdHNcclxuXHQvLyBTZWUgaHR0cHM6Ly9naXRodWIuY29tL2pxdWVyeS9zaXp6bGUvcHVsbC8yMjVcclxuXHRzb3J0SW5wdXQgPSBudWxsO1xyXG5cclxuXHRyZXR1cm4gcmVzdWx0cztcclxufTtcclxuXHJcbi8qKlxyXG4gKiBVdGlsaXR5IGZ1bmN0aW9uIGZvciByZXRyaWV2aW5nIHRoZSB0ZXh0IHZhbHVlIG9mIGFuIGFycmF5IG9mIERPTSBub2Rlc1xyXG4gKiBAcGFyYW0ge0FycmF5fEVsZW1lbnR9IGVsZW1cclxuICovXHJcbmdldFRleHQgPSBTaXp6bGUuZ2V0VGV4dCA9IGZ1bmN0aW9uKCBlbGVtICkge1xyXG5cdHZhciBub2RlLFxyXG5cdFx0cmV0ID0gXCJcIixcclxuXHRcdGkgPSAwLFxyXG5cdFx0bm9kZVR5cGUgPSBlbGVtLm5vZGVUeXBlO1xyXG5cclxuXHRpZiAoICFub2RlVHlwZSApIHtcclxuXHRcdC8vIElmIG5vIG5vZGVUeXBlLCB0aGlzIGlzIGV4cGVjdGVkIHRvIGJlIGFuIGFycmF5XHJcblx0XHR3aGlsZSAoIChub2RlID0gZWxlbVtpKytdKSApIHtcclxuXHRcdFx0Ly8gRG8gbm90IHRyYXZlcnNlIGNvbW1lbnQgbm9kZXNcclxuXHRcdFx0cmV0ICs9IGdldFRleHQoIG5vZGUgKTtcclxuXHRcdH1cclxuXHR9IGVsc2UgaWYgKCBub2RlVHlwZSA9PT0gMSB8fCBub2RlVHlwZSA9PT0gOSB8fCBub2RlVHlwZSA9PT0gMTEgKSB7XHJcblx0XHQvLyBVc2UgdGV4dENvbnRlbnQgZm9yIGVsZW1lbnRzXHJcblx0XHQvLyBpbm5lclRleHQgdXNhZ2UgcmVtb3ZlZCBmb3IgY29uc2lzdGVuY3kgb2YgbmV3IGxpbmVzIChqUXVlcnkgIzExMTUzKVxyXG5cdFx0aWYgKCB0eXBlb2YgZWxlbS50ZXh0Q29udGVudCA9PT0gXCJzdHJpbmdcIiApIHtcclxuXHRcdFx0cmV0dXJuIGVsZW0udGV4dENvbnRlbnQ7XHJcblx0XHR9IGVsc2Uge1xyXG5cdFx0XHQvLyBUcmF2ZXJzZSBpdHMgY2hpbGRyZW5cclxuXHRcdFx0Zm9yICggZWxlbSA9IGVsZW0uZmlyc3RDaGlsZDsgZWxlbTsgZWxlbSA9IGVsZW0ubmV4dFNpYmxpbmcgKSB7XHJcblx0XHRcdFx0cmV0ICs9IGdldFRleHQoIGVsZW0gKTtcclxuXHRcdFx0fVxyXG5cdFx0fVxyXG5cdH0gZWxzZSBpZiAoIG5vZGVUeXBlID09PSAzIHx8IG5vZGVUeXBlID09PSA0ICkge1xyXG5cdFx0cmV0dXJuIGVsZW0ubm9kZVZhbHVlO1xyXG5cdH1cclxuXHQvLyBEbyBub3QgaW5jbHVkZSBjb21tZW50IG9yIHByb2Nlc3NpbmcgaW5zdHJ1Y3Rpb24gbm9kZXNcclxuXHJcblx0cmV0dXJuIHJldDtcclxufTtcclxuXHJcbkV4cHIgPSBTaXp6bGUuc2VsZWN0b3JzID0ge1xyXG5cclxuXHQvLyBDYW4gYmUgYWRqdXN0ZWQgYnkgdGhlIHVzZXJcclxuXHRjYWNoZUxlbmd0aDogNTAsXHJcblxyXG5cdGNyZWF0ZVBzZXVkbzogbWFya0Z1bmN0aW9uLFxyXG5cclxuXHRtYXRjaDogbWF0Y2hFeHByLFxyXG5cclxuXHRhdHRySGFuZGxlOiB7fSxcclxuXHJcblx0ZmluZDoge30sXHJcblxyXG5cdHJlbGF0aXZlOiB7XHJcblx0XHRcIj5cIjogeyBkaXI6IFwicGFyZW50Tm9kZVwiLCBmaXJzdDogdHJ1ZSB9LFxyXG5cdFx0XCIgXCI6IHsgZGlyOiBcInBhcmVudE5vZGVcIiB9LFxyXG5cdFx0XCIrXCI6IHsgZGlyOiBcInByZXZpb3VzU2libGluZ1wiLCBmaXJzdDogdHJ1ZSB9LFxyXG5cdFx0XCJ+XCI6IHsgZGlyOiBcInByZXZpb3VzU2libGluZ1wiIH1cclxuXHR9LFxyXG5cclxuXHRwcmVGaWx0ZXI6IHtcclxuXHRcdFwiQVRUUlwiOiBmdW5jdGlvbiggbWF0Y2ggKSB7XHJcblx0XHRcdG1hdGNoWzFdID0gbWF0Y2hbMV0ucmVwbGFjZSggcnVuZXNjYXBlLCBmdW5lc2NhcGUgKTtcclxuXHJcblx0XHRcdC8vIE1vdmUgdGhlIGdpdmVuIHZhbHVlIHRvIG1hdGNoWzNdIHdoZXRoZXIgcXVvdGVkIG9yIHVucXVvdGVkXHJcblx0XHRcdG1hdGNoWzNdID0gKCBtYXRjaFszXSB8fCBtYXRjaFs0XSB8fCBtYXRjaFs1XSB8fCBcIlwiICkucmVwbGFjZSggcnVuZXNjYXBlLCBmdW5lc2NhcGUgKTtcclxuXHJcblx0XHRcdGlmICggbWF0Y2hbMl0gPT09IFwifj1cIiApIHtcclxuXHRcdFx0XHRtYXRjaFszXSA9IFwiIFwiICsgbWF0Y2hbM10gKyBcIiBcIjtcclxuXHRcdFx0fVxyXG5cclxuXHRcdFx0cmV0dXJuIG1hdGNoLnNsaWNlKCAwLCA0ICk7XHJcblx0XHR9LFxyXG5cclxuXHRcdFwiQ0hJTERcIjogZnVuY3Rpb24oIG1hdGNoICkge1xyXG5cdFx0XHQvKiBtYXRjaGVzIGZyb20gbWF0Y2hFeHByW1wiQ0hJTERcIl1cclxuXHRcdFx0XHQxIHR5cGUgKG9ubHl8bnRofC4uLilcclxuXHRcdFx0XHQyIHdoYXQgKGNoaWxkfG9mLXR5cGUpXHJcblx0XHRcdFx0MyBhcmd1bWVudCAoZXZlbnxvZGR8XFxkKnxcXGQqbihbKy1dXFxkKyk/fC4uLilcclxuXHRcdFx0XHQ0IHhuLWNvbXBvbmVudCBvZiB4bit5IGFyZ3VtZW50IChbKy1dP1xcZCpufClcclxuXHRcdFx0XHQ1IHNpZ24gb2YgeG4tY29tcG9uZW50XHJcblx0XHRcdFx0NiB4IG9mIHhuLWNvbXBvbmVudFxyXG5cdFx0XHRcdDcgc2lnbiBvZiB5LWNvbXBvbmVudFxyXG5cdFx0XHRcdDggeSBvZiB5LWNvbXBvbmVudFxyXG5cdFx0XHQqL1xyXG5cdFx0XHRtYXRjaFsxXSA9IG1hdGNoWzFdLnRvTG93ZXJDYXNlKCk7XHJcblxyXG5cdFx0XHRpZiAoIG1hdGNoWzFdLnNsaWNlKCAwLCAzICkgPT09IFwibnRoXCIgKSB7XHJcblx0XHRcdFx0Ly8gbnRoLSogcmVxdWlyZXMgYXJndW1lbnRcclxuXHRcdFx0XHRpZiAoICFtYXRjaFszXSApIHtcclxuXHRcdFx0XHRcdFNpenpsZS5lcnJvciggbWF0Y2hbMF0gKTtcclxuXHRcdFx0XHR9XHJcblxyXG5cdFx0XHRcdC8vIG51bWVyaWMgeCBhbmQgeSBwYXJhbWV0ZXJzIGZvciBFeHByLmZpbHRlci5DSElMRFxyXG5cdFx0XHRcdC8vIHJlbWVtYmVyIHRoYXQgZmFsc2UvdHJ1ZSBjYXN0IHJlc3BlY3RpdmVseSB0byAwLzFcclxuXHRcdFx0XHRtYXRjaFs0XSA9ICsoIG1hdGNoWzRdID8gbWF0Y2hbNV0gKyAobWF0Y2hbNl0gfHwgMSkgOiAyICogKCBtYXRjaFszXSA9PT0gXCJldmVuXCIgfHwgbWF0Y2hbM10gPT09IFwib2RkXCIgKSApO1xyXG5cdFx0XHRcdG1hdGNoWzVdID0gKyggKCBtYXRjaFs3XSArIG1hdGNoWzhdICkgfHwgbWF0Y2hbM10gPT09IFwib2RkXCIgKTtcclxuXHJcblx0XHRcdC8vIG90aGVyIHR5cGVzIHByb2hpYml0IGFyZ3VtZW50c1xyXG5cdFx0XHR9IGVsc2UgaWYgKCBtYXRjaFszXSApIHtcclxuXHRcdFx0XHRTaXp6bGUuZXJyb3IoIG1hdGNoWzBdICk7XHJcblx0XHRcdH1cclxuXHJcblx0XHRcdHJldHVybiBtYXRjaDtcclxuXHRcdH0sXHJcblxyXG5cdFx0XCJQU0VVRE9cIjogZnVuY3Rpb24oIG1hdGNoICkge1xyXG5cdFx0XHR2YXIgZXhjZXNzLFxyXG5cdFx0XHRcdHVucXVvdGVkID0gIW1hdGNoWzZdICYmIG1hdGNoWzJdO1xyXG5cclxuXHRcdFx0aWYgKCBtYXRjaEV4cHJbXCJDSElMRFwiXS50ZXN0KCBtYXRjaFswXSApICkge1xyXG5cdFx0XHRcdHJldHVybiBudWxsO1xyXG5cdFx0XHR9XHJcblxyXG5cdFx0XHQvLyBBY2NlcHQgcXVvdGVkIGFyZ3VtZW50cyBhcy1pc1xyXG5cdFx0XHRpZiAoIG1hdGNoWzNdICkge1xyXG5cdFx0XHRcdG1hdGNoWzJdID0gbWF0Y2hbNF0gfHwgbWF0Y2hbNV0gfHwgXCJcIjtcclxuXHJcblx0XHRcdC8vIFN0cmlwIGV4Y2VzcyBjaGFyYWN0ZXJzIGZyb20gdW5xdW90ZWQgYXJndW1lbnRzXHJcblx0XHRcdH0gZWxzZSBpZiAoIHVucXVvdGVkICYmIHJwc2V1ZG8udGVzdCggdW5xdW90ZWQgKSAmJlxyXG5cdFx0XHRcdC8vIEdldCBleGNlc3MgZnJvbSB0b2tlbml6ZSAocmVjdXJzaXZlbHkpXHJcblx0XHRcdFx0KGV4Y2VzcyA9IHRva2VuaXplKCB1bnF1b3RlZCwgdHJ1ZSApKSAmJlxyXG5cdFx0XHRcdC8vIGFkdmFuY2UgdG8gdGhlIG5leHQgY2xvc2luZyBwYXJlbnRoZXNpc1xyXG5cdFx0XHRcdChleGNlc3MgPSB1bnF1b3RlZC5pbmRleE9mKCBcIilcIiwgdW5xdW90ZWQubGVuZ3RoIC0gZXhjZXNzICkgLSB1bnF1b3RlZC5sZW5ndGgpICkge1xyXG5cclxuXHRcdFx0XHQvLyBleGNlc3MgaXMgYSBuZWdhdGl2ZSBpbmRleFxyXG5cdFx0XHRcdG1hdGNoWzBdID0gbWF0Y2hbMF0uc2xpY2UoIDAsIGV4Y2VzcyApO1xyXG5cdFx0XHRcdG1hdGNoWzJdID0gdW5xdW90ZWQuc2xpY2UoIDAsIGV4Y2VzcyApO1xyXG5cdFx0XHR9XHJcblxyXG5cdFx0XHQvLyBSZXR1cm4gb25seSBjYXB0dXJlcyBuZWVkZWQgYnkgdGhlIHBzZXVkbyBmaWx0ZXIgbWV0aG9kICh0eXBlIGFuZCBhcmd1bWVudClcclxuXHRcdFx0cmV0dXJuIG1hdGNoLnNsaWNlKCAwLCAzICk7XHJcblx0XHR9XHJcblx0fSxcclxuXHJcblx0ZmlsdGVyOiB7XHJcblxyXG5cdFx0XCJUQUdcIjogZnVuY3Rpb24oIG5vZGVOYW1lU2VsZWN0b3IgKSB7XHJcblx0XHRcdHZhciBub2RlTmFtZSA9IG5vZGVOYW1lU2VsZWN0b3IucmVwbGFjZSggcnVuZXNjYXBlLCBmdW5lc2NhcGUgKS50b0xvd2VyQ2FzZSgpO1xyXG5cdFx0XHRyZXR1cm4gbm9kZU5hbWVTZWxlY3RvciA9PT0gXCIqXCIgP1xyXG5cdFx0XHRcdGZ1bmN0aW9uKCkgeyByZXR1cm4gdHJ1ZTsgfSA6XHJcblx0XHRcdFx0ZnVuY3Rpb24oIGVsZW0gKSB7XHJcblx0XHRcdFx0XHRyZXR1cm4gZWxlbS5ub2RlTmFtZSAmJiBlbGVtLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCkgPT09IG5vZGVOYW1lO1xyXG5cdFx0XHRcdH07XHJcblx0XHR9LFxyXG5cclxuXHRcdFwiQ0xBU1NcIjogZnVuY3Rpb24oIGNsYXNzTmFtZSApIHtcclxuXHRcdFx0dmFyIHBhdHRlcm4gPSBjbGFzc0NhY2hlWyBjbGFzc05hbWUgKyBcIiBcIiBdO1xyXG5cclxuXHRcdFx0cmV0dXJuIHBhdHRlcm4gfHxcclxuXHRcdFx0XHQocGF0dGVybiA9IG5ldyBSZWdFeHAoIFwiKF58XCIgKyB3aGl0ZXNwYWNlICsgXCIpXCIgKyBjbGFzc05hbWUgKyBcIihcIiArIHdoaXRlc3BhY2UgKyBcInwkKVwiICkpICYmXHJcblx0XHRcdFx0Y2xhc3NDYWNoZSggY2xhc3NOYW1lLCBmdW5jdGlvbiggZWxlbSApIHtcclxuXHRcdFx0XHRcdHJldHVybiBwYXR0ZXJuLnRlc3QoIHR5cGVvZiBlbGVtLmNsYXNzTmFtZSA9PT0gXCJzdHJpbmdcIiAmJiBlbGVtLmNsYXNzTmFtZSB8fCB0eXBlb2YgZWxlbS5nZXRBdHRyaWJ1dGUgIT09IFwidW5kZWZpbmVkXCIgJiYgZWxlbS5nZXRBdHRyaWJ1dGUoXCJjbGFzc1wiKSB8fCBcIlwiICk7XHJcblx0XHRcdFx0fSk7XHJcblx0XHR9LFxyXG5cclxuXHRcdFwiQVRUUlwiOiBmdW5jdGlvbiggbmFtZSwgb3BlcmF0b3IsIGNoZWNrICkge1xyXG5cdFx0XHRyZXR1cm4gZnVuY3Rpb24oIGVsZW0gKSB7XHJcblx0XHRcdFx0dmFyIHJlc3VsdCA9IFNpenpsZS5hdHRyKCBlbGVtLCBuYW1lICk7XHJcblxyXG5cdFx0XHRcdGlmICggcmVzdWx0ID09IG51bGwgKSB7XHJcblx0XHRcdFx0XHRyZXR1cm4gb3BlcmF0b3IgPT09IFwiIT1cIjtcclxuXHRcdFx0XHR9XHJcblx0XHRcdFx0aWYgKCAhb3BlcmF0b3IgKSB7XHJcblx0XHRcdFx0XHRyZXR1cm4gdHJ1ZTtcclxuXHRcdFx0XHR9XHJcblxyXG5cdFx0XHRcdHJlc3VsdCArPSBcIlwiO1xyXG5cclxuXHRcdFx0XHRyZXR1cm4gb3BlcmF0b3IgPT09IFwiPVwiID8gcmVzdWx0ID09PSBjaGVjayA6XHJcblx0XHRcdFx0XHRvcGVyYXRvciA9PT0gXCIhPVwiID8gcmVzdWx0ICE9PSBjaGVjayA6XHJcblx0XHRcdFx0XHRvcGVyYXRvciA9PT0gXCJePVwiID8gY2hlY2sgJiYgcmVzdWx0LmluZGV4T2YoIGNoZWNrICkgPT09IDAgOlxyXG5cdFx0XHRcdFx0b3BlcmF0b3IgPT09IFwiKj1cIiA/IGNoZWNrICYmIHJlc3VsdC5pbmRleE9mKCBjaGVjayApID4gLTEgOlxyXG5cdFx0XHRcdFx0b3BlcmF0b3IgPT09IFwiJD1cIiA/IGNoZWNrICYmIHJlc3VsdC5zbGljZSggLWNoZWNrLmxlbmd0aCApID09PSBjaGVjayA6XHJcblx0XHRcdFx0XHRvcGVyYXRvciA9PT0gXCJ+PVwiID8gKCBcIiBcIiArIHJlc3VsdC5yZXBsYWNlKCByd2hpdGVzcGFjZSwgXCIgXCIgKSArIFwiIFwiICkuaW5kZXhPZiggY2hlY2sgKSA+IC0xIDpcclxuXHRcdFx0XHRcdG9wZXJhdG9yID09PSBcInw9XCIgPyByZXN1bHQgPT09IGNoZWNrIHx8IHJlc3VsdC5zbGljZSggMCwgY2hlY2subGVuZ3RoICsgMSApID09PSBjaGVjayArIFwiLVwiIDpcclxuXHRcdFx0XHRcdGZhbHNlO1xyXG5cdFx0XHR9O1xyXG5cdFx0fSxcclxuXHJcblx0XHRcIkNISUxEXCI6IGZ1bmN0aW9uKCB0eXBlLCB3aGF0LCBhcmd1bWVudCwgZmlyc3QsIGxhc3QgKSB7XHJcblx0XHRcdHZhciBzaW1wbGUgPSB0eXBlLnNsaWNlKCAwLCAzICkgIT09IFwibnRoXCIsXHJcblx0XHRcdFx0Zm9yd2FyZCA9IHR5cGUuc2xpY2UoIC00ICkgIT09IFwibGFzdFwiLFxyXG5cdFx0XHRcdG9mVHlwZSA9IHdoYXQgPT09IFwib2YtdHlwZVwiO1xyXG5cclxuXHRcdFx0cmV0dXJuIGZpcnN0ID09PSAxICYmIGxhc3QgPT09IDAgP1xyXG5cclxuXHRcdFx0XHQvLyBTaG9ydGN1dCBmb3IgOm50aC0qKG4pXHJcblx0XHRcdFx0ZnVuY3Rpb24oIGVsZW0gKSB7XHJcblx0XHRcdFx0XHRyZXR1cm4gISFlbGVtLnBhcmVudE5vZGU7XHJcblx0XHRcdFx0fSA6XHJcblxyXG5cdFx0XHRcdGZ1bmN0aW9uKCBlbGVtLCBjb250ZXh0LCB4bWwgKSB7XHJcblx0XHRcdFx0XHR2YXIgY2FjaGUsIHVuaXF1ZUNhY2hlLCBvdXRlckNhY2hlLCBub2RlLCBub2RlSW5kZXgsIHN0YXJ0LFxyXG5cdFx0XHRcdFx0XHRkaXIgPSBzaW1wbGUgIT09IGZvcndhcmQgPyBcIm5leHRTaWJsaW5nXCIgOiBcInByZXZpb3VzU2libGluZ1wiLFxyXG5cdFx0XHRcdFx0XHRwYXJlbnQgPSBlbGVtLnBhcmVudE5vZGUsXHJcblx0XHRcdFx0XHRcdG5hbWUgPSBvZlR5cGUgJiYgZWxlbS5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpLFxyXG5cdFx0XHRcdFx0XHR1c2VDYWNoZSA9ICF4bWwgJiYgIW9mVHlwZSxcclxuXHRcdFx0XHRcdFx0ZGlmZiA9IGZhbHNlO1xyXG5cclxuXHRcdFx0XHRcdGlmICggcGFyZW50ICkge1xyXG5cclxuXHRcdFx0XHRcdFx0Ly8gOihmaXJzdHxsYXN0fG9ubHkpLShjaGlsZHxvZi10eXBlKVxyXG5cdFx0XHRcdFx0XHRpZiAoIHNpbXBsZSApIHtcclxuXHRcdFx0XHRcdFx0XHR3aGlsZSAoIGRpciApIHtcclxuXHRcdFx0XHRcdFx0XHRcdG5vZGUgPSBlbGVtO1xyXG5cdFx0XHRcdFx0XHRcdFx0d2hpbGUgKCAobm9kZSA9IG5vZGVbIGRpciBdKSApIHtcclxuXHRcdFx0XHRcdFx0XHRcdFx0aWYgKCBvZlR5cGUgP1xyXG5cdFx0XHRcdFx0XHRcdFx0XHRcdG5vZGUubm9kZU5hbWUudG9Mb3dlckNhc2UoKSA9PT0gbmFtZSA6XHJcblx0XHRcdFx0XHRcdFx0XHRcdFx0bm9kZS5ub2RlVHlwZSA9PT0gMSApIHtcclxuXHJcblx0XHRcdFx0XHRcdFx0XHRcdFx0cmV0dXJuIGZhbHNlO1xyXG5cdFx0XHRcdFx0XHRcdFx0XHR9XHJcblx0XHRcdFx0XHRcdFx0XHR9XHJcblx0XHRcdFx0XHRcdFx0XHQvLyBSZXZlcnNlIGRpcmVjdGlvbiBmb3IgOm9ubHktKiAoaWYgd2UgaGF2ZW4ndCB5ZXQgZG9uZSBzbylcclxuXHRcdFx0XHRcdFx0XHRcdHN0YXJ0ID0gZGlyID0gdHlwZSA9PT0gXCJvbmx5XCIgJiYgIXN0YXJ0ICYmIFwibmV4dFNpYmxpbmdcIjtcclxuXHRcdFx0XHRcdFx0XHR9XHJcblx0XHRcdFx0XHRcdFx0cmV0dXJuIHRydWU7XHJcblx0XHRcdFx0XHRcdH1cclxuXHJcblx0XHRcdFx0XHRcdHN0YXJ0ID0gWyBmb3J3YXJkID8gcGFyZW50LmZpcnN0Q2hpbGQgOiBwYXJlbnQubGFzdENoaWxkIF07XHJcblxyXG5cdFx0XHRcdFx0XHQvLyBub24teG1sIDpudGgtY2hpbGQoLi4uKSBzdG9yZXMgY2FjaGUgZGF0YSBvbiBgcGFyZW50YFxyXG5cdFx0XHRcdFx0XHRpZiAoIGZvcndhcmQgJiYgdXNlQ2FjaGUgKSB7XHJcblxyXG5cdFx0XHRcdFx0XHRcdC8vIFNlZWsgYGVsZW1gIGZyb20gYSBwcmV2aW91c2x5LWNhY2hlZCBpbmRleFxyXG5cclxuXHRcdFx0XHRcdFx0XHQvLyAuLi5pbiBhIGd6aXAtZnJpZW5kbHkgd2F5XHJcblx0XHRcdFx0XHRcdFx0bm9kZSA9IHBhcmVudDtcclxuXHRcdFx0XHRcdFx0XHRvdXRlckNhY2hlID0gbm9kZVsgZXhwYW5kbyBdIHx8IChub2RlWyBleHBhbmRvIF0gPSB7fSk7XHJcblxyXG5cdFx0XHRcdFx0XHRcdC8vIFN1cHBvcnQ6IElFIDw5IG9ubHlcclxuXHRcdFx0XHRcdFx0XHQvLyBEZWZlbmQgYWdhaW5zdCBjbG9uZWQgYXR0cm9wZXJ0aWVzIChqUXVlcnkgZ2gtMTcwOSlcclxuXHRcdFx0XHRcdFx0XHR1bmlxdWVDYWNoZSA9IG91dGVyQ2FjaGVbIG5vZGUudW5pcXVlSUQgXSB8fFxyXG5cdFx0XHRcdFx0XHRcdFx0KG91dGVyQ2FjaGVbIG5vZGUudW5pcXVlSUQgXSA9IHt9KTtcclxuXHJcblx0XHRcdFx0XHRcdFx0Y2FjaGUgPSB1bmlxdWVDYWNoZVsgdHlwZSBdIHx8IFtdO1xyXG5cdFx0XHRcdFx0XHRcdG5vZGVJbmRleCA9IGNhY2hlWyAwIF0gPT09IGRpcnJ1bnMgJiYgY2FjaGVbIDEgXTtcclxuXHRcdFx0XHRcdFx0XHRkaWZmID0gbm9kZUluZGV4ICYmIGNhY2hlWyAyIF07XHJcblx0XHRcdFx0XHRcdFx0bm9kZSA9IG5vZGVJbmRleCAmJiBwYXJlbnQuY2hpbGROb2Rlc1sgbm9kZUluZGV4IF07XHJcblxyXG5cdFx0XHRcdFx0XHRcdHdoaWxlICggKG5vZGUgPSArK25vZGVJbmRleCAmJiBub2RlICYmIG5vZGVbIGRpciBdIHx8XHJcblxyXG5cdFx0XHRcdFx0XHRcdFx0Ly8gRmFsbGJhY2sgdG8gc2Vla2luZyBgZWxlbWAgZnJvbSB0aGUgc3RhcnRcclxuXHRcdFx0XHRcdFx0XHRcdChkaWZmID0gbm9kZUluZGV4ID0gMCkgfHwgc3RhcnQucG9wKCkpICkge1xyXG5cclxuXHRcdFx0XHRcdFx0XHRcdC8vIFdoZW4gZm91bmQsIGNhY2hlIGluZGV4ZXMgb24gYHBhcmVudGAgYW5kIGJyZWFrXHJcblx0XHRcdFx0XHRcdFx0XHRpZiAoIG5vZGUubm9kZVR5cGUgPT09IDEgJiYgKytkaWZmICYmIG5vZGUgPT09IGVsZW0gKSB7XHJcblx0XHRcdFx0XHRcdFx0XHRcdHVuaXF1ZUNhY2hlWyB0eXBlIF0gPSBbIGRpcnJ1bnMsIG5vZGVJbmRleCwgZGlmZiBdO1xyXG5cdFx0XHRcdFx0XHRcdFx0XHRicmVhaztcclxuXHRcdFx0XHRcdFx0XHRcdH1cclxuXHRcdFx0XHRcdFx0XHR9XHJcblxyXG5cdFx0XHRcdFx0XHR9IGVsc2Uge1xyXG5cdFx0XHRcdFx0XHRcdC8vIFVzZSBwcmV2aW91c2x5LWNhY2hlZCBlbGVtZW50IGluZGV4IGlmIGF2YWlsYWJsZVxyXG5cdFx0XHRcdFx0XHRcdGlmICggdXNlQ2FjaGUgKSB7XHJcblx0XHRcdFx0XHRcdFx0XHQvLyAuLi5pbiBhIGd6aXAtZnJpZW5kbHkgd2F5XHJcblx0XHRcdFx0XHRcdFx0XHRub2RlID0gZWxlbTtcclxuXHRcdFx0XHRcdFx0XHRcdG91dGVyQ2FjaGUgPSBub2RlWyBleHBhbmRvIF0gfHwgKG5vZGVbIGV4cGFuZG8gXSA9IHt9KTtcclxuXHJcblx0XHRcdFx0XHRcdFx0XHQvLyBTdXBwb3J0OiBJRSA8OSBvbmx5XHJcblx0XHRcdFx0XHRcdFx0XHQvLyBEZWZlbmQgYWdhaW5zdCBjbG9uZWQgYXR0cm9wZXJ0aWVzIChqUXVlcnkgZ2gtMTcwOSlcclxuXHRcdFx0XHRcdFx0XHRcdHVuaXF1ZUNhY2hlID0gb3V0ZXJDYWNoZVsgbm9kZS51bmlxdWVJRCBdIHx8XHJcblx0XHRcdFx0XHRcdFx0XHRcdChvdXRlckNhY2hlWyBub2RlLnVuaXF1ZUlEIF0gPSB7fSk7XHJcblxyXG5cdFx0XHRcdFx0XHRcdFx0Y2FjaGUgPSB1bmlxdWVDYWNoZVsgdHlwZSBdIHx8IFtdO1xyXG5cdFx0XHRcdFx0XHRcdFx0bm9kZUluZGV4ID0gY2FjaGVbIDAgXSA9PT0gZGlycnVucyAmJiBjYWNoZVsgMSBdO1xyXG5cdFx0XHRcdFx0XHRcdFx0ZGlmZiA9IG5vZGVJbmRleDtcclxuXHRcdFx0XHRcdFx0XHR9XHJcblxyXG5cdFx0XHRcdFx0XHRcdC8vIHhtbCA6bnRoLWNoaWxkKC4uLilcclxuXHRcdFx0XHRcdFx0XHQvLyBvciA6bnRoLWxhc3QtY2hpbGQoLi4uKSBvciA6bnRoKC1sYXN0KT8tb2YtdHlwZSguLi4pXHJcblx0XHRcdFx0XHRcdFx0aWYgKCBkaWZmID09PSBmYWxzZSApIHtcclxuXHRcdFx0XHRcdFx0XHRcdC8vIFVzZSB0aGUgc2FtZSBsb29wIGFzIGFib3ZlIHRvIHNlZWsgYGVsZW1gIGZyb20gdGhlIHN0YXJ0XHJcblx0XHRcdFx0XHRcdFx0XHR3aGlsZSAoIChub2RlID0gKytub2RlSW5kZXggJiYgbm9kZSAmJiBub2RlWyBkaXIgXSB8fFxyXG5cdFx0XHRcdFx0XHRcdFx0XHQoZGlmZiA9IG5vZGVJbmRleCA9IDApIHx8IHN0YXJ0LnBvcCgpKSApIHtcclxuXHJcblx0XHRcdFx0XHRcdFx0XHRcdGlmICggKCBvZlR5cGUgP1xyXG5cdFx0XHRcdFx0XHRcdFx0XHRcdG5vZGUubm9kZU5hbWUudG9Mb3dlckNhc2UoKSA9PT0gbmFtZSA6XHJcblx0XHRcdFx0XHRcdFx0XHRcdFx0bm9kZS5ub2RlVHlwZSA9PT0gMSApICYmXHJcblx0XHRcdFx0XHRcdFx0XHRcdFx0KytkaWZmICkge1xyXG5cclxuXHRcdFx0XHRcdFx0XHRcdFx0XHQvLyBDYWNoZSB0aGUgaW5kZXggb2YgZWFjaCBlbmNvdW50ZXJlZCBlbGVtZW50XHJcblx0XHRcdFx0XHRcdFx0XHRcdFx0aWYgKCB1c2VDYWNoZSApIHtcclxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdG91dGVyQ2FjaGUgPSBub2RlWyBleHBhbmRvIF0gfHwgKG5vZGVbIGV4cGFuZG8gXSA9IHt9KTtcclxuXHJcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHQvLyBTdXBwb3J0OiBJRSA8OSBvbmx5XHJcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHQvLyBEZWZlbmQgYWdhaW5zdCBjbG9uZWQgYXR0cm9wZXJ0aWVzIChqUXVlcnkgZ2gtMTcwOSlcclxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdHVuaXF1ZUNhY2hlID0gb3V0ZXJDYWNoZVsgbm9kZS51bmlxdWVJRCBdIHx8XHJcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdChvdXRlckNhY2hlWyBub2RlLnVuaXF1ZUlEIF0gPSB7fSk7XHJcblxyXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0dW5pcXVlQ2FjaGVbIHR5cGUgXSA9IFsgZGlycnVucywgZGlmZiBdO1xyXG5cdFx0XHRcdFx0XHRcdFx0XHRcdH1cclxuXHJcblx0XHRcdFx0XHRcdFx0XHRcdFx0aWYgKCBub2RlID09PSBlbGVtICkge1xyXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0YnJlYWs7XHJcblx0XHRcdFx0XHRcdFx0XHRcdFx0fVxyXG5cdFx0XHRcdFx0XHRcdFx0XHR9XHJcblx0XHRcdFx0XHRcdFx0XHR9XHJcblx0XHRcdFx0XHRcdFx0fVxyXG5cdFx0XHRcdFx0XHR9XHJcblxyXG5cdFx0XHRcdFx0XHQvLyBJbmNvcnBvcmF0ZSB0aGUgb2Zmc2V0LCB0aGVuIGNoZWNrIGFnYWluc3QgY3ljbGUgc2l6ZVxyXG5cdFx0XHRcdFx0XHRkaWZmIC09IGxhc3Q7XHJcblx0XHRcdFx0XHRcdHJldHVybiBkaWZmID09PSBmaXJzdCB8fCAoIGRpZmYgJSBmaXJzdCA9PT0gMCAmJiBkaWZmIC8gZmlyc3QgPj0gMCApO1xyXG5cdFx0XHRcdFx0fVxyXG5cdFx0XHRcdH07XHJcblx0XHR9LFxyXG5cclxuXHRcdFwiUFNFVURPXCI6IGZ1bmN0aW9uKCBwc2V1ZG8sIGFyZ3VtZW50ICkge1xyXG5cdFx0XHQvLyBwc2V1ZG8tY2xhc3MgbmFtZXMgYXJlIGNhc2UtaW5zZW5zaXRpdmVcclxuXHRcdFx0Ly8gaHR0cDovL3d3dy53My5vcmcvVFIvc2VsZWN0b3JzLyNwc2V1ZG8tY2xhc3Nlc1xyXG5cdFx0XHQvLyBQcmlvcml0aXplIGJ5IGNhc2Ugc2Vuc2l0aXZpdHkgaW4gY2FzZSBjdXN0b20gcHNldWRvcyBhcmUgYWRkZWQgd2l0aCB1cHBlcmNhc2UgbGV0dGVyc1xyXG5cdFx0XHQvLyBSZW1lbWJlciB0aGF0IHNldEZpbHRlcnMgaW5oZXJpdHMgZnJvbSBwc2V1ZG9zXHJcblx0XHRcdHZhciBhcmdzLFxyXG5cdFx0XHRcdGZuID0gRXhwci5wc2V1ZG9zWyBwc2V1ZG8gXSB8fCBFeHByLnNldEZpbHRlcnNbIHBzZXVkby50b0xvd2VyQ2FzZSgpIF0gfHxcclxuXHRcdFx0XHRcdFNpenpsZS5lcnJvciggXCJ1bnN1cHBvcnRlZCBwc2V1ZG86IFwiICsgcHNldWRvICk7XHJcblxyXG5cdFx0XHQvLyBUaGUgdXNlciBtYXkgdXNlIGNyZWF0ZVBzZXVkbyB0byBpbmRpY2F0ZSB0aGF0XHJcblx0XHRcdC8vIGFyZ3VtZW50cyBhcmUgbmVlZGVkIHRvIGNyZWF0ZSB0aGUgZmlsdGVyIGZ1bmN0aW9uXHJcblx0XHRcdC8vIGp1c3QgYXMgU2l6emxlIGRvZXNcclxuXHRcdFx0aWYgKCBmblsgZXhwYW5kbyBdICkge1xyXG5cdFx0XHRcdHJldHVybiBmbiggYXJndW1lbnQgKTtcclxuXHRcdFx0fVxyXG5cclxuXHRcdFx0Ly8gQnV0IG1haW50YWluIHN1cHBvcnQgZm9yIG9sZCBzaWduYXR1cmVzXHJcblx0XHRcdGlmICggZm4ubGVuZ3RoID4gMSApIHtcclxuXHRcdFx0XHRhcmdzID0gWyBwc2V1ZG8sIHBzZXVkbywgXCJcIiwgYXJndW1lbnQgXTtcclxuXHRcdFx0XHRyZXR1cm4gRXhwci5zZXRGaWx0ZXJzLmhhc093blByb3BlcnR5KCBwc2V1ZG8udG9Mb3dlckNhc2UoKSApID9cclxuXHRcdFx0XHRcdG1hcmtGdW5jdGlvbihmdW5jdGlvbiggc2VlZCwgbWF0Y2hlcyApIHtcclxuXHRcdFx0XHRcdFx0dmFyIGlkeCxcclxuXHRcdFx0XHRcdFx0XHRtYXRjaGVkID0gZm4oIHNlZWQsIGFyZ3VtZW50ICksXHJcblx0XHRcdFx0XHRcdFx0aSA9IG1hdGNoZWQubGVuZ3RoO1xyXG5cdFx0XHRcdFx0XHR3aGlsZSAoIGktLSApIHtcclxuXHRcdFx0XHRcdFx0XHRpZHggPSBpbmRleE9mKCBzZWVkLCBtYXRjaGVkW2ldICk7XHJcblx0XHRcdFx0XHRcdFx0c2VlZFsgaWR4IF0gPSAhKCBtYXRjaGVzWyBpZHggXSA9IG1hdGNoZWRbaV0gKTtcclxuXHRcdFx0XHRcdFx0fVxyXG5cdFx0XHRcdFx0fSkgOlxyXG5cdFx0XHRcdFx0ZnVuY3Rpb24oIGVsZW0gKSB7XHJcblx0XHRcdFx0XHRcdHJldHVybiBmbiggZWxlbSwgMCwgYXJncyApO1xyXG5cdFx0XHRcdFx0fTtcclxuXHRcdFx0fVxyXG5cclxuXHRcdFx0cmV0dXJuIGZuO1xyXG5cdFx0fVxyXG5cdH0sXHJcblxyXG5cdHBzZXVkb3M6IHtcclxuXHRcdC8vIFBvdGVudGlhbGx5IGNvbXBsZXggcHNldWRvc1xyXG5cdFx0XCJub3RcIjogbWFya0Z1bmN0aW9uKGZ1bmN0aW9uKCBzZWxlY3RvciApIHtcclxuXHRcdFx0Ly8gVHJpbSB0aGUgc2VsZWN0b3IgcGFzc2VkIHRvIGNvbXBpbGVcclxuXHRcdFx0Ly8gdG8gYXZvaWQgdHJlYXRpbmcgbGVhZGluZyBhbmQgdHJhaWxpbmdcclxuXHRcdFx0Ly8gc3BhY2VzIGFzIGNvbWJpbmF0b3JzXHJcblx0XHRcdHZhciBpbnB1dCA9IFtdLFxyXG5cdFx0XHRcdHJlc3VsdHMgPSBbXSxcclxuXHRcdFx0XHRtYXRjaGVyID0gY29tcGlsZSggc2VsZWN0b3IucmVwbGFjZSggcnRyaW0sIFwiJDFcIiApICk7XHJcblxyXG5cdFx0XHRyZXR1cm4gbWF0Y2hlclsgZXhwYW5kbyBdID9cclxuXHRcdFx0XHRtYXJrRnVuY3Rpb24oZnVuY3Rpb24oIHNlZWQsIG1hdGNoZXMsIGNvbnRleHQsIHhtbCApIHtcclxuXHRcdFx0XHRcdHZhciBlbGVtLFxyXG5cdFx0XHRcdFx0XHR1bm1hdGNoZWQgPSBtYXRjaGVyKCBzZWVkLCBudWxsLCB4bWwsIFtdICksXHJcblx0XHRcdFx0XHRcdGkgPSBzZWVkLmxlbmd0aDtcclxuXHJcblx0XHRcdFx0XHQvLyBNYXRjaCBlbGVtZW50cyB1bm1hdGNoZWQgYnkgYG1hdGNoZXJgXHJcblx0XHRcdFx0XHR3aGlsZSAoIGktLSApIHtcclxuXHRcdFx0XHRcdFx0aWYgKCAoZWxlbSA9IHVubWF0Y2hlZFtpXSkgKSB7XHJcblx0XHRcdFx0XHRcdFx0c2VlZFtpXSA9ICEobWF0Y2hlc1tpXSA9IGVsZW0pO1xyXG5cdFx0XHRcdFx0XHR9XHJcblx0XHRcdFx0XHR9XHJcblx0XHRcdFx0fSkgOlxyXG5cdFx0XHRcdGZ1bmN0aW9uKCBlbGVtLCBjb250ZXh0LCB4bWwgKSB7XHJcblx0XHRcdFx0XHRpbnB1dFswXSA9IGVsZW07XHJcblx0XHRcdFx0XHRtYXRjaGVyKCBpbnB1dCwgbnVsbCwgeG1sLCByZXN1bHRzICk7XHJcblx0XHRcdFx0XHQvLyBEb24ndCBrZWVwIHRoZSBlbGVtZW50IChpc3N1ZSAjMjk5KVxyXG5cdFx0XHRcdFx0aW5wdXRbMF0gPSBudWxsO1xyXG5cdFx0XHRcdFx0cmV0dXJuICFyZXN1bHRzLnBvcCgpO1xyXG5cdFx0XHRcdH07XHJcblx0XHR9KSxcclxuXHJcblx0XHRcImhhc1wiOiBtYXJrRnVuY3Rpb24oZnVuY3Rpb24oIHNlbGVjdG9yICkge1xyXG5cdFx0XHRyZXR1cm4gZnVuY3Rpb24oIGVsZW0gKSB7XHJcblx0XHRcdFx0cmV0dXJuIFNpenpsZSggc2VsZWN0b3IsIGVsZW0gKS5sZW5ndGggPiAwO1xyXG5cdFx0XHR9O1xyXG5cdFx0fSksXHJcblxyXG5cdFx0XCJjb250YWluc1wiOiBtYXJrRnVuY3Rpb24oZnVuY3Rpb24oIHRleHQgKSB7XHJcblx0XHRcdHRleHQgPSB0ZXh0LnJlcGxhY2UoIHJ1bmVzY2FwZSwgZnVuZXNjYXBlICk7XHJcblx0XHRcdHJldHVybiBmdW5jdGlvbiggZWxlbSApIHtcclxuXHRcdFx0XHRyZXR1cm4gKCBlbGVtLnRleHRDb250ZW50IHx8IGVsZW0uaW5uZXJUZXh0IHx8IGdldFRleHQoIGVsZW0gKSApLmluZGV4T2YoIHRleHQgKSA+IC0xO1xyXG5cdFx0XHR9O1xyXG5cdFx0fSksXHJcblxyXG5cdFx0Ly8gXCJXaGV0aGVyIGFuIGVsZW1lbnQgaXMgcmVwcmVzZW50ZWQgYnkgYSA6bGFuZygpIHNlbGVjdG9yXHJcblx0XHQvLyBpcyBiYXNlZCBzb2xlbHkgb24gdGhlIGVsZW1lbnQncyBsYW5ndWFnZSB2YWx1ZVxyXG5cdFx0Ly8gYmVpbmcgZXF1YWwgdG8gdGhlIGlkZW50aWZpZXIgQyxcclxuXHRcdC8vIG9yIGJlZ2lubmluZyB3aXRoIHRoZSBpZGVudGlmaWVyIEMgaW1tZWRpYXRlbHkgZm9sbG93ZWQgYnkgXCItXCIuXHJcblx0XHQvLyBUaGUgbWF0Y2hpbmcgb2YgQyBhZ2FpbnN0IHRoZSBlbGVtZW50J3MgbGFuZ3VhZ2UgdmFsdWUgaXMgcGVyZm9ybWVkIGNhc2UtaW5zZW5zaXRpdmVseS5cclxuXHRcdC8vIFRoZSBpZGVudGlmaWVyIEMgZG9lcyBub3QgaGF2ZSB0byBiZSBhIHZhbGlkIGxhbmd1YWdlIG5hbWUuXCJcclxuXHRcdC8vIGh0dHA6Ly93d3cudzMub3JnL1RSL3NlbGVjdG9ycy8jbGFuZy1wc2V1ZG9cclxuXHRcdFwibGFuZ1wiOiBtYXJrRnVuY3Rpb24oIGZ1bmN0aW9uKCBsYW5nICkge1xyXG5cdFx0XHQvLyBsYW5nIHZhbHVlIG11c3QgYmUgYSB2YWxpZCBpZGVudGlmaWVyXHJcblx0XHRcdGlmICggIXJpZGVudGlmaWVyLnRlc3QobGFuZyB8fCBcIlwiKSApIHtcclxuXHRcdFx0XHRTaXp6bGUuZXJyb3IoIFwidW5zdXBwb3J0ZWQgbGFuZzogXCIgKyBsYW5nICk7XHJcblx0XHRcdH1cclxuXHRcdFx0bGFuZyA9IGxhbmcucmVwbGFjZSggcnVuZXNjYXBlLCBmdW5lc2NhcGUgKS50b0xvd2VyQ2FzZSgpO1xyXG5cdFx0XHRyZXR1cm4gZnVuY3Rpb24oIGVsZW0gKSB7XHJcblx0XHRcdFx0dmFyIGVsZW1MYW5nO1xyXG5cdFx0XHRcdGRvIHtcclxuXHRcdFx0XHRcdGlmICggKGVsZW1MYW5nID0gZG9jdW1lbnRJc0hUTUwgP1xyXG5cdFx0XHRcdFx0XHRlbGVtLmxhbmcgOlxyXG5cdFx0XHRcdFx0XHRlbGVtLmdldEF0dHJpYnV0ZShcInhtbDpsYW5nXCIpIHx8IGVsZW0uZ2V0QXR0cmlidXRlKFwibGFuZ1wiKSkgKSB7XHJcblxyXG5cdFx0XHRcdFx0XHRlbGVtTGFuZyA9IGVsZW1MYW5nLnRvTG93ZXJDYXNlKCk7XHJcblx0XHRcdFx0XHRcdHJldHVybiBlbGVtTGFuZyA9PT0gbGFuZyB8fCBlbGVtTGFuZy5pbmRleE9mKCBsYW5nICsgXCItXCIgKSA9PT0gMDtcclxuXHRcdFx0XHRcdH1cclxuXHRcdFx0XHR9IHdoaWxlICggKGVsZW0gPSBlbGVtLnBhcmVudE5vZGUpICYmIGVsZW0ubm9kZVR5cGUgPT09IDEgKTtcclxuXHRcdFx0XHRyZXR1cm4gZmFsc2U7XHJcblx0XHRcdH07XHJcblx0XHR9KSxcclxuXHJcblx0XHQvLyBNaXNjZWxsYW5lb3VzXHJcblx0XHRcInRhcmdldFwiOiBmdW5jdGlvbiggZWxlbSApIHtcclxuXHRcdFx0dmFyIGhhc2ggPSB3aW5kb3cubG9jYXRpb24gJiYgd2luZG93LmxvY2F0aW9uLmhhc2g7XHJcblx0XHRcdHJldHVybiBoYXNoICYmIGhhc2guc2xpY2UoIDEgKSA9PT0gZWxlbS5pZDtcclxuXHRcdH0sXHJcblxyXG5cdFx0XCJyb290XCI6IGZ1bmN0aW9uKCBlbGVtICkge1xyXG5cdFx0XHRyZXR1cm4gZWxlbSA9PT0gZG9jRWxlbTtcclxuXHRcdH0sXHJcblxyXG5cdFx0XCJmb2N1c1wiOiBmdW5jdGlvbiggZWxlbSApIHtcclxuXHRcdFx0cmV0dXJuIGVsZW0gPT09IGRvY3VtZW50LmFjdGl2ZUVsZW1lbnQgJiYgKCFkb2N1bWVudC5oYXNGb2N1cyB8fCBkb2N1bWVudC5oYXNGb2N1cygpKSAmJiAhIShlbGVtLnR5cGUgfHwgZWxlbS5ocmVmIHx8IH5lbGVtLnRhYkluZGV4KTtcclxuXHRcdH0sXHJcblxyXG5cdFx0Ly8gQm9vbGVhbiBwcm9wZXJ0aWVzXHJcblx0XHRcImVuYWJsZWRcIjogY3JlYXRlRGlzYWJsZWRQc2V1ZG8oIGZhbHNlICksXHJcblx0XHRcImRpc2FibGVkXCI6IGNyZWF0ZURpc2FibGVkUHNldWRvKCB0cnVlICksXHJcblxyXG5cdFx0XCJjaGVja2VkXCI6IGZ1bmN0aW9uKCBlbGVtICkge1xyXG5cdFx0XHQvLyBJbiBDU1MzLCA6Y2hlY2tlZCBzaG91bGQgcmV0dXJuIGJvdGggY2hlY2tlZCBhbmQgc2VsZWN0ZWQgZWxlbWVudHNcclxuXHRcdFx0Ly8gaHR0cDovL3d3dy53My5vcmcvVFIvMjAxMS9SRUMtY3NzMy1zZWxlY3RvcnMtMjAxMTA5MjkvI2NoZWNrZWRcclxuXHRcdFx0dmFyIG5vZGVOYW1lID0gZWxlbS5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpO1xyXG5cdFx0XHRyZXR1cm4gKG5vZGVOYW1lID09PSBcImlucHV0XCIgJiYgISFlbGVtLmNoZWNrZWQpIHx8IChub2RlTmFtZSA9PT0gXCJvcHRpb25cIiAmJiAhIWVsZW0uc2VsZWN0ZWQpO1xyXG5cdFx0fSxcclxuXHJcblx0XHRcInNlbGVjdGVkXCI6IGZ1bmN0aW9uKCBlbGVtICkge1xyXG5cdFx0XHQvLyBBY2Nlc3NpbmcgdGhpcyBwcm9wZXJ0eSBtYWtlcyBzZWxlY3RlZC1ieS1kZWZhdWx0XHJcblx0XHRcdC8vIG9wdGlvbnMgaW4gU2FmYXJpIHdvcmsgcHJvcGVybHlcclxuXHRcdFx0aWYgKCBlbGVtLnBhcmVudE5vZGUgKSB7XHJcblx0XHRcdFx0ZWxlbS5wYXJlbnROb2RlLnNlbGVjdGVkSW5kZXg7XHJcblx0XHRcdH1cclxuXHJcblx0XHRcdHJldHVybiBlbGVtLnNlbGVjdGVkID09PSB0cnVlO1xyXG5cdFx0fSxcclxuXHJcblx0XHQvLyBDb250ZW50c1xyXG5cdFx0XCJlbXB0eVwiOiBmdW5jdGlvbiggZWxlbSApIHtcclxuXHRcdFx0Ly8gaHR0cDovL3d3dy53My5vcmcvVFIvc2VsZWN0b3JzLyNlbXB0eS1wc2V1ZG9cclxuXHRcdFx0Ly8gOmVtcHR5IGlzIG5lZ2F0ZWQgYnkgZWxlbWVudCAoMSkgb3IgY29udGVudCBub2RlcyAodGV4dDogMzsgY2RhdGE6IDQ7IGVudGl0eSByZWY6IDUpLFxyXG5cdFx0XHQvLyAgIGJ1dCBub3QgYnkgb3RoZXJzIChjb21tZW50OiA4OyBwcm9jZXNzaW5nIGluc3RydWN0aW9uOiA3OyBldGMuKVxyXG5cdFx0XHQvLyBub2RlVHlwZSA8IDYgd29ya3MgYmVjYXVzZSBhdHRyaWJ1dGVzICgyKSBkbyBub3QgYXBwZWFyIGFzIGNoaWxkcmVuXHJcblx0XHRcdGZvciAoIGVsZW0gPSBlbGVtLmZpcnN0Q2hpbGQ7IGVsZW07IGVsZW0gPSBlbGVtLm5leHRTaWJsaW5nICkge1xyXG5cdFx0XHRcdGlmICggZWxlbS5ub2RlVHlwZSA8IDYgKSB7XHJcblx0XHRcdFx0XHRyZXR1cm4gZmFsc2U7XHJcblx0XHRcdFx0fVxyXG5cdFx0XHR9XHJcblx0XHRcdHJldHVybiB0cnVlO1xyXG5cdFx0fSxcclxuXHJcblx0XHRcInBhcmVudFwiOiBmdW5jdGlvbiggZWxlbSApIHtcclxuXHRcdFx0cmV0dXJuICFFeHByLnBzZXVkb3NbXCJlbXB0eVwiXSggZWxlbSApO1xyXG5cdFx0fSxcclxuXHJcblx0XHQvLyBFbGVtZW50L2lucHV0IHR5cGVzXHJcblx0XHRcImhlYWRlclwiOiBmdW5jdGlvbiggZWxlbSApIHtcclxuXHRcdFx0cmV0dXJuIHJoZWFkZXIudGVzdCggZWxlbS5ub2RlTmFtZSApO1xyXG5cdFx0fSxcclxuXHJcblx0XHRcImlucHV0XCI6IGZ1bmN0aW9uKCBlbGVtICkge1xyXG5cdFx0XHRyZXR1cm4gcmlucHV0cy50ZXN0KCBlbGVtLm5vZGVOYW1lICk7XHJcblx0XHR9LFxyXG5cclxuXHRcdFwiYnV0dG9uXCI6IGZ1bmN0aW9uKCBlbGVtICkge1xyXG5cdFx0XHR2YXIgbmFtZSA9IGVsZW0ubm9kZU5hbWUudG9Mb3dlckNhc2UoKTtcclxuXHRcdFx0cmV0dXJuIG5hbWUgPT09IFwiaW5wdXRcIiAmJiBlbGVtLnR5cGUgPT09IFwiYnV0dG9uXCIgfHwgbmFtZSA9PT0gXCJidXR0b25cIjtcclxuXHRcdH0sXHJcblxyXG5cdFx0XCJ0ZXh0XCI6IGZ1bmN0aW9uKCBlbGVtICkge1xyXG5cdFx0XHR2YXIgYXR0cjtcclxuXHRcdFx0cmV0dXJuIGVsZW0ubm9kZU5hbWUudG9Mb3dlckNhc2UoKSA9PT0gXCJpbnB1dFwiICYmXHJcblx0XHRcdFx0ZWxlbS50eXBlID09PSBcInRleHRcIiAmJlxyXG5cclxuXHRcdFx0XHQvLyBTdXBwb3J0OiBJRTw4XHJcblx0XHRcdFx0Ly8gTmV3IEhUTUw1IGF0dHJpYnV0ZSB2YWx1ZXMgKGUuZy4sIFwic2VhcmNoXCIpIGFwcGVhciB3aXRoIGVsZW0udHlwZSA9PT0gXCJ0ZXh0XCJcclxuXHRcdFx0XHQoIChhdHRyID0gZWxlbS5nZXRBdHRyaWJ1dGUoXCJ0eXBlXCIpKSA9PSBudWxsIHx8IGF0dHIudG9Mb3dlckNhc2UoKSA9PT0gXCJ0ZXh0XCIgKTtcclxuXHRcdH0sXHJcblxyXG5cdFx0Ly8gUG9zaXRpb24taW4tY29sbGVjdGlvblxyXG5cdFx0XCJmaXJzdFwiOiBjcmVhdGVQb3NpdGlvbmFsUHNldWRvKGZ1bmN0aW9uKCkge1xyXG5cdFx0XHRyZXR1cm4gWyAwIF07XHJcblx0XHR9KSxcclxuXHJcblx0XHRcImxhc3RcIjogY3JlYXRlUG9zaXRpb25hbFBzZXVkbyhmdW5jdGlvbiggbWF0Y2hJbmRleGVzLCBsZW5ndGggKSB7XHJcblx0XHRcdHJldHVybiBbIGxlbmd0aCAtIDEgXTtcclxuXHRcdH0pLFxyXG5cclxuXHRcdFwiZXFcIjogY3JlYXRlUG9zaXRpb25hbFBzZXVkbyhmdW5jdGlvbiggbWF0Y2hJbmRleGVzLCBsZW5ndGgsIGFyZ3VtZW50ICkge1xyXG5cdFx0XHRyZXR1cm4gWyBhcmd1bWVudCA8IDAgPyBhcmd1bWVudCArIGxlbmd0aCA6IGFyZ3VtZW50IF07XHJcblx0XHR9KSxcclxuXHJcblx0XHRcImV2ZW5cIjogY3JlYXRlUG9zaXRpb25hbFBzZXVkbyhmdW5jdGlvbiggbWF0Y2hJbmRleGVzLCBsZW5ndGggKSB7XHJcblx0XHRcdHZhciBpID0gMDtcclxuXHRcdFx0Zm9yICggOyBpIDwgbGVuZ3RoOyBpICs9IDIgKSB7XHJcblx0XHRcdFx0bWF0Y2hJbmRleGVzLnB1c2goIGkgKTtcclxuXHRcdFx0fVxyXG5cdFx0XHRyZXR1cm4gbWF0Y2hJbmRleGVzO1xyXG5cdFx0fSksXHJcblxyXG5cdFx0XCJvZGRcIjogY3JlYXRlUG9zaXRpb25hbFBzZXVkbyhmdW5jdGlvbiggbWF0Y2hJbmRleGVzLCBsZW5ndGggKSB7XHJcblx0XHRcdHZhciBpID0gMTtcclxuXHRcdFx0Zm9yICggOyBpIDwgbGVuZ3RoOyBpICs9IDIgKSB7XHJcblx0XHRcdFx0bWF0Y2hJbmRleGVzLnB1c2goIGkgKTtcclxuXHRcdFx0fVxyXG5cdFx0XHRyZXR1cm4gbWF0Y2hJbmRleGVzO1xyXG5cdFx0fSksXHJcblxyXG5cdFx0XCJsdFwiOiBjcmVhdGVQb3NpdGlvbmFsUHNldWRvKGZ1bmN0aW9uKCBtYXRjaEluZGV4ZXMsIGxlbmd0aCwgYXJndW1lbnQgKSB7XHJcblx0XHRcdHZhciBpID0gYXJndW1lbnQgPCAwID8gYXJndW1lbnQgKyBsZW5ndGggOiBhcmd1bWVudDtcclxuXHRcdFx0Zm9yICggOyAtLWkgPj0gMDsgKSB7XHJcblx0XHRcdFx0bWF0Y2hJbmRleGVzLnB1c2goIGkgKTtcclxuXHRcdFx0fVxyXG5cdFx0XHRyZXR1cm4gbWF0Y2hJbmRleGVzO1xyXG5cdFx0fSksXHJcblxyXG5cdFx0XCJndFwiOiBjcmVhdGVQb3NpdGlvbmFsUHNldWRvKGZ1bmN0aW9uKCBtYXRjaEluZGV4ZXMsIGxlbmd0aCwgYXJndW1lbnQgKSB7XHJcblx0XHRcdHZhciBpID0gYXJndW1lbnQgPCAwID8gYXJndW1lbnQgKyBsZW5ndGggOiBhcmd1bWVudDtcclxuXHRcdFx0Zm9yICggOyArK2kgPCBsZW5ndGg7ICkge1xyXG5cdFx0XHRcdG1hdGNoSW5kZXhlcy5wdXNoKCBpICk7XHJcblx0XHRcdH1cclxuXHRcdFx0cmV0dXJuIG1hdGNoSW5kZXhlcztcclxuXHRcdH0pXHJcblx0fVxyXG59O1xyXG5cclxuRXhwci5wc2V1ZG9zW1wibnRoXCJdID0gRXhwci5wc2V1ZG9zW1wiZXFcIl07XHJcblxyXG4vLyBBZGQgYnV0dG9uL2lucHV0IHR5cGUgcHNldWRvc1xyXG5mb3IgKCBpIGluIHsgcmFkaW86IHRydWUsIGNoZWNrYm94OiB0cnVlLCBmaWxlOiB0cnVlLCBwYXNzd29yZDogdHJ1ZSwgaW1hZ2U6IHRydWUgfSApIHtcclxuXHRFeHByLnBzZXVkb3NbIGkgXSA9IGNyZWF0ZUlucHV0UHNldWRvKCBpICk7XHJcbn1cclxuZm9yICggaSBpbiB7IHN1Ym1pdDogdHJ1ZSwgcmVzZXQ6IHRydWUgfSApIHtcclxuXHRFeHByLnBzZXVkb3NbIGkgXSA9IGNyZWF0ZUJ1dHRvblBzZXVkbyggaSApO1xyXG59XHJcblxyXG4vLyBFYXN5IEFQSSBmb3IgY3JlYXRpbmcgbmV3IHNldEZpbHRlcnNcclxuZnVuY3Rpb24gc2V0RmlsdGVycygpIHt9XHJcbnNldEZpbHRlcnMucHJvdG90eXBlID0gRXhwci5maWx0ZXJzID0gRXhwci5wc2V1ZG9zO1xyXG5FeHByLnNldEZpbHRlcnMgPSBuZXcgc2V0RmlsdGVycygpO1xyXG5cclxudG9rZW5pemUgPSBTaXp6bGUudG9rZW5pemUgPSBmdW5jdGlvbiggc2VsZWN0b3IsIHBhcnNlT25seSApIHtcclxuXHR2YXIgbWF0Y2hlZCwgbWF0Y2gsIHRva2VucywgdHlwZSxcclxuXHRcdHNvRmFyLCBncm91cHMsIHByZUZpbHRlcnMsXHJcblx0XHRjYWNoZWQgPSB0b2tlbkNhY2hlWyBzZWxlY3RvciArIFwiIFwiIF07XHJcblxyXG5cdGlmICggY2FjaGVkICkge1xyXG5cdFx0cmV0dXJuIHBhcnNlT25seSA/IDAgOiBjYWNoZWQuc2xpY2UoIDAgKTtcclxuXHR9XHJcblxyXG5cdHNvRmFyID0gc2VsZWN0b3I7XHJcblx0Z3JvdXBzID0gW107XHJcblx0cHJlRmlsdGVycyA9IEV4cHIucHJlRmlsdGVyO1xyXG5cclxuXHR3aGlsZSAoIHNvRmFyICkge1xyXG5cclxuXHRcdC8vIENvbW1hIGFuZCBmaXJzdCBydW5cclxuXHRcdGlmICggIW1hdGNoZWQgfHwgKG1hdGNoID0gcmNvbW1hLmV4ZWMoIHNvRmFyICkpICkge1xyXG5cdFx0XHRpZiAoIG1hdGNoICkge1xyXG5cdFx0XHRcdC8vIERvbid0IGNvbnN1bWUgdHJhaWxpbmcgY29tbWFzIGFzIHZhbGlkXHJcblx0XHRcdFx0c29GYXIgPSBzb0Zhci5zbGljZSggbWF0Y2hbMF0ubGVuZ3RoICkgfHwgc29GYXI7XHJcblx0XHRcdH1cclxuXHRcdFx0Z3JvdXBzLnB1c2goICh0b2tlbnMgPSBbXSkgKTtcclxuXHRcdH1cclxuXHJcblx0XHRtYXRjaGVkID0gZmFsc2U7XHJcblxyXG5cdFx0Ly8gQ29tYmluYXRvcnNcclxuXHRcdGlmICggKG1hdGNoID0gcmNvbWJpbmF0b3JzLmV4ZWMoIHNvRmFyICkpICkge1xyXG5cdFx0XHRtYXRjaGVkID0gbWF0Y2guc2hpZnQoKTtcclxuXHRcdFx0dG9rZW5zLnB1c2goe1xyXG5cdFx0XHRcdHZhbHVlOiBtYXRjaGVkLFxyXG5cdFx0XHRcdC8vIENhc3QgZGVzY2VuZGFudCBjb21iaW5hdG9ycyB0byBzcGFjZVxyXG5cdFx0XHRcdHR5cGU6IG1hdGNoWzBdLnJlcGxhY2UoIHJ0cmltLCBcIiBcIiApXHJcblx0XHRcdH0pO1xyXG5cdFx0XHRzb0ZhciA9IHNvRmFyLnNsaWNlKCBtYXRjaGVkLmxlbmd0aCApO1xyXG5cdFx0fVxyXG5cclxuXHRcdC8vIEZpbHRlcnNcclxuXHRcdGZvciAoIHR5cGUgaW4gRXhwci5maWx0ZXIgKSB7XHJcblx0XHRcdGlmICggKG1hdGNoID0gbWF0Y2hFeHByWyB0eXBlIF0uZXhlYyggc29GYXIgKSkgJiYgKCFwcmVGaWx0ZXJzWyB0eXBlIF0gfHxcclxuXHRcdFx0XHQobWF0Y2ggPSBwcmVGaWx0ZXJzWyB0eXBlIF0oIG1hdGNoICkpKSApIHtcclxuXHRcdFx0XHRtYXRjaGVkID0gbWF0Y2guc2hpZnQoKTtcclxuXHRcdFx0XHR0b2tlbnMucHVzaCh7XHJcblx0XHRcdFx0XHR2YWx1ZTogbWF0Y2hlZCxcclxuXHRcdFx0XHRcdHR5cGU6IHR5cGUsXHJcblx0XHRcdFx0XHRtYXRjaGVzOiBtYXRjaFxyXG5cdFx0XHRcdH0pO1xyXG5cdFx0XHRcdHNvRmFyID0gc29GYXIuc2xpY2UoIG1hdGNoZWQubGVuZ3RoICk7XHJcblx0XHRcdH1cclxuXHRcdH1cclxuXHJcblx0XHRpZiAoICFtYXRjaGVkICkge1xyXG5cdFx0XHRicmVhaztcclxuXHRcdH1cclxuXHR9XHJcblxyXG5cdC8vIFJldHVybiB0aGUgbGVuZ3RoIG9mIHRoZSBpbnZhbGlkIGV4Y2Vzc1xyXG5cdC8vIGlmIHdlJ3JlIGp1c3QgcGFyc2luZ1xyXG5cdC8vIE90aGVyd2lzZSwgdGhyb3cgYW4gZXJyb3Igb3IgcmV0dXJuIHRva2Vuc1xyXG5cdHJldHVybiBwYXJzZU9ubHkgP1xyXG5cdFx0c29GYXIubGVuZ3RoIDpcclxuXHRcdHNvRmFyID9cclxuXHRcdFx0U2l6emxlLmVycm9yKCBzZWxlY3RvciApIDpcclxuXHRcdFx0Ly8gQ2FjaGUgdGhlIHRva2Vuc1xyXG5cdFx0XHR0b2tlbkNhY2hlKCBzZWxlY3RvciwgZ3JvdXBzICkuc2xpY2UoIDAgKTtcclxufTtcclxuXHJcbmZ1bmN0aW9uIHRvU2VsZWN0b3IoIHRva2VucyApIHtcclxuXHR2YXIgaSA9IDAsXHJcblx0XHRsZW4gPSB0b2tlbnMubGVuZ3RoLFxyXG5cdFx0c2VsZWN0b3IgPSBcIlwiO1xyXG5cdGZvciAoIDsgaSA8IGxlbjsgaSsrICkge1xyXG5cdFx0c2VsZWN0b3IgKz0gdG9rZW5zW2ldLnZhbHVlO1xyXG5cdH1cclxuXHRyZXR1cm4gc2VsZWN0b3I7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIGFkZENvbWJpbmF0b3IoIG1hdGNoZXIsIGNvbWJpbmF0b3IsIGJhc2UgKSB7XHJcblx0dmFyIGRpciA9IGNvbWJpbmF0b3IuZGlyLFxyXG5cdFx0c2tpcCA9IGNvbWJpbmF0b3IubmV4dCxcclxuXHRcdGtleSA9IHNraXAgfHwgZGlyLFxyXG5cdFx0Y2hlY2tOb25FbGVtZW50cyA9IGJhc2UgJiYga2V5ID09PSBcInBhcmVudE5vZGVcIixcclxuXHRcdGRvbmVOYW1lID0gZG9uZSsrO1xyXG5cclxuXHRyZXR1cm4gY29tYmluYXRvci5maXJzdCA/XHJcblx0XHQvLyBDaGVjayBhZ2FpbnN0IGNsb3Nlc3QgYW5jZXN0b3IvcHJlY2VkaW5nIGVsZW1lbnRcclxuXHRcdGZ1bmN0aW9uKCBlbGVtLCBjb250ZXh0LCB4bWwgKSB7XHJcblx0XHRcdHdoaWxlICggKGVsZW0gPSBlbGVtWyBkaXIgXSkgKSB7XHJcblx0XHRcdFx0aWYgKCBlbGVtLm5vZGVUeXBlID09PSAxIHx8IGNoZWNrTm9uRWxlbWVudHMgKSB7XHJcblx0XHRcdFx0XHRyZXR1cm4gbWF0Y2hlciggZWxlbSwgY29udGV4dCwgeG1sICk7XHJcblx0XHRcdFx0fVxyXG5cdFx0XHR9XHJcblx0XHRcdHJldHVybiBmYWxzZTtcclxuXHRcdH0gOlxyXG5cclxuXHRcdC8vIENoZWNrIGFnYWluc3QgYWxsIGFuY2VzdG9yL3ByZWNlZGluZyBlbGVtZW50c1xyXG5cdFx0ZnVuY3Rpb24oIGVsZW0sIGNvbnRleHQsIHhtbCApIHtcclxuXHRcdFx0dmFyIG9sZENhY2hlLCB1bmlxdWVDYWNoZSwgb3V0ZXJDYWNoZSxcclxuXHRcdFx0XHRuZXdDYWNoZSA9IFsgZGlycnVucywgZG9uZU5hbWUgXTtcclxuXHJcblx0XHRcdC8vIFdlIGNhbid0IHNldCBhcmJpdHJhcnkgZGF0YSBvbiBYTUwgbm9kZXMsIHNvIHRoZXkgZG9uJ3QgYmVuZWZpdCBmcm9tIGNvbWJpbmF0b3IgY2FjaGluZ1xyXG5cdFx0XHRpZiAoIHhtbCApIHtcclxuXHRcdFx0XHR3aGlsZSAoIChlbGVtID0gZWxlbVsgZGlyIF0pICkge1xyXG5cdFx0XHRcdFx0aWYgKCBlbGVtLm5vZGVUeXBlID09PSAxIHx8IGNoZWNrTm9uRWxlbWVudHMgKSB7XHJcblx0XHRcdFx0XHRcdGlmICggbWF0Y2hlciggZWxlbSwgY29udGV4dCwgeG1sICkgKSB7XHJcblx0XHRcdFx0XHRcdFx0cmV0dXJuIHRydWU7XHJcblx0XHRcdFx0XHRcdH1cclxuXHRcdFx0XHRcdH1cclxuXHRcdFx0XHR9XHJcblx0XHRcdH0gZWxzZSB7XHJcblx0XHRcdFx0d2hpbGUgKCAoZWxlbSA9IGVsZW1bIGRpciBdKSApIHtcclxuXHRcdFx0XHRcdGlmICggZWxlbS5ub2RlVHlwZSA9PT0gMSB8fCBjaGVja05vbkVsZW1lbnRzICkge1xyXG5cdFx0XHRcdFx0XHRvdXRlckNhY2hlID0gZWxlbVsgZXhwYW5kbyBdIHx8IChlbGVtWyBleHBhbmRvIF0gPSB7fSk7XHJcblxyXG5cdFx0XHRcdFx0XHQvLyBTdXBwb3J0OiBJRSA8OSBvbmx5XHJcblx0XHRcdFx0XHRcdC8vIERlZmVuZCBhZ2FpbnN0IGNsb25lZCBhdHRyb3BlcnRpZXMgKGpRdWVyeSBnaC0xNzA5KVxyXG5cdFx0XHRcdFx0XHR1bmlxdWVDYWNoZSA9IG91dGVyQ2FjaGVbIGVsZW0udW5pcXVlSUQgXSB8fCAob3V0ZXJDYWNoZVsgZWxlbS51bmlxdWVJRCBdID0ge30pO1xyXG5cclxuXHRcdFx0XHRcdFx0aWYgKCBza2lwICYmIHNraXAgPT09IGVsZW0ubm9kZU5hbWUudG9Mb3dlckNhc2UoKSApIHtcclxuXHRcdFx0XHRcdFx0XHRlbGVtID0gZWxlbVsgZGlyIF0gfHwgZWxlbTtcclxuXHRcdFx0XHRcdFx0fSBlbHNlIGlmICggKG9sZENhY2hlID0gdW5pcXVlQ2FjaGVbIGtleSBdKSAmJlxyXG5cdFx0XHRcdFx0XHRcdG9sZENhY2hlWyAwIF0gPT09IGRpcnJ1bnMgJiYgb2xkQ2FjaGVbIDEgXSA9PT0gZG9uZU5hbWUgKSB7XHJcblxyXG5cdFx0XHRcdFx0XHRcdC8vIEFzc2lnbiB0byBuZXdDYWNoZSBzbyByZXN1bHRzIGJhY2stcHJvcGFnYXRlIHRvIHByZXZpb3VzIGVsZW1lbnRzXHJcblx0XHRcdFx0XHRcdFx0cmV0dXJuIChuZXdDYWNoZVsgMiBdID0gb2xkQ2FjaGVbIDIgXSk7XHJcblx0XHRcdFx0XHRcdH0gZWxzZSB7XHJcblx0XHRcdFx0XHRcdFx0Ly8gUmV1c2UgbmV3Y2FjaGUgc28gcmVzdWx0cyBiYWNrLXByb3BhZ2F0ZSB0byBwcmV2aW91cyBlbGVtZW50c1xyXG5cdFx0XHRcdFx0XHRcdHVuaXF1ZUNhY2hlWyBrZXkgXSA9IG5ld0NhY2hlO1xyXG5cclxuXHRcdFx0XHRcdFx0XHQvLyBBIG1hdGNoIG1lYW5zIHdlJ3JlIGRvbmU7IGEgZmFpbCBtZWFucyB3ZSBoYXZlIHRvIGtlZXAgY2hlY2tpbmdcclxuXHRcdFx0XHRcdFx0XHRpZiAoIChuZXdDYWNoZVsgMiBdID0gbWF0Y2hlciggZWxlbSwgY29udGV4dCwgeG1sICkpICkge1xyXG5cdFx0XHRcdFx0XHRcdFx0cmV0dXJuIHRydWU7XHJcblx0XHRcdFx0XHRcdFx0fVxyXG5cdFx0XHRcdFx0XHR9XHJcblx0XHRcdFx0XHR9XHJcblx0XHRcdFx0fVxyXG5cdFx0XHR9XHJcblx0XHRcdHJldHVybiBmYWxzZTtcclxuXHRcdH07XHJcbn1cclxuXHJcbmZ1bmN0aW9uIGVsZW1lbnRNYXRjaGVyKCBtYXRjaGVycyApIHtcclxuXHRyZXR1cm4gbWF0Y2hlcnMubGVuZ3RoID4gMSA/XHJcblx0XHRmdW5jdGlvbiggZWxlbSwgY29udGV4dCwgeG1sICkge1xyXG5cdFx0XHR2YXIgaSA9IG1hdGNoZXJzLmxlbmd0aDtcclxuXHRcdFx0d2hpbGUgKCBpLS0gKSB7XHJcblx0XHRcdFx0aWYgKCAhbWF0Y2hlcnNbaV0oIGVsZW0sIGNvbnRleHQsIHhtbCApICkge1xyXG5cdFx0XHRcdFx0cmV0dXJuIGZhbHNlO1xyXG5cdFx0XHRcdH1cclxuXHRcdFx0fVxyXG5cdFx0XHRyZXR1cm4gdHJ1ZTtcclxuXHRcdH0gOlxyXG5cdFx0bWF0Y2hlcnNbMF07XHJcbn1cclxuXHJcbmZ1bmN0aW9uIG11bHRpcGxlQ29udGV4dHMoIHNlbGVjdG9yLCBjb250ZXh0cywgcmVzdWx0cyApIHtcclxuXHR2YXIgaSA9IDAsXHJcblx0XHRsZW4gPSBjb250ZXh0cy5sZW5ndGg7XHJcblx0Zm9yICggOyBpIDwgbGVuOyBpKysgKSB7XHJcblx0XHRTaXp6bGUoIHNlbGVjdG9yLCBjb250ZXh0c1tpXSwgcmVzdWx0cyApO1xyXG5cdH1cclxuXHRyZXR1cm4gcmVzdWx0cztcclxufVxyXG5cclxuZnVuY3Rpb24gY29uZGVuc2UoIHVubWF0Y2hlZCwgbWFwLCBmaWx0ZXIsIGNvbnRleHQsIHhtbCApIHtcclxuXHR2YXIgZWxlbSxcclxuXHRcdG5ld1VubWF0Y2hlZCA9IFtdLFxyXG5cdFx0aSA9IDAsXHJcblx0XHRsZW4gPSB1bm1hdGNoZWQubGVuZ3RoLFxyXG5cdFx0bWFwcGVkID0gbWFwICE9IG51bGw7XHJcblxyXG5cdGZvciAoIDsgaSA8IGxlbjsgaSsrICkge1xyXG5cdFx0aWYgKCAoZWxlbSA9IHVubWF0Y2hlZFtpXSkgKSB7XHJcblx0XHRcdGlmICggIWZpbHRlciB8fCBmaWx0ZXIoIGVsZW0sIGNvbnRleHQsIHhtbCApICkge1xyXG5cdFx0XHRcdG5ld1VubWF0Y2hlZC5wdXNoKCBlbGVtICk7XHJcblx0XHRcdFx0aWYgKCBtYXBwZWQgKSB7XHJcblx0XHRcdFx0XHRtYXAucHVzaCggaSApO1xyXG5cdFx0XHRcdH1cclxuXHRcdFx0fVxyXG5cdFx0fVxyXG5cdH1cclxuXHJcblx0cmV0dXJuIG5ld1VubWF0Y2hlZDtcclxufVxyXG5cclxuZnVuY3Rpb24gc2V0TWF0Y2hlciggcHJlRmlsdGVyLCBzZWxlY3RvciwgbWF0Y2hlciwgcG9zdEZpbHRlciwgcG9zdEZpbmRlciwgcG9zdFNlbGVjdG9yICkge1xyXG5cdGlmICggcG9zdEZpbHRlciAmJiAhcG9zdEZpbHRlclsgZXhwYW5kbyBdICkge1xyXG5cdFx0cG9zdEZpbHRlciA9IHNldE1hdGNoZXIoIHBvc3RGaWx0ZXIgKTtcclxuXHR9XHJcblx0aWYgKCBwb3N0RmluZGVyICYmICFwb3N0RmluZGVyWyBleHBhbmRvIF0gKSB7XHJcblx0XHRwb3N0RmluZGVyID0gc2V0TWF0Y2hlciggcG9zdEZpbmRlciwgcG9zdFNlbGVjdG9yICk7XHJcblx0fVxyXG5cdHJldHVybiBtYXJrRnVuY3Rpb24oZnVuY3Rpb24oIHNlZWQsIHJlc3VsdHMsIGNvbnRleHQsIHhtbCApIHtcclxuXHRcdHZhciB0ZW1wLCBpLCBlbGVtLFxyXG5cdFx0XHRwcmVNYXAgPSBbXSxcclxuXHRcdFx0cG9zdE1hcCA9IFtdLFxyXG5cdFx0XHRwcmVleGlzdGluZyA9IHJlc3VsdHMubGVuZ3RoLFxyXG5cclxuXHRcdFx0Ly8gR2V0IGluaXRpYWwgZWxlbWVudHMgZnJvbSBzZWVkIG9yIGNvbnRleHRcclxuXHRcdFx0ZWxlbXMgPSBzZWVkIHx8IG11bHRpcGxlQ29udGV4dHMoIHNlbGVjdG9yIHx8IFwiKlwiLCBjb250ZXh0Lm5vZGVUeXBlID8gWyBjb250ZXh0IF0gOiBjb250ZXh0LCBbXSApLFxyXG5cclxuXHRcdFx0Ly8gUHJlZmlsdGVyIHRvIGdldCBtYXRjaGVyIGlucHV0LCBwcmVzZXJ2aW5nIGEgbWFwIGZvciBzZWVkLXJlc3VsdHMgc3luY2hyb25pemF0aW9uXHJcblx0XHRcdG1hdGNoZXJJbiA9IHByZUZpbHRlciAmJiAoIHNlZWQgfHwgIXNlbGVjdG9yICkgP1xyXG5cdFx0XHRcdGNvbmRlbnNlKCBlbGVtcywgcHJlTWFwLCBwcmVGaWx0ZXIsIGNvbnRleHQsIHhtbCApIDpcclxuXHRcdFx0XHRlbGVtcyxcclxuXHJcblx0XHRcdG1hdGNoZXJPdXQgPSBtYXRjaGVyID9cclxuXHRcdFx0XHQvLyBJZiB3ZSBoYXZlIGEgcG9zdEZpbmRlciwgb3IgZmlsdGVyZWQgc2VlZCwgb3Igbm9uLXNlZWQgcG9zdEZpbHRlciBvciBwcmVleGlzdGluZyByZXN1bHRzLFxyXG5cdFx0XHRcdHBvc3RGaW5kZXIgfHwgKCBzZWVkID8gcHJlRmlsdGVyIDogcHJlZXhpc3RpbmcgfHwgcG9zdEZpbHRlciApID9cclxuXHJcblx0XHRcdFx0XHQvLyAuLi5pbnRlcm1lZGlhdGUgcHJvY2Vzc2luZyBpcyBuZWNlc3NhcnlcclxuXHRcdFx0XHRcdFtdIDpcclxuXHJcblx0XHRcdFx0XHQvLyAuLi5vdGhlcndpc2UgdXNlIHJlc3VsdHMgZGlyZWN0bHlcclxuXHRcdFx0XHRcdHJlc3VsdHMgOlxyXG5cdFx0XHRcdG1hdGNoZXJJbjtcclxuXHJcblx0XHQvLyBGaW5kIHByaW1hcnkgbWF0Y2hlc1xyXG5cdFx0aWYgKCBtYXRjaGVyICkge1xyXG5cdFx0XHRtYXRjaGVyKCBtYXRjaGVySW4sIG1hdGNoZXJPdXQsIGNvbnRleHQsIHhtbCApO1xyXG5cdFx0fVxyXG5cclxuXHRcdC8vIEFwcGx5IHBvc3RGaWx0ZXJcclxuXHRcdGlmICggcG9zdEZpbHRlciApIHtcclxuXHRcdFx0dGVtcCA9IGNvbmRlbnNlKCBtYXRjaGVyT3V0LCBwb3N0TWFwICk7XHJcblx0XHRcdHBvc3RGaWx0ZXIoIHRlbXAsIFtdLCBjb250ZXh0LCB4bWwgKTtcclxuXHJcblx0XHRcdC8vIFVuLW1hdGNoIGZhaWxpbmcgZWxlbWVudHMgYnkgbW92aW5nIHRoZW0gYmFjayB0byBtYXRjaGVySW5cclxuXHRcdFx0aSA9IHRlbXAubGVuZ3RoO1xyXG5cdFx0XHR3aGlsZSAoIGktLSApIHtcclxuXHRcdFx0XHRpZiAoIChlbGVtID0gdGVtcFtpXSkgKSB7XHJcblx0XHRcdFx0XHRtYXRjaGVyT3V0WyBwb3N0TWFwW2ldIF0gPSAhKG1hdGNoZXJJblsgcG9zdE1hcFtpXSBdID0gZWxlbSk7XHJcblx0XHRcdFx0fVxyXG5cdFx0XHR9XHJcblx0XHR9XHJcblxyXG5cdFx0aWYgKCBzZWVkICkge1xyXG5cdFx0XHRpZiAoIHBvc3RGaW5kZXIgfHwgcHJlRmlsdGVyICkge1xyXG5cdFx0XHRcdGlmICggcG9zdEZpbmRlciApIHtcclxuXHRcdFx0XHRcdC8vIEdldCB0aGUgZmluYWwgbWF0Y2hlck91dCBieSBjb25kZW5zaW5nIHRoaXMgaW50ZXJtZWRpYXRlIGludG8gcG9zdEZpbmRlciBjb250ZXh0c1xyXG5cdFx0XHRcdFx0dGVtcCA9IFtdO1xyXG5cdFx0XHRcdFx0aSA9IG1hdGNoZXJPdXQubGVuZ3RoO1xyXG5cdFx0XHRcdFx0d2hpbGUgKCBpLS0gKSB7XHJcblx0XHRcdFx0XHRcdGlmICggKGVsZW0gPSBtYXRjaGVyT3V0W2ldKSApIHtcclxuXHRcdFx0XHRcdFx0XHQvLyBSZXN0b3JlIG1hdGNoZXJJbiBzaW5jZSBlbGVtIGlzIG5vdCB5ZXQgYSBmaW5hbCBtYXRjaFxyXG5cdFx0XHRcdFx0XHRcdHRlbXAucHVzaCggKG1hdGNoZXJJbltpXSA9IGVsZW0pICk7XHJcblx0XHRcdFx0XHRcdH1cclxuXHRcdFx0XHRcdH1cclxuXHRcdFx0XHRcdHBvc3RGaW5kZXIoIG51bGwsIChtYXRjaGVyT3V0ID0gW10pLCB0ZW1wLCB4bWwgKTtcclxuXHRcdFx0XHR9XHJcblxyXG5cdFx0XHRcdC8vIE1vdmUgbWF0Y2hlZCBlbGVtZW50cyBmcm9tIHNlZWQgdG8gcmVzdWx0cyB0byBrZWVwIHRoZW0gc3luY2hyb25pemVkXHJcblx0XHRcdFx0aSA9IG1hdGNoZXJPdXQubGVuZ3RoO1xyXG5cdFx0XHRcdHdoaWxlICggaS0tICkge1xyXG5cdFx0XHRcdFx0aWYgKCAoZWxlbSA9IG1hdGNoZXJPdXRbaV0pICYmXHJcblx0XHRcdFx0XHRcdCh0ZW1wID0gcG9zdEZpbmRlciA/IGluZGV4T2YoIHNlZWQsIGVsZW0gKSA6IHByZU1hcFtpXSkgPiAtMSApIHtcclxuXHJcblx0XHRcdFx0XHRcdHNlZWRbdGVtcF0gPSAhKHJlc3VsdHNbdGVtcF0gPSBlbGVtKTtcclxuXHRcdFx0XHRcdH1cclxuXHRcdFx0XHR9XHJcblx0XHRcdH1cclxuXHJcblx0XHQvLyBBZGQgZWxlbWVudHMgdG8gcmVzdWx0cywgdGhyb3VnaCBwb3N0RmluZGVyIGlmIGRlZmluZWRcclxuXHRcdH0gZWxzZSB7XHJcblx0XHRcdG1hdGNoZXJPdXQgPSBjb25kZW5zZShcclxuXHRcdFx0XHRtYXRjaGVyT3V0ID09PSByZXN1bHRzID9cclxuXHRcdFx0XHRcdG1hdGNoZXJPdXQuc3BsaWNlKCBwcmVleGlzdGluZywgbWF0Y2hlck91dC5sZW5ndGggKSA6XHJcblx0XHRcdFx0XHRtYXRjaGVyT3V0XHJcblx0XHRcdCk7XHJcblx0XHRcdGlmICggcG9zdEZpbmRlciApIHtcclxuXHRcdFx0XHRwb3N0RmluZGVyKCBudWxsLCByZXN1bHRzLCBtYXRjaGVyT3V0LCB4bWwgKTtcclxuXHRcdFx0fSBlbHNlIHtcclxuXHRcdFx0XHRwdXNoLmFwcGx5KCByZXN1bHRzLCBtYXRjaGVyT3V0ICk7XHJcblx0XHRcdH1cclxuXHRcdH1cclxuXHR9KTtcclxufVxyXG5cclxuZnVuY3Rpb24gbWF0Y2hlckZyb21Ub2tlbnMoIHRva2VucyApIHtcclxuXHR2YXIgY2hlY2tDb250ZXh0LCBtYXRjaGVyLCBqLFxyXG5cdFx0bGVuID0gdG9rZW5zLmxlbmd0aCxcclxuXHRcdGxlYWRpbmdSZWxhdGl2ZSA9IEV4cHIucmVsYXRpdmVbIHRva2Vuc1swXS50eXBlIF0sXHJcblx0XHRpbXBsaWNpdFJlbGF0aXZlID0gbGVhZGluZ1JlbGF0aXZlIHx8IEV4cHIucmVsYXRpdmVbXCIgXCJdLFxyXG5cdFx0aSA9IGxlYWRpbmdSZWxhdGl2ZSA/IDEgOiAwLFxyXG5cclxuXHRcdC8vIFRoZSBmb3VuZGF0aW9uYWwgbWF0Y2hlciBlbnN1cmVzIHRoYXQgZWxlbWVudHMgYXJlIHJlYWNoYWJsZSBmcm9tIHRvcC1sZXZlbCBjb250ZXh0KHMpXHJcblx0XHRtYXRjaENvbnRleHQgPSBhZGRDb21iaW5hdG9yKCBmdW5jdGlvbiggZWxlbSApIHtcclxuXHRcdFx0cmV0dXJuIGVsZW0gPT09IGNoZWNrQ29udGV4dDtcclxuXHRcdH0sIGltcGxpY2l0UmVsYXRpdmUsIHRydWUgKSxcclxuXHRcdG1hdGNoQW55Q29udGV4dCA9IGFkZENvbWJpbmF0b3IoIGZ1bmN0aW9uKCBlbGVtICkge1xyXG5cdFx0XHRyZXR1cm4gaW5kZXhPZiggY2hlY2tDb250ZXh0LCBlbGVtICkgPiAtMTtcclxuXHRcdH0sIGltcGxpY2l0UmVsYXRpdmUsIHRydWUgKSxcclxuXHRcdG1hdGNoZXJzID0gWyBmdW5jdGlvbiggZWxlbSwgY29udGV4dCwgeG1sICkge1xyXG5cdFx0XHR2YXIgcmV0ID0gKCAhbGVhZGluZ1JlbGF0aXZlICYmICggeG1sIHx8IGNvbnRleHQgIT09IG91dGVybW9zdENvbnRleHQgKSApIHx8IChcclxuXHRcdFx0XHQoY2hlY2tDb250ZXh0ID0gY29udGV4dCkubm9kZVR5cGUgP1xyXG5cdFx0XHRcdFx0bWF0Y2hDb250ZXh0KCBlbGVtLCBjb250ZXh0LCB4bWwgKSA6XHJcblx0XHRcdFx0XHRtYXRjaEFueUNvbnRleHQoIGVsZW0sIGNvbnRleHQsIHhtbCApICk7XHJcblx0XHRcdC8vIEF2b2lkIGhhbmdpbmcgb250byBlbGVtZW50IChpc3N1ZSAjMjk5KVxyXG5cdFx0XHRjaGVja0NvbnRleHQgPSBudWxsO1xyXG5cdFx0XHRyZXR1cm4gcmV0O1xyXG5cdFx0fSBdO1xyXG5cclxuXHRmb3IgKCA7IGkgPCBsZW47IGkrKyApIHtcclxuXHRcdGlmICggKG1hdGNoZXIgPSBFeHByLnJlbGF0aXZlWyB0b2tlbnNbaV0udHlwZSBdKSApIHtcclxuXHRcdFx0bWF0Y2hlcnMgPSBbIGFkZENvbWJpbmF0b3IoZWxlbWVudE1hdGNoZXIoIG1hdGNoZXJzICksIG1hdGNoZXIpIF07XHJcblx0XHR9IGVsc2Uge1xyXG5cdFx0XHRtYXRjaGVyID0gRXhwci5maWx0ZXJbIHRva2Vuc1tpXS50eXBlIF0uYXBwbHkoIG51bGwsIHRva2Vuc1tpXS5tYXRjaGVzICk7XHJcblxyXG5cdFx0XHQvLyBSZXR1cm4gc3BlY2lhbCB1cG9uIHNlZWluZyBhIHBvc2l0aW9uYWwgbWF0Y2hlclxyXG5cdFx0XHRpZiAoIG1hdGNoZXJbIGV4cGFuZG8gXSApIHtcclxuXHRcdFx0XHQvLyBGaW5kIHRoZSBuZXh0IHJlbGF0aXZlIG9wZXJhdG9yIChpZiBhbnkpIGZvciBwcm9wZXIgaGFuZGxpbmdcclxuXHRcdFx0XHRqID0gKytpO1xyXG5cdFx0XHRcdGZvciAoIDsgaiA8IGxlbjsgaisrICkge1xyXG5cdFx0XHRcdFx0aWYgKCBFeHByLnJlbGF0aXZlWyB0b2tlbnNbal0udHlwZSBdICkge1xyXG5cdFx0XHRcdFx0XHRicmVhaztcclxuXHRcdFx0XHRcdH1cclxuXHRcdFx0XHR9XHJcblx0XHRcdFx0cmV0dXJuIHNldE1hdGNoZXIoXHJcblx0XHRcdFx0XHRpID4gMSAmJiBlbGVtZW50TWF0Y2hlciggbWF0Y2hlcnMgKSxcclxuXHRcdFx0XHRcdGkgPiAxICYmIHRvU2VsZWN0b3IoXHJcblx0XHRcdFx0XHRcdC8vIElmIHRoZSBwcmVjZWRpbmcgdG9rZW4gd2FzIGEgZGVzY2VuZGFudCBjb21iaW5hdG9yLCBpbnNlcnQgYW4gaW1wbGljaXQgYW55LWVsZW1lbnQgYCpgXHJcblx0XHRcdFx0XHRcdHRva2Vucy5zbGljZSggMCwgaSAtIDEgKS5jb25jYXQoeyB2YWx1ZTogdG9rZW5zWyBpIC0gMiBdLnR5cGUgPT09IFwiIFwiID8gXCIqXCIgOiBcIlwiIH0pXHJcblx0XHRcdFx0XHQpLnJlcGxhY2UoIHJ0cmltLCBcIiQxXCIgKSxcclxuXHRcdFx0XHRcdG1hdGNoZXIsXHJcblx0XHRcdFx0XHRpIDwgaiAmJiBtYXRjaGVyRnJvbVRva2VucyggdG9rZW5zLnNsaWNlKCBpLCBqICkgKSxcclxuXHRcdFx0XHRcdGogPCBsZW4gJiYgbWF0Y2hlckZyb21Ub2tlbnMoICh0b2tlbnMgPSB0b2tlbnMuc2xpY2UoIGogKSkgKSxcclxuXHRcdFx0XHRcdGogPCBsZW4gJiYgdG9TZWxlY3RvciggdG9rZW5zIClcclxuXHRcdFx0XHQpO1xyXG5cdFx0XHR9XHJcblx0XHRcdG1hdGNoZXJzLnB1c2goIG1hdGNoZXIgKTtcclxuXHRcdH1cclxuXHR9XHJcblxyXG5cdHJldHVybiBlbGVtZW50TWF0Y2hlciggbWF0Y2hlcnMgKTtcclxufVxyXG5cclxuZnVuY3Rpb24gbWF0Y2hlckZyb21Hcm91cE1hdGNoZXJzKCBlbGVtZW50TWF0Y2hlcnMsIHNldE1hdGNoZXJzICkge1xyXG5cdHZhciBieVNldCA9IHNldE1hdGNoZXJzLmxlbmd0aCA+IDAsXHJcblx0XHRieUVsZW1lbnQgPSBlbGVtZW50TWF0Y2hlcnMubGVuZ3RoID4gMCxcclxuXHRcdHN1cGVyTWF0Y2hlciA9IGZ1bmN0aW9uKCBzZWVkLCBjb250ZXh0LCB4bWwsIHJlc3VsdHMsIG91dGVybW9zdCApIHtcclxuXHRcdFx0dmFyIGVsZW0sIGosIG1hdGNoZXIsXHJcblx0XHRcdFx0bWF0Y2hlZENvdW50ID0gMCxcclxuXHRcdFx0XHRpID0gXCIwXCIsXHJcblx0XHRcdFx0dW5tYXRjaGVkID0gc2VlZCAmJiBbXSxcclxuXHRcdFx0XHRzZXRNYXRjaGVkID0gW10sXHJcblx0XHRcdFx0Y29udGV4dEJhY2t1cCA9IG91dGVybW9zdENvbnRleHQsXHJcblx0XHRcdFx0Ly8gV2UgbXVzdCBhbHdheXMgaGF2ZSBlaXRoZXIgc2VlZCBlbGVtZW50cyBvciBvdXRlcm1vc3QgY29udGV4dFxyXG5cdFx0XHRcdGVsZW1zID0gc2VlZCB8fCBieUVsZW1lbnQgJiYgRXhwci5maW5kW1wiVEFHXCJdKCBcIipcIiwgb3V0ZXJtb3N0ICksXHJcblx0XHRcdFx0Ly8gVXNlIGludGVnZXIgZGlycnVucyBpZmYgdGhpcyBpcyB0aGUgb3V0ZXJtb3N0IG1hdGNoZXJcclxuXHRcdFx0XHRkaXJydW5zVW5pcXVlID0gKGRpcnJ1bnMgKz0gY29udGV4dEJhY2t1cCA9PSBudWxsID8gMSA6IE1hdGgucmFuZG9tKCkgfHwgMC4xKSxcclxuXHRcdFx0XHRsZW4gPSBlbGVtcy5sZW5ndGg7XHJcblxyXG5cdFx0XHRpZiAoIG91dGVybW9zdCApIHtcclxuXHRcdFx0XHRvdXRlcm1vc3RDb250ZXh0ID0gY29udGV4dCA9PT0gZG9jdW1lbnQgfHwgY29udGV4dCB8fCBvdXRlcm1vc3Q7XHJcblx0XHRcdH1cclxuXHJcblx0XHRcdC8vIEFkZCBlbGVtZW50cyBwYXNzaW5nIGVsZW1lbnRNYXRjaGVycyBkaXJlY3RseSB0byByZXN1bHRzXHJcblx0XHRcdC8vIFN1cHBvcnQ6IElFPDksIFNhZmFyaVxyXG5cdFx0XHQvLyBUb2xlcmF0ZSBOb2RlTGlzdCBwcm9wZXJ0aWVzIChJRTogXCJsZW5ndGhcIjsgU2FmYXJpOiA8bnVtYmVyPikgbWF0Y2hpbmcgZWxlbWVudHMgYnkgaWRcclxuXHRcdFx0Zm9yICggOyBpICE9PSBsZW4gJiYgKGVsZW0gPSBlbGVtc1tpXSkgIT0gbnVsbDsgaSsrICkge1xyXG5cdFx0XHRcdGlmICggYnlFbGVtZW50ICYmIGVsZW0gKSB7XHJcblx0XHRcdFx0XHRqID0gMDtcclxuXHRcdFx0XHRcdGlmICggIWNvbnRleHQgJiYgZWxlbS5vd25lckRvY3VtZW50ICE9PSBkb2N1bWVudCApIHtcclxuXHRcdFx0XHRcdFx0c2V0RG9jdW1lbnQoIGVsZW0gKTtcclxuXHRcdFx0XHRcdFx0eG1sID0gIWRvY3VtZW50SXNIVE1MO1xyXG5cdFx0XHRcdFx0fVxyXG5cdFx0XHRcdFx0d2hpbGUgKCAobWF0Y2hlciA9IGVsZW1lbnRNYXRjaGVyc1tqKytdKSApIHtcclxuXHRcdFx0XHRcdFx0aWYgKCBtYXRjaGVyKCBlbGVtLCBjb250ZXh0IHx8IGRvY3VtZW50LCB4bWwpICkge1xyXG5cdFx0XHRcdFx0XHRcdHJlc3VsdHMucHVzaCggZWxlbSApO1xyXG5cdFx0XHRcdFx0XHRcdGJyZWFrO1xyXG5cdFx0XHRcdFx0XHR9XHJcblx0XHRcdFx0XHR9XHJcblx0XHRcdFx0XHRpZiAoIG91dGVybW9zdCApIHtcclxuXHRcdFx0XHRcdFx0ZGlycnVucyA9IGRpcnJ1bnNVbmlxdWU7XHJcblx0XHRcdFx0XHR9XHJcblx0XHRcdFx0fVxyXG5cclxuXHRcdFx0XHQvLyBUcmFjayB1bm1hdGNoZWQgZWxlbWVudHMgZm9yIHNldCBmaWx0ZXJzXHJcblx0XHRcdFx0aWYgKCBieVNldCApIHtcclxuXHRcdFx0XHRcdC8vIFRoZXkgd2lsbCBoYXZlIGdvbmUgdGhyb3VnaCBhbGwgcG9zc2libGUgbWF0Y2hlcnNcclxuXHRcdFx0XHRcdGlmICggKGVsZW0gPSAhbWF0Y2hlciAmJiBlbGVtKSApIHtcclxuXHRcdFx0XHRcdFx0bWF0Y2hlZENvdW50LS07XHJcblx0XHRcdFx0XHR9XHJcblxyXG5cdFx0XHRcdFx0Ly8gTGVuZ3RoZW4gdGhlIGFycmF5IGZvciBldmVyeSBlbGVtZW50LCBtYXRjaGVkIG9yIG5vdFxyXG5cdFx0XHRcdFx0aWYgKCBzZWVkICkge1xyXG5cdFx0XHRcdFx0XHR1bm1hdGNoZWQucHVzaCggZWxlbSApO1xyXG5cdFx0XHRcdFx0fVxyXG5cdFx0XHRcdH1cclxuXHRcdFx0fVxyXG5cclxuXHRcdFx0Ly8gYGlgIGlzIG5vdyB0aGUgY291bnQgb2YgZWxlbWVudHMgdmlzaXRlZCBhYm92ZSwgYW5kIGFkZGluZyBpdCB0byBgbWF0Y2hlZENvdW50YFxyXG5cdFx0XHQvLyBtYWtlcyB0aGUgbGF0dGVyIG5vbm5lZ2F0aXZlLlxyXG5cdFx0XHRtYXRjaGVkQ291bnQgKz0gaTtcclxuXHJcblx0XHRcdC8vIEFwcGx5IHNldCBmaWx0ZXJzIHRvIHVubWF0Y2hlZCBlbGVtZW50c1xyXG5cdFx0XHQvLyBOT1RFOiBUaGlzIGNhbiBiZSBza2lwcGVkIGlmIHRoZXJlIGFyZSBubyB1bm1hdGNoZWQgZWxlbWVudHMgKGkuZS4sIGBtYXRjaGVkQ291bnRgXHJcblx0XHRcdC8vIGVxdWFscyBgaWApLCB1bmxlc3Mgd2UgZGlkbid0IHZpc2l0IF9hbnlfIGVsZW1lbnRzIGluIHRoZSBhYm92ZSBsb29wIGJlY2F1c2Ugd2UgaGF2ZVxyXG5cdFx0XHQvLyBubyBlbGVtZW50IG1hdGNoZXJzIGFuZCBubyBzZWVkLlxyXG5cdFx0XHQvLyBJbmNyZW1lbnRpbmcgYW4gaW5pdGlhbGx5LXN0cmluZyBcIjBcIiBgaWAgYWxsb3dzIGBpYCB0byByZW1haW4gYSBzdHJpbmcgb25seSBpbiB0aGF0XHJcblx0XHRcdC8vIGNhc2UsIHdoaWNoIHdpbGwgcmVzdWx0IGluIGEgXCIwMFwiIGBtYXRjaGVkQ291bnRgIHRoYXQgZGlmZmVycyBmcm9tIGBpYCBidXQgaXMgYWxzb1xyXG5cdFx0XHQvLyBudW1lcmljYWxseSB6ZXJvLlxyXG5cdFx0XHRpZiAoIGJ5U2V0ICYmIGkgIT09IG1hdGNoZWRDb3VudCApIHtcclxuXHRcdFx0XHRqID0gMDtcclxuXHRcdFx0XHR3aGlsZSAoIChtYXRjaGVyID0gc2V0TWF0Y2hlcnNbaisrXSkgKSB7XHJcblx0XHRcdFx0XHRtYXRjaGVyKCB1bm1hdGNoZWQsIHNldE1hdGNoZWQsIGNvbnRleHQsIHhtbCApO1xyXG5cdFx0XHRcdH1cclxuXHJcblx0XHRcdFx0aWYgKCBzZWVkICkge1xyXG5cdFx0XHRcdFx0Ly8gUmVpbnRlZ3JhdGUgZWxlbWVudCBtYXRjaGVzIHRvIGVsaW1pbmF0ZSB0aGUgbmVlZCBmb3Igc29ydGluZ1xyXG5cdFx0XHRcdFx0aWYgKCBtYXRjaGVkQ291bnQgPiAwICkge1xyXG5cdFx0XHRcdFx0XHR3aGlsZSAoIGktLSApIHtcclxuXHRcdFx0XHRcdFx0XHRpZiAoICEodW5tYXRjaGVkW2ldIHx8IHNldE1hdGNoZWRbaV0pICkge1xyXG5cdFx0XHRcdFx0XHRcdFx0c2V0TWF0Y2hlZFtpXSA9IHBvcC5jYWxsKCByZXN1bHRzICk7XHJcblx0XHRcdFx0XHRcdFx0fVxyXG5cdFx0XHRcdFx0XHR9XHJcblx0XHRcdFx0XHR9XHJcblxyXG5cdFx0XHRcdFx0Ly8gRGlzY2FyZCBpbmRleCBwbGFjZWhvbGRlciB2YWx1ZXMgdG8gZ2V0IG9ubHkgYWN0dWFsIG1hdGNoZXNcclxuXHRcdFx0XHRcdHNldE1hdGNoZWQgPSBjb25kZW5zZSggc2V0TWF0Y2hlZCApO1xyXG5cdFx0XHRcdH1cclxuXHJcblx0XHRcdFx0Ly8gQWRkIG1hdGNoZXMgdG8gcmVzdWx0c1xyXG5cdFx0XHRcdHB1c2guYXBwbHkoIHJlc3VsdHMsIHNldE1hdGNoZWQgKTtcclxuXHJcblx0XHRcdFx0Ly8gU2VlZGxlc3Mgc2V0IG1hdGNoZXMgc3VjY2VlZGluZyBtdWx0aXBsZSBzdWNjZXNzZnVsIG1hdGNoZXJzIHN0aXB1bGF0ZSBzb3J0aW5nXHJcblx0XHRcdFx0aWYgKCBvdXRlcm1vc3QgJiYgIXNlZWQgJiYgc2V0TWF0Y2hlZC5sZW5ndGggPiAwICYmXHJcblx0XHRcdFx0XHQoIG1hdGNoZWRDb3VudCArIHNldE1hdGNoZXJzLmxlbmd0aCApID4gMSApIHtcclxuXHJcblx0XHRcdFx0XHRTaXp6bGUudW5pcXVlU29ydCggcmVzdWx0cyApO1xyXG5cdFx0XHRcdH1cclxuXHRcdFx0fVxyXG5cclxuXHRcdFx0Ly8gT3ZlcnJpZGUgbWFuaXB1bGF0aW9uIG9mIGdsb2JhbHMgYnkgbmVzdGVkIG1hdGNoZXJzXHJcblx0XHRcdGlmICggb3V0ZXJtb3N0ICkge1xyXG5cdFx0XHRcdGRpcnJ1bnMgPSBkaXJydW5zVW5pcXVlO1xyXG5cdFx0XHRcdG91dGVybW9zdENvbnRleHQgPSBjb250ZXh0QmFja3VwO1xyXG5cdFx0XHR9XHJcblxyXG5cdFx0XHRyZXR1cm4gdW5tYXRjaGVkO1xyXG5cdFx0fTtcclxuXHJcblx0cmV0dXJuIGJ5U2V0ID9cclxuXHRcdG1hcmtGdW5jdGlvbiggc3VwZXJNYXRjaGVyICkgOlxyXG5cdFx0c3VwZXJNYXRjaGVyO1xyXG59XHJcblxyXG5jb21waWxlID0gU2l6emxlLmNvbXBpbGUgPSBmdW5jdGlvbiggc2VsZWN0b3IsIG1hdGNoIC8qIEludGVybmFsIFVzZSBPbmx5ICovICkge1xyXG5cdHZhciBpLFxyXG5cdFx0c2V0TWF0Y2hlcnMgPSBbXSxcclxuXHRcdGVsZW1lbnRNYXRjaGVycyA9IFtdLFxyXG5cdFx0Y2FjaGVkID0gY29tcGlsZXJDYWNoZVsgc2VsZWN0b3IgKyBcIiBcIiBdO1xyXG5cclxuXHRpZiAoICFjYWNoZWQgKSB7XHJcblx0XHQvLyBHZW5lcmF0ZSBhIGZ1bmN0aW9uIG9mIHJlY3Vyc2l2ZSBmdW5jdGlvbnMgdGhhdCBjYW4gYmUgdXNlZCB0byBjaGVjayBlYWNoIGVsZW1lbnRcclxuXHRcdGlmICggIW1hdGNoICkge1xyXG5cdFx0XHRtYXRjaCA9IHRva2VuaXplKCBzZWxlY3RvciApO1xyXG5cdFx0fVxyXG5cdFx0aSA9IG1hdGNoLmxlbmd0aDtcclxuXHRcdHdoaWxlICggaS0tICkge1xyXG5cdFx0XHRjYWNoZWQgPSBtYXRjaGVyRnJvbVRva2VucyggbWF0Y2hbaV0gKTtcclxuXHRcdFx0aWYgKCBjYWNoZWRbIGV4cGFuZG8gXSApIHtcclxuXHRcdFx0XHRzZXRNYXRjaGVycy5wdXNoKCBjYWNoZWQgKTtcclxuXHRcdFx0fSBlbHNlIHtcclxuXHRcdFx0XHRlbGVtZW50TWF0Y2hlcnMucHVzaCggY2FjaGVkICk7XHJcblx0XHRcdH1cclxuXHRcdH1cclxuXHJcblx0XHQvLyBDYWNoZSB0aGUgY29tcGlsZWQgZnVuY3Rpb25cclxuXHRcdGNhY2hlZCA9IGNvbXBpbGVyQ2FjaGUoIHNlbGVjdG9yLCBtYXRjaGVyRnJvbUdyb3VwTWF0Y2hlcnMoIGVsZW1lbnRNYXRjaGVycywgc2V0TWF0Y2hlcnMgKSApO1xyXG5cclxuXHRcdC8vIFNhdmUgc2VsZWN0b3IgYW5kIHRva2VuaXphdGlvblxyXG5cdFx0Y2FjaGVkLnNlbGVjdG9yID0gc2VsZWN0b3I7XHJcblx0fVxyXG5cdHJldHVybiBjYWNoZWQ7XHJcbn07XHJcblxyXG4vKipcclxuICogQSBsb3ctbGV2ZWwgc2VsZWN0aW9uIGZ1bmN0aW9uIHRoYXQgd29ya3Mgd2l0aCBTaXp6bGUncyBjb21waWxlZFxyXG4gKiAgc2VsZWN0b3IgZnVuY3Rpb25zXHJcbiAqIEBwYXJhbSB7U3RyaW5nfEZ1bmN0aW9ufSBzZWxlY3RvciBBIHNlbGVjdG9yIG9yIGEgcHJlLWNvbXBpbGVkXHJcbiAqICBzZWxlY3RvciBmdW5jdGlvbiBidWlsdCB3aXRoIFNpenpsZS5jb21waWxlXHJcbiAqIEBwYXJhbSB7RWxlbWVudH0gY29udGV4dFxyXG4gKiBAcGFyYW0ge0FycmF5fSBbcmVzdWx0c11cclxuICogQHBhcmFtIHtBcnJheX0gW3NlZWRdIEEgc2V0IG9mIGVsZW1lbnRzIHRvIG1hdGNoIGFnYWluc3RcclxuICovXHJcbnNlbGVjdCA9IFNpenpsZS5zZWxlY3QgPSBmdW5jdGlvbiggc2VsZWN0b3IsIGNvbnRleHQsIHJlc3VsdHMsIHNlZWQgKSB7XHJcblx0dmFyIGksIHRva2VucywgdG9rZW4sIHR5cGUsIGZpbmQsXHJcblx0XHRjb21waWxlZCA9IHR5cGVvZiBzZWxlY3RvciA9PT0gXCJmdW5jdGlvblwiICYmIHNlbGVjdG9yLFxyXG5cdFx0bWF0Y2ggPSAhc2VlZCAmJiB0b2tlbml6ZSggKHNlbGVjdG9yID0gY29tcGlsZWQuc2VsZWN0b3IgfHwgc2VsZWN0b3IpICk7XHJcblxyXG5cdHJlc3VsdHMgPSByZXN1bHRzIHx8IFtdO1xyXG5cclxuXHQvLyBUcnkgdG8gbWluaW1pemUgb3BlcmF0aW9ucyBpZiB0aGVyZSBpcyBvbmx5IG9uZSBzZWxlY3RvciBpbiB0aGUgbGlzdCBhbmQgbm8gc2VlZFxyXG5cdC8vICh0aGUgbGF0dGVyIG9mIHdoaWNoIGd1YXJhbnRlZXMgdXMgY29udGV4dClcclxuXHRpZiAoIG1hdGNoLmxlbmd0aCA9PT0gMSApIHtcclxuXHJcblx0XHQvLyBSZWR1Y2UgY29udGV4dCBpZiB0aGUgbGVhZGluZyBjb21wb3VuZCBzZWxlY3RvciBpcyBhbiBJRFxyXG5cdFx0dG9rZW5zID0gbWF0Y2hbMF0gPSBtYXRjaFswXS5zbGljZSggMCApO1xyXG5cdFx0aWYgKCB0b2tlbnMubGVuZ3RoID4gMiAmJiAodG9rZW4gPSB0b2tlbnNbMF0pLnR5cGUgPT09IFwiSURcIiAmJlxyXG5cdFx0XHRcdGNvbnRleHQubm9kZVR5cGUgPT09IDkgJiYgZG9jdW1lbnRJc0hUTUwgJiYgRXhwci5yZWxhdGl2ZVsgdG9rZW5zWzFdLnR5cGUgXSApIHtcclxuXHJcblx0XHRcdGNvbnRleHQgPSAoIEV4cHIuZmluZFtcIklEXCJdKCB0b2tlbi5tYXRjaGVzWzBdLnJlcGxhY2UocnVuZXNjYXBlLCBmdW5lc2NhcGUpLCBjb250ZXh0ICkgfHwgW10gKVswXTtcclxuXHRcdFx0aWYgKCAhY29udGV4dCApIHtcclxuXHRcdFx0XHRyZXR1cm4gcmVzdWx0cztcclxuXHJcblx0XHRcdC8vIFByZWNvbXBpbGVkIG1hdGNoZXJzIHdpbGwgc3RpbGwgdmVyaWZ5IGFuY2VzdHJ5LCBzbyBzdGVwIHVwIGEgbGV2ZWxcclxuXHRcdFx0fSBlbHNlIGlmICggY29tcGlsZWQgKSB7XHJcblx0XHRcdFx0Y29udGV4dCA9IGNvbnRleHQucGFyZW50Tm9kZTtcclxuXHRcdFx0fVxyXG5cclxuXHRcdFx0c2VsZWN0b3IgPSBzZWxlY3Rvci5zbGljZSggdG9rZW5zLnNoaWZ0KCkudmFsdWUubGVuZ3RoICk7XHJcblx0XHR9XHJcblxyXG5cdFx0Ly8gRmV0Y2ggYSBzZWVkIHNldCBmb3IgcmlnaHQtdG8tbGVmdCBtYXRjaGluZ1xyXG5cdFx0aSA9IG1hdGNoRXhwcltcIm5lZWRzQ29udGV4dFwiXS50ZXN0KCBzZWxlY3RvciApID8gMCA6IHRva2Vucy5sZW5ndGg7XHJcblx0XHR3aGlsZSAoIGktLSApIHtcclxuXHRcdFx0dG9rZW4gPSB0b2tlbnNbaV07XHJcblxyXG5cdFx0XHQvLyBBYm9ydCBpZiB3ZSBoaXQgYSBjb21iaW5hdG9yXHJcblx0XHRcdGlmICggRXhwci5yZWxhdGl2ZVsgKHR5cGUgPSB0b2tlbi50eXBlKSBdICkge1xyXG5cdFx0XHRcdGJyZWFrO1xyXG5cdFx0XHR9XHJcblx0XHRcdGlmICggKGZpbmQgPSBFeHByLmZpbmRbIHR5cGUgXSkgKSB7XHJcblx0XHRcdFx0Ly8gU2VhcmNoLCBleHBhbmRpbmcgY29udGV4dCBmb3IgbGVhZGluZyBzaWJsaW5nIGNvbWJpbmF0b3JzXHJcblx0XHRcdFx0aWYgKCAoc2VlZCA9IGZpbmQoXHJcblx0XHRcdFx0XHR0b2tlbi5tYXRjaGVzWzBdLnJlcGxhY2UoIHJ1bmVzY2FwZSwgZnVuZXNjYXBlICksXHJcblx0XHRcdFx0XHRyc2libGluZy50ZXN0KCB0b2tlbnNbMF0udHlwZSApICYmIHRlc3RDb250ZXh0KCBjb250ZXh0LnBhcmVudE5vZGUgKSB8fCBjb250ZXh0XHJcblx0XHRcdFx0KSkgKSB7XHJcblxyXG5cdFx0XHRcdFx0Ly8gSWYgc2VlZCBpcyBlbXB0eSBvciBubyB0b2tlbnMgcmVtYWluLCB3ZSBjYW4gcmV0dXJuIGVhcmx5XHJcblx0XHRcdFx0XHR0b2tlbnMuc3BsaWNlKCBpLCAxICk7XHJcblx0XHRcdFx0XHRzZWxlY3RvciA9IHNlZWQubGVuZ3RoICYmIHRvU2VsZWN0b3IoIHRva2VucyApO1xyXG5cdFx0XHRcdFx0aWYgKCAhc2VsZWN0b3IgKSB7XHJcblx0XHRcdFx0XHRcdHB1c2guYXBwbHkoIHJlc3VsdHMsIHNlZWQgKTtcclxuXHRcdFx0XHRcdFx0cmV0dXJuIHJlc3VsdHM7XHJcblx0XHRcdFx0XHR9XHJcblxyXG5cdFx0XHRcdFx0YnJlYWs7XHJcblx0XHRcdFx0fVxyXG5cdFx0XHR9XHJcblx0XHR9XHJcblx0fVxyXG5cclxuXHQvLyBDb21waWxlIGFuZCBleGVjdXRlIGEgZmlsdGVyaW5nIGZ1bmN0aW9uIGlmIG9uZSBpcyBub3QgcHJvdmlkZWRcclxuXHQvLyBQcm92aWRlIGBtYXRjaGAgdG8gYXZvaWQgcmV0b2tlbml6YXRpb24gaWYgd2UgbW9kaWZpZWQgdGhlIHNlbGVjdG9yIGFib3ZlXHJcblx0KCBjb21waWxlZCB8fCBjb21waWxlKCBzZWxlY3RvciwgbWF0Y2ggKSApKFxyXG5cdFx0c2VlZCxcclxuXHRcdGNvbnRleHQsXHJcblx0XHQhZG9jdW1lbnRJc0hUTUwsXHJcblx0XHRyZXN1bHRzLFxyXG5cdFx0IWNvbnRleHQgfHwgcnNpYmxpbmcudGVzdCggc2VsZWN0b3IgKSAmJiB0ZXN0Q29udGV4dCggY29udGV4dC5wYXJlbnROb2RlICkgfHwgY29udGV4dFxyXG5cdCk7XHJcblx0cmV0dXJuIHJlc3VsdHM7XHJcbn07XHJcblxyXG4vLyBPbmUtdGltZSBhc3NpZ25tZW50c1xyXG5cclxuLy8gU29ydCBzdGFiaWxpdHlcclxuc3VwcG9ydC5zb3J0U3RhYmxlID0gZXhwYW5kby5zcGxpdChcIlwiKS5zb3J0KCBzb3J0T3JkZXIgKS5qb2luKFwiXCIpID09PSBleHBhbmRvO1xyXG5cclxuLy8gU3VwcG9ydDogQ2hyb21lIDE0LTM1K1xyXG4vLyBBbHdheXMgYXNzdW1lIGR1cGxpY2F0ZXMgaWYgdGhleSBhcmVuJ3QgcGFzc2VkIHRvIHRoZSBjb21wYXJpc29uIGZ1bmN0aW9uXHJcbnN1cHBvcnQuZGV0ZWN0RHVwbGljYXRlcyA9ICEhaGFzRHVwbGljYXRlO1xyXG5cclxuLy8gSW5pdGlhbGl6ZSBhZ2FpbnN0IHRoZSBkZWZhdWx0IGRvY3VtZW50XHJcbnNldERvY3VtZW50KCk7XHJcblxyXG4vLyBTdXBwb3J0OiBXZWJraXQ8NTM3LjMyIC0gU2FmYXJpIDYuMC4zL0Nocm9tZSAyNSAoZml4ZWQgaW4gQ2hyb21lIDI3KVxyXG4vLyBEZXRhY2hlZCBub2RlcyBjb25mb3VuZGluZ2x5IGZvbGxvdyAqZWFjaCBvdGhlcipcclxuc3VwcG9ydC5zb3J0RGV0YWNoZWQgPSBhc3NlcnQoZnVuY3Rpb24oIGVsICkge1xyXG5cdC8vIFNob3VsZCByZXR1cm4gMSwgYnV0IHJldHVybnMgNCAoZm9sbG93aW5nKVxyXG5cdHJldHVybiBlbC5jb21wYXJlRG9jdW1lbnRQb3NpdGlvbiggZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImZpZWxkc2V0XCIpICkgJiAxO1xyXG59KTtcclxuXHJcbi8vIFN1cHBvcnQ6IElFPDhcclxuLy8gUHJldmVudCBhdHRyaWJ1dGUvcHJvcGVydHkgXCJpbnRlcnBvbGF0aW9uXCJcclxuLy8gaHR0cHM6Ly9tc2RuLm1pY3Jvc29mdC5jb20vZW4tdXMvbGlicmFyeS9tczUzNjQyOSUyOFZTLjg1JTI5LmFzcHhcclxuaWYgKCAhYXNzZXJ0KGZ1bmN0aW9uKCBlbCApIHtcclxuXHRlbC5pbm5lckhUTUwgPSBcIjxhIGhyZWY9JyMnPjwvYT5cIjtcclxuXHRyZXR1cm4gZWwuZmlyc3RDaGlsZC5nZXRBdHRyaWJ1dGUoXCJocmVmXCIpID09PSBcIiNcIiA7XHJcbn0pICkge1xyXG5cdGFkZEhhbmRsZSggXCJ0eXBlfGhyZWZ8aGVpZ2h0fHdpZHRoXCIsIGZ1bmN0aW9uKCBlbGVtLCBuYW1lLCBpc1hNTCApIHtcclxuXHRcdGlmICggIWlzWE1MICkge1xyXG5cdFx0XHRyZXR1cm4gZWxlbS5nZXRBdHRyaWJ1dGUoIG5hbWUsIG5hbWUudG9Mb3dlckNhc2UoKSA9PT0gXCJ0eXBlXCIgPyAxIDogMiApO1xyXG5cdFx0fVxyXG5cdH0pO1xyXG59XHJcblxyXG4vLyBTdXBwb3J0OiBJRTw5XHJcbi8vIFVzZSBkZWZhdWx0VmFsdWUgaW4gcGxhY2Ugb2YgZ2V0QXR0cmlidXRlKFwidmFsdWVcIilcclxuaWYgKCAhc3VwcG9ydC5hdHRyaWJ1dGVzIHx8ICFhc3NlcnQoZnVuY3Rpb24oIGVsICkge1xyXG5cdGVsLmlubmVySFRNTCA9IFwiPGlucHV0Lz5cIjtcclxuXHRlbC5maXJzdENoaWxkLnNldEF0dHJpYnV0ZSggXCJ2YWx1ZVwiLCBcIlwiICk7XHJcblx0cmV0dXJuIGVsLmZpcnN0Q2hpbGQuZ2V0QXR0cmlidXRlKCBcInZhbHVlXCIgKSA9PT0gXCJcIjtcclxufSkgKSB7XHJcblx0YWRkSGFuZGxlKCBcInZhbHVlXCIsIGZ1bmN0aW9uKCBlbGVtLCBuYW1lLCBpc1hNTCApIHtcclxuXHRcdGlmICggIWlzWE1MICYmIGVsZW0ubm9kZU5hbWUudG9Mb3dlckNhc2UoKSA9PT0gXCJpbnB1dFwiICkge1xyXG5cdFx0XHRyZXR1cm4gZWxlbS5kZWZhdWx0VmFsdWU7XHJcblx0XHR9XHJcblx0fSk7XHJcbn1cclxuXHJcbi8vIFN1cHBvcnQ6IElFPDlcclxuLy8gVXNlIGdldEF0dHJpYnV0ZU5vZGUgdG8gZmV0Y2ggYm9vbGVhbnMgd2hlbiBnZXRBdHRyaWJ1dGUgbGllc1xyXG5pZiAoICFhc3NlcnQoZnVuY3Rpb24oIGVsICkge1xyXG5cdHJldHVybiBlbC5nZXRBdHRyaWJ1dGUoXCJkaXNhYmxlZFwiKSA9PSBudWxsO1xyXG59KSApIHtcclxuXHRhZGRIYW5kbGUoIGJvb2xlYW5zLCBmdW5jdGlvbiggZWxlbSwgbmFtZSwgaXNYTUwgKSB7XHJcblx0XHR2YXIgdmFsO1xyXG5cdFx0aWYgKCAhaXNYTUwgKSB7XHJcblx0XHRcdHJldHVybiBlbGVtWyBuYW1lIF0gPT09IHRydWUgPyBuYW1lLnRvTG93ZXJDYXNlKCkgOlxyXG5cdFx0XHRcdFx0KHZhbCA9IGVsZW0uZ2V0QXR0cmlidXRlTm9kZSggbmFtZSApKSAmJiB2YWwuc3BlY2lmaWVkID9cclxuXHRcdFx0XHRcdHZhbC52YWx1ZSA6XHJcblx0XHRcdFx0bnVsbDtcclxuXHRcdH1cclxuXHR9KTtcclxufVxyXG5cclxucmV0dXJuIFNpenpsZTtcclxuXHJcbn0pKCB3aW5kb3cgKTtcclxuXHJcblxyXG5cclxualF1ZXJ5LmZpbmQgPSBTaXp6bGU7XHJcbmpRdWVyeS5leHByID0gU2l6emxlLnNlbGVjdG9ycztcclxuXHJcbi8vIERlcHJlY2F0ZWRcclxualF1ZXJ5LmV4cHJbIFwiOlwiIF0gPSBqUXVlcnkuZXhwci5wc2V1ZG9zO1xyXG5qUXVlcnkudW5pcXVlU29ydCA9IGpRdWVyeS51bmlxdWUgPSBTaXp6bGUudW5pcXVlU29ydDtcclxualF1ZXJ5LnRleHQgPSBTaXp6bGUuZ2V0VGV4dDtcclxualF1ZXJ5LmlzWE1MRG9jID0gU2l6emxlLmlzWE1MO1xyXG5qUXVlcnkuY29udGFpbnMgPSBTaXp6bGUuY29udGFpbnM7XHJcbmpRdWVyeS5lc2NhcGVTZWxlY3RvciA9IFNpenpsZS5lc2NhcGU7XHJcblxyXG5cclxuXHJcblxyXG52YXIgZGlyID0gZnVuY3Rpb24oIGVsZW0sIGRpciwgdW50aWwgKSB7XHJcblx0dmFyIG1hdGNoZWQgPSBbXSxcclxuXHRcdHRydW5jYXRlID0gdW50aWwgIT09IHVuZGVmaW5lZDtcclxuXHJcblx0d2hpbGUgKCAoIGVsZW0gPSBlbGVtWyBkaXIgXSApICYmIGVsZW0ubm9kZVR5cGUgIT09IDkgKSB7XHJcblx0XHRpZiAoIGVsZW0ubm9kZVR5cGUgPT09IDEgKSB7XHJcblx0XHRcdGlmICggdHJ1bmNhdGUgJiYgalF1ZXJ5KCBlbGVtICkuaXMoIHVudGlsICkgKSB7XHJcblx0XHRcdFx0YnJlYWs7XHJcblx0XHRcdH1cclxuXHRcdFx0bWF0Y2hlZC5wdXNoKCBlbGVtICk7XHJcblx0XHR9XHJcblx0fVxyXG5cdHJldHVybiBtYXRjaGVkO1xyXG59O1xyXG5cclxuXHJcbnZhciBzaWJsaW5ncyA9IGZ1bmN0aW9uKCBuLCBlbGVtICkge1xyXG5cdHZhciBtYXRjaGVkID0gW107XHJcblxyXG5cdGZvciAoIDsgbjsgbiA9IG4ubmV4dFNpYmxpbmcgKSB7XHJcblx0XHRpZiAoIG4ubm9kZVR5cGUgPT09IDEgJiYgbiAhPT0gZWxlbSApIHtcclxuXHRcdFx0bWF0Y2hlZC5wdXNoKCBuICk7XHJcblx0XHR9XHJcblx0fVxyXG5cclxuXHRyZXR1cm4gbWF0Y2hlZDtcclxufTtcclxuXHJcblxyXG52YXIgcm5lZWRzQ29udGV4dCA9IGpRdWVyeS5leHByLm1hdGNoLm5lZWRzQ29udGV4dDtcclxuXHJcblxyXG5cclxuZnVuY3Rpb24gbm9kZU5hbWUoIGVsZW0sIG5hbWUgKSB7XHJcblxyXG4gIHJldHVybiBlbGVtLm5vZGVOYW1lICYmIGVsZW0ubm9kZU5hbWUudG9Mb3dlckNhc2UoKSA9PT0gbmFtZS50b0xvd2VyQ2FzZSgpO1xyXG5cclxufTtcclxudmFyIHJzaW5nbGVUYWcgPSAoIC9ePChbYS16XVteXFwvXFwwPjpcXHgyMFxcdFxcclxcblxcZl0qKVtcXHgyMFxcdFxcclxcblxcZl0qXFwvPz4oPzo8XFwvXFwxPnwpJC9pICk7XHJcblxyXG5cclxuXHJcbi8vIEltcGxlbWVudCB0aGUgaWRlbnRpY2FsIGZ1bmN0aW9uYWxpdHkgZm9yIGZpbHRlciBhbmQgbm90XHJcbmZ1bmN0aW9uIHdpbm5vdyggZWxlbWVudHMsIHF1YWxpZmllciwgbm90ICkge1xyXG5cdGlmICggaXNGdW5jdGlvbiggcXVhbGlmaWVyICkgKSB7XHJcblx0XHRyZXR1cm4galF1ZXJ5LmdyZXAoIGVsZW1lbnRzLCBmdW5jdGlvbiggZWxlbSwgaSApIHtcclxuXHRcdFx0cmV0dXJuICEhcXVhbGlmaWVyLmNhbGwoIGVsZW0sIGksIGVsZW0gKSAhPT0gbm90O1xyXG5cdFx0fSApO1xyXG5cdH1cclxuXHJcblx0Ly8gU2luZ2xlIGVsZW1lbnRcclxuXHRpZiAoIHF1YWxpZmllci5ub2RlVHlwZSApIHtcclxuXHRcdHJldHVybiBqUXVlcnkuZ3JlcCggZWxlbWVudHMsIGZ1bmN0aW9uKCBlbGVtICkge1xyXG5cdFx0XHRyZXR1cm4gKCBlbGVtID09PSBxdWFsaWZpZXIgKSAhPT0gbm90O1xyXG5cdFx0fSApO1xyXG5cdH1cclxuXHJcblx0Ly8gQXJyYXlsaWtlIG9mIGVsZW1lbnRzIChqUXVlcnksIGFyZ3VtZW50cywgQXJyYXkpXHJcblx0aWYgKCB0eXBlb2YgcXVhbGlmaWVyICE9PSBcInN0cmluZ1wiICkge1xyXG5cdFx0cmV0dXJuIGpRdWVyeS5ncmVwKCBlbGVtZW50cywgZnVuY3Rpb24oIGVsZW0gKSB7XHJcblx0XHRcdHJldHVybiAoIGluZGV4T2YuY2FsbCggcXVhbGlmaWVyLCBlbGVtICkgPiAtMSApICE9PSBub3Q7XHJcblx0XHR9ICk7XHJcblx0fVxyXG5cclxuXHQvLyBGaWx0ZXJlZCBkaXJlY3RseSBmb3IgYm90aCBzaW1wbGUgYW5kIGNvbXBsZXggc2VsZWN0b3JzXHJcblx0cmV0dXJuIGpRdWVyeS5maWx0ZXIoIHF1YWxpZmllciwgZWxlbWVudHMsIG5vdCApO1xyXG59XHJcblxyXG5qUXVlcnkuZmlsdGVyID0gZnVuY3Rpb24oIGV4cHIsIGVsZW1zLCBub3QgKSB7XHJcblx0dmFyIGVsZW0gPSBlbGVtc1sgMCBdO1xyXG5cclxuXHRpZiAoIG5vdCApIHtcclxuXHRcdGV4cHIgPSBcIjpub3QoXCIgKyBleHByICsgXCIpXCI7XHJcblx0fVxyXG5cclxuXHRpZiAoIGVsZW1zLmxlbmd0aCA9PT0gMSAmJiBlbGVtLm5vZGVUeXBlID09PSAxICkge1xyXG5cdFx0cmV0dXJuIGpRdWVyeS5maW5kLm1hdGNoZXNTZWxlY3RvciggZWxlbSwgZXhwciApID8gWyBlbGVtIF0gOiBbXTtcclxuXHR9XHJcblxyXG5cdHJldHVybiBqUXVlcnkuZmluZC5tYXRjaGVzKCBleHByLCBqUXVlcnkuZ3JlcCggZWxlbXMsIGZ1bmN0aW9uKCBlbGVtICkge1xyXG5cdFx0cmV0dXJuIGVsZW0ubm9kZVR5cGUgPT09IDE7XHJcblx0fSApICk7XHJcbn07XHJcblxyXG5qUXVlcnkuZm4uZXh0ZW5kKCB7XHJcblx0ZmluZDogZnVuY3Rpb24oIHNlbGVjdG9yICkge1xyXG5cdFx0dmFyIGksIHJldCxcclxuXHRcdFx0bGVuID0gdGhpcy5sZW5ndGgsXHJcblx0XHRcdHNlbGYgPSB0aGlzO1xyXG5cclxuXHRcdGlmICggdHlwZW9mIHNlbGVjdG9yICE9PSBcInN0cmluZ1wiICkge1xyXG5cdFx0XHRyZXR1cm4gdGhpcy5wdXNoU3RhY2soIGpRdWVyeSggc2VsZWN0b3IgKS5maWx0ZXIoIGZ1bmN0aW9uKCkge1xyXG5cdFx0XHRcdGZvciAoIGkgPSAwOyBpIDwgbGVuOyBpKysgKSB7XHJcblx0XHRcdFx0XHRpZiAoIGpRdWVyeS5jb250YWlucyggc2VsZlsgaSBdLCB0aGlzICkgKSB7XHJcblx0XHRcdFx0XHRcdHJldHVybiB0cnVlO1xyXG5cdFx0XHRcdFx0fVxyXG5cdFx0XHRcdH1cclxuXHRcdFx0fSApICk7XHJcblx0XHR9XHJcblxyXG5cdFx0cmV0ID0gdGhpcy5wdXNoU3RhY2soIFtdICk7XHJcblxyXG5cdFx0Zm9yICggaSA9IDA7IGkgPCBsZW47IGkrKyApIHtcclxuXHRcdFx0alF1ZXJ5LmZpbmQoIHNlbGVjdG9yLCBzZWxmWyBpIF0sIHJldCApO1xyXG5cdFx0fVxyXG5cclxuXHRcdHJldHVybiBsZW4gPiAxID8galF1ZXJ5LnVuaXF1ZVNvcnQoIHJldCApIDogcmV0O1xyXG5cdH0sXHJcblx0ZmlsdGVyOiBmdW5jdGlvbiggc2VsZWN0b3IgKSB7XHJcblx0XHRyZXR1cm4gdGhpcy5wdXNoU3RhY2soIHdpbm5vdyggdGhpcywgc2VsZWN0b3IgfHwgW10sIGZhbHNlICkgKTtcclxuXHR9LFxyXG5cdG5vdDogZnVuY3Rpb24oIHNlbGVjdG9yICkge1xyXG5cdFx0cmV0dXJuIHRoaXMucHVzaFN0YWNrKCB3aW5ub3coIHRoaXMsIHNlbGVjdG9yIHx8IFtdLCB0cnVlICkgKTtcclxuXHR9LFxyXG5cdGlzOiBmdW5jdGlvbiggc2VsZWN0b3IgKSB7XHJcblx0XHRyZXR1cm4gISF3aW5ub3coXHJcblx0XHRcdHRoaXMsXHJcblxyXG5cdFx0XHQvLyBJZiB0aGlzIGlzIGEgcG9zaXRpb25hbC9yZWxhdGl2ZSBzZWxlY3RvciwgY2hlY2sgbWVtYmVyc2hpcCBpbiB0aGUgcmV0dXJuZWQgc2V0XHJcblx0XHRcdC8vIHNvICQoXCJwOmZpcnN0XCIpLmlzKFwicDpsYXN0XCIpIHdvbid0IHJldHVybiB0cnVlIGZvciBhIGRvYyB3aXRoIHR3byBcInBcIi5cclxuXHRcdFx0dHlwZW9mIHNlbGVjdG9yID09PSBcInN0cmluZ1wiICYmIHJuZWVkc0NvbnRleHQudGVzdCggc2VsZWN0b3IgKSA/XHJcblx0XHRcdFx0alF1ZXJ5KCBzZWxlY3RvciApIDpcclxuXHRcdFx0XHRzZWxlY3RvciB8fCBbXSxcclxuXHRcdFx0ZmFsc2VcclxuXHRcdCkubGVuZ3RoO1xyXG5cdH1cclxufSApO1xyXG5cclxuXHJcbi8vIEluaXRpYWxpemUgYSBqUXVlcnkgb2JqZWN0XHJcblxyXG5cclxuLy8gQSBjZW50cmFsIHJlZmVyZW5jZSB0byB0aGUgcm9vdCBqUXVlcnkoZG9jdW1lbnQpXHJcbnZhciByb290alF1ZXJ5LFxyXG5cclxuXHQvLyBBIHNpbXBsZSB3YXkgdG8gY2hlY2sgZm9yIEhUTUwgc3RyaW5nc1xyXG5cdC8vIFByaW9yaXRpemUgI2lkIG92ZXIgPHRhZz4gdG8gYXZvaWQgWFNTIHZpYSBsb2NhdGlvbi5oYXNoICgjOTUyMSlcclxuXHQvLyBTdHJpY3QgSFRNTCByZWNvZ25pdGlvbiAoIzExMjkwOiBtdXN0IHN0YXJ0IHdpdGggPClcclxuXHQvLyBTaG9ydGN1dCBzaW1wbGUgI2lkIGNhc2UgZm9yIHNwZWVkXHJcblx0cnF1aWNrRXhwciA9IC9eKD86XFxzKig8W1xcd1xcV10rPilbXj5dKnwjKFtcXHctXSspKSQvLFxyXG5cclxuXHRpbml0ID0galF1ZXJ5LmZuLmluaXQgPSBmdW5jdGlvbiggc2VsZWN0b3IsIGNvbnRleHQsIHJvb3QgKSB7XHJcblx0XHR2YXIgbWF0Y2gsIGVsZW07XHJcblxyXG5cdFx0Ly8gSEFORExFOiAkKFwiXCIpLCAkKG51bGwpLCAkKHVuZGVmaW5lZCksICQoZmFsc2UpXHJcblx0XHRpZiAoICFzZWxlY3RvciApIHtcclxuXHRcdFx0cmV0dXJuIHRoaXM7XHJcblx0XHR9XHJcblxyXG5cdFx0Ly8gTWV0aG9kIGluaXQoKSBhY2NlcHRzIGFuIGFsdGVybmF0ZSByb290alF1ZXJ5XHJcblx0XHQvLyBzbyBtaWdyYXRlIGNhbiBzdXBwb3J0IGpRdWVyeS5zdWIgKGdoLTIxMDEpXHJcblx0XHRyb290ID0gcm9vdCB8fCByb290alF1ZXJ5O1xyXG5cclxuXHRcdC8vIEhhbmRsZSBIVE1MIHN0cmluZ3NcclxuXHRcdGlmICggdHlwZW9mIHNlbGVjdG9yID09PSBcInN0cmluZ1wiICkge1xyXG5cdFx0XHRpZiAoIHNlbGVjdG9yWyAwIF0gPT09IFwiPFwiICYmXHJcblx0XHRcdFx0c2VsZWN0b3JbIHNlbGVjdG9yLmxlbmd0aCAtIDEgXSA9PT0gXCI+XCIgJiZcclxuXHRcdFx0XHRzZWxlY3Rvci5sZW5ndGggPj0gMyApIHtcclxuXHJcblx0XHRcdFx0Ly8gQXNzdW1lIHRoYXQgc3RyaW5ncyB0aGF0IHN0YXJ0IGFuZCBlbmQgd2l0aCA8PiBhcmUgSFRNTCBhbmQgc2tpcCB0aGUgcmVnZXggY2hlY2tcclxuXHRcdFx0XHRtYXRjaCA9IFsgbnVsbCwgc2VsZWN0b3IsIG51bGwgXTtcclxuXHJcblx0XHRcdH0gZWxzZSB7XHJcblx0XHRcdFx0bWF0Y2ggPSBycXVpY2tFeHByLmV4ZWMoIHNlbGVjdG9yICk7XHJcblx0XHRcdH1cclxuXHJcblx0XHRcdC8vIE1hdGNoIGh0bWwgb3IgbWFrZSBzdXJlIG5vIGNvbnRleHQgaXMgc3BlY2lmaWVkIGZvciAjaWRcclxuXHRcdFx0aWYgKCBtYXRjaCAmJiAoIG1hdGNoWyAxIF0gfHwgIWNvbnRleHQgKSApIHtcclxuXHJcblx0XHRcdFx0Ly8gSEFORExFOiAkKGh0bWwpIC0+ICQoYXJyYXkpXHJcblx0XHRcdFx0aWYgKCBtYXRjaFsgMSBdICkge1xyXG5cdFx0XHRcdFx0Y29udGV4dCA9IGNvbnRleHQgaW5zdGFuY2VvZiBqUXVlcnkgPyBjb250ZXh0WyAwIF0gOiBjb250ZXh0O1xyXG5cclxuXHRcdFx0XHRcdC8vIE9wdGlvbiB0byBydW4gc2NyaXB0cyBpcyB0cnVlIGZvciBiYWNrLWNvbXBhdFxyXG5cdFx0XHRcdFx0Ly8gSW50ZW50aW9uYWxseSBsZXQgdGhlIGVycm9yIGJlIHRocm93biBpZiBwYXJzZUhUTUwgaXMgbm90IHByZXNlbnRcclxuXHRcdFx0XHRcdGpRdWVyeS5tZXJnZSggdGhpcywgalF1ZXJ5LnBhcnNlSFRNTChcclxuXHRcdFx0XHRcdFx0bWF0Y2hbIDEgXSxcclxuXHRcdFx0XHRcdFx0Y29udGV4dCAmJiBjb250ZXh0Lm5vZGVUeXBlID8gY29udGV4dC5vd25lckRvY3VtZW50IHx8IGNvbnRleHQgOiBkb2N1bWVudCxcclxuXHRcdFx0XHRcdFx0dHJ1ZVxyXG5cdFx0XHRcdFx0KSApO1xyXG5cclxuXHRcdFx0XHRcdC8vIEhBTkRMRTogJChodG1sLCBwcm9wcylcclxuXHRcdFx0XHRcdGlmICggcnNpbmdsZVRhZy50ZXN0KCBtYXRjaFsgMSBdICkgJiYgalF1ZXJ5LmlzUGxhaW5PYmplY3QoIGNvbnRleHQgKSApIHtcclxuXHRcdFx0XHRcdFx0Zm9yICggbWF0Y2ggaW4gY29udGV4dCApIHtcclxuXHJcblx0XHRcdFx0XHRcdFx0Ly8gUHJvcGVydGllcyBvZiBjb250ZXh0IGFyZSBjYWxsZWQgYXMgbWV0aG9kcyBpZiBwb3NzaWJsZVxyXG5cdFx0XHRcdFx0XHRcdGlmICggaXNGdW5jdGlvbiggdGhpc1sgbWF0Y2ggXSApICkge1xyXG5cdFx0XHRcdFx0XHRcdFx0dGhpc1sgbWF0Y2ggXSggY29udGV4dFsgbWF0Y2ggXSApO1xyXG5cclxuXHRcdFx0XHRcdFx0XHQvLyAuLi5hbmQgb3RoZXJ3aXNlIHNldCBhcyBhdHRyaWJ1dGVzXHJcblx0XHRcdFx0XHRcdFx0fSBlbHNlIHtcclxuXHRcdFx0XHRcdFx0XHRcdHRoaXMuYXR0ciggbWF0Y2gsIGNvbnRleHRbIG1hdGNoIF0gKTtcclxuXHRcdFx0XHRcdFx0XHR9XHJcblx0XHRcdFx0XHRcdH1cclxuXHRcdFx0XHRcdH1cclxuXHJcblx0XHRcdFx0XHRyZXR1cm4gdGhpcztcclxuXHJcblx0XHRcdFx0Ly8gSEFORExFOiAkKCNpZClcclxuXHRcdFx0XHR9IGVsc2Uge1xyXG5cdFx0XHRcdFx0ZWxlbSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCBtYXRjaFsgMiBdICk7XHJcblxyXG5cdFx0XHRcdFx0aWYgKCBlbGVtICkge1xyXG5cclxuXHRcdFx0XHRcdFx0Ly8gSW5qZWN0IHRoZSBlbGVtZW50IGRpcmVjdGx5IGludG8gdGhlIGpRdWVyeSBvYmplY3RcclxuXHRcdFx0XHRcdFx0dGhpc1sgMCBdID0gZWxlbTtcclxuXHRcdFx0XHRcdFx0dGhpcy5sZW5ndGggPSAxO1xyXG5cdFx0XHRcdFx0fVxyXG5cdFx0XHRcdFx0cmV0dXJuIHRoaXM7XHJcblx0XHRcdFx0fVxyXG5cclxuXHRcdFx0Ly8gSEFORExFOiAkKGV4cHIsICQoLi4uKSlcclxuXHRcdFx0fSBlbHNlIGlmICggIWNvbnRleHQgfHwgY29udGV4dC5qcXVlcnkgKSB7XHJcblx0XHRcdFx0cmV0dXJuICggY29udGV4dCB8fCByb290ICkuZmluZCggc2VsZWN0b3IgKTtcclxuXHJcblx0XHRcdC8vIEhBTkRMRTogJChleHByLCBjb250ZXh0KVxyXG5cdFx0XHQvLyAod2hpY2ggaXMganVzdCBlcXVpdmFsZW50IHRvOiAkKGNvbnRleHQpLmZpbmQoZXhwcilcclxuXHRcdFx0fSBlbHNlIHtcclxuXHRcdFx0XHRyZXR1cm4gdGhpcy5jb25zdHJ1Y3RvciggY29udGV4dCApLmZpbmQoIHNlbGVjdG9yICk7XHJcblx0XHRcdH1cclxuXHJcblx0XHQvLyBIQU5ETEU6ICQoRE9NRWxlbWVudClcclxuXHRcdH0gZWxzZSBpZiAoIHNlbGVjdG9yLm5vZGVUeXBlICkge1xyXG5cdFx0XHR0aGlzWyAwIF0gPSBzZWxlY3RvcjtcclxuXHRcdFx0dGhpcy5sZW5ndGggPSAxO1xyXG5cdFx0XHRyZXR1cm4gdGhpcztcclxuXHJcblx0XHQvLyBIQU5ETEU6ICQoZnVuY3Rpb24pXHJcblx0XHQvLyBTaG9ydGN1dCBmb3IgZG9jdW1lbnQgcmVhZHlcclxuXHRcdH0gZWxzZSBpZiAoIGlzRnVuY3Rpb24oIHNlbGVjdG9yICkgKSB7XHJcblx0XHRcdHJldHVybiByb290LnJlYWR5ICE9PSB1bmRlZmluZWQgP1xyXG5cdFx0XHRcdHJvb3QucmVhZHkoIHNlbGVjdG9yICkgOlxyXG5cclxuXHRcdFx0XHQvLyBFeGVjdXRlIGltbWVkaWF0ZWx5IGlmIHJlYWR5IGlzIG5vdCBwcmVzZW50XHJcblx0XHRcdFx0c2VsZWN0b3IoIGpRdWVyeSApO1xyXG5cdFx0fVxyXG5cclxuXHRcdHJldHVybiBqUXVlcnkubWFrZUFycmF5KCBzZWxlY3RvciwgdGhpcyApO1xyXG5cdH07XHJcblxyXG4vLyBHaXZlIHRoZSBpbml0IGZ1bmN0aW9uIHRoZSBqUXVlcnkgcHJvdG90eXBlIGZvciBsYXRlciBpbnN0YW50aWF0aW9uXHJcbmluaXQucHJvdG90eXBlID0galF1ZXJ5LmZuO1xyXG5cclxuLy8gSW5pdGlhbGl6ZSBjZW50cmFsIHJlZmVyZW5jZVxyXG5yb290alF1ZXJ5ID0galF1ZXJ5KCBkb2N1bWVudCApO1xyXG5cclxuXHJcbnZhciBycGFyZW50c3ByZXYgPSAvXig/OnBhcmVudHN8cHJldig/OlVudGlsfEFsbCkpLyxcclxuXHJcblx0Ly8gTWV0aG9kcyBndWFyYW50ZWVkIHRvIHByb2R1Y2UgYSB1bmlxdWUgc2V0IHdoZW4gc3RhcnRpbmcgZnJvbSBhIHVuaXF1ZSBzZXRcclxuXHRndWFyYW50ZWVkVW5pcXVlID0ge1xyXG5cdFx0Y2hpbGRyZW46IHRydWUsXHJcblx0XHRjb250ZW50czogdHJ1ZSxcclxuXHRcdG5leHQ6IHRydWUsXHJcblx0XHRwcmV2OiB0cnVlXHJcblx0fTtcclxuXHJcbmpRdWVyeS5mbi5leHRlbmQoIHtcclxuXHRoYXM6IGZ1bmN0aW9uKCB0YXJnZXQgKSB7XHJcblx0XHR2YXIgdGFyZ2V0cyA9IGpRdWVyeSggdGFyZ2V0LCB0aGlzICksXHJcblx0XHRcdGwgPSB0YXJnZXRzLmxlbmd0aDtcclxuXHJcblx0XHRyZXR1cm4gdGhpcy5maWx0ZXIoIGZ1bmN0aW9uKCkge1xyXG5cdFx0XHR2YXIgaSA9IDA7XHJcblx0XHRcdGZvciAoIDsgaSA8IGw7IGkrKyApIHtcclxuXHRcdFx0XHRpZiAoIGpRdWVyeS5jb250YWlucyggdGhpcywgdGFyZ2V0c1sgaSBdICkgKSB7XHJcblx0XHRcdFx0XHRyZXR1cm4gdHJ1ZTtcclxuXHRcdFx0XHR9XHJcblx0XHRcdH1cclxuXHRcdH0gKTtcclxuXHR9LFxyXG5cclxuXHRjbG9zZXN0OiBmdW5jdGlvbiggc2VsZWN0b3JzLCBjb250ZXh0ICkge1xyXG5cdFx0dmFyIGN1cixcclxuXHRcdFx0aSA9IDAsXHJcblx0XHRcdGwgPSB0aGlzLmxlbmd0aCxcclxuXHRcdFx0bWF0Y2hlZCA9IFtdLFxyXG5cdFx0XHR0YXJnZXRzID0gdHlwZW9mIHNlbGVjdG9ycyAhPT0gXCJzdHJpbmdcIiAmJiBqUXVlcnkoIHNlbGVjdG9ycyApO1xyXG5cclxuXHRcdC8vIFBvc2l0aW9uYWwgc2VsZWN0b3JzIG5ldmVyIG1hdGNoLCBzaW5jZSB0aGVyZSdzIG5vIF9zZWxlY3Rpb25fIGNvbnRleHRcclxuXHRcdGlmICggIXJuZWVkc0NvbnRleHQudGVzdCggc2VsZWN0b3JzICkgKSB7XHJcblx0XHRcdGZvciAoIDsgaSA8IGw7IGkrKyApIHtcclxuXHRcdFx0XHRmb3IgKCBjdXIgPSB0aGlzWyBpIF07IGN1ciAmJiBjdXIgIT09IGNvbnRleHQ7IGN1ciA9IGN1ci5wYXJlbnROb2RlICkge1xyXG5cclxuXHRcdFx0XHRcdC8vIEFsd2F5cyBza2lwIGRvY3VtZW50IGZyYWdtZW50c1xyXG5cdFx0XHRcdFx0aWYgKCBjdXIubm9kZVR5cGUgPCAxMSAmJiAoIHRhcmdldHMgP1xyXG5cdFx0XHRcdFx0XHR0YXJnZXRzLmluZGV4KCBjdXIgKSA+IC0xIDpcclxuXHJcblx0XHRcdFx0XHRcdC8vIERvbid0IHBhc3Mgbm9uLWVsZW1lbnRzIHRvIFNpenpsZVxyXG5cdFx0XHRcdFx0XHRjdXIubm9kZVR5cGUgPT09IDEgJiZcclxuXHRcdFx0XHRcdFx0XHRqUXVlcnkuZmluZC5tYXRjaGVzU2VsZWN0b3IoIGN1ciwgc2VsZWN0b3JzICkgKSApIHtcclxuXHJcblx0XHRcdFx0XHRcdG1hdGNoZWQucHVzaCggY3VyICk7XHJcblx0XHRcdFx0XHRcdGJyZWFrO1xyXG5cdFx0XHRcdFx0fVxyXG5cdFx0XHRcdH1cclxuXHRcdFx0fVxyXG5cdFx0fVxyXG5cclxuXHRcdHJldHVybiB0aGlzLnB1c2hTdGFjayggbWF0Y2hlZC5sZW5ndGggPiAxID8galF1ZXJ5LnVuaXF1ZVNvcnQoIG1hdGNoZWQgKSA6IG1hdGNoZWQgKTtcclxuXHR9LFxyXG5cclxuXHQvLyBEZXRlcm1pbmUgdGhlIHBvc2l0aW9uIG9mIGFuIGVsZW1lbnQgd2l0aGluIHRoZSBzZXRcclxuXHRpbmRleDogZnVuY3Rpb24oIGVsZW0gKSB7XHJcblxyXG5cdFx0Ly8gTm8gYXJndW1lbnQsIHJldHVybiBpbmRleCBpbiBwYXJlbnRcclxuXHRcdGlmICggIWVsZW0gKSB7XHJcblx0XHRcdHJldHVybiAoIHRoaXNbIDAgXSAmJiB0aGlzWyAwIF0ucGFyZW50Tm9kZSApID8gdGhpcy5maXJzdCgpLnByZXZBbGwoKS5sZW5ndGggOiAtMTtcclxuXHRcdH1cclxuXHJcblx0XHQvLyBJbmRleCBpbiBzZWxlY3RvclxyXG5cdFx0aWYgKCB0eXBlb2YgZWxlbSA9PT0gXCJzdHJpbmdcIiApIHtcclxuXHRcdFx0cmV0dXJuIGluZGV4T2YuY2FsbCggalF1ZXJ5KCBlbGVtICksIHRoaXNbIDAgXSApO1xyXG5cdFx0fVxyXG5cclxuXHRcdC8vIExvY2F0ZSB0aGUgcG9zaXRpb24gb2YgdGhlIGRlc2lyZWQgZWxlbWVudFxyXG5cdFx0cmV0dXJuIGluZGV4T2YuY2FsbCggdGhpcyxcclxuXHJcblx0XHRcdC8vIElmIGl0IHJlY2VpdmVzIGEgalF1ZXJ5IG9iamVjdCwgdGhlIGZpcnN0IGVsZW1lbnQgaXMgdXNlZFxyXG5cdFx0XHRlbGVtLmpxdWVyeSA/IGVsZW1bIDAgXSA6IGVsZW1cclxuXHRcdCk7XHJcblx0fSxcclxuXHJcblx0YWRkOiBmdW5jdGlvbiggc2VsZWN0b3IsIGNvbnRleHQgKSB7XHJcblx0XHRyZXR1cm4gdGhpcy5wdXNoU3RhY2soXHJcblx0XHRcdGpRdWVyeS51bmlxdWVTb3J0KFxyXG5cdFx0XHRcdGpRdWVyeS5tZXJnZSggdGhpcy5nZXQoKSwgalF1ZXJ5KCBzZWxlY3RvciwgY29udGV4dCApIClcclxuXHRcdFx0KVxyXG5cdFx0KTtcclxuXHR9LFxyXG5cclxuXHRhZGRCYWNrOiBmdW5jdGlvbiggc2VsZWN0b3IgKSB7XHJcblx0XHRyZXR1cm4gdGhpcy5hZGQoIHNlbGVjdG9yID09IG51bGwgP1xyXG5cdFx0XHR0aGlzLnByZXZPYmplY3QgOiB0aGlzLnByZXZPYmplY3QuZmlsdGVyKCBzZWxlY3RvciApXHJcblx0XHQpO1xyXG5cdH1cclxufSApO1xyXG5cclxuZnVuY3Rpb24gc2libGluZyggY3VyLCBkaXIgKSB7XHJcblx0d2hpbGUgKCAoIGN1ciA9IGN1clsgZGlyIF0gKSAmJiBjdXIubm9kZVR5cGUgIT09IDEgKSB7fVxyXG5cdHJldHVybiBjdXI7XHJcbn1cclxuXHJcbmpRdWVyeS5lYWNoKCB7XHJcblx0cGFyZW50OiBmdW5jdGlvbiggZWxlbSApIHtcclxuXHRcdHZhciBwYXJlbnQgPSBlbGVtLnBhcmVudE5vZGU7XHJcblx0XHRyZXR1cm4gcGFyZW50ICYmIHBhcmVudC5ub2RlVHlwZSAhPT0gMTEgPyBwYXJlbnQgOiBudWxsO1xyXG5cdH0sXHJcblx0cGFyZW50czogZnVuY3Rpb24oIGVsZW0gKSB7XHJcblx0XHRyZXR1cm4gZGlyKCBlbGVtLCBcInBhcmVudE5vZGVcIiApO1xyXG5cdH0sXHJcblx0cGFyZW50c1VudGlsOiBmdW5jdGlvbiggZWxlbSwgaSwgdW50aWwgKSB7XHJcblx0XHRyZXR1cm4gZGlyKCBlbGVtLCBcInBhcmVudE5vZGVcIiwgdW50aWwgKTtcclxuXHR9LFxyXG5cdG5leHQ6IGZ1bmN0aW9uKCBlbGVtICkge1xyXG5cdFx0cmV0dXJuIHNpYmxpbmcoIGVsZW0sIFwibmV4dFNpYmxpbmdcIiApO1xyXG5cdH0sXHJcblx0cHJldjogZnVuY3Rpb24oIGVsZW0gKSB7XHJcblx0XHRyZXR1cm4gc2libGluZyggZWxlbSwgXCJwcmV2aW91c1NpYmxpbmdcIiApO1xyXG5cdH0sXHJcblx0bmV4dEFsbDogZnVuY3Rpb24oIGVsZW0gKSB7XHJcblx0XHRyZXR1cm4gZGlyKCBlbGVtLCBcIm5leHRTaWJsaW5nXCIgKTtcclxuXHR9LFxyXG5cdHByZXZBbGw6IGZ1bmN0aW9uKCBlbGVtICkge1xyXG5cdFx0cmV0dXJuIGRpciggZWxlbSwgXCJwcmV2aW91c1NpYmxpbmdcIiApO1xyXG5cdH0sXHJcblx0bmV4dFVudGlsOiBmdW5jdGlvbiggZWxlbSwgaSwgdW50aWwgKSB7XHJcblx0XHRyZXR1cm4gZGlyKCBlbGVtLCBcIm5leHRTaWJsaW5nXCIsIHVudGlsICk7XHJcblx0fSxcclxuXHRwcmV2VW50aWw6IGZ1bmN0aW9uKCBlbGVtLCBpLCB1bnRpbCApIHtcclxuXHRcdHJldHVybiBkaXIoIGVsZW0sIFwicHJldmlvdXNTaWJsaW5nXCIsIHVudGlsICk7XHJcblx0fSxcclxuXHRzaWJsaW5nczogZnVuY3Rpb24oIGVsZW0gKSB7XHJcblx0XHRyZXR1cm4gc2libGluZ3MoICggZWxlbS5wYXJlbnROb2RlIHx8IHt9ICkuZmlyc3RDaGlsZCwgZWxlbSApO1xyXG5cdH0sXHJcblx0Y2hpbGRyZW46IGZ1bmN0aW9uKCBlbGVtICkge1xyXG5cdFx0cmV0dXJuIHNpYmxpbmdzKCBlbGVtLmZpcnN0Q2hpbGQgKTtcclxuXHR9LFxyXG5cdGNvbnRlbnRzOiBmdW5jdGlvbiggZWxlbSApIHtcclxuICAgICAgICBpZiAoIG5vZGVOYW1lKCBlbGVtLCBcImlmcmFtZVwiICkgKSB7XHJcbiAgICAgICAgICAgIHJldHVybiBlbGVtLmNvbnRlbnREb2N1bWVudDtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIC8vIFN1cHBvcnQ6IElFIDkgLSAxMSBvbmx5LCBpT1MgNyBvbmx5LCBBbmRyb2lkIEJyb3dzZXIgPD00LjMgb25seVxyXG4gICAgICAgIC8vIFRyZWF0IHRoZSB0ZW1wbGF0ZSBlbGVtZW50IGFzIGEgcmVndWxhciBvbmUgaW4gYnJvd3NlcnMgdGhhdFxyXG4gICAgICAgIC8vIGRvbid0IHN1cHBvcnQgaXQuXHJcbiAgICAgICAgaWYgKCBub2RlTmFtZSggZWxlbSwgXCJ0ZW1wbGF0ZVwiICkgKSB7XHJcbiAgICAgICAgICAgIGVsZW0gPSBlbGVtLmNvbnRlbnQgfHwgZWxlbTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIHJldHVybiBqUXVlcnkubWVyZ2UoIFtdLCBlbGVtLmNoaWxkTm9kZXMgKTtcclxuXHR9XHJcbn0sIGZ1bmN0aW9uKCBuYW1lLCBmbiApIHtcclxuXHRqUXVlcnkuZm5bIG5hbWUgXSA9IGZ1bmN0aW9uKCB1bnRpbCwgc2VsZWN0b3IgKSB7XHJcblx0XHR2YXIgbWF0Y2hlZCA9IGpRdWVyeS5tYXAoIHRoaXMsIGZuLCB1bnRpbCApO1xyXG5cclxuXHRcdGlmICggbmFtZS5zbGljZSggLTUgKSAhPT0gXCJVbnRpbFwiICkge1xyXG5cdFx0XHRzZWxlY3RvciA9IHVudGlsO1xyXG5cdFx0fVxyXG5cclxuXHRcdGlmICggc2VsZWN0b3IgJiYgdHlwZW9mIHNlbGVjdG9yID09PSBcInN0cmluZ1wiICkge1xyXG5cdFx0XHRtYXRjaGVkID0galF1ZXJ5LmZpbHRlciggc2VsZWN0b3IsIG1hdGNoZWQgKTtcclxuXHRcdH1cclxuXHJcblx0XHRpZiAoIHRoaXMubGVuZ3RoID4gMSApIHtcclxuXHJcblx0XHRcdC8vIFJlbW92ZSBkdXBsaWNhdGVzXHJcblx0XHRcdGlmICggIWd1YXJhbnRlZWRVbmlxdWVbIG5hbWUgXSApIHtcclxuXHRcdFx0XHRqUXVlcnkudW5pcXVlU29ydCggbWF0Y2hlZCApO1xyXG5cdFx0XHR9XHJcblxyXG5cdFx0XHQvLyBSZXZlcnNlIG9yZGVyIGZvciBwYXJlbnRzKiBhbmQgcHJldi1kZXJpdmF0aXZlc1xyXG5cdFx0XHRpZiAoIHJwYXJlbnRzcHJldi50ZXN0KCBuYW1lICkgKSB7XHJcblx0XHRcdFx0bWF0Y2hlZC5yZXZlcnNlKCk7XHJcblx0XHRcdH1cclxuXHRcdH1cclxuXHJcblx0XHRyZXR1cm4gdGhpcy5wdXNoU3RhY2soIG1hdGNoZWQgKTtcclxuXHR9O1xyXG59ICk7XHJcbnZhciBybm90aHRtbHdoaXRlID0gKCAvW15cXHgyMFxcdFxcclxcblxcZl0rL2cgKTtcclxuXHJcblxyXG5cclxuLy8gQ29udmVydCBTdHJpbmctZm9ybWF0dGVkIG9wdGlvbnMgaW50byBPYmplY3QtZm9ybWF0dGVkIG9uZXNcclxuZnVuY3Rpb24gY3JlYXRlT3B0aW9ucyggb3B0aW9ucyApIHtcclxuXHR2YXIgb2JqZWN0ID0ge307XHJcblx0alF1ZXJ5LmVhY2goIG9wdGlvbnMubWF0Y2goIHJub3RodG1sd2hpdGUgKSB8fCBbXSwgZnVuY3Rpb24oIF8sIGZsYWcgKSB7XHJcblx0XHRvYmplY3RbIGZsYWcgXSA9IHRydWU7XHJcblx0fSApO1xyXG5cdHJldHVybiBvYmplY3Q7XHJcbn1cclxuXHJcbi8qXHJcbiAqIENyZWF0ZSBhIGNhbGxiYWNrIGxpc3QgdXNpbmcgdGhlIGZvbGxvd2luZyBwYXJhbWV0ZXJzOlxyXG4gKlxyXG4gKlx0b3B0aW9uczogYW4gb3B0aW9uYWwgbGlzdCBvZiBzcGFjZS1zZXBhcmF0ZWQgb3B0aW9ucyB0aGF0IHdpbGwgY2hhbmdlIGhvd1xyXG4gKlx0XHRcdHRoZSBjYWxsYmFjayBsaXN0IGJlaGF2ZXMgb3IgYSBtb3JlIHRyYWRpdGlvbmFsIG9wdGlvbiBvYmplY3RcclxuICpcclxuICogQnkgZGVmYXVsdCBhIGNhbGxiYWNrIGxpc3Qgd2lsbCBhY3QgbGlrZSBhbiBldmVudCBjYWxsYmFjayBsaXN0IGFuZCBjYW4gYmVcclxuICogXCJmaXJlZFwiIG11bHRpcGxlIHRpbWVzLlxyXG4gKlxyXG4gKiBQb3NzaWJsZSBvcHRpb25zOlxyXG4gKlxyXG4gKlx0b25jZTpcdFx0XHR3aWxsIGVuc3VyZSB0aGUgY2FsbGJhY2sgbGlzdCBjYW4gb25seSBiZSBmaXJlZCBvbmNlIChsaWtlIGEgRGVmZXJyZWQpXHJcbiAqXHJcbiAqXHRtZW1vcnk6XHRcdFx0d2lsbCBrZWVwIHRyYWNrIG9mIHByZXZpb3VzIHZhbHVlcyBhbmQgd2lsbCBjYWxsIGFueSBjYWxsYmFjayBhZGRlZFxyXG4gKlx0XHRcdFx0XHRhZnRlciB0aGUgbGlzdCBoYXMgYmVlbiBmaXJlZCByaWdodCBhd2F5IHdpdGggdGhlIGxhdGVzdCBcIm1lbW9yaXplZFwiXHJcbiAqXHRcdFx0XHRcdHZhbHVlcyAobGlrZSBhIERlZmVycmVkKVxyXG4gKlxyXG4gKlx0dW5pcXVlOlx0XHRcdHdpbGwgZW5zdXJlIGEgY2FsbGJhY2sgY2FuIG9ubHkgYmUgYWRkZWQgb25jZSAobm8gZHVwbGljYXRlIGluIHRoZSBsaXN0KVxyXG4gKlxyXG4gKlx0c3RvcE9uRmFsc2U6XHRpbnRlcnJ1cHQgY2FsbGluZ3Mgd2hlbiBhIGNhbGxiYWNrIHJldHVybnMgZmFsc2VcclxuICpcclxuICovXHJcbmpRdWVyeS5DYWxsYmFja3MgPSBmdW5jdGlvbiggb3B0aW9ucyApIHtcclxuXHJcblx0Ly8gQ29udmVydCBvcHRpb25zIGZyb20gU3RyaW5nLWZvcm1hdHRlZCB0byBPYmplY3QtZm9ybWF0dGVkIGlmIG5lZWRlZFxyXG5cdC8vICh3ZSBjaGVjayBpbiBjYWNoZSBmaXJzdClcclxuXHRvcHRpb25zID0gdHlwZW9mIG9wdGlvbnMgPT09IFwic3RyaW5nXCIgP1xyXG5cdFx0Y3JlYXRlT3B0aW9ucyggb3B0aW9ucyApIDpcclxuXHRcdGpRdWVyeS5leHRlbmQoIHt9LCBvcHRpb25zICk7XHJcblxyXG5cdHZhciAvLyBGbGFnIHRvIGtub3cgaWYgbGlzdCBpcyBjdXJyZW50bHkgZmlyaW5nXHJcblx0XHRmaXJpbmcsXHJcblxyXG5cdFx0Ly8gTGFzdCBmaXJlIHZhbHVlIGZvciBub24tZm9yZ2V0dGFibGUgbGlzdHNcclxuXHRcdG1lbW9yeSxcclxuXHJcblx0XHQvLyBGbGFnIHRvIGtub3cgaWYgbGlzdCB3YXMgYWxyZWFkeSBmaXJlZFxyXG5cdFx0ZmlyZWQsXHJcblxyXG5cdFx0Ly8gRmxhZyB0byBwcmV2ZW50IGZpcmluZ1xyXG5cdFx0bG9ja2VkLFxyXG5cclxuXHRcdC8vIEFjdHVhbCBjYWxsYmFjayBsaXN0XHJcblx0XHRsaXN0ID0gW10sXHJcblxyXG5cdFx0Ly8gUXVldWUgb2YgZXhlY3V0aW9uIGRhdGEgZm9yIHJlcGVhdGFibGUgbGlzdHNcclxuXHRcdHF1ZXVlID0gW10sXHJcblxyXG5cdFx0Ly8gSW5kZXggb2YgY3VycmVudGx5IGZpcmluZyBjYWxsYmFjayAobW9kaWZpZWQgYnkgYWRkL3JlbW92ZSBhcyBuZWVkZWQpXHJcblx0XHRmaXJpbmdJbmRleCA9IC0xLFxyXG5cclxuXHRcdC8vIEZpcmUgY2FsbGJhY2tzXHJcblx0XHRmaXJlID0gZnVuY3Rpb24oKSB7XHJcblxyXG5cdFx0XHQvLyBFbmZvcmNlIHNpbmdsZS1maXJpbmdcclxuXHRcdFx0bG9ja2VkID0gbG9ja2VkIHx8IG9wdGlvbnMub25jZTtcclxuXHJcblx0XHRcdC8vIEV4ZWN1dGUgY2FsbGJhY2tzIGZvciBhbGwgcGVuZGluZyBleGVjdXRpb25zLFxyXG5cdFx0XHQvLyByZXNwZWN0aW5nIGZpcmluZ0luZGV4IG92ZXJyaWRlcyBhbmQgcnVudGltZSBjaGFuZ2VzXHJcblx0XHRcdGZpcmVkID0gZmlyaW5nID0gdHJ1ZTtcclxuXHRcdFx0Zm9yICggOyBxdWV1ZS5sZW5ndGg7IGZpcmluZ0luZGV4ID0gLTEgKSB7XHJcblx0XHRcdFx0bWVtb3J5ID0gcXVldWUuc2hpZnQoKTtcclxuXHRcdFx0XHR3aGlsZSAoICsrZmlyaW5nSW5kZXggPCBsaXN0Lmxlbmd0aCApIHtcclxuXHJcblx0XHRcdFx0XHQvLyBSdW4gY2FsbGJhY2sgYW5kIGNoZWNrIGZvciBlYXJseSB0ZXJtaW5hdGlvblxyXG5cdFx0XHRcdFx0aWYgKCBsaXN0WyBmaXJpbmdJbmRleCBdLmFwcGx5KCBtZW1vcnlbIDAgXSwgbWVtb3J5WyAxIF0gKSA9PT0gZmFsc2UgJiZcclxuXHRcdFx0XHRcdFx0b3B0aW9ucy5zdG9wT25GYWxzZSApIHtcclxuXHJcblx0XHRcdFx0XHRcdC8vIEp1bXAgdG8gZW5kIGFuZCBmb3JnZXQgdGhlIGRhdGEgc28gLmFkZCBkb2Vzbid0IHJlLWZpcmVcclxuXHRcdFx0XHRcdFx0ZmlyaW5nSW5kZXggPSBsaXN0Lmxlbmd0aDtcclxuXHRcdFx0XHRcdFx0bWVtb3J5ID0gZmFsc2U7XHJcblx0XHRcdFx0XHR9XHJcblx0XHRcdFx0fVxyXG5cdFx0XHR9XHJcblxyXG5cdFx0XHQvLyBGb3JnZXQgdGhlIGRhdGEgaWYgd2UncmUgZG9uZSB3aXRoIGl0XHJcblx0XHRcdGlmICggIW9wdGlvbnMubWVtb3J5ICkge1xyXG5cdFx0XHRcdG1lbW9yeSA9IGZhbHNlO1xyXG5cdFx0XHR9XHJcblxyXG5cdFx0XHRmaXJpbmcgPSBmYWxzZTtcclxuXHJcblx0XHRcdC8vIENsZWFuIHVwIGlmIHdlJ3JlIGRvbmUgZmlyaW5nIGZvciBnb29kXHJcblx0XHRcdGlmICggbG9ja2VkICkge1xyXG5cclxuXHRcdFx0XHQvLyBLZWVwIGFuIGVtcHR5IGxpc3QgaWYgd2UgaGF2ZSBkYXRhIGZvciBmdXR1cmUgYWRkIGNhbGxzXHJcblx0XHRcdFx0aWYgKCBtZW1vcnkgKSB7XHJcblx0XHRcdFx0XHRsaXN0ID0gW107XHJcblxyXG5cdFx0XHRcdC8vIE90aGVyd2lzZSwgdGhpcyBvYmplY3QgaXMgc3BlbnRcclxuXHRcdFx0XHR9IGVsc2Uge1xyXG5cdFx0XHRcdFx0bGlzdCA9IFwiXCI7XHJcblx0XHRcdFx0fVxyXG5cdFx0XHR9XHJcblx0XHR9LFxyXG5cclxuXHRcdC8vIEFjdHVhbCBDYWxsYmFja3Mgb2JqZWN0XHJcblx0XHRzZWxmID0ge1xyXG5cclxuXHRcdFx0Ly8gQWRkIGEgY2FsbGJhY2sgb3IgYSBjb2xsZWN0aW9uIG9mIGNhbGxiYWNrcyB0byB0aGUgbGlzdFxyXG5cdFx0XHRhZGQ6IGZ1bmN0aW9uKCkge1xyXG5cdFx0XHRcdGlmICggbGlzdCApIHtcclxuXHJcblx0XHRcdFx0XHQvLyBJZiB3ZSBoYXZlIG1lbW9yeSBmcm9tIGEgcGFzdCBydW4sIHdlIHNob3VsZCBmaXJlIGFmdGVyIGFkZGluZ1xyXG5cdFx0XHRcdFx0aWYgKCBtZW1vcnkgJiYgIWZpcmluZyApIHtcclxuXHRcdFx0XHRcdFx0ZmlyaW5nSW5kZXggPSBsaXN0Lmxlbmd0aCAtIDE7XHJcblx0XHRcdFx0XHRcdHF1ZXVlLnB1c2goIG1lbW9yeSApO1xyXG5cdFx0XHRcdFx0fVxyXG5cclxuXHRcdFx0XHRcdCggZnVuY3Rpb24gYWRkKCBhcmdzICkge1xyXG5cdFx0XHRcdFx0XHRqUXVlcnkuZWFjaCggYXJncywgZnVuY3Rpb24oIF8sIGFyZyApIHtcclxuXHRcdFx0XHRcdFx0XHRpZiAoIGlzRnVuY3Rpb24oIGFyZyApICkge1xyXG5cdFx0XHRcdFx0XHRcdFx0aWYgKCAhb3B0aW9ucy51bmlxdWUgfHwgIXNlbGYuaGFzKCBhcmcgKSApIHtcclxuXHRcdFx0XHRcdFx0XHRcdFx0bGlzdC5wdXNoKCBhcmcgKTtcclxuXHRcdFx0XHRcdFx0XHRcdH1cclxuXHRcdFx0XHRcdFx0XHR9IGVsc2UgaWYgKCBhcmcgJiYgYXJnLmxlbmd0aCAmJiB0b1R5cGUoIGFyZyApICE9PSBcInN0cmluZ1wiICkge1xyXG5cclxuXHRcdFx0XHRcdFx0XHRcdC8vIEluc3BlY3QgcmVjdXJzaXZlbHlcclxuXHRcdFx0XHRcdFx0XHRcdGFkZCggYXJnICk7XHJcblx0XHRcdFx0XHRcdFx0fVxyXG5cdFx0XHRcdFx0XHR9ICk7XHJcblx0XHRcdFx0XHR9ICkoIGFyZ3VtZW50cyApO1xyXG5cclxuXHRcdFx0XHRcdGlmICggbWVtb3J5ICYmICFmaXJpbmcgKSB7XHJcblx0XHRcdFx0XHRcdGZpcmUoKTtcclxuXHRcdFx0XHRcdH1cclxuXHRcdFx0XHR9XHJcblx0XHRcdFx0cmV0dXJuIHRoaXM7XHJcblx0XHRcdH0sXHJcblxyXG5cdFx0XHQvLyBSZW1vdmUgYSBjYWxsYmFjayBmcm9tIHRoZSBsaXN0XHJcblx0XHRcdHJlbW92ZTogZnVuY3Rpb24oKSB7XHJcblx0XHRcdFx0alF1ZXJ5LmVhY2goIGFyZ3VtZW50cywgZnVuY3Rpb24oIF8sIGFyZyApIHtcclxuXHRcdFx0XHRcdHZhciBpbmRleDtcclxuXHRcdFx0XHRcdHdoaWxlICggKCBpbmRleCA9IGpRdWVyeS5pbkFycmF5KCBhcmcsIGxpc3QsIGluZGV4ICkgKSA+IC0xICkge1xyXG5cdFx0XHRcdFx0XHRsaXN0LnNwbGljZSggaW5kZXgsIDEgKTtcclxuXHJcblx0XHRcdFx0XHRcdC8vIEhhbmRsZSBmaXJpbmcgaW5kZXhlc1xyXG5cdFx0XHRcdFx0XHRpZiAoIGluZGV4IDw9IGZpcmluZ0luZGV4ICkge1xyXG5cdFx0XHRcdFx0XHRcdGZpcmluZ0luZGV4LS07XHJcblx0XHRcdFx0XHRcdH1cclxuXHRcdFx0XHRcdH1cclxuXHRcdFx0XHR9ICk7XHJcblx0XHRcdFx0cmV0dXJuIHRoaXM7XHJcblx0XHRcdH0sXHJcblxyXG5cdFx0XHQvLyBDaGVjayBpZiBhIGdpdmVuIGNhbGxiYWNrIGlzIGluIHRoZSBsaXN0LlxyXG5cdFx0XHQvLyBJZiBubyBhcmd1bWVudCBpcyBnaXZlbiwgcmV0dXJuIHdoZXRoZXIgb3Igbm90IGxpc3QgaGFzIGNhbGxiYWNrcyBhdHRhY2hlZC5cclxuXHRcdFx0aGFzOiBmdW5jdGlvbiggZm4gKSB7XHJcblx0XHRcdFx0cmV0dXJuIGZuID9cclxuXHRcdFx0XHRcdGpRdWVyeS5pbkFycmF5KCBmbiwgbGlzdCApID4gLTEgOlxyXG5cdFx0XHRcdFx0bGlzdC5sZW5ndGggPiAwO1xyXG5cdFx0XHR9LFxyXG5cclxuXHRcdFx0Ly8gUmVtb3ZlIGFsbCBjYWxsYmFja3MgZnJvbSB0aGUgbGlzdFxyXG5cdFx0XHRlbXB0eTogZnVuY3Rpb24oKSB7XHJcblx0XHRcdFx0aWYgKCBsaXN0ICkge1xyXG5cdFx0XHRcdFx0bGlzdCA9IFtdO1xyXG5cdFx0XHRcdH1cclxuXHRcdFx0XHRyZXR1cm4gdGhpcztcclxuXHRcdFx0fSxcclxuXHJcblx0XHRcdC8vIERpc2FibGUgLmZpcmUgYW5kIC5hZGRcclxuXHRcdFx0Ly8gQWJvcnQgYW55IGN1cnJlbnQvcGVuZGluZyBleGVjdXRpb25zXHJcblx0XHRcdC8vIENsZWFyIGFsbCBjYWxsYmFja3MgYW5kIHZhbHVlc1xyXG5cdFx0XHRkaXNhYmxlOiBmdW5jdGlvbigpIHtcclxuXHRcdFx0XHRsb2NrZWQgPSBxdWV1ZSA9IFtdO1xyXG5cdFx0XHRcdGxpc3QgPSBtZW1vcnkgPSBcIlwiO1xyXG5cdFx0XHRcdHJldHVybiB0aGlzO1xyXG5cdFx0XHR9LFxyXG5cdFx0XHRkaXNhYmxlZDogZnVuY3Rpb24oKSB7XHJcblx0XHRcdFx0cmV0dXJuICFsaXN0O1xyXG5cdFx0XHR9LFxyXG5cclxuXHRcdFx0Ly8gRGlzYWJsZSAuZmlyZVxyXG5cdFx0XHQvLyBBbHNvIGRpc2FibGUgLmFkZCB1bmxlc3Mgd2UgaGF2ZSBtZW1vcnkgKHNpbmNlIGl0IHdvdWxkIGhhdmUgbm8gZWZmZWN0KVxyXG5cdFx0XHQvLyBBYm9ydCBhbnkgcGVuZGluZyBleGVjdXRpb25zXHJcblx0XHRcdGxvY2s6IGZ1bmN0aW9uKCkge1xyXG5cdFx0XHRcdGxvY2tlZCA9IHF1ZXVlID0gW107XHJcblx0XHRcdFx0aWYgKCAhbWVtb3J5ICYmICFmaXJpbmcgKSB7XHJcblx0XHRcdFx0XHRsaXN0ID0gbWVtb3J5ID0gXCJcIjtcclxuXHRcdFx0XHR9XHJcblx0XHRcdFx0cmV0dXJuIHRoaXM7XHJcblx0XHRcdH0sXHJcblx0XHRcdGxvY2tlZDogZnVuY3Rpb24oKSB7XHJcblx0XHRcdFx0cmV0dXJuICEhbG9ja2VkO1xyXG5cdFx0XHR9LFxyXG5cclxuXHRcdFx0Ly8gQ2FsbCBhbGwgY2FsbGJhY2tzIHdpdGggdGhlIGdpdmVuIGNvbnRleHQgYW5kIGFyZ3VtZW50c1xyXG5cdFx0XHRmaXJlV2l0aDogZnVuY3Rpb24oIGNvbnRleHQsIGFyZ3MgKSB7XHJcblx0XHRcdFx0aWYgKCAhbG9ja2VkICkge1xyXG5cdFx0XHRcdFx0YXJncyA9IGFyZ3MgfHwgW107XHJcblx0XHRcdFx0XHRhcmdzID0gWyBjb250ZXh0LCBhcmdzLnNsaWNlID8gYXJncy5zbGljZSgpIDogYXJncyBdO1xyXG5cdFx0XHRcdFx0cXVldWUucHVzaCggYXJncyApO1xyXG5cdFx0XHRcdFx0aWYgKCAhZmlyaW5nICkge1xyXG5cdFx0XHRcdFx0XHRmaXJlKCk7XHJcblx0XHRcdFx0XHR9XHJcblx0XHRcdFx0fVxyXG5cdFx0XHRcdHJldHVybiB0aGlzO1xyXG5cdFx0XHR9LFxyXG5cclxuXHRcdFx0Ly8gQ2FsbCBhbGwgdGhlIGNhbGxiYWNrcyB3aXRoIHRoZSBnaXZlbiBhcmd1bWVudHNcclxuXHRcdFx0ZmlyZTogZnVuY3Rpb24oKSB7XHJcblx0XHRcdFx0c2VsZi5maXJlV2l0aCggdGhpcywgYXJndW1lbnRzICk7XHJcblx0XHRcdFx0cmV0dXJuIHRoaXM7XHJcblx0XHRcdH0sXHJcblxyXG5cdFx0XHQvLyBUbyBrbm93IGlmIHRoZSBjYWxsYmFja3MgaGF2ZSBhbHJlYWR5IGJlZW4gY2FsbGVkIGF0IGxlYXN0IG9uY2VcclxuXHRcdFx0ZmlyZWQ6IGZ1bmN0aW9uKCkge1xyXG5cdFx0XHRcdHJldHVybiAhIWZpcmVkO1xyXG5cdFx0XHR9XHJcblx0XHR9O1xyXG5cclxuXHRyZXR1cm4gc2VsZjtcclxufTtcclxuXHJcblxyXG5mdW5jdGlvbiBJZGVudGl0eSggdiApIHtcclxuXHRyZXR1cm4gdjtcclxufVxyXG5mdW5jdGlvbiBUaHJvd2VyKCBleCApIHtcclxuXHR0aHJvdyBleDtcclxufVxyXG5cclxuZnVuY3Rpb24gYWRvcHRWYWx1ZSggdmFsdWUsIHJlc29sdmUsIHJlamVjdCwgbm9WYWx1ZSApIHtcclxuXHR2YXIgbWV0aG9kO1xyXG5cclxuXHR0cnkge1xyXG5cclxuXHRcdC8vIENoZWNrIGZvciBwcm9taXNlIGFzcGVjdCBmaXJzdCB0byBwcml2aWxlZ2Ugc3luY2hyb25vdXMgYmVoYXZpb3JcclxuXHRcdGlmICggdmFsdWUgJiYgaXNGdW5jdGlvbiggKCBtZXRob2QgPSB2YWx1ZS5wcm9taXNlICkgKSApIHtcclxuXHRcdFx0bWV0aG9kLmNhbGwoIHZhbHVlICkuZG9uZSggcmVzb2x2ZSApLmZhaWwoIHJlamVjdCApO1xyXG5cclxuXHRcdC8vIE90aGVyIHRoZW5hYmxlc1xyXG5cdFx0fSBlbHNlIGlmICggdmFsdWUgJiYgaXNGdW5jdGlvbiggKCBtZXRob2QgPSB2YWx1ZS50aGVuICkgKSApIHtcclxuXHRcdFx0bWV0aG9kLmNhbGwoIHZhbHVlLCByZXNvbHZlLCByZWplY3QgKTtcclxuXHJcblx0XHQvLyBPdGhlciBub24tdGhlbmFibGVzXHJcblx0XHR9IGVsc2Uge1xyXG5cclxuXHRcdFx0Ly8gQ29udHJvbCBgcmVzb2x2ZWAgYXJndW1lbnRzIGJ5IGxldHRpbmcgQXJyYXkjc2xpY2UgY2FzdCBib29sZWFuIGBub1ZhbHVlYCB0byBpbnRlZ2VyOlxyXG5cdFx0XHQvLyAqIGZhbHNlOiBbIHZhbHVlIF0uc2xpY2UoIDAgKSA9PiByZXNvbHZlKCB2YWx1ZSApXHJcblx0XHRcdC8vICogdHJ1ZTogWyB2YWx1ZSBdLnNsaWNlKCAxICkgPT4gcmVzb2x2ZSgpXHJcblx0XHRcdHJlc29sdmUuYXBwbHkoIHVuZGVmaW5lZCwgWyB2YWx1ZSBdLnNsaWNlKCBub1ZhbHVlICkgKTtcclxuXHRcdH1cclxuXHJcblx0Ly8gRm9yIFByb21pc2VzL0ErLCBjb252ZXJ0IGV4Y2VwdGlvbnMgaW50byByZWplY3Rpb25zXHJcblx0Ly8gU2luY2UgalF1ZXJ5LndoZW4gZG9lc24ndCB1bndyYXAgdGhlbmFibGVzLCB3ZSBjYW4gc2tpcCB0aGUgZXh0cmEgY2hlY2tzIGFwcGVhcmluZyBpblxyXG5cdC8vIERlZmVycmVkI3RoZW4gdG8gY29uZGl0aW9uYWxseSBzdXBwcmVzcyByZWplY3Rpb24uXHJcblx0fSBjYXRjaCAoIHZhbHVlICkge1xyXG5cclxuXHRcdC8vIFN1cHBvcnQ6IEFuZHJvaWQgNC4wIG9ubHlcclxuXHRcdC8vIFN0cmljdCBtb2RlIGZ1bmN0aW9ucyBpbnZva2VkIHdpdGhvdXQgLmNhbGwvLmFwcGx5IGdldCBnbG9iYWwtb2JqZWN0IGNvbnRleHRcclxuXHRcdHJlamVjdC5hcHBseSggdW5kZWZpbmVkLCBbIHZhbHVlIF0gKTtcclxuXHR9XHJcbn1cclxuXHJcbmpRdWVyeS5leHRlbmQoIHtcclxuXHJcblx0RGVmZXJyZWQ6IGZ1bmN0aW9uKCBmdW5jICkge1xyXG5cdFx0dmFyIHR1cGxlcyA9IFtcclxuXHJcblx0XHRcdFx0Ly8gYWN0aW9uLCBhZGQgbGlzdGVuZXIsIGNhbGxiYWNrcyxcclxuXHRcdFx0XHQvLyAuLi4gLnRoZW4gaGFuZGxlcnMsIGFyZ3VtZW50IGluZGV4LCBbZmluYWwgc3RhdGVdXHJcblx0XHRcdFx0WyBcIm5vdGlmeVwiLCBcInByb2dyZXNzXCIsIGpRdWVyeS5DYWxsYmFja3MoIFwibWVtb3J5XCIgKSxcclxuXHRcdFx0XHRcdGpRdWVyeS5DYWxsYmFja3MoIFwibWVtb3J5XCIgKSwgMiBdLFxyXG5cdFx0XHRcdFsgXCJyZXNvbHZlXCIsIFwiZG9uZVwiLCBqUXVlcnkuQ2FsbGJhY2tzKCBcIm9uY2UgbWVtb3J5XCIgKSxcclxuXHRcdFx0XHRcdGpRdWVyeS5DYWxsYmFja3MoIFwib25jZSBtZW1vcnlcIiApLCAwLCBcInJlc29sdmVkXCIgXSxcclxuXHRcdFx0XHRbIFwicmVqZWN0XCIsIFwiZmFpbFwiLCBqUXVlcnkuQ2FsbGJhY2tzKCBcIm9uY2UgbWVtb3J5XCIgKSxcclxuXHRcdFx0XHRcdGpRdWVyeS5DYWxsYmFja3MoIFwib25jZSBtZW1vcnlcIiApLCAxLCBcInJlamVjdGVkXCIgXVxyXG5cdFx0XHRdLFxyXG5cdFx0XHRzdGF0ZSA9IFwicGVuZGluZ1wiLFxyXG5cdFx0XHRwcm9taXNlID0ge1xyXG5cdFx0XHRcdHN0YXRlOiBmdW5jdGlvbigpIHtcclxuXHRcdFx0XHRcdHJldHVybiBzdGF0ZTtcclxuXHRcdFx0XHR9LFxyXG5cdFx0XHRcdGFsd2F5czogZnVuY3Rpb24oKSB7XHJcblx0XHRcdFx0XHRkZWZlcnJlZC5kb25lKCBhcmd1bWVudHMgKS5mYWlsKCBhcmd1bWVudHMgKTtcclxuXHRcdFx0XHRcdHJldHVybiB0aGlzO1xyXG5cdFx0XHRcdH0sXHJcblx0XHRcdFx0XCJjYXRjaFwiOiBmdW5jdGlvbiggZm4gKSB7XHJcblx0XHRcdFx0XHRyZXR1cm4gcHJvbWlzZS50aGVuKCBudWxsLCBmbiApO1xyXG5cdFx0XHRcdH0sXHJcblxyXG5cdFx0XHRcdC8vIEtlZXAgcGlwZSBmb3IgYmFjay1jb21wYXRcclxuXHRcdFx0XHRwaXBlOiBmdW5jdGlvbiggLyogZm5Eb25lLCBmbkZhaWwsIGZuUHJvZ3Jlc3MgKi8gKSB7XHJcblx0XHRcdFx0XHR2YXIgZm5zID0gYXJndW1lbnRzO1xyXG5cclxuXHRcdFx0XHRcdHJldHVybiBqUXVlcnkuRGVmZXJyZWQoIGZ1bmN0aW9uKCBuZXdEZWZlciApIHtcclxuXHRcdFx0XHRcdFx0alF1ZXJ5LmVhY2goIHR1cGxlcywgZnVuY3Rpb24oIGksIHR1cGxlICkge1xyXG5cclxuXHRcdFx0XHRcdFx0XHQvLyBNYXAgdHVwbGVzIChwcm9ncmVzcywgZG9uZSwgZmFpbCkgdG8gYXJndW1lbnRzIChkb25lLCBmYWlsLCBwcm9ncmVzcylcclxuXHRcdFx0XHRcdFx0XHR2YXIgZm4gPSBpc0Z1bmN0aW9uKCBmbnNbIHR1cGxlWyA0IF0gXSApICYmIGZuc1sgdHVwbGVbIDQgXSBdO1xyXG5cclxuXHRcdFx0XHRcdFx0XHQvLyBkZWZlcnJlZC5wcm9ncmVzcyhmdW5jdGlvbigpIHsgYmluZCB0byBuZXdEZWZlciBvciBuZXdEZWZlci5ub3RpZnkgfSlcclxuXHRcdFx0XHRcdFx0XHQvLyBkZWZlcnJlZC5kb25lKGZ1bmN0aW9uKCkgeyBiaW5kIHRvIG5ld0RlZmVyIG9yIG5ld0RlZmVyLnJlc29sdmUgfSlcclxuXHRcdFx0XHRcdFx0XHQvLyBkZWZlcnJlZC5mYWlsKGZ1bmN0aW9uKCkgeyBiaW5kIHRvIG5ld0RlZmVyIG9yIG5ld0RlZmVyLnJlamVjdCB9KVxyXG5cdFx0XHRcdFx0XHRcdGRlZmVycmVkWyB0dXBsZVsgMSBdIF0oIGZ1bmN0aW9uKCkge1xyXG5cdFx0XHRcdFx0XHRcdFx0dmFyIHJldHVybmVkID0gZm4gJiYgZm4uYXBwbHkoIHRoaXMsIGFyZ3VtZW50cyApO1xyXG5cdFx0XHRcdFx0XHRcdFx0aWYgKCByZXR1cm5lZCAmJiBpc0Z1bmN0aW9uKCByZXR1cm5lZC5wcm9taXNlICkgKSB7XHJcblx0XHRcdFx0XHRcdFx0XHRcdHJldHVybmVkLnByb21pc2UoKVxyXG5cdFx0XHRcdFx0XHRcdFx0XHRcdC5wcm9ncmVzcyggbmV3RGVmZXIubm90aWZ5IClcclxuXHRcdFx0XHRcdFx0XHRcdFx0XHQuZG9uZSggbmV3RGVmZXIucmVzb2x2ZSApXHJcblx0XHRcdFx0XHRcdFx0XHRcdFx0LmZhaWwoIG5ld0RlZmVyLnJlamVjdCApO1xyXG5cdFx0XHRcdFx0XHRcdFx0fSBlbHNlIHtcclxuXHRcdFx0XHRcdFx0XHRcdFx0bmV3RGVmZXJbIHR1cGxlWyAwIF0gKyBcIldpdGhcIiBdKFxyXG5cdFx0XHRcdFx0XHRcdFx0XHRcdHRoaXMsXHJcblx0XHRcdFx0XHRcdFx0XHRcdFx0Zm4gPyBbIHJldHVybmVkIF0gOiBhcmd1bWVudHNcclxuXHRcdFx0XHRcdFx0XHRcdFx0KTtcclxuXHRcdFx0XHRcdFx0XHRcdH1cclxuXHRcdFx0XHRcdFx0XHR9ICk7XHJcblx0XHRcdFx0XHRcdH0gKTtcclxuXHRcdFx0XHRcdFx0Zm5zID0gbnVsbDtcclxuXHRcdFx0XHRcdH0gKS5wcm9taXNlKCk7XHJcblx0XHRcdFx0fSxcclxuXHRcdFx0XHR0aGVuOiBmdW5jdGlvbiggb25GdWxmaWxsZWQsIG9uUmVqZWN0ZWQsIG9uUHJvZ3Jlc3MgKSB7XHJcblx0XHRcdFx0XHR2YXIgbWF4RGVwdGggPSAwO1xyXG5cdFx0XHRcdFx0ZnVuY3Rpb24gcmVzb2x2ZSggZGVwdGgsIGRlZmVycmVkLCBoYW5kbGVyLCBzcGVjaWFsICkge1xyXG5cdFx0XHRcdFx0XHRyZXR1cm4gZnVuY3Rpb24oKSB7XHJcblx0XHRcdFx0XHRcdFx0dmFyIHRoYXQgPSB0aGlzLFxyXG5cdFx0XHRcdFx0XHRcdFx0YXJncyA9IGFyZ3VtZW50cyxcclxuXHRcdFx0XHRcdFx0XHRcdG1pZ2h0VGhyb3cgPSBmdW5jdGlvbigpIHtcclxuXHRcdFx0XHRcdFx0XHRcdFx0dmFyIHJldHVybmVkLCB0aGVuO1xyXG5cclxuXHRcdFx0XHRcdFx0XHRcdFx0Ly8gU3VwcG9ydDogUHJvbWlzZXMvQSsgc2VjdGlvbiAyLjMuMy4zLjNcclxuXHRcdFx0XHRcdFx0XHRcdFx0Ly8gaHR0cHM6Ly9wcm9taXNlc2FwbHVzLmNvbS8jcG9pbnQtNTlcclxuXHRcdFx0XHRcdFx0XHRcdFx0Ly8gSWdub3JlIGRvdWJsZS1yZXNvbHV0aW9uIGF0dGVtcHRzXHJcblx0XHRcdFx0XHRcdFx0XHRcdGlmICggZGVwdGggPCBtYXhEZXB0aCApIHtcclxuXHRcdFx0XHRcdFx0XHRcdFx0XHRyZXR1cm47XHJcblx0XHRcdFx0XHRcdFx0XHRcdH1cclxuXHJcblx0XHRcdFx0XHRcdFx0XHRcdHJldHVybmVkID0gaGFuZGxlci5hcHBseSggdGhhdCwgYXJncyApO1xyXG5cclxuXHRcdFx0XHRcdFx0XHRcdFx0Ly8gU3VwcG9ydDogUHJvbWlzZXMvQSsgc2VjdGlvbiAyLjMuMVxyXG5cdFx0XHRcdFx0XHRcdFx0XHQvLyBodHRwczovL3Byb21pc2VzYXBsdXMuY29tLyNwb2ludC00OFxyXG5cdFx0XHRcdFx0XHRcdFx0XHRpZiAoIHJldHVybmVkID09PSBkZWZlcnJlZC5wcm9taXNlKCkgKSB7XHJcblx0XHRcdFx0XHRcdFx0XHRcdFx0dGhyb3cgbmV3IFR5cGVFcnJvciggXCJUaGVuYWJsZSBzZWxmLXJlc29sdXRpb25cIiApO1xyXG5cdFx0XHRcdFx0XHRcdFx0XHR9XHJcblxyXG5cdFx0XHRcdFx0XHRcdFx0XHQvLyBTdXBwb3J0OiBQcm9taXNlcy9BKyBzZWN0aW9ucyAyLjMuMy4xLCAzLjVcclxuXHRcdFx0XHRcdFx0XHRcdFx0Ly8gaHR0cHM6Ly9wcm9taXNlc2FwbHVzLmNvbS8jcG9pbnQtNTRcclxuXHRcdFx0XHRcdFx0XHRcdFx0Ly8gaHR0cHM6Ly9wcm9taXNlc2FwbHVzLmNvbS8jcG9pbnQtNzVcclxuXHRcdFx0XHRcdFx0XHRcdFx0Ly8gUmV0cmlldmUgYHRoZW5gIG9ubHkgb25jZVxyXG5cdFx0XHRcdFx0XHRcdFx0XHR0aGVuID0gcmV0dXJuZWQgJiZcclxuXHJcblx0XHRcdFx0XHRcdFx0XHRcdFx0Ly8gU3VwcG9ydDogUHJvbWlzZXMvQSsgc2VjdGlvbiAyLjMuNFxyXG5cdFx0XHRcdFx0XHRcdFx0XHRcdC8vIGh0dHBzOi8vcHJvbWlzZXNhcGx1cy5jb20vI3BvaW50LTY0XHJcblx0XHRcdFx0XHRcdFx0XHRcdFx0Ly8gT25seSBjaGVjayBvYmplY3RzIGFuZCBmdW5jdGlvbnMgZm9yIHRoZW5hYmlsaXR5XHJcblx0XHRcdFx0XHRcdFx0XHRcdFx0KCB0eXBlb2YgcmV0dXJuZWQgPT09IFwib2JqZWN0XCIgfHxcclxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdHR5cGVvZiByZXR1cm5lZCA9PT0gXCJmdW5jdGlvblwiICkgJiZcclxuXHRcdFx0XHRcdFx0XHRcdFx0XHRyZXR1cm5lZC50aGVuO1xyXG5cclxuXHRcdFx0XHRcdFx0XHRcdFx0Ly8gSGFuZGxlIGEgcmV0dXJuZWQgdGhlbmFibGVcclxuXHRcdFx0XHRcdFx0XHRcdFx0aWYgKCBpc0Z1bmN0aW9uKCB0aGVuICkgKSB7XHJcblxyXG5cdFx0XHRcdFx0XHRcdFx0XHRcdC8vIFNwZWNpYWwgcHJvY2Vzc29ycyAobm90aWZ5KSBqdXN0IHdhaXQgZm9yIHJlc29sdXRpb25cclxuXHRcdFx0XHRcdFx0XHRcdFx0XHRpZiAoIHNwZWNpYWwgKSB7XHJcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHR0aGVuLmNhbGwoXHJcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdHJldHVybmVkLFxyXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRyZXNvbHZlKCBtYXhEZXB0aCwgZGVmZXJyZWQsIElkZW50aXR5LCBzcGVjaWFsICksXHJcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdHJlc29sdmUoIG1heERlcHRoLCBkZWZlcnJlZCwgVGhyb3dlciwgc3BlY2lhbCApXHJcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHQpO1xyXG5cclxuXHRcdFx0XHRcdFx0XHRcdFx0XHQvLyBOb3JtYWwgcHJvY2Vzc29ycyAocmVzb2x2ZSkgYWxzbyBob29rIGludG8gcHJvZ3Jlc3NcclxuXHRcdFx0XHRcdFx0XHRcdFx0XHR9IGVsc2Uge1xyXG5cclxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdC8vIC4uLmFuZCBkaXNyZWdhcmQgb2xkZXIgcmVzb2x1dGlvbiB2YWx1ZXNcclxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdG1heERlcHRoKys7XHJcblxyXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0dGhlbi5jYWxsKFxyXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRyZXR1cm5lZCxcclxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0cmVzb2x2ZSggbWF4RGVwdGgsIGRlZmVycmVkLCBJZGVudGl0eSwgc3BlY2lhbCApLFxyXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRyZXNvbHZlKCBtYXhEZXB0aCwgZGVmZXJyZWQsIFRocm93ZXIsIHNwZWNpYWwgKSxcclxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0cmVzb2x2ZSggbWF4RGVwdGgsIGRlZmVycmVkLCBJZGVudGl0eSxcclxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRkZWZlcnJlZC5ub3RpZnlXaXRoIClcclxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdCk7XHJcblx0XHRcdFx0XHRcdFx0XHRcdFx0fVxyXG5cclxuXHRcdFx0XHRcdFx0XHRcdFx0Ly8gSGFuZGxlIGFsbCBvdGhlciByZXR1cm5lZCB2YWx1ZXNcclxuXHRcdFx0XHRcdFx0XHRcdFx0fSBlbHNlIHtcclxuXHJcblx0XHRcdFx0XHRcdFx0XHRcdFx0Ly8gT25seSBzdWJzdGl0dXRlIGhhbmRsZXJzIHBhc3Mgb24gY29udGV4dFxyXG5cdFx0XHRcdFx0XHRcdFx0XHRcdC8vIGFuZCBtdWx0aXBsZSB2YWx1ZXMgKG5vbi1zcGVjIGJlaGF2aW9yKVxyXG5cdFx0XHRcdFx0XHRcdFx0XHRcdGlmICggaGFuZGxlciAhPT0gSWRlbnRpdHkgKSB7XHJcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHR0aGF0ID0gdW5kZWZpbmVkO1xyXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0YXJncyA9IFsgcmV0dXJuZWQgXTtcclxuXHRcdFx0XHRcdFx0XHRcdFx0XHR9XHJcblxyXG5cdFx0XHRcdFx0XHRcdFx0XHRcdC8vIFByb2Nlc3MgdGhlIHZhbHVlKHMpXHJcblx0XHRcdFx0XHRcdFx0XHRcdFx0Ly8gRGVmYXVsdCBwcm9jZXNzIGlzIHJlc29sdmVcclxuXHRcdFx0XHRcdFx0XHRcdFx0XHQoIHNwZWNpYWwgfHwgZGVmZXJyZWQucmVzb2x2ZVdpdGggKSggdGhhdCwgYXJncyApO1xyXG5cdFx0XHRcdFx0XHRcdFx0XHR9XHJcblx0XHRcdFx0XHRcdFx0XHR9LFxyXG5cclxuXHRcdFx0XHRcdFx0XHRcdC8vIE9ubHkgbm9ybWFsIHByb2Nlc3NvcnMgKHJlc29sdmUpIGNhdGNoIGFuZCByZWplY3QgZXhjZXB0aW9uc1xyXG5cdFx0XHRcdFx0XHRcdFx0cHJvY2VzcyA9IHNwZWNpYWwgP1xyXG5cdFx0XHRcdFx0XHRcdFx0XHRtaWdodFRocm93IDpcclxuXHRcdFx0XHRcdFx0XHRcdFx0ZnVuY3Rpb24oKSB7XHJcblx0XHRcdFx0XHRcdFx0XHRcdFx0dHJ5IHtcclxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdG1pZ2h0VGhyb3coKTtcclxuXHRcdFx0XHRcdFx0XHRcdFx0XHR9IGNhdGNoICggZSApIHtcclxuXHJcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRpZiAoIGpRdWVyeS5EZWZlcnJlZC5leGNlcHRpb25Ib29rICkge1xyXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRqUXVlcnkuRGVmZXJyZWQuZXhjZXB0aW9uSG9vayggZSxcclxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRwcm9jZXNzLnN0YWNrVHJhY2UgKTtcclxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdH1cclxuXHJcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHQvLyBTdXBwb3J0OiBQcm9taXNlcy9BKyBzZWN0aW9uIDIuMy4zLjMuNC4xXHJcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHQvLyBodHRwczovL3Byb21pc2VzYXBsdXMuY29tLyNwb2ludC02MVxyXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0Ly8gSWdub3JlIHBvc3QtcmVzb2x1dGlvbiBleGNlcHRpb25zXHJcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRpZiAoIGRlcHRoICsgMSA+PSBtYXhEZXB0aCApIHtcclxuXHJcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdC8vIE9ubHkgc3Vic3RpdHV0ZSBoYW5kbGVycyBwYXNzIG9uIGNvbnRleHRcclxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0Ly8gYW5kIG11bHRpcGxlIHZhbHVlcyAobm9uLXNwZWMgYmVoYXZpb3IpXHJcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdGlmICggaGFuZGxlciAhPT0gVGhyb3dlciApIHtcclxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHR0aGF0ID0gdW5kZWZpbmVkO1xyXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdGFyZ3MgPSBbIGUgXTtcclxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0fVxyXG5cclxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0ZGVmZXJyZWQucmVqZWN0V2l0aCggdGhhdCwgYXJncyApO1xyXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0fVxyXG5cdFx0XHRcdFx0XHRcdFx0XHRcdH1cclxuXHRcdFx0XHRcdFx0XHRcdFx0fTtcclxuXHJcblx0XHRcdFx0XHRcdFx0Ly8gU3VwcG9ydDogUHJvbWlzZXMvQSsgc2VjdGlvbiAyLjMuMy4zLjFcclxuXHRcdFx0XHRcdFx0XHQvLyBodHRwczovL3Byb21pc2VzYXBsdXMuY29tLyNwb2ludC01N1xyXG5cdFx0XHRcdFx0XHRcdC8vIFJlLXJlc29sdmUgcHJvbWlzZXMgaW1tZWRpYXRlbHkgdG8gZG9kZ2UgZmFsc2UgcmVqZWN0aW9uIGZyb21cclxuXHRcdFx0XHRcdFx0XHQvLyBzdWJzZXF1ZW50IGVycm9yc1xyXG5cdFx0XHRcdFx0XHRcdGlmICggZGVwdGggKSB7XHJcblx0XHRcdFx0XHRcdFx0XHRwcm9jZXNzKCk7XHJcblx0XHRcdFx0XHRcdFx0fSBlbHNlIHtcclxuXHJcblx0XHRcdFx0XHRcdFx0XHQvLyBDYWxsIGFuIG9wdGlvbmFsIGhvb2sgdG8gcmVjb3JkIHRoZSBzdGFjaywgaW4gY2FzZSBvZiBleGNlcHRpb25cclxuXHRcdFx0XHRcdFx0XHRcdC8vIHNpbmNlIGl0J3Mgb3RoZXJ3aXNlIGxvc3Qgd2hlbiBleGVjdXRpb24gZ29lcyBhc3luY1xyXG5cdFx0XHRcdFx0XHRcdFx0aWYgKCBqUXVlcnkuRGVmZXJyZWQuZ2V0U3RhY2tIb29rICkge1xyXG5cdFx0XHRcdFx0XHRcdFx0XHRwcm9jZXNzLnN0YWNrVHJhY2UgPSBqUXVlcnkuRGVmZXJyZWQuZ2V0U3RhY2tIb29rKCk7XHJcblx0XHRcdFx0XHRcdFx0XHR9XHJcblx0XHRcdFx0XHRcdFx0XHR3aW5kb3cuc2V0VGltZW91dCggcHJvY2VzcyApO1xyXG5cdFx0XHRcdFx0XHRcdH1cclxuXHRcdFx0XHRcdFx0fTtcclxuXHRcdFx0XHRcdH1cclxuXHJcblx0XHRcdFx0XHRyZXR1cm4galF1ZXJ5LkRlZmVycmVkKCBmdW5jdGlvbiggbmV3RGVmZXIgKSB7XHJcblxyXG5cdFx0XHRcdFx0XHQvLyBwcm9ncmVzc19oYW5kbGVycy5hZGQoIC4uLiApXHJcblx0XHRcdFx0XHRcdHR1cGxlc1sgMCBdWyAzIF0uYWRkKFxyXG5cdFx0XHRcdFx0XHRcdHJlc29sdmUoXHJcblx0XHRcdFx0XHRcdFx0XHQwLFxyXG5cdFx0XHRcdFx0XHRcdFx0bmV3RGVmZXIsXHJcblx0XHRcdFx0XHRcdFx0XHRpc0Z1bmN0aW9uKCBvblByb2dyZXNzICkgP1xyXG5cdFx0XHRcdFx0XHRcdFx0XHRvblByb2dyZXNzIDpcclxuXHRcdFx0XHRcdFx0XHRcdFx0SWRlbnRpdHksXHJcblx0XHRcdFx0XHRcdFx0XHRuZXdEZWZlci5ub3RpZnlXaXRoXHJcblx0XHRcdFx0XHRcdFx0KVxyXG5cdFx0XHRcdFx0XHQpO1xyXG5cclxuXHRcdFx0XHRcdFx0Ly8gZnVsZmlsbGVkX2hhbmRsZXJzLmFkZCggLi4uIClcclxuXHRcdFx0XHRcdFx0dHVwbGVzWyAxIF1bIDMgXS5hZGQoXHJcblx0XHRcdFx0XHRcdFx0cmVzb2x2ZShcclxuXHRcdFx0XHRcdFx0XHRcdDAsXHJcblx0XHRcdFx0XHRcdFx0XHRuZXdEZWZlcixcclxuXHRcdFx0XHRcdFx0XHRcdGlzRnVuY3Rpb24oIG9uRnVsZmlsbGVkICkgP1xyXG5cdFx0XHRcdFx0XHRcdFx0XHRvbkZ1bGZpbGxlZCA6XHJcblx0XHRcdFx0XHRcdFx0XHRcdElkZW50aXR5XHJcblx0XHRcdFx0XHRcdFx0KVxyXG5cdFx0XHRcdFx0XHQpO1xyXG5cclxuXHRcdFx0XHRcdFx0Ly8gcmVqZWN0ZWRfaGFuZGxlcnMuYWRkKCAuLi4gKVxyXG5cdFx0XHRcdFx0XHR0dXBsZXNbIDIgXVsgMyBdLmFkZChcclxuXHRcdFx0XHRcdFx0XHRyZXNvbHZlKFxyXG5cdFx0XHRcdFx0XHRcdFx0MCxcclxuXHRcdFx0XHRcdFx0XHRcdG5ld0RlZmVyLFxyXG5cdFx0XHRcdFx0XHRcdFx0aXNGdW5jdGlvbiggb25SZWplY3RlZCApID9cclxuXHRcdFx0XHRcdFx0XHRcdFx0b25SZWplY3RlZCA6XHJcblx0XHRcdFx0XHRcdFx0XHRcdFRocm93ZXJcclxuXHRcdFx0XHRcdFx0XHQpXHJcblx0XHRcdFx0XHRcdCk7XHJcblx0XHRcdFx0XHR9ICkucHJvbWlzZSgpO1xyXG5cdFx0XHRcdH0sXHJcblxyXG5cdFx0XHRcdC8vIEdldCBhIHByb21pc2UgZm9yIHRoaXMgZGVmZXJyZWRcclxuXHRcdFx0XHQvLyBJZiBvYmogaXMgcHJvdmlkZWQsIHRoZSBwcm9taXNlIGFzcGVjdCBpcyBhZGRlZCB0byB0aGUgb2JqZWN0XHJcblx0XHRcdFx0cHJvbWlzZTogZnVuY3Rpb24oIG9iaiApIHtcclxuXHRcdFx0XHRcdHJldHVybiBvYmogIT0gbnVsbCA/IGpRdWVyeS5leHRlbmQoIG9iaiwgcHJvbWlzZSApIDogcHJvbWlzZTtcclxuXHRcdFx0XHR9XHJcblx0XHRcdH0sXHJcblx0XHRcdGRlZmVycmVkID0ge307XHJcblxyXG5cdFx0Ly8gQWRkIGxpc3Qtc3BlY2lmaWMgbWV0aG9kc1xyXG5cdFx0alF1ZXJ5LmVhY2goIHR1cGxlcywgZnVuY3Rpb24oIGksIHR1cGxlICkge1xyXG5cdFx0XHR2YXIgbGlzdCA9IHR1cGxlWyAyIF0sXHJcblx0XHRcdFx0c3RhdGVTdHJpbmcgPSB0dXBsZVsgNSBdO1xyXG5cclxuXHRcdFx0Ly8gcHJvbWlzZS5wcm9ncmVzcyA9IGxpc3QuYWRkXHJcblx0XHRcdC8vIHByb21pc2UuZG9uZSA9IGxpc3QuYWRkXHJcblx0XHRcdC8vIHByb21pc2UuZmFpbCA9IGxpc3QuYWRkXHJcblx0XHRcdHByb21pc2VbIHR1cGxlWyAxIF0gXSA9IGxpc3QuYWRkO1xyXG5cclxuXHRcdFx0Ly8gSGFuZGxlIHN0YXRlXHJcblx0XHRcdGlmICggc3RhdGVTdHJpbmcgKSB7XHJcblx0XHRcdFx0bGlzdC5hZGQoXHJcblx0XHRcdFx0XHRmdW5jdGlvbigpIHtcclxuXHJcblx0XHRcdFx0XHRcdC8vIHN0YXRlID0gXCJyZXNvbHZlZFwiIChpLmUuLCBmdWxmaWxsZWQpXHJcblx0XHRcdFx0XHRcdC8vIHN0YXRlID0gXCJyZWplY3RlZFwiXHJcblx0XHRcdFx0XHRcdHN0YXRlID0gc3RhdGVTdHJpbmc7XHJcblx0XHRcdFx0XHR9LFxyXG5cclxuXHRcdFx0XHRcdC8vIHJlamVjdGVkX2NhbGxiYWNrcy5kaXNhYmxlXHJcblx0XHRcdFx0XHQvLyBmdWxmaWxsZWRfY2FsbGJhY2tzLmRpc2FibGVcclxuXHRcdFx0XHRcdHR1cGxlc1sgMyAtIGkgXVsgMiBdLmRpc2FibGUsXHJcblxyXG5cdFx0XHRcdFx0Ly8gcmVqZWN0ZWRfaGFuZGxlcnMuZGlzYWJsZVxyXG5cdFx0XHRcdFx0Ly8gZnVsZmlsbGVkX2hhbmRsZXJzLmRpc2FibGVcclxuXHRcdFx0XHRcdHR1cGxlc1sgMyAtIGkgXVsgMyBdLmRpc2FibGUsXHJcblxyXG5cdFx0XHRcdFx0Ly8gcHJvZ3Jlc3NfY2FsbGJhY2tzLmxvY2tcclxuXHRcdFx0XHRcdHR1cGxlc1sgMCBdWyAyIF0ubG9jayxcclxuXHJcblx0XHRcdFx0XHQvLyBwcm9ncmVzc19oYW5kbGVycy5sb2NrXHJcblx0XHRcdFx0XHR0dXBsZXNbIDAgXVsgMyBdLmxvY2tcclxuXHRcdFx0XHQpO1xyXG5cdFx0XHR9XHJcblxyXG5cdFx0XHQvLyBwcm9ncmVzc19oYW5kbGVycy5maXJlXHJcblx0XHRcdC8vIGZ1bGZpbGxlZF9oYW5kbGVycy5maXJlXHJcblx0XHRcdC8vIHJlamVjdGVkX2hhbmRsZXJzLmZpcmVcclxuXHRcdFx0bGlzdC5hZGQoIHR1cGxlWyAzIF0uZmlyZSApO1xyXG5cclxuXHRcdFx0Ly8gZGVmZXJyZWQubm90aWZ5ID0gZnVuY3Rpb24oKSB7IGRlZmVycmVkLm5vdGlmeVdpdGgoLi4uKSB9XHJcblx0XHRcdC8vIGRlZmVycmVkLnJlc29sdmUgPSBmdW5jdGlvbigpIHsgZGVmZXJyZWQucmVzb2x2ZVdpdGgoLi4uKSB9XHJcblx0XHRcdC8vIGRlZmVycmVkLnJlamVjdCA9IGZ1bmN0aW9uKCkgeyBkZWZlcnJlZC5yZWplY3RXaXRoKC4uLikgfVxyXG5cdFx0XHRkZWZlcnJlZFsgdHVwbGVbIDAgXSBdID0gZnVuY3Rpb24oKSB7XHJcblx0XHRcdFx0ZGVmZXJyZWRbIHR1cGxlWyAwIF0gKyBcIldpdGhcIiBdKCB0aGlzID09PSBkZWZlcnJlZCA/IHVuZGVmaW5lZCA6IHRoaXMsIGFyZ3VtZW50cyApO1xyXG5cdFx0XHRcdHJldHVybiB0aGlzO1xyXG5cdFx0XHR9O1xyXG5cclxuXHRcdFx0Ly8gZGVmZXJyZWQubm90aWZ5V2l0aCA9IGxpc3QuZmlyZVdpdGhcclxuXHRcdFx0Ly8gZGVmZXJyZWQucmVzb2x2ZVdpdGggPSBsaXN0LmZpcmVXaXRoXHJcblx0XHRcdC8vIGRlZmVycmVkLnJlamVjdFdpdGggPSBsaXN0LmZpcmVXaXRoXHJcblx0XHRcdGRlZmVycmVkWyB0dXBsZVsgMCBdICsgXCJXaXRoXCIgXSA9IGxpc3QuZmlyZVdpdGg7XHJcblx0XHR9ICk7XHJcblxyXG5cdFx0Ly8gTWFrZSB0aGUgZGVmZXJyZWQgYSBwcm9taXNlXHJcblx0XHRwcm9taXNlLnByb21pc2UoIGRlZmVycmVkICk7XHJcblxyXG5cdFx0Ly8gQ2FsbCBnaXZlbiBmdW5jIGlmIGFueVxyXG5cdFx0aWYgKCBmdW5jICkge1xyXG5cdFx0XHRmdW5jLmNhbGwoIGRlZmVycmVkLCBkZWZlcnJlZCApO1xyXG5cdFx0fVxyXG5cclxuXHRcdC8vIEFsbCBkb25lIVxyXG5cdFx0cmV0dXJuIGRlZmVycmVkO1xyXG5cdH0sXHJcblxyXG5cdC8vIERlZmVycmVkIGhlbHBlclxyXG5cdHdoZW46IGZ1bmN0aW9uKCBzaW5nbGVWYWx1ZSApIHtcclxuXHRcdHZhclxyXG5cclxuXHRcdFx0Ly8gY291bnQgb2YgdW5jb21wbGV0ZWQgc3Vib3JkaW5hdGVzXHJcblx0XHRcdHJlbWFpbmluZyA9IGFyZ3VtZW50cy5sZW5ndGgsXHJcblxyXG5cdFx0XHQvLyBjb3VudCBvZiB1bnByb2Nlc3NlZCBhcmd1bWVudHNcclxuXHRcdFx0aSA9IHJlbWFpbmluZyxcclxuXHJcblx0XHRcdC8vIHN1Ym9yZGluYXRlIGZ1bGZpbGxtZW50IGRhdGFcclxuXHRcdFx0cmVzb2x2ZUNvbnRleHRzID0gQXJyYXkoIGkgKSxcclxuXHRcdFx0cmVzb2x2ZVZhbHVlcyA9IHNsaWNlLmNhbGwoIGFyZ3VtZW50cyApLFxyXG5cclxuXHRcdFx0Ly8gdGhlIG1hc3RlciBEZWZlcnJlZFxyXG5cdFx0XHRtYXN0ZXIgPSBqUXVlcnkuRGVmZXJyZWQoKSxcclxuXHJcblx0XHRcdC8vIHN1Ym9yZGluYXRlIGNhbGxiYWNrIGZhY3RvcnlcclxuXHRcdFx0dXBkYXRlRnVuYyA9IGZ1bmN0aW9uKCBpICkge1xyXG5cdFx0XHRcdHJldHVybiBmdW5jdGlvbiggdmFsdWUgKSB7XHJcblx0XHRcdFx0XHRyZXNvbHZlQ29udGV4dHNbIGkgXSA9IHRoaXM7XHJcblx0XHRcdFx0XHRyZXNvbHZlVmFsdWVzWyBpIF0gPSBhcmd1bWVudHMubGVuZ3RoID4gMSA/IHNsaWNlLmNhbGwoIGFyZ3VtZW50cyApIDogdmFsdWU7XHJcblx0XHRcdFx0XHRpZiAoICEoIC0tcmVtYWluaW5nICkgKSB7XHJcblx0XHRcdFx0XHRcdG1hc3Rlci5yZXNvbHZlV2l0aCggcmVzb2x2ZUNvbnRleHRzLCByZXNvbHZlVmFsdWVzICk7XHJcblx0XHRcdFx0XHR9XHJcblx0XHRcdFx0fTtcclxuXHRcdFx0fTtcclxuXHJcblx0XHQvLyBTaW5nbGUtIGFuZCBlbXB0eSBhcmd1bWVudHMgYXJlIGFkb3B0ZWQgbGlrZSBQcm9taXNlLnJlc29sdmVcclxuXHRcdGlmICggcmVtYWluaW5nIDw9IDEgKSB7XHJcblx0XHRcdGFkb3B0VmFsdWUoIHNpbmdsZVZhbHVlLCBtYXN0ZXIuZG9uZSggdXBkYXRlRnVuYyggaSApICkucmVzb2x2ZSwgbWFzdGVyLnJlamVjdCxcclxuXHRcdFx0XHQhcmVtYWluaW5nICk7XHJcblxyXG5cdFx0XHQvLyBVc2UgLnRoZW4oKSB0byB1bndyYXAgc2Vjb25kYXJ5IHRoZW5hYmxlcyAoY2YuIGdoLTMwMDApXHJcblx0XHRcdGlmICggbWFzdGVyLnN0YXRlKCkgPT09IFwicGVuZGluZ1wiIHx8XHJcblx0XHRcdFx0aXNGdW5jdGlvbiggcmVzb2x2ZVZhbHVlc1sgaSBdICYmIHJlc29sdmVWYWx1ZXNbIGkgXS50aGVuICkgKSB7XHJcblxyXG5cdFx0XHRcdHJldHVybiBtYXN0ZXIudGhlbigpO1xyXG5cdFx0XHR9XHJcblx0XHR9XHJcblxyXG5cdFx0Ly8gTXVsdGlwbGUgYXJndW1lbnRzIGFyZSBhZ2dyZWdhdGVkIGxpa2UgUHJvbWlzZS5hbGwgYXJyYXkgZWxlbWVudHNcclxuXHRcdHdoaWxlICggaS0tICkge1xyXG5cdFx0XHRhZG9wdFZhbHVlKCByZXNvbHZlVmFsdWVzWyBpIF0sIHVwZGF0ZUZ1bmMoIGkgKSwgbWFzdGVyLnJlamVjdCApO1xyXG5cdFx0fVxyXG5cclxuXHRcdHJldHVybiBtYXN0ZXIucHJvbWlzZSgpO1xyXG5cdH1cclxufSApO1xyXG5cclxuXHJcbi8vIFRoZXNlIHVzdWFsbHkgaW5kaWNhdGUgYSBwcm9ncmFtbWVyIG1pc3Rha2UgZHVyaW5nIGRldmVsb3BtZW50LFxyXG4vLyB3YXJuIGFib3V0IHRoZW0gQVNBUCByYXRoZXIgdGhhbiBzd2FsbG93aW5nIHRoZW0gYnkgZGVmYXVsdC5cclxudmFyIHJlcnJvck5hbWVzID0gL14oRXZhbHxJbnRlcm5hbHxSYW5nZXxSZWZlcmVuY2V8U3ludGF4fFR5cGV8VVJJKUVycm9yJC87XHJcblxyXG5qUXVlcnkuRGVmZXJyZWQuZXhjZXB0aW9uSG9vayA9IGZ1bmN0aW9uKCBlcnJvciwgc3RhY2sgKSB7XHJcblxyXG5cdC8vIFN1cHBvcnQ6IElFIDggLSA5IG9ubHlcclxuXHQvLyBDb25zb2xlIGV4aXN0cyB3aGVuIGRldiB0b29scyBhcmUgb3Blbiwgd2hpY2ggY2FuIGhhcHBlbiBhdCBhbnkgdGltZVxyXG5cdGlmICggd2luZG93LmNvbnNvbGUgJiYgd2luZG93LmNvbnNvbGUud2FybiAmJiBlcnJvciAmJiByZXJyb3JOYW1lcy50ZXN0KCBlcnJvci5uYW1lICkgKSB7XHJcblx0XHR3aW5kb3cuY29uc29sZS53YXJuKCBcImpRdWVyeS5EZWZlcnJlZCBleGNlcHRpb246IFwiICsgZXJyb3IubWVzc2FnZSwgZXJyb3Iuc3RhY2ssIHN0YWNrICk7XHJcblx0fVxyXG59O1xyXG5cclxuXHJcblxyXG5cclxualF1ZXJ5LnJlYWR5RXhjZXB0aW9uID0gZnVuY3Rpb24oIGVycm9yICkge1xyXG5cdHdpbmRvdy5zZXRUaW1lb3V0KCBmdW5jdGlvbigpIHtcclxuXHRcdHRocm93IGVycm9yO1xyXG5cdH0gKTtcclxufTtcclxuXHJcblxyXG5cclxuXHJcbi8vIFRoZSBkZWZlcnJlZCB1c2VkIG9uIERPTSByZWFkeVxyXG52YXIgcmVhZHlMaXN0ID0galF1ZXJ5LkRlZmVycmVkKCk7XHJcblxyXG5qUXVlcnkuZm4ucmVhZHkgPSBmdW5jdGlvbiggZm4gKSB7XHJcblxyXG5cdHJlYWR5TGlzdFxyXG5cdFx0LnRoZW4oIGZuIClcclxuXHJcblx0XHQvLyBXcmFwIGpRdWVyeS5yZWFkeUV4Y2VwdGlvbiBpbiBhIGZ1bmN0aW9uIHNvIHRoYXQgdGhlIGxvb2t1cFxyXG5cdFx0Ly8gaGFwcGVucyBhdCB0aGUgdGltZSBvZiBlcnJvciBoYW5kbGluZyBpbnN0ZWFkIG9mIGNhbGxiYWNrXHJcblx0XHQvLyByZWdpc3RyYXRpb24uXHJcblx0XHQuY2F0Y2goIGZ1bmN0aW9uKCBlcnJvciApIHtcclxuXHRcdFx0alF1ZXJ5LnJlYWR5RXhjZXB0aW9uKCBlcnJvciApO1xyXG5cdFx0fSApO1xyXG5cclxuXHRyZXR1cm4gdGhpcztcclxufTtcclxuXHJcbmpRdWVyeS5leHRlbmQoIHtcclxuXHJcblx0Ly8gSXMgdGhlIERPTSByZWFkeSB0byBiZSB1c2VkPyBTZXQgdG8gdHJ1ZSBvbmNlIGl0IG9jY3Vycy5cclxuXHRpc1JlYWR5OiBmYWxzZSxcclxuXHJcblx0Ly8gQSBjb3VudGVyIHRvIHRyYWNrIGhvdyBtYW55IGl0ZW1zIHRvIHdhaXQgZm9yIGJlZm9yZVxyXG5cdC8vIHRoZSByZWFkeSBldmVudCBmaXJlcy4gU2VlICM2NzgxXHJcblx0cmVhZHlXYWl0OiAxLFxyXG5cclxuXHQvLyBIYW5kbGUgd2hlbiB0aGUgRE9NIGlzIHJlYWR5XHJcblx0cmVhZHk6IGZ1bmN0aW9uKCB3YWl0ICkge1xyXG5cclxuXHRcdC8vIEFib3J0IGlmIHRoZXJlIGFyZSBwZW5kaW5nIGhvbGRzIG9yIHdlJ3JlIGFscmVhZHkgcmVhZHlcclxuXHRcdGlmICggd2FpdCA9PT0gdHJ1ZSA/IC0talF1ZXJ5LnJlYWR5V2FpdCA6IGpRdWVyeS5pc1JlYWR5ICkge1xyXG5cdFx0XHRyZXR1cm47XHJcblx0XHR9XHJcblxyXG5cdFx0Ly8gUmVtZW1iZXIgdGhhdCB0aGUgRE9NIGlzIHJlYWR5XHJcblx0XHRqUXVlcnkuaXNSZWFkeSA9IHRydWU7XHJcblxyXG5cdFx0Ly8gSWYgYSBub3JtYWwgRE9NIFJlYWR5IGV2ZW50IGZpcmVkLCBkZWNyZW1lbnQsIGFuZCB3YWl0IGlmIG5lZWQgYmVcclxuXHRcdGlmICggd2FpdCAhPT0gdHJ1ZSAmJiAtLWpRdWVyeS5yZWFkeVdhaXQgPiAwICkge1xyXG5cdFx0XHRyZXR1cm47XHJcblx0XHR9XHJcblxyXG5cdFx0Ly8gSWYgdGhlcmUgYXJlIGZ1bmN0aW9ucyBib3VuZCwgdG8gZXhlY3V0ZVxyXG5cdFx0cmVhZHlMaXN0LnJlc29sdmVXaXRoKCBkb2N1bWVudCwgWyBqUXVlcnkgXSApO1xyXG5cdH1cclxufSApO1xyXG5cclxualF1ZXJ5LnJlYWR5LnRoZW4gPSByZWFkeUxpc3QudGhlbjtcclxuXHJcbi8vIFRoZSByZWFkeSBldmVudCBoYW5kbGVyIGFuZCBzZWxmIGNsZWFudXAgbWV0aG9kXHJcbmZ1bmN0aW9uIGNvbXBsZXRlZCgpIHtcclxuXHRkb2N1bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKCBcIkRPTUNvbnRlbnRMb2FkZWRcIiwgY29tcGxldGVkICk7XHJcblx0d2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoIFwibG9hZFwiLCBjb21wbGV0ZWQgKTtcclxuXHRqUXVlcnkucmVhZHkoKTtcclxufVxyXG5cclxuLy8gQ2F0Y2ggY2FzZXMgd2hlcmUgJChkb2N1bWVudCkucmVhZHkoKSBpcyBjYWxsZWRcclxuLy8gYWZ0ZXIgdGhlIGJyb3dzZXIgZXZlbnQgaGFzIGFscmVhZHkgb2NjdXJyZWQuXHJcbi8vIFN1cHBvcnQ6IElFIDw9OSAtIDEwIG9ubHlcclxuLy8gT2xkZXIgSUUgc29tZXRpbWVzIHNpZ25hbHMgXCJpbnRlcmFjdGl2ZVwiIHRvbyBzb29uXHJcbmlmICggZG9jdW1lbnQucmVhZHlTdGF0ZSA9PT0gXCJjb21wbGV0ZVwiIHx8XHJcblx0KCBkb2N1bWVudC5yZWFkeVN0YXRlICE9PSBcImxvYWRpbmdcIiAmJiAhZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LmRvU2Nyb2xsICkgKSB7XHJcblxyXG5cdC8vIEhhbmRsZSBpdCBhc3luY2hyb25vdXNseSB0byBhbGxvdyBzY3JpcHRzIHRoZSBvcHBvcnR1bml0eSB0byBkZWxheSByZWFkeVxyXG5cdHdpbmRvdy5zZXRUaW1lb3V0KCBqUXVlcnkucmVhZHkgKTtcclxuXHJcbn0gZWxzZSB7XHJcblxyXG5cdC8vIFVzZSB0aGUgaGFuZHkgZXZlbnQgY2FsbGJhY2tcclxuXHRkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCBcIkRPTUNvbnRlbnRMb2FkZWRcIiwgY29tcGxldGVkICk7XHJcblxyXG5cdC8vIEEgZmFsbGJhY2sgdG8gd2luZG93Lm9ubG9hZCwgdGhhdCB3aWxsIGFsd2F5cyB3b3JrXHJcblx0d2luZG93LmFkZEV2ZW50TGlzdGVuZXIoIFwibG9hZFwiLCBjb21wbGV0ZWQgKTtcclxufVxyXG5cclxuXHJcblxyXG5cclxuLy8gTXVsdGlmdW5jdGlvbmFsIG1ldGhvZCB0byBnZXQgYW5kIHNldCB2YWx1ZXMgb2YgYSBjb2xsZWN0aW9uXHJcbi8vIFRoZSB2YWx1ZS9zIGNhbiBvcHRpb25hbGx5IGJlIGV4ZWN1dGVkIGlmIGl0J3MgYSBmdW5jdGlvblxyXG52YXIgYWNjZXNzID0gZnVuY3Rpb24oIGVsZW1zLCBmbiwga2V5LCB2YWx1ZSwgY2hhaW5hYmxlLCBlbXB0eUdldCwgcmF3ICkge1xyXG5cdHZhciBpID0gMCxcclxuXHRcdGxlbiA9IGVsZW1zLmxlbmd0aCxcclxuXHRcdGJ1bGsgPSBrZXkgPT0gbnVsbDtcclxuXHJcblx0Ly8gU2V0cyBtYW55IHZhbHVlc1xyXG5cdGlmICggdG9UeXBlKCBrZXkgKSA9PT0gXCJvYmplY3RcIiApIHtcclxuXHRcdGNoYWluYWJsZSA9IHRydWU7XHJcblx0XHRmb3IgKCBpIGluIGtleSApIHtcclxuXHRcdFx0YWNjZXNzKCBlbGVtcywgZm4sIGksIGtleVsgaSBdLCB0cnVlLCBlbXB0eUdldCwgcmF3ICk7XHJcblx0XHR9XHJcblxyXG5cdC8vIFNldHMgb25lIHZhbHVlXHJcblx0fSBlbHNlIGlmICggdmFsdWUgIT09IHVuZGVmaW5lZCApIHtcclxuXHRcdGNoYWluYWJsZSA9IHRydWU7XHJcblxyXG5cdFx0aWYgKCAhaXNGdW5jdGlvbiggdmFsdWUgKSApIHtcclxuXHRcdFx0cmF3ID0gdHJ1ZTtcclxuXHRcdH1cclxuXHJcblx0XHRpZiAoIGJ1bGsgKSB7XHJcblxyXG5cdFx0XHQvLyBCdWxrIG9wZXJhdGlvbnMgcnVuIGFnYWluc3QgdGhlIGVudGlyZSBzZXRcclxuXHRcdFx0aWYgKCByYXcgKSB7XHJcblx0XHRcdFx0Zm4uY2FsbCggZWxlbXMsIHZhbHVlICk7XHJcblx0XHRcdFx0Zm4gPSBudWxsO1xyXG5cclxuXHRcdFx0Ly8gLi4uZXhjZXB0IHdoZW4gZXhlY3V0aW5nIGZ1bmN0aW9uIHZhbHVlc1xyXG5cdFx0XHR9IGVsc2Uge1xyXG5cdFx0XHRcdGJ1bGsgPSBmbjtcclxuXHRcdFx0XHRmbiA9IGZ1bmN0aW9uKCBlbGVtLCBrZXksIHZhbHVlICkge1xyXG5cdFx0XHRcdFx0cmV0dXJuIGJ1bGsuY2FsbCggalF1ZXJ5KCBlbGVtICksIHZhbHVlICk7XHJcblx0XHRcdFx0fTtcclxuXHRcdFx0fVxyXG5cdFx0fVxyXG5cclxuXHRcdGlmICggZm4gKSB7XHJcblx0XHRcdGZvciAoIDsgaSA8IGxlbjsgaSsrICkge1xyXG5cdFx0XHRcdGZuKFxyXG5cdFx0XHRcdFx0ZWxlbXNbIGkgXSwga2V5LCByYXcgP1xyXG5cdFx0XHRcdFx0dmFsdWUgOlxyXG5cdFx0XHRcdFx0dmFsdWUuY2FsbCggZWxlbXNbIGkgXSwgaSwgZm4oIGVsZW1zWyBpIF0sIGtleSApIClcclxuXHRcdFx0XHQpO1xyXG5cdFx0XHR9XHJcblx0XHR9XHJcblx0fVxyXG5cclxuXHRpZiAoIGNoYWluYWJsZSApIHtcclxuXHRcdHJldHVybiBlbGVtcztcclxuXHR9XHJcblxyXG5cdC8vIEdldHNcclxuXHRpZiAoIGJ1bGsgKSB7XHJcblx0XHRyZXR1cm4gZm4uY2FsbCggZWxlbXMgKTtcclxuXHR9XHJcblxyXG5cdHJldHVybiBsZW4gPyBmbiggZWxlbXNbIDAgXSwga2V5ICkgOiBlbXB0eUdldDtcclxufTtcclxuXHJcblxyXG4vLyBNYXRjaGVzIGRhc2hlZCBzdHJpbmcgZm9yIGNhbWVsaXppbmdcclxudmFyIHJtc1ByZWZpeCA9IC9eLW1zLS8sXHJcblx0cmRhc2hBbHBoYSA9IC8tKFthLXpdKS9nO1xyXG5cclxuLy8gVXNlZCBieSBjYW1lbENhc2UgYXMgY2FsbGJhY2sgdG8gcmVwbGFjZSgpXHJcbmZ1bmN0aW9uIGZjYW1lbENhc2UoIGFsbCwgbGV0dGVyICkge1xyXG5cdHJldHVybiBsZXR0ZXIudG9VcHBlckNhc2UoKTtcclxufVxyXG5cclxuLy8gQ29udmVydCBkYXNoZWQgdG8gY2FtZWxDYXNlOyB1c2VkIGJ5IHRoZSBjc3MgYW5kIGRhdGEgbW9kdWxlc1xyXG4vLyBTdXBwb3J0OiBJRSA8PTkgLSAxMSwgRWRnZSAxMiAtIDE1XHJcbi8vIE1pY3Jvc29mdCBmb3Jnb3QgdG8gaHVtcCB0aGVpciB2ZW5kb3IgcHJlZml4ICgjOTU3MilcclxuZnVuY3Rpb24gY2FtZWxDYXNlKCBzdHJpbmcgKSB7XHJcblx0cmV0dXJuIHN0cmluZy5yZXBsYWNlKCBybXNQcmVmaXgsIFwibXMtXCIgKS5yZXBsYWNlKCByZGFzaEFscGhhLCBmY2FtZWxDYXNlICk7XHJcbn1cclxudmFyIGFjY2VwdERhdGEgPSBmdW5jdGlvbiggb3duZXIgKSB7XHJcblxyXG5cdC8vIEFjY2VwdHMgb25seTpcclxuXHQvLyAgLSBOb2RlXHJcblx0Ly8gICAgLSBOb2RlLkVMRU1FTlRfTk9ERVxyXG5cdC8vICAgIC0gTm9kZS5ET0NVTUVOVF9OT0RFXHJcblx0Ly8gIC0gT2JqZWN0XHJcblx0Ly8gICAgLSBBbnlcclxuXHRyZXR1cm4gb3duZXIubm9kZVR5cGUgPT09IDEgfHwgb3duZXIubm9kZVR5cGUgPT09IDkgfHwgISggK293bmVyLm5vZGVUeXBlICk7XHJcbn07XHJcblxyXG5cclxuXHJcblxyXG5mdW5jdGlvbiBEYXRhKCkge1xyXG5cdHRoaXMuZXhwYW5kbyA9IGpRdWVyeS5leHBhbmRvICsgRGF0YS51aWQrKztcclxufVxyXG5cclxuRGF0YS51aWQgPSAxO1xyXG5cclxuRGF0YS5wcm90b3R5cGUgPSB7XHJcblxyXG5cdGNhY2hlOiBmdW5jdGlvbiggb3duZXIgKSB7XHJcblxyXG5cdFx0Ly8gQ2hlY2sgaWYgdGhlIG93bmVyIG9iamVjdCBhbHJlYWR5IGhhcyBhIGNhY2hlXHJcblx0XHR2YXIgdmFsdWUgPSBvd25lclsgdGhpcy5leHBhbmRvIF07XHJcblxyXG5cdFx0Ly8gSWYgbm90LCBjcmVhdGUgb25lXHJcblx0XHRpZiAoICF2YWx1ZSApIHtcclxuXHRcdFx0dmFsdWUgPSB7fTtcclxuXHJcblx0XHRcdC8vIFdlIGNhbiBhY2NlcHQgZGF0YSBmb3Igbm9uLWVsZW1lbnQgbm9kZXMgaW4gbW9kZXJuIGJyb3dzZXJzLFxyXG5cdFx0XHQvLyBidXQgd2Ugc2hvdWxkIG5vdCwgc2VlICM4MzM1LlxyXG5cdFx0XHQvLyBBbHdheXMgcmV0dXJuIGFuIGVtcHR5IG9iamVjdC5cclxuXHRcdFx0aWYgKCBhY2NlcHREYXRhKCBvd25lciApICkge1xyXG5cclxuXHRcdFx0XHQvLyBJZiBpdCBpcyBhIG5vZGUgdW5saWtlbHkgdG8gYmUgc3RyaW5naWZ5LWVkIG9yIGxvb3BlZCBvdmVyXHJcblx0XHRcdFx0Ly8gdXNlIHBsYWluIGFzc2lnbm1lbnRcclxuXHRcdFx0XHRpZiAoIG93bmVyLm5vZGVUeXBlICkge1xyXG5cdFx0XHRcdFx0b3duZXJbIHRoaXMuZXhwYW5kbyBdID0gdmFsdWU7XHJcblxyXG5cdFx0XHRcdC8vIE90aGVyd2lzZSBzZWN1cmUgaXQgaW4gYSBub24tZW51bWVyYWJsZSBwcm9wZXJ0eVxyXG5cdFx0XHRcdC8vIGNvbmZpZ3VyYWJsZSBtdXN0IGJlIHRydWUgdG8gYWxsb3cgdGhlIHByb3BlcnR5IHRvIGJlXHJcblx0XHRcdFx0Ly8gZGVsZXRlZCB3aGVuIGRhdGEgaXMgcmVtb3ZlZFxyXG5cdFx0XHRcdH0gZWxzZSB7XHJcblx0XHRcdFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoIG93bmVyLCB0aGlzLmV4cGFuZG8sIHtcclxuXHRcdFx0XHRcdFx0dmFsdWU6IHZhbHVlLFxyXG5cdFx0XHRcdFx0XHRjb25maWd1cmFibGU6IHRydWVcclxuXHRcdFx0XHRcdH0gKTtcclxuXHRcdFx0XHR9XHJcblx0XHRcdH1cclxuXHRcdH1cclxuXHJcblx0XHRyZXR1cm4gdmFsdWU7XHJcblx0fSxcclxuXHRzZXQ6IGZ1bmN0aW9uKCBvd25lciwgZGF0YSwgdmFsdWUgKSB7XHJcblx0XHR2YXIgcHJvcCxcclxuXHRcdFx0Y2FjaGUgPSB0aGlzLmNhY2hlKCBvd25lciApO1xyXG5cclxuXHRcdC8vIEhhbmRsZTogWyBvd25lciwga2V5LCB2YWx1ZSBdIGFyZ3NcclxuXHRcdC8vIEFsd2F5cyB1c2UgY2FtZWxDYXNlIGtleSAoZ2gtMjI1NylcclxuXHRcdGlmICggdHlwZW9mIGRhdGEgPT09IFwic3RyaW5nXCIgKSB7XHJcblx0XHRcdGNhY2hlWyBjYW1lbENhc2UoIGRhdGEgKSBdID0gdmFsdWU7XHJcblxyXG5cdFx0Ly8gSGFuZGxlOiBbIG93bmVyLCB7IHByb3BlcnRpZXMgfSBdIGFyZ3NcclxuXHRcdH0gZWxzZSB7XHJcblxyXG5cdFx0XHQvLyBDb3B5IHRoZSBwcm9wZXJ0aWVzIG9uZS1ieS1vbmUgdG8gdGhlIGNhY2hlIG9iamVjdFxyXG5cdFx0XHRmb3IgKCBwcm9wIGluIGRhdGEgKSB7XHJcblx0XHRcdFx0Y2FjaGVbIGNhbWVsQ2FzZSggcHJvcCApIF0gPSBkYXRhWyBwcm9wIF07XHJcblx0XHRcdH1cclxuXHRcdH1cclxuXHRcdHJldHVybiBjYWNoZTtcclxuXHR9LFxyXG5cdGdldDogZnVuY3Rpb24oIG93bmVyLCBrZXkgKSB7XHJcblx0XHRyZXR1cm4ga2V5ID09PSB1bmRlZmluZWQgP1xyXG5cdFx0XHR0aGlzLmNhY2hlKCBvd25lciApIDpcclxuXHJcblx0XHRcdC8vIEFsd2F5cyB1c2UgY2FtZWxDYXNlIGtleSAoZ2gtMjI1NylcclxuXHRcdFx0b3duZXJbIHRoaXMuZXhwYW5kbyBdICYmIG93bmVyWyB0aGlzLmV4cGFuZG8gXVsgY2FtZWxDYXNlKCBrZXkgKSBdO1xyXG5cdH0sXHJcblx0YWNjZXNzOiBmdW5jdGlvbiggb3duZXIsIGtleSwgdmFsdWUgKSB7XHJcblxyXG5cdFx0Ly8gSW4gY2FzZXMgd2hlcmUgZWl0aGVyOlxyXG5cdFx0Ly9cclxuXHRcdC8vICAgMS4gTm8ga2V5IHdhcyBzcGVjaWZpZWRcclxuXHRcdC8vICAgMi4gQSBzdHJpbmcga2V5IHdhcyBzcGVjaWZpZWQsIGJ1dCBubyB2YWx1ZSBwcm92aWRlZFxyXG5cdFx0Ly9cclxuXHRcdC8vIFRha2UgdGhlIFwicmVhZFwiIHBhdGggYW5kIGFsbG93IHRoZSBnZXQgbWV0aG9kIHRvIGRldGVybWluZVxyXG5cdFx0Ly8gd2hpY2ggdmFsdWUgdG8gcmV0dXJuLCByZXNwZWN0aXZlbHkgZWl0aGVyOlxyXG5cdFx0Ly9cclxuXHRcdC8vICAgMS4gVGhlIGVudGlyZSBjYWNoZSBvYmplY3RcclxuXHRcdC8vICAgMi4gVGhlIGRhdGEgc3RvcmVkIGF0IHRoZSBrZXlcclxuXHRcdC8vXHJcblx0XHRpZiAoIGtleSA9PT0gdW5kZWZpbmVkIHx8XHJcblx0XHRcdFx0KCAoIGtleSAmJiB0eXBlb2Yga2V5ID09PSBcInN0cmluZ1wiICkgJiYgdmFsdWUgPT09IHVuZGVmaW5lZCApICkge1xyXG5cclxuXHRcdFx0cmV0dXJuIHRoaXMuZ2V0KCBvd25lciwga2V5ICk7XHJcblx0XHR9XHJcblxyXG5cdFx0Ly8gV2hlbiB0aGUga2V5IGlzIG5vdCBhIHN0cmluZywgb3IgYm90aCBhIGtleSBhbmQgdmFsdWVcclxuXHRcdC8vIGFyZSBzcGVjaWZpZWQsIHNldCBvciBleHRlbmQgKGV4aXN0aW5nIG9iamVjdHMpIHdpdGggZWl0aGVyOlxyXG5cdFx0Ly9cclxuXHRcdC8vICAgMS4gQW4gb2JqZWN0IG9mIHByb3BlcnRpZXNcclxuXHRcdC8vICAgMi4gQSBrZXkgYW5kIHZhbHVlXHJcblx0XHQvL1xyXG5cdFx0dGhpcy5zZXQoIG93bmVyLCBrZXksIHZhbHVlICk7XHJcblxyXG5cdFx0Ly8gU2luY2UgdGhlIFwic2V0XCIgcGF0aCBjYW4gaGF2ZSB0d28gcG9zc2libGUgZW50cnkgcG9pbnRzXHJcblx0XHQvLyByZXR1cm4gdGhlIGV4cGVjdGVkIGRhdGEgYmFzZWQgb24gd2hpY2ggcGF0aCB3YXMgdGFrZW5bKl1cclxuXHRcdHJldHVybiB2YWx1ZSAhPT0gdW5kZWZpbmVkID8gdmFsdWUgOiBrZXk7XHJcblx0fSxcclxuXHRyZW1vdmU6IGZ1bmN0aW9uKCBvd25lciwga2V5ICkge1xyXG5cdFx0dmFyIGksXHJcblx0XHRcdGNhY2hlID0gb3duZXJbIHRoaXMuZXhwYW5kbyBdO1xyXG5cclxuXHRcdGlmICggY2FjaGUgPT09IHVuZGVmaW5lZCApIHtcclxuXHRcdFx0cmV0dXJuO1xyXG5cdFx0fVxyXG5cclxuXHRcdGlmICgga2V5ICE9PSB1bmRlZmluZWQgKSB7XHJcblxyXG5cdFx0XHQvLyBTdXBwb3J0IGFycmF5IG9yIHNwYWNlIHNlcGFyYXRlZCBzdHJpbmcgb2Yga2V5c1xyXG5cdFx0XHRpZiAoIEFycmF5LmlzQXJyYXkoIGtleSApICkge1xyXG5cclxuXHRcdFx0XHQvLyBJZiBrZXkgaXMgYW4gYXJyYXkgb2Yga2V5cy4uLlxyXG5cdFx0XHRcdC8vIFdlIGFsd2F5cyBzZXQgY2FtZWxDYXNlIGtleXMsIHNvIHJlbW92ZSB0aGF0LlxyXG5cdFx0XHRcdGtleSA9IGtleS5tYXAoIGNhbWVsQ2FzZSApO1xyXG5cdFx0XHR9IGVsc2Uge1xyXG5cdFx0XHRcdGtleSA9IGNhbWVsQ2FzZSgga2V5ICk7XHJcblxyXG5cdFx0XHRcdC8vIElmIGEga2V5IHdpdGggdGhlIHNwYWNlcyBleGlzdHMsIHVzZSBpdC5cclxuXHRcdFx0XHQvLyBPdGhlcndpc2UsIGNyZWF0ZSBhbiBhcnJheSBieSBtYXRjaGluZyBub24td2hpdGVzcGFjZVxyXG5cdFx0XHRcdGtleSA9IGtleSBpbiBjYWNoZSA/XHJcblx0XHRcdFx0XHRbIGtleSBdIDpcclxuXHRcdFx0XHRcdCgga2V5Lm1hdGNoKCBybm90aHRtbHdoaXRlICkgfHwgW10gKTtcclxuXHRcdFx0fVxyXG5cclxuXHRcdFx0aSA9IGtleS5sZW5ndGg7XHJcblxyXG5cdFx0XHR3aGlsZSAoIGktLSApIHtcclxuXHRcdFx0XHRkZWxldGUgY2FjaGVbIGtleVsgaSBdIF07XHJcblx0XHRcdH1cclxuXHRcdH1cclxuXHJcblx0XHQvLyBSZW1vdmUgdGhlIGV4cGFuZG8gaWYgdGhlcmUncyBubyBtb3JlIGRhdGFcclxuXHRcdGlmICgga2V5ID09PSB1bmRlZmluZWQgfHwgalF1ZXJ5LmlzRW1wdHlPYmplY3QoIGNhY2hlICkgKSB7XHJcblxyXG5cdFx0XHQvLyBTdXBwb3J0OiBDaHJvbWUgPD0zNSAtIDQ1XHJcblx0XHRcdC8vIFdlYmtpdCAmIEJsaW5rIHBlcmZvcm1hbmNlIHN1ZmZlcnMgd2hlbiBkZWxldGluZyBwcm9wZXJ0aWVzXHJcblx0XHRcdC8vIGZyb20gRE9NIG5vZGVzLCBzbyBzZXQgdG8gdW5kZWZpbmVkIGluc3RlYWRcclxuXHRcdFx0Ly8gaHR0cHM6Ly9idWdzLmNocm9taXVtLm9yZy9wL2Nocm9taXVtL2lzc3Vlcy9kZXRhaWw/aWQ9Mzc4NjA3IChidWcgcmVzdHJpY3RlZClcclxuXHRcdFx0aWYgKCBvd25lci5ub2RlVHlwZSApIHtcclxuXHRcdFx0XHRvd25lclsgdGhpcy5leHBhbmRvIF0gPSB1bmRlZmluZWQ7XHJcblx0XHRcdH0gZWxzZSB7XHJcblx0XHRcdFx0ZGVsZXRlIG93bmVyWyB0aGlzLmV4cGFuZG8gXTtcclxuXHRcdFx0fVxyXG5cdFx0fVxyXG5cdH0sXHJcblx0aGFzRGF0YTogZnVuY3Rpb24oIG93bmVyICkge1xyXG5cdFx0dmFyIGNhY2hlID0gb3duZXJbIHRoaXMuZXhwYW5kbyBdO1xyXG5cdFx0cmV0dXJuIGNhY2hlICE9PSB1bmRlZmluZWQgJiYgIWpRdWVyeS5pc0VtcHR5T2JqZWN0KCBjYWNoZSApO1xyXG5cdH1cclxufTtcclxudmFyIGRhdGFQcml2ID0gbmV3IERhdGEoKTtcclxuXHJcbnZhciBkYXRhVXNlciA9IG5ldyBEYXRhKCk7XHJcblxyXG5cclxuXHJcbi8vXHRJbXBsZW1lbnRhdGlvbiBTdW1tYXJ5XHJcbi8vXHJcbi8vXHQxLiBFbmZvcmNlIEFQSSBzdXJmYWNlIGFuZCBzZW1hbnRpYyBjb21wYXRpYmlsaXR5IHdpdGggMS45LnggYnJhbmNoXHJcbi8vXHQyLiBJbXByb3ZlIHRoZSBtb2R1bGUncyBtYWludGFpbmFiaWxpdHkgYnkgcmVkdWNpbmcgdGhlIHN0b3JhZ2VcclxuLy9cdFx0cGF0aHMgdG8gYSBzaW5nbGUgbWVjaGFuaXNtLlxyXG4vL1x0My4gVXNlIHRoZSBzYW1lIHNpbmdsZSBtZWNoYW5pc20gdG8gc3VwcG9ydCBcInByaXZhdGVcIiBhbmQgXCJ1c2VyXCIgZGF0YS5cclxuLy9cdDQuIF9OZXZlcl8gZXhwb3NlIFwicHJpdmF0ZVwiIGRhdGEgdG8gdXNlciBjb2RlIChUT0RPOiBEcm9wIF9kYXRhLCBfcmVtb3ZlRGF0YSlcclxuLy9cdDUuIEF2b2lkIGV4cG9zaW5nIGltcGxlbWVudGF0aW9uIGRldGFpbHMgb24gdXNlciBvYmplY3RzIChlZy4gZXhwYW5kbyBwcm9wZXJ0aWVzKVxyXG4vL1x0Ni4gUHJvdmlkZSBhIGNsZWFyIHBhdGggZm9yIGltcGxlbWVudGF0aW9uIHVwZ3JhZGUgdG8gV2Vha01hcCBpbiAyMDE0XHJcblxyXG52YXIgcmJyYWNlID0gL14oPzpcXHtbXFx3XFxXXSpcXH18XFxbW1xcd1xcV10qXFxdKSQvLFxyXG5cdHJtdWx0aURhc2ggPSAvW0EtWl0vZztcclxuXHJcbmZ1bmN0aW9uIGdldERhdGEoIGRhdGEgKSB7XHJcblx0aWYgKCBkYXRhID09PSBcInRydWVcIiApIHtcclxuXHRcdHJldHVybiB0cnVlO1xyXG5cdH1cclxuXHJcblx0aWYgKCBkYXRhID09PSBcImZhbHNlXCIgKSB7XHJcblx0XHRyZXR1cm4gZmFsc2U7XHJcblx0fVxyXG5cclxuXHRpZiAoIGRhdGEgPT09IFwibnVsbFwiICkge1xyXG5cdFx0cmV0dXJuIG51bGw7XHJcblx0fVxyXG5cclxuXHQvLyBPbmx5IGNvbnZlcnQgdG8gYSBudW1iZXIgaWYgaXQgZG9lc24ndCBjaGFuZ2UgdGhlIHN0cmluZ1xyXG5cdGlmICggZGF0YSA9PT0gK2RhdGEgKyBcIlwiICkge1xyXG5cdFx0cmV0dXJuICtkYXRhO1xyXG5cdH1cclxuXHJcblx0aWYgKCByYnJhY2UudGVzdCggZGF0YSApICkge1xyXG5cdFx0cmV0dXJuIEpTT04ucGFyc2UoIGRhdGEgKTtcclxuXHR9XHJcblxyXG5cdHJldHVybiBkYXRhO1xyXG59XHJcblxyXG5mdW5jdGlvbiBkYXRhQXR0ciggZWxlbSwga2V5LCBkYXRhICkge1xyXG5cdHZhciBuYW1lO1xyXG5cclxuXHQvLyBJZiBub3RoaW5nIHdhcyBmb3VuZCBpbnRlcm5hbGx5LCB0cnkgdG8gZmV0Y2ggYW55XHJcblx0Ly8gZGF0YSBmcm9tIHRoZSBIVE1MNSBkYXRhLSogYXR0cmlidXRlXHJcblx0aWYgKCBkYXRhID09PSB1bmRlZmluZWQgJiYgZWxlbS5ub2RlVHlwZSA9PT0gMSApIHtcclxuXHRcdG5hbWUgPSBcImRhdGEtXCIgKyBrZXkucmVwbGFjZSggcm11bHRpRGFzaCwgXCItJCZcIiApLnRvTG93ZXJDYXNlKCk7XHJcblx0XHRkYXRhID0gZWxlbS5nZXRBdHRyaWJ1dGUoIG5hbWUgKTtcclxuXHJcblx0XHRpZiAoIHR5cGVvZiBkYXRhID09PSBcInN0cmluZ1wiICkge1xyXG5cdFx0XHR0cnkge1xyXG5cdFx0XHRcdGRhdGEgPSBnZXREYXRhKCBkYXRhICk7XHJcblx0XHRcdH0gY2F0Y2ggKCBlICkge31cclxuXHJcblx0XHRcdC8vIE1ha2Ugc3VyZSB3ZSBzZXQgdGhlIGRhdGEgc28gaXQgaXNuJ3QgY2hhbmdlZCBsYXRlclxyXG5cdFx0XHRkYXRhVXNlci5zZXQoIGVsZW0sIGtleSwgZGF0YSApO1xyXG5cdFx0fSBlbHNlIHtcclxuXHRcdFx0ZGF0YSA9IHVuZGVmaW5lZDtcclxuXHRcdH1cclxuXHR9XHJcblx0cmV0dXJuIGRhdGE7XHJcbn1cclxuXHJcbmpRdWVyeS5leHRlbmQoIHtcclxuXHRoYXNEYXRhOiBmdW5jdGlvbiggZWxlbSApIHtcclxuXHRcdHJldHVybiBkYXRhVXNlci5oYXNEYXRhKCBlbGVtICkgfHwgZGF0YVByaXYuaGFzRGF0YSggZWxlbSApO1xyXG5cdH0sXHJcblxyXG5cdGRhdGE6IGZ1bmN0aW9uKCBlbGVtLCBuYW1lLCBkYXRhICkge1xyXG5cdFx0cmV0dXJuIGRhdGFVc2VyLmFjY2VzcyggZWxlbSwgbmFtZSwgZGF0YSApO1xyXG5cdH0sXHJcblxyXG5cdHJlbW92ZURhdGE6IGZ1bmN0aW9uKCBlbGVtLCBuYW1lICkge1xyXG5cdFx0ZGF0YVVzZXIucmVtb3ZlKCBlbGVtLCBuYW1lICk7XHJcblx0fSxcclxuXHJcblx0Ly8gVE9ETzogTm93IHRoYXQgYWxsIGNhbGxzIHRvIF9kYXRhIGFuZCBfcmVtb3ZlRGF0YSBoYXZlIGJlZW4gcmVwbGFjZWRcclxuXHQvLyB3aXRoIGRpcmVjdCBjYWxscyB0byBkYXRhUHJpdiBtZXRob2RzLCB0aGVzZSBjYW4gYmUgZGVwcmVjYXRlZC5cclxuXHRfZGF0YTogZnVuY3Rpb24oIGVsZW0sIG5hbWUsIGRhdGEgKSB7XHJcblx0XHRyZXR1cm4gZGF0YVByaXYuYWNjZXNzKCBlbGVtLCBuYW1lLCBkYXRhICk7XHJcblx0fSxcclxuXHJcblx0X3JlbW92ZURhdGE6IGZ1bmN0aW9uKCBlbGVtLCBuYW1lICkge1xyXG5cdFx0ZGF0YVByaXYucmVtb3ZlKCBlbGVtLCBuYW1lICk7XHJcblx0fVxyXG59ICk7XHJcblxyXG5qUXVlcnkuZm4uZXh0ZW5kKCB7XHJcblx0ZGF0YTogZnVuY3Rpb24oIGtleSwgdmFsdWUgKSB7XHJcblx0XHR2YXIgaSwgbmFtZSwgZGF0YSxcclxuXHRcdFx0ZWxlbSA9IHRoaXNbIDAgXSxcclxuXHRcdFx0YXR0cnMgPSBlbGVtICYmIGVsZW0uYXR0cmlidXRlcztcclxuXHJcblx0XHQvLyBHZXRzIGFsbCB2YWx1ZXNcclxuXHRcdGlmICgga2V5ID09PSB1bmRlZmluZWQgKSB7XHJcblx0XHRcdGlmICggdGhpcy5sZW5ndGggKSB7XHJcblx0XHRcdFx0ZGF0YSA9IGRhdGFVc2VyLmdldCggZWxlbSApO1xyXG5cclxuXHRcdFx0XHRpZiAoIGVsZW0ubm9kZVR5cGUgPT09IDEgJiYgIWRhdGFQcml2LmdldCggZWxlbSwgXCJoYXNEYXRhQXR0cnNcIiApICkge1xyXG5cdFx0XHRcdFx0aSA9IGF0dHJzLmxlbmd0aDtcclxuXHRcdFx0XHRcdHdoaWxlICggaS0tICkge1xyXG5cclxuXHRcdFx0XHRcdFx0Ly8gU3VwcG9ydDogSUUgMTEgb25seVxyXG5cdFx0XHRcdFx0XHQvLyBUaGUgYXR0cnMgZWxlbWVudHMgY2FuIGJlIG51bGwgKCMxNDg5NClcclxuXHRcdFx0XHRcdFx0aWYgKCBhdHRyc1sgaSBdICkge1xyXG5cdFx0XHRcdFx0XHRcdG5hbWUgPSBhdHRyc1sgaSBdLm5hbWU7XHJcblx0XHRcdFx0XHRcdFx0aWYgKCBuYW1lLmluZGV4T2YoIFwiZGF0YS1cIiApID09PSAwICkge1xyXG5cdFx0XHRcdFx0XHRcdFx0bmFtZSA9IGNhbWVsQ2FzZSggbmFtZS5zbGljZSggNSApICk7XHJcblx0XHRcdFx0XHRcdFx0XHRkYXRhQXR0ciggZWxlbSwgbmFtZSwgZGF0YVsgbmFtZSBdICk7XHJcblx0XHRcdFx0XHRcdFx0fVxyXG5cdFx0XHRcdFx0XHR9XHJcblx0XHRcdFx0XHR9XHJcblx0XHRcdFx0XHRkYXRhUHJpdi5zZXQoIGVsZW0sIFwiaGFzRGF0YUF0dHJzXCIsIHRydWUgKTtcclxuXHRcdFx0XHR9XHJcblx0XHRcdH1cclxuXHJcblx0XHRcdHJldHVybiBkYXRhO1xyXG5cdFx0fVxyXG5cclxuXHRcdC8vIFNldHMgbXVsdGlwbGUgdmFsdWVzXHJcblx0XHRpZiAoIHR5cGVvZiBrZXkgPT09IFwib2JqZWN0XCIgKSB7XHJcblx0XHRcdHJldHVybiB0aGlzLmVhY2goIGZ1bmN0aW9uKCkge1xyXG5cdFx0XHRcdGRhdGFVc2VyLnNldCggdGhpcywga2V5ICk7XHJcblx0XHRcdH0gKTtcclxuXHRcdH1cclxuXHJcblx0XHRyZXR1cm4gYWNjZXNzKCB0aGlzLCBmdW5jdGlvbiggdmFsdWUgKSB7XHJcblx0XHRcdHZhciBkYXRhO1xyXG5cclxuXHRcdFx0Ly8gVGhlIGNhbGxpbmcgalF1ZXJ5IG9iamVjdCAoZWxlbWVudCBtYXRjaGVzKSBpcyBub3QgZW1wdHlcclxuXHRcdFx0Ly8gKGFuZCB0aGVyZWZvcmUgaGFzIGFuIGVsZW1lbnQgYXBwZWFycyBhdCB0aGlzWyAwIF0pIGFuZCB0aGVcclxuXHRcdFx0Ly8gYHZhbHVlYCBwYXJhbWV0ZXIgd2FzIG5vdCB1bmRlZmluZWQuIEFuIGVtcHR5IGpRdWVyeSBvYmplY3RcclxuXHRcdFx0Ly8gd2lsbCByZXN1bHQgaW4gYHVuZGVmaW5lZGAgZm9yIGVsZW0gPSB0aGlzWyAwIF0gd2hpY2ggd2lsbFxyXG5cdFx0XHQvLyB0aHJvdyBhbiBleGNlcHRpb24gaWYgYW4gYXR0ZW1wdCB0byByZWFkIGEgZGF0YSBjYWNoZSBpcyBtYWRlLlxyXG5cdFx0XHRpZiAoIGVsZW0gJiYgdmFsdWUgPT09IHVuZGVmaW5lZCApIHtcclxuXHJcblx0XHRcdFx0Ly8gQXR0ZW1wdCB0byBnZXQgZGF0YSBmcm9tIHRoZSBjYWNoZVxyXG5cdFx0XHRcdC8vIFRoZSBrZXkgd2lsbCBhbHdheXMgYmUgY2FtZWxDYXNlZCBpbiBEYXRhXHJcblx0XHRcdFx0ZGF0YSA9IGRhdGFVc2VyLmdldCggZWxlbSwga2V5ICk7XHJcblx0XHRcdFx0aWYgKCBkYXRhICE9PSB1bmRlZmluZWQgKSB7XHJcblx0XHRcdFx0XHRyZXR1cm4gZGF0YTtcclxuXHRcdFx0XHR9XHJcblxyXG5cdFx0XHRcdC8vIEF0dGVtcHQgdG8gXCJkaXNjb3ZlclwiIHRoZSBkYXRhIGluXHJcblx0XHRcdFx0Ly8gSFRNTDUgY3VzdG9tIGRhdGEtKiBhdHRyc1xyXG5cdFx0XHRcdGRhdGEgPSBkYXRhQXR0ciggZWxlbSwga2V5ICk7XHJcblx0XHRcdFx0aWYgKCBkYXRhICE9PSB1bmRlZmluZWQgKSB7XHJcblx0XHRcdFx0XHRyZXR1cm4gZGF0YTtcclxuXHRcdFx0XHR9XHJcblxyXG5cdFx0XHRcdC8vIFdlIHRyaWVkIHJlYWxseSBoYXJkLCBidXQgdGhlIGRhdGEgZG9lc24ndCBleGlzdC5cclxuXHRcdFx0XHRyZXR1cm47XHJcblx0XHRcdH1cclxuXHJcblx0XHRcdC8vIFNldCB0aGUgZGF0YS4uLlxyXG5cdFx0XHR0aGlzLmVhY2goIGZ1bmN0aW9uKCkge1xyXG5cclxuXHRcdFx0XHQvLyBXZSBhbHdheXMgc3RvcmUgdGhlIGNhbWVsQ2FzZWQga2V5XHJcblx0XHRcdFx0ZGF0YVVzZXIuc2V0KCB0aGlzLCBrZXksIHZhbHVlICk7XHJcblx0XHRcdH0gKTtcclxuXHRcdH0sIG51bGwsIHZhbHVlLCBhcmd1bWVudHMubGVuZ3RoID4gMSwgbnVsbCwgdHJ1ZSApO1xyXG5cdH0sXHJcblxyXG5cdHJlbW92ZURhdGE6IGZ1bmN0aW9uKCBrZXkgKSB7XHJcblx0XHRyZXR1cm4gdGhpcy5lYWNoKCBmdW5jdGlvbigpIHtcclxuXHRcdFx0ZGF0YVVzZXIucmVtb3ZlKCB0aGlzLCBrZXkgKTtcclxuXHRcdH0gKTtcclxuXHR9XHJcbn0gKTtcclxuXHJcblxyXG5qUXVlcnkuZXh0ZW5kKCB7XHJcblx0cXVldWU6IGZ1bmN0aW9uKCBlbGVtLCB0eXBlLCBkYXRhICkge1xyXG5cdFx0dmFyIHF1ZXVlO1xyXG5cclxuXHRcdGlmICggZWxlbSApIHtcclxuXHRcdFx0dHlwZSA9ICggdHlwZSB8fCBcImZ4XCIgKSArIFwicXVldWVcIjtcclxuXHRcdFx0cXVldWUgPSBkYXRhUHJpdi5nZXQoIGVsZW0sIHR5cGUgKTtcclxuXHJcblx0XHRcdC8vIFNwZWVkIHVwIGRlcXVldWUgYnkgZ2V0dGluZyBvdXQgcXVpY2tseSBpZiB0aGlzIGlzIGp1c3QgYSBsb29rdXBcclxuXHRcdFx0aWYgKCBkYXRhICkge1xyXG5cdFx0XHRcdGlmICggIXF1ZXVlIHx8IEFycmF5LmlzQXJyYXkoIGRhdGEgKSApIHtcclxuXHRcdFx0XHRcdHF1ZXVlID0gZGF0YVByaXYuYWNjZXNzKCBlbGVtLCB0eXBlLCBqUXVlcnkubWFrZUFycmF5KCBkYXRhICkgKTtcclxuXHRcdFx0XHR9IGVsc2Uge1xyXG5cdFx0XHRcdFx0cXVldWUucHVzaCggZGF0YSApO1xyXG5cdFx0XHRcdH1cclxuXHRcdFx0fVxyXG5cdFx0XHRyZXR1cm4gcXVldWUgfHwgW107XHJcblx0XHR9XHJcblx0fSxcclxuXHJcblx0ZGVxdWV1ZTogZnVuY3Rpb24oIGVsZW0sIHR5cGUgKSB7XHJcblx0XHR0eXBlID0gdHlwZSB8fCBcImZ4XCI7XHJcblxyXG5cdFx0dmFyIHF1ZXVlID0galF1ZXJ5LnF1ZXVlKCBlbGVtLCB0eXBlICksXHJcblx0XHRcdHN0YXJ0TGVuZ3RoID0gcXVldWUubGVuZ3RoLFxyXG5cdFx0XHRmbiA9IHF1ZXVlLnNoaWZ0KCksXHJcblx0XHRcdGhvb2tzID0galF1ZXJ5Ll9xdWV1ZUhvb2tzKCBlbGVtLCB0eXBlICksXHJcblx0XHRcdG5leHQgPSBmdW5jdGlvbigpIHtcclxuXHRcdFx0XHRqUXVlcnkuZGVxdWV1ZSggZWxlbSwgdHlwZSApO1xyXG5cdFx0XHR9O1xyXG5cclxuXHRcdC8vIElmIHRoZSBmeCBxdWV1ZSBpcyBkZXF1ZXVlZCwgYWx3YXlzIHJlbW92ZSB0aGUgcHJvZ3Jlc3Mgc2VudGluZWxcclxuXHRcdGlmICggZm4gPT09IFwiaW5wcm9ncmVzc1wiICkge1xyXG5cdFx0XHRmbiA9IHF1ZXVlLnNoaWZ0KCk7XHJcblx0XHRcdHN0YXJ0TGVuZ3RoLS07XHJcblx0XHR9XHJcblxyXG5cdFx0aWYgKCBmbiApIHtcclxuXHJcblx0XHRcdC8vIEFkZCBhIHByb2dyZXNzIHNlbnRpbmVsIHRvIHByZXZlbnQgdGhlIGZ4IHF1ZXVlIGZyb20gYmVpbmdcclxuXHRcdFx0Ly8gYXV0b21hdGljYWxseSBkZXF1ZXVlZFxyXG5cdFx0XHRpZiAoIHR5cGUgPT09IFwiZnhcIiApIHtcclxuXHRcdFx0XHRxdWV1ZS51bnNoaWZ0KCBcImlucHJvZ3Jlc3NcIiApO1xyXG5cdFx0XHR9XHJcblxyXG5cdFx0XHQvLyBDbGVhciB1cCB0aGUgbGFzdCBxdWV1ZSBzdG9wIGZ1bmN0aW9uXHJcblx0XHRcdGRlbGV0ZSBob29rcy5zdG9wO1xyXG5cdFx0XHRmbi5jYWxsKCBlbGVtLCBuZXh0LCBob29rcyApO1xyXG5cdFx0fVxyXG5cclxuXHRcdGlmICggIXN0YXJ0TGVuZ3RoICYmIGhvb2tzICkge1xyXG5cdFx0XHRob29rcy5lbXB0eS5maXJlKCk7XHJcblx0XHR9XHJcblx0fSxcclxuXHJcblx0Ly8gTm90IHB1YmxpYyAtIGdlbmVyYXRlIGEgcXVldWVIb29rcyBvYmplY3QsIG9yIHJldHVybiB0aGUgY3VycmVudCBvbmVcclxuXHRfcXVldWVIb29rczogZnVuY3Rpb24oIGVsZW0sIHR5cGUgKSB7XHJcblx0XHR2YXIga2V5ID0gdHlwZSArIFwicXVldWVIb29rc1wiO1xyXG5cdFx0cmV0dXJuIGRhdGFQcml2LmdldCggZWxlbSwga2V5ICkgfHwgZGF0YVByaXYuYWNjZXNzKCBlbGVtLCBrZXksIHtcclxuXHRcdFx0ZW1wdHk6IGpRdWVyeS5DYWxsYmFja3MoIFwib25jZSBtZW1vcnlcIiApLmFkZCggZnVuY3Rpb24oKSB7XHJcblx0XHRcdFx0ZGF0YVByaXYucmVtb3ZlKCBlbGVtLCBbIHR5cGUgKyBcInF1ZXVlXCIsIGtleSBdICk7XHJcblx0XHRcdH0gKVxyXG5cdFx0fSApO1xyXG5cdH1cclxufSApO1xyXG5cclxualF1ZXJ5LmZuLmV4dGVuZCgge1xyXG5cdHF1ZXVlOiBmdW5jdGlvbiggdHlwZSwgZGF0YSApIHtcclxuXHRcdHZhciBzZXR0ZXIgPSAyO1xyXG5cclxuXHRcdGlmICggdHlwZW9mIHR5cGUgIT09IFwic3RyaW5nXCIgKSB7XHJcblx0XHRcdGRhdGEgPSB0eXBlO1xyXG5cdFx0XHR0eXBlID0gXCJmeFwiO1xyXG5cdFx0XHRzZXR0ZXItLTtcclxuXHRcdH1cclxuXHJcblx0XHRpZiAoIGFyZ3VtZW50cy5sZW5ndGggPCBzZXR0ZXIgKSB7XHJcblx0XHRcdHJldHVybiBqUXVlcnkucXVldWUoIHRoaXNbIDAgXSwgdHlwZSApO1xyXG5cdFx0fVxyXG5cclxuXHRcdHJldHVybiBkYXRhID09PSB1bmRlZmluZWQgP1xyXG5cdFx0XHR0aGlzIDpcclxuXHRcdFx0dGhpcy5lYWNoKCBmdW5jdGlvbigpIHtcclxuXHRcdFx0XHR2YXIgcXVldWUgPSBqUXVlcnkucXVldWUoIHRoaXMsIHR5cGUsIGRhdGEgKTtcclxuXHJcblx0XHRcdFx0Ly8gRW5zdXJlIGEgaG9va3MgZm9yIHRoaXMgcXVldWVcclxuXHRcdFx0XHRqUXVlcnkuX3F1ZXVlSG9va3MoIHRoaXMsIHR5cGUgKTtcclxuXHJcblx0XHRcdFx0aWYgKCB0eXBlID09PSBcImZ4XCIgJiYgcXVldWVbIDAgXSAhPT0gXCJpbnByb2dyZXNzXCIgKSB7XHJcblx0XHRcdFx0XHRqUXVlcnkuZGVxdWV1ZSggdGhpcywgdHlwZSApO1xyXG5cdFx0XHRcdH1cclxuXHRcdFx0fSApO1xyXG5cdH0sXHJcblx0ZGVxdWV1ZTogZnVuY3Rpb24oIHR5cGUgKSB7XHJcblx0XHRyZXR1cm4gdGhpcy5lYWNoKCBmdW5jdGlvbigpIHtcclxuXHRcdFx0alF1ZXJ5LmRlcXVldWUoIHRoaXMsIHR5cGUgKTtcclxuXHRcdH0gKTtcclxuXHR9LFxyXG5cdGNsZWFyUXVldWU6IGZ1bmN0aW9uKCB0eXBlICkge1xyXG5cdFx0cmV0dXJuIHRoaXMucXVldWUoIHR5cGUgfHwgXCJmeFwiLCBbXSApO1xyXG5cdH0sXHJcblxyXG5cdC8vIEdldCBhIHByb21pc2UgcmVzb2x2ZWQgd2hlbiBxdWV1ZXMgb2YgYSBjZXJ0YWluIHR5cGVcclxuXHQvLyBhcmUgZW1wdGllZCAoZnggaXMgdGhlIHR5cGUgYnkgZGVmYXVsdClcclxuXHRwcm9taXNlOiBmdW5jdGlvbiggdHlwZSwgb2JqICkge1xyXG5cdFx0dmFyIHRtcCxcclxuXHRcdFx0Y291bnQgPSAxLFxyXG5cdFx0XHRkZWZlciA9IGpRdWVyeS5EZWZlcnJlZCgpLFxyXG5cdFx0XHRlbGVtZW50cyA9IHRoaXMsXHJcblx0XHRcdGkgPSB0aGlzLmxlbmd0aCxcclxuXHRcdFx0cmVzb2x2ZSA9IGZ1bmN0aW9uKCkge1xyXG5cdFx0XHRcdGlmICggISggLS1jb3VudCApICkge1xyXG5cdFx0XHRcdFx0ZGVmZXIucmVzb2x2ZVdpdGgoIGVsZW1lbnRzLCBbIGVsZW1lbnRzIF0gKTtcclxuXHRcdFx0XHR9XHJcblx0XHRcdH07XHJcblxyXG5cdFx0aWYgKCB0eXBlb2YgdHlwZSAhPT0gXCJzdHJpbmdcIiApIHtcclxuXHRcdFx0b2JqID0gdHlwZTtcclxuXHRcdFx0dHlwZSA9IHVuZGVmaW5lZDtcclxuXHRcdH1cclxuXHRcdHR5cGUgPSB0eXBlIHx8IFwiZnhcIjtcclxuXHJcblx0XHR3aGlsZSAoIGktLSApIHtcclxuXHRcdFx0dG1wID0gZGF0YVByaXYuZ2V0KCBlbGVtZW50c1sgaSBdLCB0eXBlICsgXCJxdWV1ZUhvb2tzXCIgKTtcclxuXHRcdFx0aWYgKCB0bXAgJiYgdG1wLmVtcHR5ICkge1xyXG5cdFx0XHRcdGNvdW50Kys7XHJcblx0XHRcdFx0dG1wLmVtcHR5LmFkZCggcmVzb2x2ZSApO1xyXG5cdFx0XHR9XHJcblx0XHR9XHJcblx0XHRyZXNvbHZlKCk7XHJcblx0XHRyZXR1cm4gZGVmZXIucHJvbWlzZSggb2JqICk7XHJcblx0fVxyXG59ICk7XHJcbnZhciBwbnVtID0gKCAvWystXT8oPzpcXGQqXFwufClcXGQrKD86W2VFXVsrLV0/XFxkK3wpLyApLnNvdXJjZTtcclxuXHJcbnZhciByY3NzTnVtID0gbmV3IFJlZ0V4cCggXCJeKD86KFsrLV0pPXwpKFwiICsgcG51bSArIFwiKShbYS16JV0qKSRcIiwgXCJpXCIgKTtcclxuXHJcblxyXG52YXIgY3NzRXhwYW5kID0gWyBcIlRvcFwiLCBcIlJpZ2h0XCIsIFwiQm90dG9tXCIsIFwiTGVmdFwiIF07XHJcblxyXG52YXIgaXNIaWRkZW5XaXRoaW5UcmVlID0gZnVuY3Rpb24oIGVsZW0sIGVsICkge1xyXG5cclxuXHRcdC8vIGlzSGlkZGVuV2l0aGluVHJlZSBtaWdodCBiZSBjYWxsZWQgZnJvbSBqUXVlcnkjZmlsdGVyIGZ1bmN0aW9uO1xyXG5cdFx0Ly8gaW4gdGhhdCBjYXNlLCBlbGVtZW50IHdpbGwgYmUgc2Vjb25kIGFyZ3VtZW50XHJcblx0XHRlbGVtID0gZWwgfHwgZWxlbTtcclxuXHJcblx0XHQvLyBJbmxpbmUgc3R5bGUgdHJ1bXBzIGFsbFxyXG5cdFx0cmV0dXJuIGVsZW0uc3R5bGUuZGlzcGxheSA9PT0gXCJub25lXCIgfHxcclxuXHRcdFx0ZWxlbS5zdHlsZS5kaXNwbGF5ID09PSBcIlwiICYmXHJcblxyXG5cdFx0XHQvLyBPdGhlcndpc2UsIGNoZWNrIGNvbXB1dGVkIHN0eWxlXHJcblx0XHRcdC8vIFN1cHBvcnQ6IEZpcmVmb3ggPD00MyAtIDQ1XHJcblx0XHRcdC8vIERpc2Nvbm5lY3RlZCBlbGVtZW50cyBjYW4gaGF2ZSBjb21wdXRlZCBkaXNwbGF5OiBub25lLCBzbyBmaXJzdCBjb25maXJtIHRoYXQgZWxlbSBpc1xyXG5cdFx0XHQvLyBpbiB0aGUgZG9jdW1lbnQuXHJcblx0XHRcdGpRdWVyeS5jb250YWlucyggZWxlbS5vd25lckRvY3VtZW50LCBlbGVtICkgJiZcclxuXHJcblx0XHRcdGpRdWVyeS5jc3MoIGVsZW0sIFwiZGlzcGxheVwiICkgPT09IFwibm9uZVwiO1xyXG5cdH07XHJcblxyXG52YXIgc3dhcCA9IGZ1bmN0aW9uKCBlbGVtLCBvcHRpb25zLCBjYWxsYmFjaywgYXJncyApIHtcclxuXHR2YXIgcmV0LCBuYW1lLFxyXG5cdFx0b2xkID0ge307XHJcblxyXG5cdC8vIFJlbWVtYmVyIHRoZSBvbGQgdmFsdWVzLCBhbmQgaW5zZXJ0IHRoZSBuZXcgb25lc1xyXG5cdGZvciAoIG5hbWUgaW4gb3B0aW9ucyApIHtcclxuXHRcdG9sZFsgbmFtZSBdID0gZWxlbS5zdHlsZVsgbmFtZSBdO1xyXG5cdFx0ZWxlbS5zdHlsZVsgbmFtZSBdID0gb3B0aW9uc1sgbmFtZSBdO1xyXG5cdH1cclxuXHJcblx0cmV0ID0gY2FsbGJhY2suYXBwbHkoIGVsZW0sIGFyZ3MgfHwgW10gKTtcclxuXHJcblx0Ly8gUmV2ZXJ0IHRoZSBvbGQgdmFsdWVzXHJcblx0Zm9yICggbmFtZSBpbiBvcHRpb25zICkge1xyXG5cdFx0ZWxlbS5zdHlsZVsgbmFtZSBdID0gb2xkWyBuYW1lIF07XHJcblx0fVxyXG5cclxuXHRyZXR1cm4gcmV0O1xyXG59O1xyXG5cclxuXHJcblxyXG5cclxuZnVuY3Rpb24gYWRqdXN0Q1NTKCBlbGVtLCBwcm9wLCB2YWx1ZVBhcnRzLCB0d2VlbiApIHtcclxuXHR2YXIgYWRqdXN0ZWQsIHNjYWxlLFxyXG5cdFx0bWF4SXRlcmF0aW9ucyA9IDIwLFxyXG5cdFx0Y3VycmVudFZhbHVlID0gdHdlZW4gP1xyXG5cdFx0XHRmdW5jdGlvbigpIHtcclxuXHRcdFx0XHRyZXR1cm4gdHdlZW4uY3VyKCk7XHJcblx0XHRcdH0gOlxyXG5cdFx0XHRmdW5jdGlvbigpIHtcclxuXHRcdFx0XHRyZXR1cm4galF1ZXJ5LmNzcyggZWxlbSwgcHJvcCwgXCJcIiApO1xyXG5cdFx0XHR9LFxyXG5cdFx0aW5pdGlhbCA9IGN1cnJlbnRWYWx1ZSgpLFxyXG5cdFx0dW5pdCA9IHZhbHVlUGFydHMgJiYgdmFsdWVQYXJ0c1sgMyBdIHx8ICggalF1ZXJ5LmNzc051bWJlclsgcHJvcCBdID8gXCJcIiA6IFwicHhcIiApLFxyXG5cclxuXHRcdC8vIFN0YXJ0aW5nIHZhbHVlIGNvbXB1dGF0aW9uIGlzIHJlcXVpcmVkIGZvciBwb3RlbnRpYWwgdW5pdCBtaXNtYXRjaGVzXHJcblx0XHRpbml0aWFsSW5Vbml0ID0gKCBqUXVlcnkuY3NzTnVtYmVyWyBwcm9wIF0gfHwgdW5pdCAhPT0gXCJweFwiICYmICtpbml0aWFsICkgJiZcclxuXHRcdFx0cmNzc051bS5leGVjKCBqUXVlcnkuY3NzKCBlbGVtLCBwcm9wICkgKTtcclxuXHJcblx0aWYgKCBpbml0aWFsSW5Vbml0ICYmIGluaXRpYWxJblVuaXRbIDMgXSAhPT0gdW5pdCApIHtcclxuXHJcblx0XHQvLyBTdXBwb3J0OiBGaXJlZm94IDw9NTRcclxuXHRcdC8vIEhhbHZlIHRoZSBpdGVyYXRpb24gdGFyZ2V0IHZhbHVlIHRvIHByZXZlbnQgaW50ZXJmZXJlbmNlIGZyb20gQ1NTIHVwcGVyIGJvdW5kcyAoZ2gtMjE0NClcclxuXHRcdGluaXRpYWwgPSBpbml0aWFsIC8gMjtcclxuXHJcblx0XHQvLyBUcnVzdCB1bml0cyByZXBvcnRlZCBieSBqUXVlcnkuY3NzXHJcblx0XHR1bml0ID0gdW5pdCB8fCBpbml0aWFsSW5Vbml0WyAzIF07XHJcblxyXG5cdFx0Ly8gSXRlcmF0aXZlbHkgYXBwcm94aW1hdGUgZnJvbSBhIG5vbnplcm8gc3RhcnRpbmcgcG9pbnRcclxuXHRcdGluaXRpYWxJblVuaXQgPSAraW5pdGlhbCB8fCAxO1xyXG5cclxuXHRcdHdoaWxlICggbWF4SXRlcmF0aW9ucy0tICkge1xyXG5cclxuXHRcdFx0Ly8gRXZhbHVhdGUgYW5kIHVwZGF0ZSBvdXIgYmVzdCBndWVzcyAoZG91YmxpbmcgZ3Vlc3NlcyB0aGF0IHplcm8gb3V0KS5cclxuXHRcdFx0Ly8gRmluaXNoIGlmIHRoZSBzY2FsZSBlcXVhbHMgb3IgY3Jvc3NlcyAxIChtYWtpbmcgdGhlIG9sZCpuZXcgcHJvZHVjdCBub24tcG9zaXRpdmUpLlxyXG5cdFx0XHRqUXVlcnkuc3R5bGUoIGVsZW0sIHByb3AsIGluaXRpYWxJblVuaXQgKyB1bml0ICk7XHJcblx0XHRcdGlmICggKCAxIC0gc2NhbGUgKSAqICggMSAtICggc2NhbGUgPSBjdXJyZW50VmFsdWUoKSAvIGluaXRpYWwgfHwgMC41ICkgKSA8PSAwICkge1xyXG5cdFx0XHRcdG1heEl0ZXJhdGlvbnMgPSAwO1xyXG5cdFx0XHR9XHJcblx0XHRcdGluaXRpYWxJblVuaXQgPSBpbml0aWFsSW5Vbml0IC8gc2NhbGU7XHJcblxyXG5cdFx0fVxyXG5cclxuXHRcdGluaXRpYWxJblVuaXQgPSBpbml0aWFsSW5Vbml0ICogMjtcclxuXHRcdGpRdWVyeS5zdHlsZSggZWxlbSwgcHJvcCwgaW5pdGlhbEluVW5pdCArIHVuaXQgKTtcclxuXHJcblx0XHQvLyBNYWtlIHN1cmUgd2UgdXBkYXRlIHRoZSB0d2VlbiBwcm9wZXJ0aWVzIGxhdGVyIG9uXHJcblx0XHR2YWx1ZVBhcnRzID0gdmFsdWVQYXJ0cyB8fCBbXTtcclxuXHR9XHJcblxyXG5cdGlmICggdmFsdWVQYXJ0cyApIHtcclxuXHRcdGluaXRpYWxJblVuaXQgPSAraW5pdGlhbEluVW5pdCB8fCAraW5pdGlhbCB8fCAwO1xyXG5cclxuXHRcdC8vIEFwcGx5IHJlbGF0aXZlIG9mZnNldCAoKz0vLT0pIGlmIHNwZWNpZmllZFxyXG5cdFx0YWRqdXN0ZWQgPSB2YWx1ZVBhcnRzWyAxIF0gP1xyXG5cdFx0XHRpbml0aWFsSW5Vbml0ICsgKCB2YWx1ZVBhcnRzWyAxIF0gKyAxICkgKiB2YWx1ZVBhcnRzWyAyIF0gOlxyXG5cdFx0XHQrdmFsdWVQYXJ0c1sgMiBdO1xyXG5cdFx0aWYgKCB0d2VlbiApIHtcclxuXHRcdFx0dHdlZW4udW5pdCA9IHVuaXQ7XHJcblx0XHRcdHR3ZWVuLnN0YXJ0ID0gaW5pdGlhbEluVW5pdDtcclxuXHRcdFx0dHdlZW4uZW5kID0gYWRqdXN0ZWQ7XHJcblx0XHR9XHJcblx0fVxyXG5cdHJldHVybiBhZGp1c3RlZDtcclxufVxyXG5cclxuXHJcbnZhciBkZWZhdWx0RGlzcGxheU1hcCA9IHt9O1xyXG5cclxuZnVuY3Rpb24gZ2V0RGVmYXVsdERpc3BsYXkoIGVsZW0gKSB7XHJcblx0dmFyIHRlbXAsXHJcblx0XHRkb2MgPSBlbGVtLm93bmVyRG9jdW1lbnQsXHJcblx0XHRub2RlTmFtZSA9IGVsZW0ubm9kZU5hbWUsXHJcblx0XHRkaXNwbGF5ID0gZGVmYXVsdERpc3BsYXlNYXBbIG5vZGVOYW1lIF07XHJcblxyXG5cdGlmICggZGlzcGxheSApIHtcclxuXHRcdHJldHVybiBkaXNwbGF5O1xyXG5cdH1cclxuXHJcblx0dGVtcCA9IGRvYy5ib2R5LmFwcGVuZENoaWxkKCBkb2MuY3JlYXRlRWxlbWVudCggbm9kZU5hbWUgKSApO1xyXG5cdGRpc3BsYXkgPSBqUXVlcnkuY3NzKCB0ZW1wLCBcImRpc3BsYXlcIiApO1xyXG5cclxuXHR0ZW1wLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoIHRlbXAgKTtcclxuXHJcblx0aWYgKCBkaXNwbGF5ID09PSBcIm5vbmVcIiApIHtcclxuXHRcdGRpc3BsYXkgPSBcImJsb2NrXCI7XHJcblx0fVxyXG5cdGRlZmF1bHREaXNwbGF5TWFwWyBub2RlTmFtZSBdID0gZGlzcGxheTtcclxuXHJcblx0cmV0dXJuIGRpc3BsYXk7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIHNob3dIaWRlKCBlbGVtZW50cywgc2hvdyApIHtcclxuXHR2YXIgZGlzcGxheSwgZWxlbSxcclxuXHRcdHZhbHVlcyA9IFtdLFxyXG5cdFx0aW5kZXggPSAwLFxyXG5cdFx0bGVuZ3RoID0gZWxlbWVudHMubGVuZ3RoO1xyXG5cclxuXHQvLyBEZXRlcm1pbmUgbmV3IGRpc3BsYXkgdmFsdWUgZm9yIGVsZW1lbnRzIHRoYXQgbmVlZCB0byBjaGFuZ2VcclxuXHRmb3IgKCA7IGluZGV4IDwgbGVuZ3RoOyBpbmRleCsrICkge1xyXG5cdFx0ZWxlbSA9IGVsZW1lbnRzWyBpbmRleCBdO1xyXG5cdFx0aWYgKCAhZWxlbS5zdHlsZSApIHtcclxuXHRcdFx0Y29udGludWU7XHJcblx0XHR9XHJcblxyXG5cdFx0ZGlzcGxheSA9IGVsZW0uc3R5bGUuZGlzcGxheTtcclxuXHRcdGlmICggc2hvdyApIHtcclxuXHJcblx0XHRcdC8vIFNpbmNlIHdlIGZvcmNlIHZpc2liaWxpdHkgdXBvbiBjYXNjYWRlLWhpZGRlbiBlbGVtZW50cywgYW4gaW1tZWRpYXRlIChhbmQgc2xvdylcclxuXHRcdFx0Ly8gY2hlY2sgaXMgcmVxdWlyZWQgaW4gdGhpcyBmaXJzdCBsb29wIHVubGVzcyB3ZSBoYXZlIGEgbm9uZW1wdHkgZGlzcGxheSB2YWx1ZSAoZWl0aGVyXHJcblx0XHRcdC8vIGlubGluZSBvciBhYm91dC10by1iZS1yZXN0b3JlZClcclxuXHRcdFx0aWYgKCBkaXNwbGF5ID09PSBcIm5vbmVcIiApIHtcclxuXHRcdFx0XHR2YWx1ZXNbIGluZGV4IF0gPSBkYXRhUHJpdi5nZXQoIGVsZW0sIFwiZGlzcGxheVwiICkgfHwgbnVsbDtcclxuXHRcdFx0XHRpZiAoICF2YWx1ZXNbIGluZGV4IF0gKSB7XHJcblx0XHRcdFx0XHRlbGVtLnN0eWxlLmRpc3BsYXkgPSBcIlwiO1xyXG5cdFx0XHRcdH1cclxuXHRcdFx0fVxyXG5cdFx0XHRpZiAoIGVsZW0uc3R5bGUuZGlzcGxheSA9PT0gXCJcIiAmJiBpc0hpZGRlbldpdGhpblRyZWUoIGVsZW0gKSApIHtcclxuXHRcdFx0XHR2YWx1ZXNbIGluZGV4IF0gPSBnZXREZWZhdWx0RGlzcGxheSggZWxlbSApO1xyXG5cdFx0XHR9XHJcblx0XHR9IGVsc2Uge1xyXG5cdFx0XHRpZiAoIGRpc3BsYXkgIT09IFwibm9uZVwiICkge1xyXG5cdFx0XHRcdHZhbHVlc1sgaW5kZXggXSA9IFwibm9uZVwiO1xyXG5cclxuXHRcdFx0XHQvLyBSZW1lbWJlciB3aGF0IHdlJ3JlIG92ZXJ3cml0aW5nXHJcblx0XHRcdFx0ZGF0YVByaXYuc2V0KCBlbGVtLCBcImRpc3BsYXlcIiwgZGlzcGxheSApO1xyXG5cdFx0XHR9XHJcblx0XHR9XHJcblx0fVxyXG5cclxuXHQvLyBTZXQgdGhlIGRpc3BsYXkgb2YgdGhlIGVsZW1lbnRzIGluIGEgc2Vjb25kIGxvb3AgdG8gYXZvaWQgY29uc3RhbnQgcmVmbG93XHJcblx0Zm9yICggaW5kZXggPSAwOyBpbmRleCA8IGxlbmd0aDsgaW5kZXgrKyApIHtcclxuXHRcdGlmICggdmFsdWVzWyBpbmRleCBdICE9IG51bGwgKSB7XHJcblx0XHRcdGVsZW1lbnRzWyBpbmRleCBdLnN0eWxlLmRpc3BsYXkgPSB2YWx1ZXNbIGluZGV4IF07XHJcblx0XHR9XHJcblx0fVxyXG5cclxuXHRyZXR1cm4gZWxlbWVudHM7XHJcbn1cclxuXHJcbmpRdWVyeS5mbi5leHRlbmQoIHtcclxuXHRzaG93OiBmdW5jdGlvbigpIHtcclxuXHRcdHJldHVybiBzaG93SGlkZSggdGhpcywgdHJ1ZSApO1xyXG5cdH0sXHJcblx0aGlkZTogZnVuY3Rpb24oKSB7XHJcblx0XHRyZXR1cm4gc2hvd0hpZGUoIHRoaXMgKTtcclxuXHR9LFxyXG5cdHRvZ2dsZTogZnVuY3Rpb24oIHN0YXRlICkge1xyXG5cdFx0aWYgKCB0eXBlb2Ygc3RhdGUgPT09IFwiYm9vbGVhblwiICkge1xyXG5cdFx0XHRyZXR1cm4gc3RhdGUgPyB0aGlzLnNob3coKSA6IHRoaXMuaGlkZSgpO1xyXG5cdFx0fVxyXG5cclxuXHRcdHJldHVybiB0aGlzLmVhY2goIGZ1bmN0aW9uKCkge1xyXG5cdFx0XHRpZiAoIGlzSGlkZGVuV2l0aGluVHJlZSggdGhpcyApICkge1xyXG5cdFx0XHRcdGpRdWVyeSggdGhpcyApLnNob3coKTtcclxuXHRcdFx0fSBlbHNlIHtcclxuXHRcdFx0XHRqUXVlcnkoIHRoaXMgKS5oaWRlKCk7XHJcblx0XHRcdH1cclxuXHRcdH0gKTtcclxuXHR9XHJcbn0gKTtcclxudmFyIHJjaGVja2FibGVUeXBlID0gKCAvXig/OmNoZWNrYm94fHJhZGlvKSQvaSApO1xyXG5cclxudmFyIHJ0YWdOYW1lID0gKCAvPChbYS16XVteXFwvXFwwPlxceDIwXFx0XFxyXFxuXFxmXSspL2kgKTtcclxuXHJcbnZhciByc2NyaXB0VHlwZSA9ICggL14kfF5tb2R1bGUkfFxcLyg/OmphdmF8ZWNtYSlzY3JpcHQvaSApO1xyXG5cclxuXHJcblxyXG4vLyBXZSBoYXZlIHRvIGNsb3NlIHRoZXNlIHRhZ3MgdG8gc3VwcG9ydCBYSFRNTCAoIzEzMjAwKVxyXG52YXIgd3JhcE1hcCA9IHtcclxuXHJcblx0Ly8gU3VwcG9ydDogSUUgPD05IG9ubHlcclxuXHRvcHRpb246IFsgMSwgXCI8c2VsZWN0IG11bHRpcGxlPSdtdWx0aXBsZSc+XCIsIFwiPC9zZWxlY3Q+XCIgXSxcclxuXHJcblx0Ly8gWEhUTUwgcGFyc2VycyBkbyBub3QgbWFnaWNhbGx5IGluc2VydCBlbGVtZW50cyBpbiB0aGVcclxuXHQvLyBzYW1lIHdheSB0aGF0IHRhZyBzb3VwIHBhcnNlcnMgZG8uIFNvIHdlIGNhbm5vdCBzaG9ydGVuXHJcblx0Ly8gdGhpcyBieSBvbWl0dGluZyA8dGJvZHk+IG9yIG90aGVyIHJlcXVpcmVkIGVsZW1lbnRzLlxyXG5cdHRoZWFkOiBbIDEsIFwiPHRhYmxlPlwiLCBcIjwvdGFibGU+XCIgXSxcclxuXHRjb2w6IFsgMiwgXCI8dGFibGU+PGNvbGdyb3VwPlwiLCBcIjwvY29sZ3JvdXA+PC90YWJsZT5cIiBdLFxyXG5cdHRyOiBbIDIsIFwiPHRhYmxlPjx0Ym9keT5cIiwgXCI8L3Rib2R5PjwvdGFibGU+XCIgXSxcclxuXHR0ZDogWyAzLCBcIjx0YWJsZT48dGJvZHk+PHRyPlwiLCBcIjwvdHI+PC90Ym9keT48L3RhYmxlPlwiIF0sXHJcblxyXG5cdF9kZWZhdWx0OiBbIDAsIFwiXCIsIFwiXCIgXVxyXG59O1xyXG5cclxuLy8gU3VwcG9ydDogSUUgPD05IG9ubHlcclxud3JhcE1hcC5vcHRncm91cCA9IHdyYXBNYXAub3B0aW9uO1xyXG5cclxud3JhcE1hcC50Ym9keSA9IHdyYXBNYXAudGZvb3QgPSB3cmFwTWFwLmNvbGdyb3VwID0gd3JhcE1hcC5jYXB0aW9uID0gd3JhcE1hcC50aGVhZDtcclxud3JhcE1hcC50aCA9IHdyYXBNYXAudGQ7XHJcblxyXG5cclxuZnVuY3Rpb24gZ2V0QWxsKCBjb250ZXh0LCB0YWcgKSB7XHJcblxyXG5cdC8vIFN1cHBvcnQ6IElFIDw9OSAtIDExIG9ubHlcclxuXHQvLyBVc2UgdHlwZW9mIHRvIGF2b2lkIHplcm8tYXJndW1lbnQgbWV0aG9kIGludm9jYXRpb24gb24gaG9zdCBvYmplY3RzICgjMTUxNTEpXHJcblx0dmFyIHJldDtcclxuXHJcblx0aWYgKCB0eXBlb2YgY29udGV4dC5nZXRFbGVtZW50c0J5VGFnTmFtZSAhPT0gXCJ1bmRlZmluZWRcIiApIHtcclxuXHRcdHJldCA9IGNvbnRleHQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoIHRhZyB8fCBcIipcIiApO1xyXG5cclxuXHR9IGVsc2UgaWYgKCB0eXBlb2YgY29udGV4dC5xdWVyeVNlbGVjdG9yQWxsICE9PSBcInVuZGVmaW5lZFwiICkge1xyXG5cdFx0cmV0ID0gY29udGV4dC5xdWVyeVNlbGVjdG9yQWxsKCB0YWcgfHwgXCIqXCIgKTtcclxuXHJcblx0fSBlbHNlIHtcclxuXHRcdHJldCA9IFtdO1xyXG5cdH1cclxuXHJcblx0aWYgKCB0YWcgPT09IHVuZGVmaW5lZCB8fCB0YWcgJiYgbm9kZU5hbWUoIGNvbnRleHQsIHRhZyApICkge1xyXG5cdFx0cmV0dXJuIGpRdWVyeS5tZXJnZSggWyBjb250ZXh0IF0sIHJldCApO1xyXG5cdH1cclxuXHJcblx0cmV0dXJuIHJldDtcclxufVxyXG5cclxuXHJcbi8vIE1hcmsgc2NyaXB0cyBhcyBoYXZpbmcgYWxyZWFkeSBiZWVuIGV2YWx1YXRlZFxyXG5mdW5jdGlvbiBzZXRHbG9iYWxFdmFsKCBlbGVtcywgcmVmRWxlbWVudHMgKSB7XHJcblx0dmFyIGkgPSAwLFxyXG5cdFx0bCA9IGVsZW1zLmxlbmd0aDtcclxuXHJcblx0Zm9yICggOyBpIDwgbDsgaSsrICkge1xyXG5cdFx0ZGF0YVByaXYuc2V0KFxyXG5cdFx0XHRlbGVtc1sgaSBdLFxyXG5cdFx0XHRcImdsb2JhbEV2YWxcIixcclxuXHRcdFx0IXJlZkVsZW1lbnRzIHx8IGRhdGFQcml2LmdldCggcmVmRWxlbWVudHNbIGkgXSwgXCJnbG9iYWxFdmFsXCIgKVxyXG5cdFx0KTtcclxuXHR9XHJcbn1cclxuXHJcblxyXG52YXIgcmh0bWwgPSAvPHwmIz9cXHcrOy87XHJcblxyXG5mdW5jdGlvbiBidWlsZEZyYWdtZW50KCBlbGVtcywgY29udGV4dCwgc2NyaXB0cywgc2VsZWN0aW9uLCBpZ25vcmVkICkge1xyXG5cdHZhciBlbGVtLCB0bXAsIHRhZywgd3JhcCwgY29udGFpbnMsIGosXHJcblx0XHRmcmFnbWVudCA9IGNvbnRleHQuY3JlYXRlRG9jdW1lbnRGcmFnbWVudCgpLFxyXG5cdFx0bm9kZXMgPSBbXSxcclxuXHRcdGkgPSAwLFxyXG5cdFx0bCA9IGVsZW1zLmxlbmd0aDtcclxuXHJcblx0Zm9yICggOyBpIDwgbDsgaSsrICkge1xyXG5cdFx0ZWxlbSA9IGVsZW1zWyBpIF07XHJcblxyXG5cdFx0aWYgKCBlbGVtIHx8IGVsZW0gPT09IDAgKSB7XHJcblxyXG5cdFx0XHQvLyBBZGQgbm9kZXMgZGlyZWN0bHlcclxuXHRcdFx0aWYgKCB0b1R5cGUoIGVsZW0gKSA9PT0gXCJvYmplY3RcIiApIHtcclxuXHJcblx0XHRcdFx0Ly8gU3VwcG9ydDogQW5kcm9pZCA8PTQuMCBvbmx5LCBQaGFudG9tSlMgMSBvbmx5XHJcblx0XHRcdFx0Ly8gcHVzaC5hcHBseShfLCBhcnJheWxpa2UpIHRocm93cyBvbiBhbmNpZW50IFdlYktpdFxyXG5cdFx0XHRcdGpRdWVyeS5tZXJnZSggbm9kZXMsIGVsZW0ubm9kZVR5cGUgPyBbIGVsZW0gXSA6IGVsZW0gKTtcclxuXHJcblx0XHRcdC8vIENvbnZlcnQgbm9uLWh0bWwgaW50byBhIHRleHQgbm9kZVxyXG5cdFx0XHR9IGVsc2UgaWYgKCAhcmh0bWwudGVzdCggZWxlbSApICkge1xyXG5cdFx0XHRcdG5vZGVzLnB1c2goIGNvbnRleHQuY3JlYXRlVGV4dE5vZGUoIGVsZW0gKSApO1xyXG5cclxuXHRcdFx0Ly8gQ29udmVydCBodG1sIGludG8gRE9NIG5vZGVzXHJcblx0XHRcdH0gZWxzZSB7XHJcblx0XHRcdFx0dG1wID0gdG1wIHx8IGZyYWdtZW50LmFwcGVuZENoaWxkKCBjb250ZXh0LmNyZWF0ZUVsZW1lbnQoIFwiZGl2XCIgKSApO1xyXG5cclxuXHRcdFx0XHQvLyBEZXNlcmlhbGl6ZSBhIHN0YW5kYXJkIHJlcHJlc2VudGF0aW9uXHJcblx0XHRcdFx0dGFnID0gKCBydGFnTmFtZS5leGVjKCBlbGVtICkgfHwgWyBcIlwiLCBcIlwiIF0gKVsgMSBdLnRvTG93ZXJDYXNlKCk7XHJcblx0XHRcdFx0d3JhcCA9IHdyYXBNYXBbIHRhZyBdIHx8IHdyYXBNYXAuX2RlZmF1bHQ7XHJcblx0XHRcdFx0dG1wLmlubmVySFRNTCA9IHdyYXBbIDEgXSArIGpRdWVyeS5odG1sUHJlZmlsdGVyKCBlbGVtICkgKyB3cmFwWyAyIF07XHJcblxyXG5cdFx0XHRcdC8vIERlc2NlbmQgdGhyb3VnaCB3cmFwcGVycyB0byB0aGUgcmlnaHQgY29udGVudFxyXG5cdFx0XHRcdGogPSB3cmFwWyAwIF07XHJcblx0XHRcdFx0d2hpbGUgKCBqLS0gKSB7XHJcblx0XHRcdFx0XHR0bXAgPSB0bXAubGFzdENoaWxkO1xyXG5cdFx0XHRcdH1cclxuXHJcblx0XHRcdFx0Ly8gU3VwcG9ydDogQW5kcm9pZCA8PTQuMCBvbmx5LCBQaGFudG9tSlMgMSBvbmx5XHJcblx0XHRcdFx0Ly8gcHVzaC5hcHBseShfLCBhcnJheWxpa2UpIHRocm93cyBvbiBhbmNpZW50IFdlYktpdFxyXG5cdFx0XHRcdGpRdWVyeS5tZXJnZSggbm9kZXMsIHRtcC5jaGlsZE5vZGVzICk7XHJcblxyXG5cdFx0XHRcdC8vIFJlbWVtYmVyIHRoZSB0b3AtbGV2ZWwgY29udGFpbmVyXHJcblx0XHRcdFx0dG1wID0gZnJhZ21lbnQuZmlyc3RDaGlsZDtcclxuXHJcblx0XHRcdFx0Ly8gRW5zdXJlIHRoZSBjcmVhdGVkIG5vZGVzIGFyZSBvcnBoYW5lZCAoIzEyMzkyKVxyXG5cdFx0XHRcdHRtcC50ZXh0Q29udGVudCA9IFwiXCI7XHJcblx0XHRcdH1cclxuXHRcdH1cclxuXHR9XHJcblxyXG5cdC8vIFJlbW92ZSB3cmFwcGVyIGZyb20gZnJhZ21lbnRcclxuXHRmcmFnbWVudC50ZXh0Q29udGVudCA9IFwiXCI7XHJcblxyXG5cdGkgPSAwO1xyXG5cdHdoaWxlICggKCBlbGVtID0gbm9kZXNbIGkrKyBdICkgKSB7XHJcblxyXG5cdFx0Ly8gU2tpcCBlbGVtZW50cyBhbHJlYWR5IGluIHRoZSBjb250ZXh0IGNvbGxlY3Rpb24gKHRyYWMtNDA4NylcclxuXHRcdGlmICggc2VsZWN0aW9uICYmIGpRdWVyeS5pbkFycmF5KCBlbGVtLCBzZWxlY3Rpb24gKSA+IC0xICkge1xyXG5cdFx0XHRpZiAoIGlnbm9yZWQgKSB7XHJcblx0XHRcdFx0aWdub3JlZC5wdXNoKCBlbGVtICk7XHJcblx0XHRcdH1cclxuXHRcdFx0Y29udGludWU7XHJcblx0XHR9XHJcblxyXG5cdFx0Y29udGFpbnMgPSBqUXVlcnkuY29udGFpbnMoIGVsZW0ub3duZXJEb2N1bWVudCwgZWxlbSApO1xyXG5cclxuXHRcdC8vIEFwcGVuZCB0byBmcmFnbWVudFxyXG5cdFx0dG1wID0gZ2V0QWxsKCBmcmFnbWVudC5hcHBlbmRDaGlsZCggZWxlbSApLCBcInNjcmlwdFwiICk7XHJcblxyXG5cdFx0Ly8gUHJlc2VydmUgc2NyaXB0IGV2YWx1YXRpb24gaGlzdG9yeVxyXG5cdFx0aWYgKCBjb250YWlucyApIHtcclxuXHRcdFx0c2V0R2xvYmFsRXZhbCggdG1wICk7XHJcblx0XHR9XHJcblxyXG5cdFx0Ly8gQ2FwdHVyZSBleGVjdXRhYmxlc1xyXG5cdFx0aWYgKCBzY3JpcHRzICkge1xyXG5cdFx0XHRqID0gMDtcclxuXHRcdFx0d2hpbGUgKCAoIGVsZW0gPSB0bXBbIGorKyBdICkgKSB7XHJcblx0XHRcdFx0aWYgKCByc2NyaXB0VHlwZS50ZXN0KCBlbGVtLnR5cGUgfHwgXCJcIiApICkge1xyXG5cdFx0XHRcdFx0c2NyaXB0cy5wdXNoKCBlbGVtICk7XHJcblx0XHRcdFx0fVxyXG5cdFx0XHR9XHJcblx0XHR9XHJcblx0fVxyXG5cclxuXHRyZXR1cm4gZnJhZ21lbnQ7XHJcbn1cclxuXHJcblxyXG4oIGZ1bmN0aW9uKCkge1xyXG5cdHZhciBmcmFnbWVudCA9IGRvY3VtZW50LmNyZWF0ZURvY3VtZW50RnJhZ21lbnQoKSxcclxuXHRcdGRpdiA9IGZyYWdtZW50LmFwcGVuZENoaWxkKCBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCBcImRpdlwiICkgKSxcclxuXHRcdGlucHV0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCggXCJpbnB1dFwiICk7XHJcblxyXG5cdC8vIFN1cHBvcnQ6IEFuZHJvaWQgNC4wIC0gNC4zIG9ubHlcclxuXHQvLyBDaGVjayBzdGF0ZSBsb3N0IGlmIHRoZSBuYW1lIGlzIHNldCAoIzExMjE3KVxyXG5cdC8vIFN1cHBvcnQ6IFdpbmRvd3MgV2ViIEFwcHMgKFdXQSlcclxuXHQvLyBgbmFtZWAgYW5kIGB0eXBlYCBtdXN0IHVzZSAuc2V0QXR0cmlidXRlIGZvciBXV0EgKCMxNDkwMSlcclxuXHRpbnB1dC5zZXRBdHRyaWJ1dGUoIFwidHlwZVwiLCBcInJhZGlvXCIgKTtcclxuXHRpbnB1dC5zZXRBdHRyaWJ1dGUoIFwiY2hlY2tlZFwiLCBcImNoZWNrZWRcIiApO1xyXG5cdGlucHV0LnNldEF0dHJpYnV0ZSggXCJuYW1lXCIsIFwidFwiICk7XHJcblxyXG5cdGRpdi5hcHBlbmRDaGlsZCggaW5wdXQgKTtcclxuXHJcblx0Ly8gU3VwcG9ydDogQW5kcm9pZCA8PTQuMSBvbmx5XHJcblx0Ly8gT2xkZXIgV2ViS2l0IGRvZXNuJ3QgY2xvbmUgY2hlY2tlZCBzdGF0ZSBjb3JyZWN0bHkgaW4gZnJhZ21lbnRzXHJcblx0c3VwcG9ydC5jaGVja0Nsb25lID0gZGl2LmNsb25lTm9kZSggdHJ1ZSApLmNsb25lTm9kZSggdHJ1ZSApLmxhc3RDaGlsZC5jaGVja2VkO1xyXG5cclxuXHQvLyBTdXBwb3J0OiBJRSA8PTExIG9ubHlcclxuXHQvLyBNYWtlIHN1cmUgdGV4dGFyZWEgKGFuZCBjaGVja2JveCkgZGVmYXVsdFZhbHVlIGlzIHByb3Blcmx5IGNsb25lZFxyXG5cdGRpdi5pbm5lckhUTUwgPSBcIjx0ZXh0YXJlYT54PC90ZXh0YXJlYT5cIjtcclxuXHRzdXBwb3J0Lm5vQ2xvbmVDaGVja2VkID0gISFkaXYuY2xvbmVOb2RlKCB0cnVlICkubGFzdENoaWxkLmRlZmF1bHRWYWx1ZTtcclxufSApKCk7XHJcbnZhciBkb2N1bWVudEVsZW1lbnQgPSBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQ7XHJcblxyXG5cclxuXHJcbnZhclxyXG5cdHJrZXlFdmVudCA9IC9ea2V5LyxcclxuXHRybW91c2VFdmVudCA9IC9eKD86bW91c2V8cG9pbnRlcnxjb250ZXh0bWVudXxkcmFnfGRyb3ApfGNsaWNrLyxcclxuXHRydHlwZW5hbWVzcGFjZSA9IC9eKFteLl0qKSg/OlxcLiguKyl8KS87XHJcblxyXG5mdW5jdGlvbiByZXR1cm5UcnVlKCkge1xyXG5cdHJldHVybiB0cnVlO1xyXG59XHJcblxyXG5mdW5jdGlvbiByZXR1cm5GYWxzZSgpIHtcclxuXHRyZXR1cm4gZmFsc2U7XHJcbn1cclxuXHJcbi8vIFN1cHBvcnQ6IElFIDw9OSBvbmx5XHJcbi8vIFNlZSAjMTMzOTMgZm9yIG1vcmUgaW5mb1xyXG5mdW5jdGlvbiBzYWZlQWN0aXZlRWxlbWVudCgpIHtcclxuXHR0cnkge1xyXG5cdFx0cmV0dXJuIGRvY3VtZW50LmFjdGl2ZUVsZW1lbnQ7XHJcblx0fSBjYXRjaCAoIGVyciApIHsgfVxyXG59XHJcblxyXG5mdW5jdGlvbiBvbiggZWxlbSwgdHlwZXMsIHNlbGVjdG9yLCBkYXRhLCBmbiwgb25lICkge1xyXG5cdHZhciBvcmlnRm4sIHR5cGU7XHJcblxyXG5cdC8vIFR5cGVzIGNhbiBiZSBhIG1hcCBvZiB0eXBlcy9oYW5kbGVyc1xyXG5cdGlmICggdHlwZW9mIHR5cGVzID09PSBcIm9iamVjdFwiICkge1xyXG5cclxuXHRcdC8vICggdHlwZXMtT2JqZWN0LCBzZWxlY3RvciwgZGF0YSApXHJcblx0XHRpZiAoIHR5cGVvZiBzZWxlY3RvciAhPT0gXCJzdHJpbmdcIiApIHtcclxuXHJcblx0XHRcdC8vICggdHlwZXMtT2JqZWN0LCBkYXRhIClcclxuXHRcdFx0ZGF0YSA9IGRhdGEgfHwgc2VsZWN0b3I7XHJcblx0XHRcdHNlbGVjdG9yID0gdW5kZWZpbmVkO1xyXG5cdFx0fVxyXG5cdFx0Zm9yICggdHlwZSBpbiB0eXBlcyApIHtcclxuXHRcdFx0b24oIGVsZW0sIHR5cGUsIHNlbGVjdG9yLCBkYXRhLCB0eXBlc1sgdHlwZSBdLCBvbmUgKTtcclxuXHRcdH1cclxuXHRcdHJldHVybiBlbGVtO1xyXG5cdH1cclxuXHJcblx0aWYgKCBkYXRhID09IG51bGwgJiYgZm4gPT0gbnVsbCApIHtcclxuXHJcblx0XHQvLyAoIHR5cGVzLCBmbiApXHJcblx0XHRmbiA9IHNlbGVjdG9yO1xyXG5cdFx0ZGF0YSA9IHNlbGVjdG9yID0gdW5kZWZpbmVkO1xyXG5cdH0gZWxzZSBpZiAoIGZuID09IG51bGwgKSB7XHJcblx0XHRpZiAoIHR5cGVvZiBzZWxlY3RvciA9PT0gXCJzdHJpbmdcIiApIHtcclxuXHJcblx0XHRcdC8vICggdHlwZXMsIHNlbGVjdG9yLCBmbiApXHJcblx0XHRcdGZuID0gZGF0YTtcclxuXHRcdFx0ZGF0YSA9IHVuZGVmaW5lZDtcclxuXHRcdH0gZWxzZSB7XHJcblxyXG5cdFx0XHQvLyAoIHR5cGVzLCBkYXRhLCBmbiApXHJcblx0XHRcdGZuID0gZGF0YTtcclxuXHRcdFx0ZGF0YSA9IHNlbGVjdG9yO1xyXG5cdFx0XHRzZWxlY3RvciA9IHVuZGVmaW5lZDtcclxuXHRcdH1cclxuXHR9XHJcblx0aWYgKCBmbiA9PT0gZmFsc2UgKSB7XHJcblx0XHRmbiA9IHJldHVybkZhbHNlO1xyXG5cdH0gZWxzZSBpZiAoICFmbiApIHtcclxuXHRcdHJldHVybiBlbGVtO1xyXG5cdH1cclxuXHJcblx0aWYgKCBvbmUgPT09IDEgKSB7XHJcblx0XHRvcmlnRm4gPSBmbjtcclxuXHRcdGZuID0gZnVuY3Rpb24oIGV2ZW50ICkge1xyXG5cclxuXHRcdFx0Ly8gQ2FuIHVzZSBhbiBlbXB0eSBzZXQsIHNpbmNlIGV2ZW50IGNvbnRhaW5zIHRoZSBpbmZvXHJcblx0XHRcdGpRdWVyeSgpLm9mZiggZXZlbnQgKTtcclxuXHRcdFx0cmV0dXJuIG9yaWdGbi5hcHBseSggdGhpcywgYXJndW1lbnRzICk7XHJcblx0XHR9O1xyXG5cclxuXHRcdC8vIFVzZSBzYW1lIGd1aWQgc28gY2FsbGVyIGNhbiByZW1vdmUgdXNpbmcgb3JpZ0ZuXHJcblx0XHRmbi5ndWlkID0gb3JpZ0ZuLmd1aWQgfHwgKCBvcmlnRm4uZ3VpZCA9IGpRdWVyeS5ndWlkKysgKTtcclxuXHR9XHJcblx0cmV0dXJuIGVsZW0uZWFjaCggZnVuY3Rpb24oKSB7XHJcblx0XHRqUXVlcnkuZXZlbnQuYWRkKCB0aGlzLCB0eXBlcywgZm4sIGRhdGEsIHNlbGVjdG9yICk7XHJcblx0fSApO1xyXG59XHJcblxyXG4vKlxyXG4gKiBIZWxwZXIgZnVuY3Rpb25zIGZvciBtYW5hZ2luZyBldmVudHMgLS0gbm90IHBhcnQgb2YgdGhlIHB1YmxpYyBpbnRlcmZhY2UuXHJcbiAqIFByb3BzIHRvIERlYW4gRWR3YXJkcycgYWRkRXZlbnQgbGlicmFyeSBmb3IgbWFueSBvZiB0aGUgaWRlYXMuXHJcbiAqL1xyXG5qUXVlcnkuZXZlbnQgPSB7XHJcblxyXG5cdGdsb2JhbDoge30sXHJcblxyXG5cdGFkZDogZnVuY3Rpb24oIGVsZW0sIHR5cGVzLCBoYW5kbGVyLCBkYXRhLCBzZWxlY3RvciApIHtcclxuXHJcblx0XHR2YXIgaGFuZGxlT2JqSW4sIGV2ZW50SGFuZGxlLCB0bXAsXHJcblx0XHRcdGV2ZW50cywgdCwgaGFuZGxlT2JqLFxyXG5cdFx0XHRzcGVjaWFsLCBoYW5kbGVycywgdHlwZSwgbmFtZXNwYWNlcywgb3JpZ1R5cGUsXHJcblx0XHRcdGVsZW1EYXRhID0gZGF0YVByaXYuZ2V0KCBlbGVtICk7XHJcblxyXG5cdFx0Ly8gRG9uJ3QgYXR0YWNoIGV2ZW50cyB0byBub0RhdGEgb3IgdGV4dC9jb21tZW50IG5vZGVzIChidXQgYWxsb3cgcGxhaW4gb2JqZWN0cylcclxuXHRcdGlmICggIWVsZW1EYXRhICkge1xyXG5cdFx0XHRyZXR1cm47XHJcblx0XHR9XHJcblxyXG5cdFx0Ly8gQ2FsbGVyIGNhbiBwYXNzIGluIGFuIG9iamVjdCBvZiBjdXN0b20gZGF0YSBpbiBsaWV1IG9mIHRoZSBoYW5kbGVyXHJcblx0XHRpZiAoIGhhbmRsZXIuaGFuZGxlciApIHtcclxuXHRcdFx0aGFuZGxlT2JqSW4gPSBoYW5kbGVyO1xyXG5cdFx0XHRoYW5kbGVyID0gaGFuZGxlT2JqSW4uaGFuZGxlcjtcclxuXHRcdFx0c2VsZWN0b3IgPSBoYW5kbGVPYmpJbi5zZWxlY3RvcjtcclxuXHRcdH1cclxuXHJcblx0XHQvLyBFbnN1cmUgdGhhdCBpbnZhbGlkIHNlbGVjdG9ycyB0aHJvdyBleGNlcHRpb25zIGF0IGF0dGFjaCB0aW1lXHJcblx0XHQvLyBFdmFsdWF0ZSBhZ2FpbnN0IGRvY3VtZW50RWxlbWVudCBpbiBjYXNlIGVsZW0gaXMgYSBub24tZWxlbWVudCBub2RlIChlLmcuLCBkb2N1bWVudClcclxuXHRcdGlmICggc2VsZWN0b3IgKSB7XHJcblx0XHRcdGpRdWVyeS5maW5kLm1hdGNoZXNTZWxlY3RvciggZG9jdW1lbnRFbGVtZW50LCBzZWxlY3RvciApO1xyXG5cdFx0fVxyXG5cclxuXHRcdC8vIE1ha2Ugc3VyZSB0aGF0IHRoZSBoYW5kbGVyIGhhcyBhIHVuaXF1ZSBJRCwgdXNlZCB0byBmaW5kL3JlbW92ZSBpdCBsYXRlclxyXG5cdFx0aWYgKCAhaGFuZGxlci5ndWlkICkge1xyXG5cdFx0XHRoYW5kbGVyLmd1aWQgPSBqUXVlcnkuZ3VpZCsrO1xyXG5cdFx0fVxyXG5cclxuXHRcdC8vIEluaXQgdGhlIGVsZW1lbnQncyBldmVudCBzdHJ1Y3R1cmUgYW5kIG1haW4gaGFuZGxlciwgaWYgdGhpcyBpcyB0aGUgZmlyc3RcclxuXHRcdGlmICggISggZXZlbnRzID0gZWxlbURhdGEuZXZlbnRzICkgKSB7XHJcblx0XHRcdGV2ZW50cyA9IGVsZW1EYXRhLmV2ZW50cyA9IHt9O1xyXG5cdFx0fVxyXG5cdFx0aWYgKCAhKCBldmVudEhhbmRsZSA9IGVsZW1EYXRhLmhhbmRsZSApICkge1xyXG5cdFx0XHRldmVudEhhbmRsZSA9IGVsZW1EYXRhLmhhbmRsZSA9IGZ1bmN0aW9uKCBlICkge1xyXG5cclxuXHRcdFx0XHQvLyBEaXNjYXJkIHRoZSBzZWNvbmQgZXZlbnQgb2YgYSBqUXVlcnkuZXZlbnQudHJpZ2dlcigpIGFuZFxyXG5cdFx0XHRcdC8vIHdoZW4gYW4gZXZlbnQgaXMgY2FsbGVkIGFmdGVyIGEgcGFnZSBoYXMgdW5sb2FkZWRcclxuXHRcdFx0XHRyZXR1cm4gdHlwZW9mIGpRdWVyeSAhPT0gXCJ1bmRlZmluZWRcIiAmJiBqUXVlcnkuZXZlbnQudHJpZ2dlcmVkICE9PSBlLnR5cGUgP1xyXG5cdFx0XHRcdFx0alF1ZXJ5LmV2ZW50LmRpc3BhdGNoLmFwcGx5KCBlbGVtLCBhcmd1bWVudHMgKSA6IHVuZGVmaW5lZDtcclxuXHRcdFx0fTtcclxuXHRcdH1cclxuXHJcblx0XHQvLyBIYW5kbGUgbXVsdGlwbGUgZXZlbnRzIHNlcGFyYXRlZCBieSBhIHNwYWNlXHJcblx0XHR0eXBlcyA9ICggdHlwZXMgfHwgXCJcIiApLm1hdGNoKCBybm90aHRtbHdoaXRlICkgfHwgWyBcIlwiIF07XHJcblx0XHR0ID0gdHlwZXMubGVuZ3RoO1xyXG5cdFx0d2hpbGUgKCB0LS0gKSB7XHJcblx0XHRcdHRtcCA9IHJ0eXBlbmFtZXNwYWNlLmV4ZWMoIHR5cGVzWyB0IF0gKSB8fCBbXTtcclxuXHRcdFx0dHlwZSA9IG9yaWdUeXBlID0gdG1wWyAxIF07XHJcblx0XHRcdG5hbWVzcGFjZXMgPSAoIHRtcFsgMiBdIHx8IFwiXCIgKS5zcGxpdCggXCIuXCIgKS5zb3J0KCk7XHJcblxyXG5cdFx0XHQvLyBUaGVyZSAqbXVzdCogYmUgYSB0eXBlLCBubyBhdHRhY2hpbmcgbmFtZXNwYWNlLW9ubHkgaGFuZGxlcnNcclxuXHRcdFx0aWYgKCAhdHlwZSApIHtcclxuXHRcdFx0XHRjb250aW51ZTtcclxuXHRcdFx0fVxyXG5cclxuXHRcdFx0Ly8gSWYgZXZlbnQgY2hhbmdlcyBpdHMgdHlwZSwgdXNlIHRoZSBzcGVjaWFsIGV2ZW50IGhhbmRsZXJzIGZvciB0aGUgY2hhbmdlZCB0eXBlXHJcblx0XHRcdHNwZWNpYWwgPSBqUXVlcnkuZXZlbnQuc3BlY2lhbFsgdHlwZSBdIHx8IHt9O1xyXG5cclxuXHRcdFx0Ly8gSWYgc2VsZWN0b3IgZGVmaW5lZCwgZGV0ZXJtaW5lIHNwZWNpYWwgZXZlbnQgYXBpIHR5cGUsIG90aGVyd2lzZSBnaXZlbiB0eXBlXHJcblx0XHRcdHR5cGUgPSAoIHNlbGVjdG9yID8gc3BlY2lhbC5kZWxlZ2F0ZVR5cGUgOiBzcGVjaWFsLmJpbmRUeXBlICkgfHwgdHlwZTtcclxuXHJcblx0XHRcdC8vIFVwZGF0ZSBzcGVjaWFsIGJhc2VkIG9uIG5ld2x5IHJlc2V0IHR5cGVcclxuXHRcdFx0c3BlY2lhbCA9IGpRdWVyeS5ldmVudC5zcGVjaWFsWyB0eXBlIF0gfHwge307XHJcblxyXG5cdFx0XHQvLyBoYW5kbGVPYmogaXMgcGFzc2VkIHRvIGFsbCBldmVudCBoYW5kbGVyc1xyXG5cdFx0XHRoYW5kbGVPYmogPSBqUXVlcnkuZXh0ZW5kKCB7XHJcblx0XHRcdFx0dHlwZTogdHlwZSxcclxuXHRcdFx0XHRvcmlnVHlwZTogb3JpZ1R5cGUsXHJcblx0XHRcdFx0ZGF0YTogZGF0YSxcclxuXHRcdFx0XHRoYW5kbGVyOiBoYW5kbGVyLFxyXG5cdFx0XHRcdGd1aWQ6IGhhbmRsZXIuZ3VpZCxcclxuXHRcdFx0XHRzZWxlY3Rvcjogc2VsZWN0b3IsXHJcblx0XHRcdFx0bmVlZHNDb250ZXh0OiBzZWxlY3RvciAmJiBqUXVlcnkuZXhwci5tYXRjaC5uZWVkc0NvbnRleHQudGVzdCggc2VsZWN0b3IgKSxcclxuXHRcdFx0XHRuYW1lc3BhY2U6IG5hbWVzcGFjZXMuam9pbiggXCIuXCIgKVxyXG5cdFx0XHR9LCBoYW5kbGVPYmpJbiApO1xyXG5cclxuXHRcdFx0Ly8gSW5pdCB0aGUgZXZlbnQgaGFuZGxlciBxdWV1ZSBpZiB3ZSdyZSB0aGUgZmlyc3RcclxuXHRcdFx0aWYgKCAhKCBoYW5kbGVycyA9IGV2ZW50c1sgdHlwZSBdICkgKSB7XHJcblx0XHRcdFx0aGFuZGxlcnMgPSBldmVudHNbIHR5cGUgXSA9IFtdO1xyXG5cdFx0XHRcdGhhbmRsZXJzLmRlbGVnYXRlQ291bnQgPSAwO1xyXG5cclxuXHRcdFx0XHQvLyBPbmx5IHVzZSBhZGRFdmVudExpc3RlbmVyIGlmIHRoZSBzcGVjaWFsIGV2ZW50cyBoYW5kbGVyIHJldHVybnMgZmFsc2VcclxuXHRcdFx0XHRpZiAoICFzcGVjaWFsLnNldHVwIHx8XHJcblx0XHRcdFx0XHRzcGVjaWFsLnNldHVwLmNhbGwoIGVsZW0sIGRhdGEsIG5hbWVzcGFjZXMsIGV2ZW50SGFuZGxlICkgPT09IGZhbHNlICkge1xyXG5cclxuXHRcdFx0XHRcdGlmICggZWxlbS5hZGRFdmVudExpc3RlbmVyICkge1xyXG5cdFx0XHRcdFx0XHRlbGVtLmFkZEV2ZW50TGlzdGVuZXIoIHR5cGUsIGV2ZW50SGFuZGxlICk7XHJcblx0XHRcdFx0XHR9XHJcblx0XHRcdFx0fVxyXG5cdFx0XHR9XHJcblxyXG5cdFx0XHRpZiAoIHNwZWNpYWwuYWRkICkge1xyXG5cdFx0XHRcdHNwZWNpYWwuYWRkLmNhbGwoIGVsZW0sIGhhbmRsZU9iaiApO1xyXG5cclxuXHRcdFx0XHRpZiAoICFoYW5kbGVPYmouaGFuZGxlci5ndWlkICkge1xyXG5cdFx0XHRcdFx0aGFuZGxlT2JqLmhhbmRsZXIuZ3VpZCA9IGhhbmRsZXIuZ3VpZDtcclxuXHRcdFx0XHR9XHJcblx0XHRcdH1cclxuXHJcblx0XHRcdC8vIEFkZCB0byB0aGUgZWxlbWVudCdzIGhhbmRsZXIgbGlzdCwgZGVsZWdhdGVzIGluIGZyb250XHJcblx0XHRcdGlmICggc2VsZWN0b3IgKSB7XHJcblx0XHRcdFx0aGFuZGxlcnMuc3BsaWNlKCBoYW5kbGVycy5kZWxlZ2F0ZUNvdW50KyssIDAsIGhhbmRsZU9iaiApO1xyXG5cdFx0XHR9IGVsc2Uge1xyXG5cdFx0XHRcdGhhbmRsZXJzLnB1c2goIGhhbmRsZU9iaiApO1xyXG5cdFx0XHR9XHJcblxyXG5cdFx0XHQvLyBLZWVwIHRyYWNrIG9mIHdoaWNoIGV2ZW50cyBoYXZlIGV2ZXIgYmVlbiB1c2VkLCBmb3IgZXZlbnQgb3B0aW1pemF0aW9uXHJcblx0XHRcdGpRdWVyeS5ldmVudC5nbG9iYWxbIHR5cGUgXSA9IHRydWU7XHJcblx0XHR9XHJcblxyXG5cdH0sXHJcblxyXG5cdC8vIERldGFjaCBhbiBldmVudCBvciBzZXQgb2YgZXZlbnRzIGZyb20gYW4gZWxlbWVudFxyXG5cdHJlbW92ZTogZnVuY3Rpb24oIGVsZW0sIHR5cGVzLCBoYW5kbGVyLCBzZWxlY3RvciwgbWFwcGVkVHlwZXMgKSB7XHJcblxyXG5cdFx0dmFyIGosIG9yaWdDb3VudCwgdG1wLFxyXG5cdFx0XHRldmVudHMsIHQsIGhhbmRsZU9iaixcclxuXHRcdFx0c3BlY2lhbCwgaGFuZGxlcnMsIHR5cGUsIG5hbWVzcGFjZXMsIG9yaWdUeXBlLFxyXG5cdFx0XHRlbGVtRGF0YSA9IGRhdGFQcml2Lmhhc0RhdGEoIGVsZW0gKSAmJiBkYXRhUHJpdi5nZXQoIGVsZW0gKTtcclxuXHJcblx0XHRpZiAoICFlbGVtRGF0YSB8fCAhKCBldmVudHMgPSBlbGVtRGF0YS5ldmVudHMgKSApIHtcclxuXHRcdFx0cmV0dXJuO1xyXG5cdFx0fVxyXG5cclxuXHRcdC8vIE9uY2UgZm9yIGVhY2ggdHlwZS5uYW1lc3BhY2UgaW4gdHlwZXM7IHR5cGUgbWF5IGJlIG9taXR0ZWRcclxuXHRcdHR5cGVzID0gKCB0eXBlcyB8fCBcIlwiICkubWF0Y2goIHJub3RodG1sd2hpdGUgKSB8fCBbIFwiXCIgXTtcclxuXHRcdHQgPSB0eXBlcy5sZW5ndGg7XHJcblx0XHR3aGlsZSAoIHQtLSApIHtcclxuXHRcdFx0dG1wID0gcnR5cGVuYW1lc3BhY2UuZXhlYyggdHlwZXNbIHQgXSApIHx8IFtdO1xyXG5cdFx0XHR0eXBlID0gb3JpZ1R5cGUgPSB0bXBbIDEgXTtcclxuXHRcdFx0bmFtZXNwYWNlcyA9ICggdG1wWyAyIF0gfHwgXCJcIiApLnNwbGl0KCBcIi5cIiApLnNvcnQoKTtcclxuXHJcblx0XHRcdC8vIFVuYmluZCBhbGwgZXZlbnRzIChvbiB0aGlzIG5hbWVzcGFjZSwgaWYgcHJvdmlkZWQpIGZvciB0aGUgZWxlbWVudFxyXG5cdFx0XHRpZiAoICF0eXBlICkge1xyXG5cdFx0XHRcdGZvciAoIHR5cGUgaW4gZXZlbnRzICkge1xyXG5cdFx0XHRcdFx0alF1ZXJ5LmV2ZW50LnJlbW92ZSggZWxlbSwgdHlwZSArIHR5cGVzWyB0IF0sIGhhbmRsZXIsIHNlbGVjdG9yLCB0cnVlICk7XHJcblx0XHRcdFx0fVxyXG5cdFx0XHRcdGNvbnRpbnVlO1xyXG5cdFx0XHR9XHJcblxyXG5cdFx0XHRzcGVjaWFsID0galF1ZXJ5LmV2ZW50LnNwZWNpYWxbIHR5cGUgXSB8fCB7fTtcclxuXHRcdFx0dHlwZSA9ICggc2VsZWN0b3IgPyBzcGVjaWFsLmRlbGVnYXRlVHlwZSA6IHNwZWNpYWwuYmluZFR5cGUgKSB8fCB0eXBlO1xyXG5cdFx0XHRoYW5kbGVycyA9IGV2ZW50c1sgdHlwZSBdIHx8IFtdO1xyXG5cdFx0XHR0bXAgPSB0bXBbIDIgXSAmJlxyXG5cdFx0XHRcdG5ldyBSZWdFeHAoIFwiKF58XFxcXC4pXCIgKyBuYW1lc3BhY2VzLmpvaW4oIFwiXFxcXC4oPzouKlxcXFwufClcIiApICsgXCIoXFxcXC58JClcIiApO1xyXG5cclxuXHRcdFx0Ly8gUmVtb3ZlIG1hdGNoaW5nIGV2ZW50c1xyXG5cdFx0XHRvcmlnQ291bnQgPSBqID0gaGFuZGxlcnMubGVuZ3RoO1xyXG5cdFx0XHR3aGlsZSAoIGotLSApIHtcclxuXHRcdFx0XHRoYW5kbGVPYmogPSBoYW5kbGVyc1sgaiBdO1xyXG5cclxuXHRcdFx0XHRpZiAoICggbWFwcGVkVHlwZXMgfHwgb3JpZ1R5cGUgPT09IGhhbmRsZU9iai5vcmlnVHlwZSApICYmXHJcblx0XHRcdFx0XHQoICFoYW5kbGVyIHx8IGhhbmRsZXIuZ3VpZCA9PT0gaGFuZGxlT2JqLmd1aWQgKSAmJlxyXG5cdFx0XHRcdFx0KCAhdG1wIHx8IHRtcC50ZXN0KCBoYW5kbGVPYmoubmFtZXNwYWNlICkgKSAmJlxyXG5cdFx0XHRcdFx0KCAhc2VsZWN0b3IgfHwgc2VsZWN0b3IgPT09IGhhbmRsZU9iai5zZWxlY3RvciB8fFxyXG5cdFx0XHRcdFx0XHRzZWxlY3RvciA9PT0gXCIqKlwiICYmIGhhbmRsZU9iai5zZWxlY3RvciApICkge1xyXG5cdFx0XHRcdFx0aGFuZGxlcnMuc3BsaWNlKCBqLCAxICk7XHJcblxyXG5cdFx0XHRcdFx0aWYgKCBoYW5kbGVPYmouc2VsZWN0b3IgKSB7XHJcblx0XHRcdFx0XHRcdGhhbmRsZXJzLmRlbGVnYXRlQ291bnQtLTtcclxuXHRcdFx0XHRcdH1cclxuXHRcdFx0XHRcdGlmICggc3BlY2lhbC5yZW1vdmUgKSB7XHJcblx0XHRcdFx0XHRcdHNwZWNpYWwucmVtb3ZlLmNhbGwoIGVsZW0sIGhhbmRsZU9iaiApO1xyXG5cdFx0XHRcdFx0fVxyXG5cdFx0XHRcdH1cclxuXHRcdFx0fVxyXG5cclxuXHRcdFx0Ly8gUmVtb3ZlIGdlbmVyaWMgZXZlbnQgaGFuZGxlciBpZiB3ZSByZW1vdmVkIHNvbWV0aGluZyBhbmQgbm8gbW9yZSBoYW5kbGVycyBleGlzdFxyXG5cdFx0XHQvLyAoYXZvaWRzIHBvdGVudGlhbCBmb3IgZW5kbGVzcyByZWN1cnNpb24gZHVyaW5nIHJlbW92YWwgb2Ygc3BlY2lhbCBldmVudCBoYW5kbGVycylcclxuXHRcdFx0aWYgKCBvcmlnQ291bnQgJiYgIWhhbmRsZXJzLmxlbmd0aCApIHtcclxuXHRcdFx0XHRpZiAoICFzcGVjaWFsLnRlYXJkb3duIHx8XHJcblx0XHRcdFx0XHRzcGVjaWFsLnRlYXJkb3duLmNhbGwoIGVsZW0sIG5hbWVzcGFjZXMsIGVsZW1EYXRhLmhhbmRsZSApID09PSBmYWxzZSApIHtcclxuXHJcblx0XHRcdFx0XHRqUXVlcnkucmVtb3ZlRXZlbnQoIGVsZW0sIHR5cGUsIGVsZW1EYXRhLmhhbmRsZSApO1xyXG5cdFx0XHRcdH1cclxuXHJcblx0XHRcdFx0ZGVsZXRlIGV2ZW50c1sgdHlwZSBdO1xyXG5cdFx0XHR9XHJcblx0XHR9XHJcblxyXG5cdFx0Ly8gUmVtb3ZlIGRhdGEgYW5kIHRoZSBleHBhbmRvIGlmIGl0J3Mgbm8gbG9uZ2VyIHVzZWRcclxuXHRcdGlmICggalF1ZXJ5LmlzRW1wdHlPYmplY3QoIGV2ZW50cyApICkge1xyXG5cdFx0XHRkYXRhUHJpdi5yZW1vdmUoIGVsZW0sIFwiaGFuZGxlIGV2ZW50c1wiICk7XHJcblx0XHR9XHJcblx0fSxcclxuXHJcblx0ZGlzcGF0Y2g6IGZ1bmN0aW9uKCBuYXRpdmVFdmVudCApIHtcclxuXHJcblx0XHQvLyBNYWtlIGEgd3JpdGFibGUgalF1ZXJ5LkV2ZW50IGZyb20gdGhlIG5hdGl2ZSBldmVudCBvYmplY3RcclxuXHRcdHZhciBldmVudCA9IGpRdWVyeS5ldmVudC5maXgoIG5hdGl2ZUV2ZW50ICk7XHJcblxyXG5cdFx0dmFyIGksIGosIHJldCwgbWF0Y2hlZCwgaGFuZGxlT2JqLCBoYW5kbGVyUXVldWUsXHJcblx0XHRcdGFyZ3MgPSBuZXcgQXJyYXkoIGFyZ3VtZW50cy5sZW5ndGggKSxcclxuXHRcdFx0aGFuZGxlcnMgPSAoIGRhdGFQcml2LmdldCggdGhpcywgXCJldmVudHNcIiApIHx8IHt9IClbIGV2ZW50LnR5cGUgXSB8fCBbXSxcclxuXHRcdFx0c3BlY2lhbCA9IGpRdWVyeS5ldmVudC5zcGVjaWFsWyBldmVudC50eXBlIF0gfHwge307XHJcblxyXG5cdFx0Ly8gVXNlIHRoZSBmaXgtZWQgalF1ZXJ5LkV2ZW50IHJhdGhlciB0aGFuIHRoZSAocmVhZC1vbmx5KSBuYXRpdmUgZXZlbnRcclxuXHRcdGFyZ3NbIDAgXSA9IGV2ZW50O1xyXG5cclxuXHRcdGZvciAoIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrICkge1xyXG5cdFx0XHRhcmdzWyBpIF0gPSBhcmd1bWVudHNbIGkgXTtcclxuXHRcdH1cclxuXHJcblx0XHRldmVudC5kZWxlZ2F0ZVRhcmdldCA9IHRoaXM7XHJcblxyXG5cdFx0Ly8gQ2FsbCB0aGUgcHJlRGlzcGF0Y2ggaG9vayBmb3IgdGhlIG1hcHBlZCB0eXBlLCBhbmQgbGV0IGl0IGJhaWwgaWYgZGVzaXJlZFxyXG5cdFx0aWYgKCBzcGVjaWFsLnByZURpc3BhdGNoICYmIHNwZWNpYWwucHJlRGlzcGF0Y2guY2FsbCggdGhpcywgZXZlbnQgKSA9PT0gZmFsc2UgKSB7XHJcblx0XHRcdHJldHVybjtcclxuXHRcdH1cclxuXHJcblx0XHQvLyBEZXRlcm1pbmUgaGFuZGxlcnNcclxuXHRcdGhhbmRsZXJRdWV1ZSA9IGpRdWVyeS5ldmVudC5oYW5kbGVycy5jYWxsKCB0aGlzLCBldmVudCwgaGFuZGxlcnMgKTtcclxuXHJcblx0XHQvLyBSdW4gZGVsZWdhdGVzIGZpcnN0OyB0aGV5IG1heSB3YW50IHRvIHN0b3AgcHJvcGFnYXRpb24gYmVuZWF0aCB1c1xyXG5cdFx0aSA9IDA7XHJcblx0XHR3aGlsZSAoICggbWF0Y2hlZCA9IGhhbmRsZXJRdWV1ZVsgaSsrIF0gKSAmJiAhZXZlbnQuaXNQcm9wYWdhdGlvblN0b3BwZWQoKSApIHtcclxuXHRcdFx0ZXZlbnQuY3VycmVudFRhcmdldCA9IG1hdGNoZWQuZWxlbTtcclxuXHJcblx0XHRcdGogPSAwO1xyXG5cdFx0XHR3aGlsZSAoICggaGFuZGxlT2JqID0gbWF0Y2hlZC5oYW5kbGVyc1sgaisrIF0gKSAmJlxyXG5cdFx0XHRcdCFldmVudC5pc0ltbWVkaWF0ZVByb3BhZ2F0aW9uU3RvcHBlZCgpICkge1xyXG5cclxuXHRcdFx0XHQvLyBUcmlnZ2VyZWQgZXZlbnQgbXVzdCBlaXRoZXIgMSkgaGF2ZSBubyBuYW1lc3BhY2UsIG9yIDIpIGhhdmUgbmFtZXNwYWNlKHMpXHJcblx0XHRcdFx0Ly8gYSBzdWJzZXQgb3IgZXF1YWwgdG8gdGhvc2UgaW4gdGhlIGJvdW5kIGV2ZW50IChib3RoIGNhbiBoYXZlIG5vIG5hbWVzcGFjZSkuXHJcblx0XHRcdFx0aWYgKCAhZXZlbnQucm5hbWVzcGFjZSB8fCBldmVudC5ybmFtZXNwYWNlLnRlc3QoIGhhbmRsZU9iai5uYW1lc3BhY2UgKSApIHtcclxuXHJcblx0XHRcdFx0XHRldmVudC5oYW5kbGVPYmogPSBoYW5kbGVPYmo7XHJcblx0XHRcdFx0XHRldmVudC5kYXRhID0gaGFuZGxlT2JqLmRhdGE7XHJcblxyXG5cdFx0XHRcdFx0cmV0ID0gKCAoIGpRdWVyeS5ldmVudC5zcGVjaWFsWyBoYW5kbGVPYmoub3JpZ1R5cGUgXSB8fCB7fSApLmhhbmRsZSB8fFxyXG5cdFx0XHRcdFx0XHRoYW5kbGVPYmouaGFuZGxlciApLmFwcGx5KCBtYXRjaGVkLmVsZW0sIGFyZ3MgKTtcclxuXHJcblx0XHRcdFx0XHRpZiAoIHJldCAhPT0gdW5kZWZpbmVkICkge1xyXG5cdFx0XHRcdFx0XHRpZiAoICggZXZlbnQucmVzdWx0ID0gcmV0ICkgPT09IGZhbHNlICkge1xyXG5cdFx0XHRcdFx0XHRcdGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XHJcblx0XHRcdFx0XHRcdFx0ZXZlbnQuc3RvcFByb3BhZ2F0aW9uKCk7XHJcblx0XHRcdFx0XHRcdH1cclxuXHRcdFx0XHRcdH1cclxuXHRcdFx0XHR9XHJcblx0XHRcdH1cclxuXHRcdH1cclxuXHJcblx0XHQvLyBDYWxsIHRoZSBwb3N0RGlzcGF0Y2ggaG9vayBmb3IgdGhlIG1hcHBlZCB0eXBlXHJcblx0XHRpZiAoIHNwZWNpYWwucG9zdERpc3BhdGNoICkge1xyXG5cdFx0XHRzcGVjaWFsLnBvc3REaXNwYXRjaC5jYWxsKCB0aGlzLCBldmVudCApO1xyXG5cdFx0fVxyXG5cclxuXHRcdHJldHVybiBldmVudC5yZXN1bHQ7XHJcblx0fSxcclxuXHJcblx0aGFuZGxlcnM6IGZ1bmN0aW9uKCBldmVudCwgaGFuZGxlcnMgKSB7XHJcblx0XHR2YXIgaSwgaGFuZGxlT2JqLCBzZWwsIG1hdGNoZWRIYW5kbGVycywgbWF0Y2hlZFNlbGVjdG9ycyxcclxuXHRcdFx0aGFuZGxlclF1ZXVlID0gW10sXHJcblx0XHRcdGRlbGVnYXRlQ291bnQgPSBoYW5kbGVycy5kZWxlZ2F0ZUNvdW50LFxyXG5cdFx0XHRjdXIgPSBldmVudC50YXJnZXQ7XHJcblxyXG5cdFx0Ly8gRmluZCBkZWxlZ2F0ZSBoYW5kbGVyc1xyXG5cdFx0aWYgKCBkZWxlZ2F0ZUNvdW50ICYmXHJcblxyXG5cdFx0XHQvLyBTdXBwb3J0OiBJRSA8PTlcclxuXHRcdFx0Ly8gQmxhY2staG9sZSBTVkcgPHVzZT4gaW5zdGFuY2UgdHJlZXMgKHRyYWMtMTMxODApXHJcblx0XHRcdGN1ci5ub2RlVHlwZSAmJlxyXG5cclxuXHRcdFx0Ly8gU3VwcG9ydDogRmlyZWZveCA8PTQyXHJcblx0XHRcdC8vIFN1cHByZXNzIHNwZWMtdmlvbGF0aW5nIGNsaWNrcyBpbmRpY2F0aW5nIGEgbm9uLXByaW1hcnkgcG9pbnRlciBidXR0b24gKHRyYWMtMzg2MSlcclxuXHRcdFx0Ly8gaHR0cHM6Ly93d3cudzMub3JnL1RSL0RPTS1MZXZlbC0zLUV2ZW50cy8jZXZlbnQtdHlwZS1jbGlja1xyXG5cdFx0XHQvLyBTdXBwb3J0OiBJRSAxMSBvbmx5XHJcblx0XHRcdC8vIC4uLmJ1dCBub3QgYXJyb3cga2V5IFwiY2xpY2tzXCIgb2YgcmFkaW8gaW5wdXRzLCB3aGljaCBjYW4gaGF2ZSBgYnV0dG9uYCAtMSAoZ2gtMjM0MylcclxuXHRcdFx0ISggZXZlbnQudHlwZSA9PT0gXCJjbGlja1wiICYmIGV2ZW50LmJ1dHRvbiA+PSAxICkgKSB7XHJcblxyXG5cdFx0XHRmb3IgKCA7IGN1ciAhPT0gdGhpczsgY3VyID0gY3VyLnBhcmVudE5vZGUgfHwgdGhpcyApIHtcclxuXHJcblx0XHRcdFx0Ly8gRG9uJ3QgY2hlY2sgbm9uLWVsZW1lbnRzICgjMTMyMDgpXHJcblx0XHRcdFx0Ly8gRG9uJ3QgcHJvY2VzcyBjbGlja3Mgb24gZGlzYWJsZWQgZWxlbWVudHMgKCM2OTExLCAjODE2NSwgIzExMzgyLCAjMTE3NjQpXHJcblx0XHRcdFx0aWYgKCBjdXIubm9kZVR5cGUgPT09IDEgJiYgISggZXZlbnQudHlwZSA9PT0gXCJjbGlja1wiICYmIGN1ci5kaXNhYmxlZCA9PT0gdHJ1ZSApICkge1xyXG5cdFx0XHRcdFx0bWF0Y2hlZEhhbmRsZXJzID0gW107XHJcblx0XHRcdFx0XHRtYXRjaGVkU2VsZWN0b3JzID0ge307XHJcblx0XHRcdFx0XHRmb3IgKCBpID0gMDsgaSA8IGRlbGVnYXRlQ291bnQ7IGkrKyApIHtcclxuXHRcdFx0XHRcdFx0aGFuZGxlT2JqID0gaGFuZGxlcnNbIGkgXTtcclxuXHJcblx0XHRcdFx0XHRcdC8vIERvbid0IGNvbmZsaWN0IHdpdGggT2JqZWN0LnByb3RvdHlwZSBwcm9wZXJ0aWVzICgjMTMyMDMpXHJcblx0XHRcdFx0XHRcdHNlbCA9IGhhbmRsZU9iai5zZWxlY3RvciArIFwiIFwiO1xyXG5cclxuXHRcdFx0XHRcdFx0aWYgKCBtYXRjaGVkU2VsZWN0b3JzWyBzZWwgXSA9PT0gdW5kZWZpbmVkICkge1xyXG5cdFx0XHRcdFx0XHRcdG1hdGNoZWRTZWxlY3RvcnNbIHNlbCBdID0gaGFuZGxlT2JqLm5lZWRzQ29udGV4dCA/XHJcblx0XHRcdFx0XHRcdFx0XHRqUXVlcnkoIHNlbCwgdGhpcyApLmluZGV4KCBjdXIgKSA+IC0xIDpcclxuXHRcdFx0XHRcdFx0XHRcdGpRdWVyeS5maW5kKCBzZWwsIHRoaXMsIG51bGwsIFsgY3VyIF0gKS5sZW5ndGg7XHJcblx0XHRcdFx0XHRcdH1cclxuXHRcdFx0XHRcdFx0aWYgKCBtYXRjaGVkU2VsZWN0b3JzWyBzZWwgXSApIHtcclxuXHRcdFx0XHRcdFx0XHRtYXRjaGVkSGFuZGxlcnMucHVzaCggaGFuZGxlT2JqICk7XHJcblx0XHRcdFx0XHRcdH1cclxuXHRcdFx0XHRcdH1cclxuXHRcdFx0XHRcdGlmICggbWF0Y2hlZEhhbmRsZXJzLmxlbmd0aCApIHtcclxuXHRcdFx0XHRcdFx0aGFuZGxlclF1ZXVlLnB1c2goIHsgZWxlbTogY3VyLCBoYW5kbGVyczogbWF0Y2hlZEhhbmRsZXJzIH0gKTtcclxuXHRcdFx0XHRcdH1cclxuXHRcdFx0XHR9XHJcblx0XHRcdH1cclxuXHRcdH1cclxuXHJcblx0XHQvLyBBZGQgdGhlIHJlbWFpbmluZyAoZGlyZWN0bHktYm91bmQpIGhhbmRsZXJzXHJcblx0XHRjdXIgPSB0aGlzO1xyXG5cdFx0aWYgKCBkZWxlZ2F0ZUNvdW50IDwgaGFuZGxlcnMubGVuZ3RoICkge1xyXG5cdFx0XHRoYW5kbGVyUXVldWUucHVzaCggeyBlbGVtOiBjdXIsIGhhbmRsZXJzOiBoYW5kbGVycy5zbGljZSggZGVsZWdhdGVDb3VudCApIH0gKTtcclxuXHRcdH1cclxuXHJcblx0XHRyZXR1cm4gaGFuZGxlclF1ZXVlO1xyXG5cdH0sXHJcblxyXG5cdGFkZFByb3A6IGZ1bmN0aW9uKCBuYW1lLCBob29rICkge1xyXG5cdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KCBqUXVlcnkuRXZlbnQucHJvdG90eXBlLCBuYW1lLCB7XHJcblx0XHRcdGVudW1lcmFibGU6IHRydWUsXHJcblx0XHRcdGNvbmZpZ3VyYWJsZTogdHJ1ZSxcclxuXHJcblx0XHRcdGdldDogaXNGdW5jdGlvbiggaG9vayApID9cclxuXHRcdFx0XHRmdW5jdGlvbigpIHtcclxuXHRcdFx0XHRcdGlmICggdGhpcy5vcmlnaW5hbEV2ZW50ICkge1xyXG5cdFx0XHRcdFx0XHRcdHJldHVybiBob29rKCB0aGlzLm9yaWdpbmFsRXZlbnQgKTtcclxuXHRcdFx0XHRcdH1cclxuXHRcdFx0XHR9IDpcclxuXHRcdFx0XHRmdW5jdGlvbigpIHtcclxuXHRcdFx0XHRcdGlmICggdGhpcy5vcmlnaW5hbEV2ZW50ICkge1xyXG5cdFx0XHRcdFx0XHRcdHJldHVybiB0aGlzLm9yaWdpbmFsRXZlbnRbIG5hbWUgXTtcclxuXHRcdFx0XHRcdH1cclxuXHRcdFx0XHR9LFxyXG5cclxuXHRcdFx0c2V0OiBmdW5jdGlvbiggdmFsdWUgKSB7XHJcblx0XHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KCB0aGlzLCBuYW1lLCB7XHJcblx0XHRcdFx0XHRlbnVtZXJhYmxlOiB0cnVlLFxyXG5cdFx0XHRcdFx0Y29uZmlndXJhYmxlOiB0cnVlLFxyXG5cdFx0XHRcdFx0d3JpdGFibGU6IHRydWUsXHJcblx0XHRcdFx0XHR2YWx1ZTogdmFsdWVcclxuXHRcdFx0XHR9ICk7XHJcblx0XHRcdH1cclxuXHRcdH0gKTtcclxuXHR9LFxyXG5cclxuXHRmaXg6IGZ1bmN0aW9uKCBvcmlnaW5hbEV2ZW50ICkge1xyXG5cdFx0cmV0dXJuIG9yaWdpbmFsRXZlbnRbIGpRdWVyeS5leHBhbmRvIF0gP1xyXG5cdFx0XHRvcmlnaW5hbEV2ZW50IDpcclxuXHRcdFx0bmV3IGpRdWVyeS5FdmVudCggb3JpZ2luYWxFdmVudCApO1xyXG5cdH0sXHJcblxyXG5cdHNwZWNpYWw6IHtcclxuXHRcdGxvYWQ6IHtcclxuXHJcblx0XHRcdC8vIFByZXZlbnQgdHJpZ2dlcmVkIGltYWdlLmxvYWQgZXZlbnRzIGZyb20gYnViYmxpbmcgdG8gd2luZG93LmxvYWRcclxuXHRcdFx0bm9CdWJibGU6IHRydWVcclxuXHRcdH0sXHJcblx0XHRmb2N1czoge1xyXG5cclxuXHRcdFx0Ly8gRmlyZSBuYXRpdmUgZXZlbnQgaWYgcG9zc2libGUgc28gYmx1ci9mb2N1cyBzZXF1ZW5jZSBpcyBjb3JyZWN0XHJcblx0XHRcdHRyaWdnZXI6IGZ1bmN0aW9uKCkge1xyXG5cdFx0XHRcdGlmICggdGhpcyAhPT0gc2FmZUFjdGl2ZUVsZW1lbnQoKSAmJiB0aGlzLmZvY3VzICkge1xyXG5cdFx0XHRcdFx0dGhpcy5mb2N1cygpO1xyXG5cdFx0XHRcdFx0cmV0dXJuIGZhbHNlO1xyXG5cdFx0XHRcdH1cclxuXHRcdFx0fSxcclxuXHRcdFx0ZGVsZWdhdGVUeXBlOiBcImZvY3VzaW5cIlxyXG5cdFx0fSxcclxuXHRcdGJsdXI6IHtcclxuXHRcdFx0dHJpZ2dlcjogZnVuY3Rpb24oKSB7XHJcblx0XHRcdFx0aWYgKCB0aGlzID09PSBzYWZlQWN0aXZlRWxlbWVudCgpICYmIHRoaXMuYmx1ciApIHtcclxuXHRcdFx0XHRcdHRoaXMuYmx1cigpO1xyXG5cdFx0XHRcdFx0cmV0dXJuIGZhbHNlO1xyXG5cdFx0XHRcdH1cclxuXHRcdFx0fSxcclxuXHRcdFx0ZGVsZWdhdGVUeXBlOiBcImZvY3Vzb3V0XCJcclxuXHRcdH0sXHJcblx0XHRjbGljazoge1xyXG5cclxuXHRcdFx0Ly8gRm9yIGNoZWNrYm94LCBmaXJlIG5hdGl2ZSBldmVudCBzbyBjaGVja2VkIHN0YXRlIHdpbGwgYmUgcmlnaHRcclxuXHRcdFx0dHJpZ2dlcjogZnVuY3Rpb24oKSB7XHJcblx0XHRcdFx0aWYgKCB0aGlzLnR5cGUgPT09IFwiY2hlY2tib3hcIiAmJiB0aGlzLmNsaWNrICYmIG5vZGVOYW1lKCB0aGlzLCBcImlucHV0XCIgKSApIHtcclxuXHRcdFx0XHRcdHRoaXMuY2xpY2soKTtcclxuXHRcdFx0XHRcdHJldHVybiBmYWxzZTtcclxuXHRcdFx0XHR9XHJcblx0XHRcdH0sXHJcblxyXG5cdFx0XHQvLyBGb3IgY3Jvc3MtYnJvd3NlciBjb25zaXN0ZW5jeSwgZG9uJ3QgZmlyZSBuYXRpdmUgLmNsaWNrKCkgb24gbGlua3NcclxuXHRcdFx0X2RlZmF1bHQ6IGZ1bmN0aW9uKCBldmVudCApIHtcclxuXHRcdFx0XHRyZXR1cm4gbm9kZU5hbWUoIGV2ZW50LnRhcmdldCwgXCJhXCIgKTtcclxuXHRcdFx0fVxyXG5cdFx0fSxcclxuXHJcblx0XHRiZWZvcmV1bmxvYWQ6IHtcclxuXHRcdFx0cG9zdERpc3BhdGNoOiBmdW5jdGlvbiggZXZlbnQgKSB7XHJcblxyXG5cdFx0XHRcdC8vIFN1cHBvcnQ6IEZpcmVmb3ggMjArXHJcblx0XHRcdFx0Ly8gRmlyZWZveCBkb2Vzbid0IGFsZXJ0IGlmIHRoZSByZXR1cm5WYWx1ZSBmaWVsZCBpcyBub3Qgc2V0LlxyXG5cdFx0XHRcdGlmICggZXZlbnQucmVzdWx0ICE9PSB1bmRlZmluZWQgJiYgZXZlbnQub3JpZ2luYWxFdmVudCApIHtcclxuXHRcdFx0XHRcdGV2ZW50Lm9yaWdpbmFsRXZlbnQucmV0dXJuVmFsdWUgPSBldmVudC5yZXN1bHQ7XHJcblx0XHRcdFx0fVxyXG5cdFx0XHR9XHJcblx0XHR9XHJcblx0fVxyXG59O1xyXG5cclxualF1ZXJ5LnJlbW92ZUV2ZW50ID0gZnVuY3Rpb24oIGVsZW0sIHR5cGUsIGhhbmRsZSApIHtcclxuXHJcblx0Ly8gVGhpcyBcImlmXCIgaXMgbmVlZGVkIGZvciBwbGFpbiBvYmplY3RzXHJcblx0aWYgKCBlbGVtLnJlbW92ZUV2ZW50TGlzdGVuZXIgKSB7XHJcblx0XHRlbGVtLnJlbW92ZUV2ZW50TGlzdGVuZXIoIHR5cGUsIGhhbmRsZSApO1xyXG5cdH1cclxufTtcclxuXHJcbmpRdWVyeS5FdmVudCA9IGZ1bmN0aW9uKCBzcmMsIHByb3BzICkge1xyXG5cclxuXHQvLyBBbGxvdyBpbnN0YW50aWF0aW9uIHdpdGhvdXQgdGhlICduZXcnIGtleXdvcmRcclxuXHRpZiAoICEoIHRoaXMgaW5zdGFuY2VvZiBqUXVlcnkuRXZlbnQgKSApIHtcclxuXHRcdHJldHVybiBuZXcgalF1ZXJ5LkV2ZW50KCBzcmMsIHByb3BzICk7XHJcblx0fVxyXG5cclxuXHQvLyBFdmVudCBvYmplY3RcclxuXHRpZiAoIHNyYyAmJiBzcmMudHlwZSApIHtcclxuXHRcdHRoaXMub3JpZ2luYWxFdmVudCA9IHNyYztcclxuXHRcdHRoaXMudHlwZSA9IHNyYy50eXBlO1xyXG5cclxuXHRcdC8vIEV2ZW50cyBidWJibGluZyB1cCB0aGUgZG9jdW1lbnQgbWF5IGhhdmUgYmVlbiBtYXJrZWQgYXMgcHJldmVudGVkXHJcblx0XHQvLyBieSBhIGhhbmRsZXIgbG93ZXIgZG93biB0aGUgdHJlZTsgcmVmbGVjdCB0aGUgY29ycmVjdCB2YWx1ZS5cclxuXHRcdHRoaXMuaXNEZWZhdWx0UHJldmVudGVkID0gc3JjLmRlZmF1bHRQcmV2ZW50ZWQgfHxcclxuXHRcdFx0XHRzcmMuZGVmYXVsdFByZXZlbnRlZCA9PT0gdW5kZWZpbmVkICYmXHJcblxyXG5cdFx0XHRcdC8vIFN1cHBvcnQ6IEFuZHJvaWQgPD0yLjMgb25seVxyXG5cdFx0XHRcdHNyYy5yZXR1cm5WYWx1ZSA9PT0gZmFsc2UgP1xyXG5cdFx0XHRyZXR1cm5UcnVlIDpcclxuXHRcdFx0cmV0dXJuRmFsc2U7XHJcblxyXG5cdFx0Ly8gQ3JlYXRlIHRhcmdldCBwcm9wZXJ0aWVzXHJcblx0XHQvLyBTdXBwb3J0OiBTYWZhcmkgPD02IC0gNyBvbmx5XHJcblx0XHQvLyBUYXJnZXQgc2hvdWxkIG5vdCBiZSBhIHRleHQgbm9kZSAoIzUwNCwgIzEzMTQzKVxyXG5cdFx0dGhpcy50YXJnZXQgPSAoIHNyYy50YXJnZXQgJiYgc3JjLnRhcmdldC5ub2RlVHlwZSA9PT0gMyApID9cclxuXHRcdFx0c3JjLnRhcmdldC5wYXJlbnROb2RlIDpcclxuXHRcdFx0c3JjLnRhcmdldDtcclxuXHJcblx0XHR0aGlzLmN1cnJlbnRUYXJnZXQgPSBzcmMuY3VycmVudFRhcmdldDtcclxuXHRcdHRoaXMucmVsYXRlZFRhcmdldCA9IHNyYy5yZWxhdGVkVGFyZ2V0O1xyXG5cclxuXHQvLyBFdmVudCB0eXBlXHJcblx0fSBlbHNlIHtcclxuXHRcdHRoaXMudHlwZSA9IHNyYztcclxuXHR9XHJcblxyXG5cdC8vIFB1dCBleHBsaWNpdGx5IHByb3ZpZGVkIHByb3BlcnRpZXMgb250byB0aGUgZXZlbnQgb2JqZWN0XHJcblx0aWYgKCBwcm9wcyApIHtcclxuXHRcdGpRdWVyeS5leHRlbmQoIHRoaXMsIHByb3BzICk7XHJcblx0fVxyXG5cclxuXHQvLyBDcmVhdGUgYSB0aW1lc3RhbXAgaWYgaW5jb21pbmcgZXZlbnQgZG9lc24ndCBoYXZlIG9uZVxyXG5cdHRoaXMudGltZVN0YW1wID0gc3JjICYmIHNyYy50aW1lU3RhbXAgfHwgRGF0ZS5ub3coKTtcclxuXHJcblx0Ly8gTWFyayBpdCBhcyBmaXhlZFxyXG5cdHRoaXNbIGpRdWVyeS5leHBhbmRvIF0gPSB0cnVlO1xyXG59O1xyXG5cclxuLy8galF1ZXJ5LkV2ZW50IGlzIGJhc2VkIG9uIERPTTMgRXZlbnRzIGFzIHNwZWNpZmllZCBieSB0aGUgRUNNQVNjcmlwdCBMYW5ndWFnZSBCaW5kaW5nXHJcbi8vIGh0dHBzOi8vd3d3LnczLm9yZy9UUi8yMDAzL1dELURPTS1MZXZlbC0zLUV2ZW50cy0yMDAzMDMzMS9lY21hLXNjcmlwdC1iaW5kaW5nLmh0bWxcclxualF1ZXJ5LkV2ZW50LnByb3RvdHlwZSA9IHtcclxuXHRjb25zdHJ1Y3RvcjogalF1ZXJ5LkV2ZW50LFxyXG5cdGlzRGVmYXVsdFByZXZlbnRlZDogcmV0dXJuRmFsc2UsXHJcblx0aXNQcm9wYWdhdGlvblN0b3BwZWQ6IHJldHVybkZhbHNlLFxyXG5cdGlzSW1tZWRpYXRlUHJvcGFnYXRpb25TdG9wcGVkOiByZXR1cm5GYWxzZSxcclxuXHRpc1NpbXVsYXRlZDogZmFsc2UsXHJcblxyXG5cdHByZXZlbnREZWZhdWx0OiBmdW5jdGlvbigpIHtcclxuXHRcdHZhciBlID0gdGhpcy5vcmlnaW5hbEV2ZW50O1xyXG5cclxuXHRcdHRoaXMuaXNEZWZhdWx0UHJldmVudGVkID0gcmV0dXJuVHJ1ZTtcclxuXHJcblx0XHRpZiAoIGUgJiYgIXRoaXMuaXNTaW11bGF0ZWQgKSB7XHJcblx0XHRcdGUucHJldmVudERlZmF1bHQoKTtcclxuXHRcdH1cclxuXHR9LFxyXG5cdHN0b3BQcm9wYWdhdGlvbjogZnVuY3Rpb24oKSB7XHJcblx0XHR2YXIgZSA9IHRoaXMub3JpZ2luYWxFdmVudDtcclxuXHJcblx0XHR0aGlzLmlzUHJvcGFnYXRpb25TdG9wcGVkID0gcmV0dXJuVHJ1ZTtcclxuXHJcblx0XHRpZiAoIGUgJiYgIXRoaXMuaXNTaW11bGF0ZWQgKSB7XHJcblx0XHRcdGUuc3RvcFByb3BhZ2F0aW9uKCk7XHJcblx0XHR9XHJcblx0fSxcclxuXHRzdG9wSW1tZWRpYXRlUHJvcGFnYXRpb246IGZ1bmN0aW9uKCkge1xyXG5cdFx0dmFyIGUgPSB0aGlzLm9yaWdpbmFsRXZlbnQ7XHJcblxyXG5cdFx0dGhpcy5pc0ltbWVkaWF0ZVByb3BhZ2F0aW9uU3RvcHBlZCA9IHJldHVyblRydWU7XHJcblxyXG5cdFx0aWYgKCBlICYmICF0aGlzLmlzU2ltdWxhdGVkICkge1xyXG5cdFx0XHRlLnN0b3BJbW1lZGlhdGVQcm9wYWdhdGlvbigpO1xyXG5cdFx0fVxyXG5cclxuXHRcdHRoaXMuc3RvcFByb3BhZ2F0aW9uKCk7XHJcblx0fVxyXG59O1xyXG5cclxuLy8gSW5jbHVkZXMgYWxsIGNvbW1vbiBldmVudCBwcm9wcyBpbmNsdWRpbmcgS2V5RXZlbnQgYW5kIE1vdXNlRXZlbnQgc3BlY2lmaWMgcHJvcHNcclxualF1ZXJ5LmVhY2goIHtcclxuXHRhbHRLZXk6IHRydWUsXHJcblx0YnViYmxlczogdHJ1ZSxcclxuXHRjYW5jZWxhYmxlOiB0cnVlLFxyXG5cdGNoYW5nZWRUb3VjaGVzOiB0cnVlLFxyXG5cdGN0cmxLZXk6IHRydWUsXHJcblx0ZGV0YWlsOiB0cnVlLFxyXG5cdGV2ZW50UGhhc2U6IHRydWUsXHJcblx0bWV0YUtleTogdHJ1ZSxcclxuXHRwYWdlWDogdHJ1ZSxcclxuXHRwYWdlWTogdHJ1ZSxcclxuXHRzaGlmdEtleTogdHJ1ZSxcclxuXHR2aWV3OiB0cnVlLFxyXG5cdFwiY2hhclwiOiB0cnVlLFxyXG5cdGNoYXJDb2RlOiB0cnVlLFxyXG5cdGtleTogdHJ1ZSxcclxuXHRrZXlDb2RlOiB0cnVlLFxyXG5cdGJ1dHRvbjogdHJ1ZSxcclxuXHRidXR0b25zOiB0cnVlLFxyXG5cdGNsaWVudFg6IHRydWUsXHJcblx0Y2xpZW50WTogdHJ1ZSxcclxuXHRvZmZzZXRYOiB0cnVlLFxyXG5cdG9mZnNldFk6IHRydWUsXHJcblx0cG9pbnRlcklkOiB0cnVlLFxyXG5cdHBvaW50ZXJUeXBlOiB0cnVlLFxyXG5cdHNjcmVlblg6IHRydWUsXHJcblx0c2NyZWVuWTogdHJ1ZSxcclxuXHR0YXJnZXRUb3VjaGVzOiB0cnVlLFxyXG5cdHRvRWxlbWVudDogdHJ1ZSxcclxuXHR0b3VjaGVzOiB0cnVlLFxyXG5cclxuXHR3aGljaDogZnVuY3Rpb24oIGV2ZW50ICkge1xyXG5cdFx0dmFyIGJ1dHRvbiA9IGV2ZW50LmJ1dHRvbjtcclxuXHJcblx0XHQvLyBBZGQgd2hpY2ggZm9yIGtleSBldmVudHNcclxuXHRcdGlmICggZXZlbnQud2hpY2ggPT0gbnVsbCAmJiBya2V5RXZlbnQudGVzdCggZXZlbnQudHlwZSApICkge1xyXG5cdFx0XHRyZXR1cm4gZXZlbnQuY2hhckNvZGUgIT0gbnVsbCA/IGV2ZW50LmNoYXJDb2RlIDogZXZlbnQua2V5Q29kZTtcclxuXHRcdH1cclxuXHJcblx0XHQvLyBBZGQgd2hpY2ggZm9yIGNsaWNrOiAxID09PSBsZWZ0OyAyID09PSBtaWRkbGU7IDMgPT09IHJpZ2h0XHJcblx0XHRpZiAoICFldmVudC53aGljaCAmJiBidXR0b24gIT09IHVuZGVmaW5lZCAmJiBybW91c2VFdmVudC50ZXN0KCBldmVudC50eXBlICkgKSB7XHJcblx0XHRcdGlmICggYnV0dG9uICYgMSApIHtcclxuXHRcdFx0XHRyZXR1cm4gMTtcclxuXHRcdFx0fVxyXG5cclxuXHRcdFx0aWYgKCBidXR0b24gJiAyICkge1xyXG5cdFx0XHRcdHJldHVybiAzO1xyXG5cdFx0XHR9XHJcblxyXG5cdFx0XHRpZiAoIGJ1dHRvbiAmIDQgKSB7XHJcblx0XHRcdFx0cmV0dXJuIDI7XHJcblx0XHRcdH1cclxuXHJcblx0XHRcdHJldHVybiAwO1xyXG5cdFx0fVxyXG5cclxuXHRcdHJldHVybiBldmVudC53aGljaDtcclxuXHR9XHJcbn0sIGpRdWVyeS5ldmVudC5hZGRQcm9wICk7XHJcblxyXG4vLyBDcmVhdGUgbW91c2VlbnRlci9sZWF2ZSBldmVudHMgdXNpbmcgbW91c2VvdmVyL291dCBhbmQgZXZlbnQtdGltZSBjaGVja3NcclxuLy8gc28gdGhhdCBldmVudCBkZWxlZ2F0aW9uIHdvcmtzIGluIGpRdWVyeS5cclxuLy8gRG8gdGhlIHNhbWUgZm9yIHBvaW50ZXJlbnRlci9wb2ludGVybGVhdmUgYW5kIHBvaW50ZXJvdmVyL3BvaW50ZXJvdXRcclxuLy9cclxuLy8gU3VwcG9ydDogU2FmYXJpIDcgb25seVxyXG4vLyBTYWZhcmkgc2VuZHMgbW91c2VlbnRlciB0b28gb2Z0ZW47IHNlZTpcclxuLy8gaHR0cHM6Ly9idWdzLmNocm9taXVtLm9yZy9wL2Nocm9taXVtL2lzc3Vlcy9kZXRhaWw/aWQ9NDcwMjU4XHJcbi8vIGZvciB0aGUgZGVzY3JpcHRpb24gb2YgdGhlIGJ1ZyAoaXQgZXhpc3RlZCBpbiBvbGRlciBDaHJvbWUgdmVyc2lvbnMgYXMgd2VsbCkuXHJcbmpRdWVyeS5lYWNoKCB7XHJcblx0bW91c2VlbnRlcjogXCJtb3VzZW92ZXJcIixcclxuXHRtb3VzZWxlYXZlOiBcIm1vdXNlb3V0XCIsXHJcblx0cG9pbnRlcmVudGVyOiBcInBvaW50ZXJvdmVyXCIsXHJcblx0cG9pbnRlcmxlYXZlOiBcInBvaW50ZXJvdXRcIlxyXG59LCBmdW5jdGlvbiggb3JpZywgZml4ICkge1xyXG5cdGpRdWVyeS5ldmVudC5zcGVjaWFsWyBvcmlnIF0gPSB7XHJcblx0XHRkZWxlZ2F0ZVR5cGU6IGZpeCxcclxuXHRcdGJpbmRUeXBlOiBmaXgsXHJcblxyXG5cdFx0aGFuZGxlOiBmdW5jdGlvbiggZXZlbnQgKSB7XHJcblx0XHRcdHZhciByZXQsXHJcblx0XHRcdFx0dGFyZ2V0ID0gdGhpcyxcclxuXHRcdFx0XHRyZWxhdGVkID0gZXZlbnQucmVsYXRlZFRhcmdldCxcclxuXHRcdFx0XHRoYW5kbGVPYmogPSBldmVudC5oYW5kbGVPYmo7XHJcblxyXG5cdFx0XHQvLyBGb3IgbW91c2VlbnRlci9sZWF2ZSBjYWxsIHRoZSBoYW5kbGVyIGlmIHJlbGF0ZWQgaXMgb3V0c2lkZSB0aGUgdGFyZ2V0LlxyXG5cdFx0XHQvLyBOQjogTm8gcmVsYXRlZFRhcmdldCBpZiB0aGUgbW91c2UgbGVmdC9lbnRlcmVkIHRoZSBicm93c2VyIHdpbmRvd1xyXG5cdFx0XHRpZiAoICFyZWxhdGVkIHx8ICggcmVsYXRlZCAhPT0gdGFyZ2V0ICYmICFqUXVlcnkuY29udGFpbnMoIHRhcmdldCwgcmVsYXRlZCApICkgKSB7XHJcblx0XHRcdFx0ZXZlbnQudHlwZSA9IGhhbmRsZU9iai5vcmlnVHlwZTtcclxuXHRcdFx0XHRyZXQgPSBoYW5kbGVPYmouaGFuZGxlci5hcHBseSggdGhpcywgYXJndW1lbnRzICk7XHJcblx0XHRcdFx0ZXZlbnQudHlwZSA9IGZpeDtcclxuXHRcdFx0fVxyXG5cdFx0XHRyZXR1cm4gcmV0O1xyXG5cdFx0fVxyXG5cdH07XHJcbn0gKTtcclxuXHJcbmpRdWVyeS5mbi5leHRlbmQoIHtcclxuXHJcblx0b246IGZ1bmN0aW9uKCB0eXBlcywgc2VsZWN0b3IsIGRhdGEsIGZuICkge1xyXG5cdFx0cmV0dXJuIG9uKCB0aGlzLCB0eXBlcywgc2VsZWN0b3IsIGRhdGEsIGZuICk7XHJcblx0fSxcclxuXHRvbmU6IGZ1bmN0aW9uKCB0eXBlcywgc2VsZWN0b3IsIGRhdGEsIGZuICkge1xyXG5cdFx0cmV0dXJuIG9uKCB0aGlzLCB0eXBlcywgc2VsZWN0b3IsIGRhdGEsIGZuLCAxICk7XHJcblx0fSxcclxuXHRvZmY6IGZ1bmN0aW9uKCB0eXBlcywgc2VsZWN0b3IsIGZuICkge1xyXG5cdFx0dmFyIGhhbmRsZU9iaiwgdHlwZTtcclxuXHRcdGlmICggdHlwZXMgJiYgdHlwZXMucHJldmVudERlZmF1bHQgJiYgdHlwZXMuaGFuZGxlT2JqICkge1xyXG5cclxuXHRcdFx0Ly8gKCBldmVudCApICBkaXNwYXRjaGVkIGpRdWVyeS5FdmVudFxyXG5cdFx0XHRoYW5kbGVPYmogPSB0eXBlcy5oYW5kbGVPYmo7XHJcblx0XHRcdGpRdWVyeSggdHlwZXMuZGVsZWdhdGVUYXJnZXQgKS5vZmYoXHJcblx0XHRcdFx0aGFuZGxlT2JqLm5hbWVzcGFjZSA/XHJcblx0XHRcdFx0XHRoYW5kbGVPYmoub3JpZ1R5cGUgKyBcIi5cIiArIGhhbmRsZU9iai5uYW1lc3BhY2UgOlxyXG5cdFx0XHRcdFx0aGFuZGxlT2JqLm9yaWdUeXBlLFxyXG5cdFx0XHRcdGhhbmRsZU9iai5zZWxlY3RvcixcclxuXHRcdFx0XHRoYW5kbGVPYmouaGFuZGxlclxyXG5cdFx0XHQpO1xyXG5cdFx0XHRyZXR1cm4gdGhpcztcclxuXHRcdH1cclxuXHRcdGlmICggdHlwZW9mIHR5cGVzID09PSBcIm9iamVjdFwiICkge1xyXG5cclxuXHRcdFx0Ly8gKCB0eXBlcy1vYmplY3QgWywgc2VsZWN0b3JdIClcclxuXHRcdFx0Zm9yICggdHlwZSBpbiB0eXBlcyApIHtcclxuXHRcdFx0XHR0aGlzLm9mZiggdHlwZSwgc2VsZWN0b3IsIHR5cGVzWyB0eXBlIF0gKTtcclxuXHRcdFx0fVxyXG5cdFx0XHRyZXR1cm4gdGhpcztcclxuXHRcdH1cclxuXHRcdGlmICggc2VsZWN0b3IgPT09IGZhbHNlIHx8IHR5cGVvZiBzZWxlY3RvciA9PT0gXCJmdW5jdGlvblwiICkge1xyXG5cclxuXHRcdFx0Ly8gKCB0eXBlcyBbLCBmbl0gKVxyXG5cdFx0XHRmbiA9IHNlbGVjdG9yO1xyXG5cdFx0XHRzZWxlY3RvciA9IHVuZGVmaW5lZDtcclxuXHRcdH1cclxuXHRcdGlmICggZm4gPT09IGZhbHNlICkge1xyXG5cdFx0XHRmbiA9IHJldHVybkZhbHNlO1xyXG5cdFx0fVxyXG5cdFx0cmV0dXJuIHRoaXMuZWFjaCggZnVuY3Rpb24oKSB7XHJcblx0XHRcdGpRdWVyeS5ldmVudC5yZW1vdmUoIHRoaXMsIHR5cGVzLCBmbiwgc2VsZWN0b3IgKTtcclxuXHRcdH0gKTtcclxuXHR9XHJcbn0gKTtcclxuXHJcblxyXG52YXJcclxuXHJcblx0LyogZXNsaW50LWRpc2FibGUgbWF4LWxlbiAqL1xyXG5cclxuXHQvLyBTZWUgaHR0cHM6Ly9naXRodWIuY29tL2VzbGludC9lc2xpbnQvaXNzdWVzLzMyMjlcclxuXHRyeGh0bWxUYWcgPSAvPCg/IWFyZWF8YnJ8Y29sfGVtYmVkfGhyfGltZ3xpbnB1dHxsaW5rfG1ldGF8cGFyYW0pKChbYS16XVteXFwvXFwwPlxceDIwXFx0XFxyXFxuXFxmXSopW14+XSopXFwvPi9naSxcclxuXHJcblx0LyogZXNsaW50LWVuYWJsZSAqL1xyXG5cclxuXHQvLyBTdXBwb3J0OiBJRSA8PTEwIC0gMTEsIEVkZ2UgMTIgLSAxMyBvbmx5XHJcblx0Ly8gSW4gSUUvRWRnZSB1c2luZyByZWdleCBncm91cHMgaGVyZSBjYXVzZXMgc2V2ZXJlIHNsb3dkb3ducy5cclxuXHQvLyBTZWUgaHR0cHM6Ly9jb25uZWN0Lm1pY3Jvc29mdC5jb20vSUUvZmVlZGJhY2svZGV0YWlscy8xNzM2NTEyL1xyXG5cdHJub0lubmVyaHRtbCA9IC88c2NyaXB0fDxzdHlsZXw8bGluay9pLFxyXG5cclxuXHQvLyBjaGVja2VkPVwiY2hlY2tlZFwiIG9yIGNoZWNrZWRcclxuXHRyY2hlY2tlZCA9IC9jaGVja2VkXFxzKig/OltePV18PVxccyouY2hlY2tlZC4pL2ksXHJcblx0cmNsZWFuU2NyaXB0ID0gL15cXHMqPCEoPzpcXFtDREFUQVxcW3wtLSl8KD86XFxdXFxdfC0tKT5cXHMqJC9nO1xyXG5cclxuLy8gUHJlZmVyIGEgdGJvZHkgb3ZlciBpdHMgcGFyZW50IHRhYmxlIGZvciBjb250YWluaW5nIG5ldyByb3dzXHJcbmZ1bmN0aW9uIG1hbmlwdWxhdGlvblRhcmdldCggZWxlbSwgY29udGVudCApIHtcclxuXHRpZiAoIG5vZGVOYW1lKCBlbGVtLCBcInRhYmxlXCIgKSAmJlxyXG5cdFx0bm9kZU5hbWUoIGNvbnRlbnQubm9kZVR5cGUgIT09IDExID8gY29udGVudCA6IGNvbnRlbnQuZmlyc3RDaGlsZCwgXCJ0clwiICkgKSB7XHJcblxyXG5cdFx0cmV0dXJuIGpRdWVyeSggZWxlbSApLmNoaWxkcmVuKCBcInRib2R5XCIgKVsgMCBdIHx8IGVsZW07XHJcblx0fVxyXG5cclxuXHRyZXR1cm4gZWxlbTtcclxufVxyXG5cclxuLy8gUmVwbGFjZS9yZXN0b3JlIHRoZSB0eXBlIGF0dHJpYnV0ZSBvZiBzY3JpcHQgZWxlbWVudHMgZm9yIHNhZmUgRE9NIG1hbmlwdWxhdGlvblxyXG5mdW5jdGlvbiBkaXNhYmxlU2NyaXB0KCBlbGVtICkge1xyXG5cdGVsZW0udHlwZSA9ICggZWxlbS5nZXRBdHRyaWJ1dGUoIFwidHlwZVwiICkgIT09IG51bGwgKSArIFwiL1wiICsgZWxlbS50eXBlO1xyXG5cdHJldHVybiBlbGVtO1xyXG59XHJcbmZ1bmN0aW9uIHJlc3RvcmVTY3JpcHQoIGVsZW0gKSB7XHJcblx0aWYgKCAoIGVsZW0udHlwZSB8fCBcIlwiICkuc2xpY2UoIDAsIDUgKSA9PT0gXCJ0cnVlL1wiICkge1xyXG5cdFx0ZWxlbS50eXBlID0gZWxlbS50eXBlLnNsaWNlKCA1ICk7XHJcblx0fSBlbHNlIHtcclxuXHRcdGVsZW0ucmVtb3ZlQXR0cmlidXRlKCBcInR5cGVcIiApO1xyXG5cdH1cclxuXHJcblx0cmV0dXJuIGVsZW07XHJcbn1cclxuXHJcbmZ1bmN0aW9uIGNsb25lQ29weUV2ZW50KCBzcmMsIGRlc3QgKSB7XHJcblx0dmFyIGksIGwsIHR5cGUsIHBkYXRhT2xkLCBwZGF0YUN1ciwgdWRhdGFPbGQsIHVkYXRhQ3VyLCBldmVudHM7XHJcblxyXG5cdGlmICggZGVzdC5ub2RlVHlwZSAhPT0gMSApIHtcclxuXHRcdHJldHVybjtcclxuXHR9XHJcblxyXG5cdC8vIDEuIENvcHkgcHJpdmF0ZSBkYXRhOiBldmVudHMsIGhhbmRsZXJzLCBldGMuXHJcblx0aWYgKCBkYXRhUHJpdi5oYXNEYXRhKCBzcmMgKSApIHtcclxuXHRcdHBkYXRhT2xkID0gZGF0YVByaXYuYWNjZXNzKCBzcmMgKTtcclxuXHRcdHBkYXRhQ3VyID0gZGF0YVByaXYuc2V0KCBkZXN0LCBwZGF0YU9sZCApO1xyXG5cdFx0ZXZlbnRzID0gcGRhdGFPbGQuZXZlbnRzO1xyXG5cclxuXHRcdGlmICggZXZlbnRzICkge1xyXG5cdFx0XHRkZWxldGUgcGRhdGFDdXIuaGFuZGxlO1xyXG5cdFx0XHRwZGF0YUN1ci5ldmVudHMgPSB7fTtcclxuXHJcblx0XHRcdGZvciAoIHR5cGUgaW4gZXZlbnRzICkge1xyXG5cdFx0XHRcdGZvciAoIGkgPSAwLCBsID0gZXZlbnRzWyB0eXBlIF0ubGVuZ3RoOyBpIDwgbDsgaSsrICkge1xyXG5cdFx0XHRcdFx0alF1ZXJ5LmV2ZW50LmFkZCggZGVzdCwgdHlwZSwgZXZlbnRzWyB0eXBlIF1bIGkgXSApO1xyXG5cdFx0XHRcdH1cclxuXHRcdFx0fVxyXG5cdFx0fVxyXG5cdH1cclxuXHJcblx0Ly8gMi4gQ29weSB1c2VyIGRhdGFcclxuXHRpZiAoIGRhdGFVc2VyLmhhc0RhdGEoIHNyYyApICkge1xyXG5cdFx0dWRhdGFPbGQgPSBkYXRhVXNlci5hY2Nlc3MoIHNyYyApO1xyXG5cdFx0dWRhdGFDdXIgPSBqUXVlcnkuZXh0ZW5kKCB7fSwgdWRhdGFPbGQgKTtcclxuXHJcblx0XHRkYXRhVXNlci5zZXQoIGRlc3QsIHVkYXRhQ3VyICk7XHJcblx0fVxyXG59XHJcblxyXG4vLyBGaXggSUUgYnVncywgc2VlIHN1cHBvcnQgdGVzdHNcclxuZnVuY3Rpb24gZml4SW5wdXQoIHNyYywgZGVzdCApIHtcclxuXHR2YXIgbm9kZU5hbWUgPSBkZXN0Lm5vZGVOYW1lLnRvTG93ZXJDYXNlKCk7XHJcblxyXG5cdC8vIEZhaWxzIHRvIHBlcnNpc3QgdGhlIGNoZWNrZWQgc3RhdGUgb2YgYSBjbG9uZWQgY2hlY2tib3ggb3IgcmFkaW8gYnV0dG9uLlxyXG5cdGlmICggbm9kZU5hbWUgPT09IFwiaW5wdXRcIiAmJiByY2hlY2thYmxlVHlwZS50ZXN0KCBzcmMudHlwZSApICkge1xyXG5cdFx0ZGVzdC5jaGVja2VkID0gc3JjLmNoZWNrZWQ7XHJcblxyXG5cdC8vIEZhaWxzIHRvIHJldHVybiB0aGUgc2VsZWN0ZWQgb3B0aW9uIHRvIHRoZSBkZWZhdWx0IHNlbGVjdGVkIHN0YXRlIHdoZW4gY2xvbmluZyBvcHRpb25zXHJcblx0fSBlbHNlIGlmICggbm9kZU5hbWUgPT09IFwiaW5wdXRcIiB8fCBub2RlTmFtZSA9PT0gXCJ0ZXh0YXJlYVwiICkge1xyXG5cdFx0ZGVzdC5kZWZhdWx0VmFsdWUgPSBzcmMuZGVmYXVsdFZhbHVlO1xyXG5cdH1cclxufVxyXG5cclxuZnVuY3Rpb24gZG9tTWFuaXAoIGNvbGxlY3Rpb24sIGFyZ3MsIGNhbGxiYWNrLCBpZ25vcmVkICkge1xyXG5cclxuXHQvLyBGbGF0dGVuIGFueSBuZXN0ZWQgYXJyYXlzXHJcblx0YXJncyA9IGNvbmNhdC5hcHBseSggW10sIGFyZ3MgKTtcclxuXHJcblx0dmFyIGZyYWdtZW50LCBmaXJzdCwgc2NyaXB0cywgaGFzU2NyaXB0cywgbm9kZSwgZG9jLFxyXG5cdFx0aSA9IDAsXHJcblx0XHRsID0gY29sbGVjdGlvbi5sZW5ndGgsXHJcblx0XHRpTm9DbG9uZSA9IGwgLSAxLFxyXG5cdFx0dmFsdWUgPSBhcmdzWyAwIF0sXHJcblx0XHR2YWx1ZUlzRnVuY3Rpb24gPSBpc0Z1bmN0aW9uKCB2YWx1ZSApO1xyXG5cclxuXHQvLyBXZSBjYW4ndCBjbG9uZU5vZGUgZnJhZ21lbnRzIHRoYXQgY29udGFpbiBjaGVja2VkLCBpbiBXZWJLaXRcclxuXHRpZiAoIHZhbHVlSXNGdW5jdGlvbiB8fFxyXG5cdFx0XHQoIGwgPiAxICYmIHR5cGVvZiB2YWx1ZSA9PT0gXCJzdHJpbmdcIiAmJlxyXG5cdFx0XHRcdCFzdXBwb3J0LmNoZWNrQ2xvbmUgJiYgcmNoZWNrZWQudGVzdCggdmFsdWUgKSApICkge1xyXG5cdFx0cmV0dXJuIGNvbGxlY3Rpb24uZWFjaCggZnVuY3Rpb24oIGluZGV4ICkge1xyXG5cdFx0XHR2YXIgc2VsZiA9IGNvbGxlY3Rpb24uZXEoIGluZGV4ICk7XHJcblx0XHRcdGlmICggdmFsdWVJc0Z1bmN0aW9uICkge1xyXG5cdFx0XHRcdGFyZ3NbIDAgXSA9IHZhbHVlLmNhbGwoIHRoaXMsIGluZGV4LCBzZWxmLmh0bWwoKSApO1xyXG5cdFx0XHR9XHJcblx0XHRcdGRvbU1hbmlwKCBzZWxmLCBhcmdzLCBjYWxsYmFjaywgaWdub3JlZCApO1xyXG5cdFx0fSApO1xyXG5cdH1cclxuXHJcblx0aWYgKCBsICkge1xyXG5cdFx0ZnJhZ21lbnQgPSBidWlsZEZyYWdtZW50KCBhcmdzLCBjb2xsZWN0aW9uWyAwIF0ub3duZXJEb2N1bWVudCwgZmFsc2UsIGNvbGxlY3Rpb24sIGlnbm9yZWQgKTtcclxuXHRcdGZpcnN0ID0gZnJhZ21lbnQuZmlyc3RDaGlsZDtcclxuXHJcblx0XHRpZiAoIGZyYWdtZW50LmNoaWxkTm9kZXMubGVuZ3RoID09PSAxICkge1xyXG5cdFx0XHRmcmFnbWVudCA9IGZpcnN0O1xyXG5cdFx0fVxyXG5cclxuXHRcdC8vIFJlcXVpcmUgZWl0aGVyIG5ldyBjb250ZW50IG9yIGFuIGludGVyZXN0IGluIGlnbm9yZWQgZWxlbWVudHMgdG8gaW52b2tlIHRoZSBjYWxsYmFja1xyXG5cdFx0aWYgKCBmaXJzdCB8fCBpZ25vcmVkICkge1xyXG5cdFx0XHRzY3JpcHRzID0galF1ZXJ5Lm1hcCggZ2V0QWxsKCBmcmFnbWVudCwgXCJzY3JpcHRcIiApLCBkaXNhYmxlU2NyaXB0ICk7XHJcblx0XHRcdGhhc1NjcmlwdHMgPSBzY3JpcHRzLmxlbmd0aDtcclxuXHJcblx0XHRcdC8vIFVzZSB0aGUgb3JpZ2luYWwgZnJhZ21lbnQgZm9yIHRoZSBsYXN0IGl0ZW1cclxuXHRcdFx0Ly8gaW5zdGVhZCBvZiB0aGUgZmlyc3QgYmVjYXVzZSBpdCBjYW4gZW5kIHVwXHJcblx0XHRcdC8vIGJlaW5nIGVtcHRpZWQgaW5jb3JyZWN0bHkgaW4gY2VydGFpbiBzaXR1YXRpb25zICgjODA3MCkuXHJcblx0XHRcdGZvciAoIDsgaSA8IGw7IGkrKyApIHtcclxuXHRcdFx0XHRub2RlID0gZnJhZ21lbnQ7XHJcblxyXG5cdFx0XHRcdGlmICggaSAhPT0gaU5vQ2xvbmUgKSB7XHJcblx0XHRcdFx0XHRub2RlID0galF1ZXJ5LmNsb25lKCBub2RlLCB0cnVlLCB0cnVlICk7XHJcblxyXG5cdFx0XHRcdFx0Ly8gS2VlcCByZWZlcmVuY2VzIHRvIGNsb25lZCBzY3JpcHRzIGZvciBsYXRlciByZXN0b3JhdGlvblxyXG5cdFx0XHRcdFx0aWYgKCBoYXNTY3JpcHRzICkge1xyXG5cclxuXHRcdFx0XHRcdFx0Ly8gU3VwcG9ydDogQW5kcm9pZCA8PTQuMCBvbmx5LCBQaGFudG9tSlMgMSBvbmx5XHJcblx0XHRcdFx0XHRcdC8vIHB1c2guYXBwbHkoXywgYXJyYXlsaWtlKSB0aHJvd3Mgb24gYW5jaWVudCBXZWJLaXRcclxuXHRcdFx0XHRcdFx0alF1ZXJ5Lm1lcmdlKCBzY3JpcHRzLCBnZXRBbGwoIG5vZGUsIFwic2NyaXB0XCIgKSApO1xyXG5cdFx0XHRcdFx0fVxyXG5cdFx0XHRcdH1cclxuXHJcblx0XHRcdFx0Y2FsbGJhY2suY2FsbCggY29sbGVjdGlvblsgaSBdLCBub2RlLCBpICk7XHJcblx0XHRcdH1cclxuXHJcblx0XHRcdGlmICggaGFzU2NyaXB0cyApIHtcclxuXHRcdFx0XHRkb2MgPSBzY3JpcHRzWyBzY3JpcHRzLmxlbmd0aCAtIDEgXS5vd25lckRvY3VtZW50O1xyXG5cclxuXHRcdFx0XHQvLyBSZWVuYWJsZSBzY3JpcHRzXHJcblx0XHRcdFx0alF1ZXJ5Lm1hcCggc2NyaXB0cywgcmVzdG9yZVNjcmlwdCApO1xyXG5cclxuXHRcdFx0XHQvLyBFdmFsdWF0ZSBleGVjdXRhYmxlIHNjcmlwdHMgb24gZmlyc3QgZG9jdW1lbnQgaW5zZXJ0aW9uXHJcblx0XHRcdFx0Zm9yICggaSA9IDA7IGkgPCBoYXNTY3JpcHRzOyBpKysgKSB7XHJcblx0XHRcdFx0XHRub2RlID0gc2NyaXB0c1sgaSBdO1xyXG5cdFx0XHRcdFx0aWYgKCByc2NyaXB0VHlwZS50ZXN0KCBub2RlLnR5cGUgfHwgXCJcIiApICYmXHJcblx0XHRcdFx0XHRcdCFkYXRhUHJpdi5hY2Nlc3MoIG5vZGUsIFwiZ2xvYmFsRXZhbFwiICkgJiZcclxuXHRcdFx0XHRcdFx0alF1ZXJ5LmNvbnRhaW5zKCBkb2MsIG5vZGUgKSApIHtcclxuXHJcblx0XHRcdFx0XHRcdGlmICggbm9kZS5zcmMgJiYgKCBub2RlLnR5cGUgfHwgXCJcIiApLnRvTG93ZXJDYXNlKCkgICE9PSBcIm1vZHVsZVwiICkge1xyXG5cclxuXHRcdFx0XHRcdFx0XHQvLyBPcHRpb25hbCBBSkFYIGRlcGVuZGVuY3ksIGJ1dCB3b24ndCBydW4gc2NyaXB0cyBpZiBub3QgcHJlc2VudFxyXG5cdFx0XHRcdFx0XHRcdGlmICggalF1ZXJ5Ll9ldmFsVXJsICkge1xyXG5cdFx0XHRcdFx0XHRcdFx0alF1ZXJ5Ll9ldmFsVXJsKCBub2RlLnNyYyApO1xyXG5cdFx0XHRcdFx0XHRcdH1cclxuXHRcdFx0XHRcdFx0fSBlbHNlIHtcclxuXHRcdFx0XHRcdFx0XHRET01FdmFsKCBub2RlLnRleHRDb250ZW50LnJlcGxhY2UoIHJjbGVhblNjcmlwdCwgXCJcIiApLCBkb2MsIG5vZGUgKTtcclxuXHRcdFx0XHRcdFx0fVxyXG5cdFx0XHRcdFx0fVxyXG5cdFx0XHRcdH1cclxuXHRcdFx0fVxyXG5cdFx0fVxyXG5cdH1cclxuXHJcblx0cmV0dXJuIGNvbGxlY3Rpb247XHJcbn1cclxuXHJcbmZ1bmN0aW9uIHJlbW92ZSggZWxlbSwgc2VsZWN0b3IsIGtlZXBEYXRhICkge1xyXG5cdHZhciBub2RlLFxyXG5cdFx0bm9kZXMgPSBzZWxlY3RvciA/IGpRdWVyeS5maWx0ZXIoIHNlbGVjdG9yLCBlbGVtICkgOiBlbGVtLFxyXG5cdFx0aSA9IDA7XHJcblxyXG5cdGZvciAoIDsgKCBub2RlID0gbm9kZXNbIGkgXSApICE9IG51bGw7IGkrKyApIHtcclxuXHRcdGlmICggIWtlZXBEYXRhICYmIG5vZGUubm9kZVR5cGUgPT09IDEgKSB7XHJcblx0XHRcdGpRdWVyeS5jbGVhbkRhdGEoIGdldEFsbCggbm9kZSApICk7XHJcblx0XHR9XHJcblxyXG5cdFx0aWYgKCBub2RlLnBhcmVudE5vZGUgKSB7XHJcblx0XHRcdGlmICgga2VlcERhdGEgJiYgalF1ZXJ5LmNvbnRhaW5zKCBub2RlLm93bmVyRG9jdW1lbnQsIG5vZGUgKSApIHtcclxuXHRcdFx0XHRzZXRHbG9iYWxFdmFsKCBnZXRBbGwoIG5vZGUsIFwic2NyaXB0XCIgKSApO1xyXG5cdFx0XHR9XHJcblx0XHRcdG5vZGUucGFyZW50Tm9kZS5yZW1vdmVDaGlsZCggbm9kZSApO1xyXG5cdFx0fVxyXG5cdH1cclxuXHJcblx0cmV0dXJuIGVsZW07XHJcbn1cclxuXHJcbmpRdWVyeS5leHRlbmQoIHtcclxuXHRodG1sUHJlZmlsdGVyOiBmdW5jdGlvbiggaHRtbCApIHtcclxuXHRcdHJldHVybiBodG1sLnJlcGxhY2UoIHJ4aHRtbFRhZywgXCI8JDE+PC8kMj5cIiApO1xyXG5cdH0sXHJcblxyXG5cdGNsb25lOiBmdW5jdGlvbiggZWxlbSwgZGF0YUFuZEV2ZW50cywgZGVlcERhdGFBbmRFdmVudHMgKSB7XHJcblx0XHR2YXIgaSwgbCwgc3JjRWxlbWVudHMsIGRlc3RFbGVtZW50cyxcclxuXHRcdFx0Y2xvbmUgPSBlbGVtLmNsb25lTm9kZSggdHJ1ZSApLFxyXG5cdFx0XHRpblBhZ2UgPSBqUXVlcnkuY29udGFpbnMoIGVsZW0ub3duZXJEb2N1bWVudCwgZWxlbSApO1xyXG5cclxuXHRcdC8vIEZpeCBJRSBjbG9uaW5nIGlzc3Vlc1xyXG5cdFx0aWYgKCAhc3VwcG9ydC5ub0Nsb25lQ2hlY2tlZCAmJiAoIGVsZW0ubm9kZVR5cGUgPT09IDEgfHwgZWxlbS5ub2RlVHlwZSA9PT0gMTEgKSAmJlxyXG5cdFx0XHRcdCFqUXVlcnkuaXNYTUxEb2MoIGVsZW0gKSApIHtcclxuXHJcblx0XHRcdC8vIFdlIGVzY2hldyBTaXp6bGUgaGVyZSBmb3IgcGVyZm9ybWFuY2UgcmVhc29uczogaHR0cHM6Ly9qc3BlcmYuY29tL2dldGFsbC12cy1zaXp6bGUvMlxyXG5cdFx0XHRkZXN0RWxlbWVudHMgPSBnZXRBbGwoIGNsb25lICk7XHJcblx0XHRcdHNyY0VsZW1lbnRzID0gZ2V0QWxsKCBlbGVtICk7XHJcblxyXG5cdFx0XHRmb3IgKCBpID0gMCwgbCA9IHNyY0VsZW1lbnRzLmxlbmd0aDsgaSA8IGw7IGkrKyApIHtcclxuXHRcdFx0XHRmaXhJbnB1dCggc3JjRWxlbWVudHNbIGkgXSwgZGVzdEVsZW1lbnRzWyBpIF0gKTtcclxuXHRcdFx0fVxyXG5cdFx0fVxyXG5cclxuXHRcdC8vIENvcHkgdGhlIGV2ZW50cyBmcm9tIHRoZSBvcmlnaW5hbCB0byB0aGUgY2xvbmVcclxuXHRcdGlmICggZGF0YUFuZEV2ZW50cyApIHtcclxuXHRcdFx0aWYgKCBkZWVwRGF0YUFuZEV2ZW50cyApIHtcclxuXHRcdFx0XHRzcmNFbGVtZW50cyA9IHNyY0VsZW1lbnRzIHx8IGdldEFsbCggZWxlbSApO1xyXG5cdFx0XHRcdGRlc3RFbGVtZW50cyA9IGRlc3RFbGVtZW50cyB8fCBnZXRBbGwoIGNsb25lICk7XHJcblxyXG5cdFx0XHRcdGZvciAoIGkgPSAwLCBsID0gc3JjRWxlbWVudHMubGVuZ3RoOyBpIDwgbDsgaSsrICkge1xyXG5cdFx0XHRcdFx0Y2xvbmVDb3B5RXZlbnQoIHNyY0VsZW1lbnRzWyBpIF0sIGRlc3RFbGVtZW50c1sgaSBdICk7XHJcblx0XHRcdFx0fVxyXG5cdFx0XHR9IGVsc2Uge1xyXG5cdFx0XHRcdGNsb25lQ29weUV2ZW50KCBlbGVtLCBjbG9uZSApO1xyXG5cdFx0XHR9XHJcblx0XHR9XHJcblxyXG5cdFx0Ly8gUHJlc2VydmUgc2NyaXB0IGV2YWx1YXRpb24gaGlzdG9yeVxyXG5cdFx0ZGVzdEVsZW1lbnRzID0gZ2V0QWxsKCBjbG9uZSwgXCJzY3JpcHRcIiApO1xyXG5cdFx0aWYgKCBkZXN0RWxlbWVudHMubGVuZ3RoID4gMCApIHtcclxuXHRcdFx0c2V0R2xvYmFsRXZhbCggZGVzdEVsZW1lbnRzLCAhaW5QYWdlICYmIGdldEFsbCggZWxlbSwgXCJzY3JpcHRcIiApICk7XHJcblx0XHR9XHJcblxyXG5cdFx0Ly8gUmV0dXJuIHRoZSBjbG9uZWQgc2V0XHJcblx0XHRyZXR1cm4gY2xvbmU7XHJcblx0fSxcclxuXHJcblx0Y2xlYW5EYXRhOiBmdW5jdGlvbiggZWxlbXMgKSB7XHJcblx0XHR2YXIgZGF0YSwgZWxlbSwgdHlwZSxcclxuXHRcdFx0c3BlY2lhbCA9IGpRdWVyeS5ldmVudC5zcGVjaWFsLFxyXG5cdFx0XHRpID0gMDtcclxuXHJcblx0XHRmb3IgKCA7ICggZWxlbSA9IGVsZW1zWyBpIF0gKSAhPT0gdW5kZWZpbmVkOyBpKysgKSB7XHJcblx0XHRcdGlmICggYWNjZXB0RGF0YSggZWxlbSApICkge1xyXG5cdFx0XHRcdGlmICggKCBkYXRhID0gZWxlbVsgZGF0YVByaXYuZXhwYW5kbyBdICkgKSB7XHJcblx0XHRcdFx0XHRpZiAoIGRhdGEuZXZlbnRzICkge1xyXG5cdFx0XHRcdFx0XHRmb3IgKCB0eXBlIGluIGRhdGEuZXZlbnRzICkge1xyXG5cdFx0XHRcdFx0XHRcdGlmICggc3BlY2lhbFsgdHlwZSBdICkge1xyXG5cdFx0XHRcdFx0XHRcdFx0alF1ZXJ5LmV2ZW50LnJlbW92ZSggZWxlbSwgdHlwZSApO1xyXG5cclxuXHRcdFx0XHRcdFx0XHQvLyBUaGlzIGlzIGEgc2hvcnRjdXQgdG8gYXZvaWQgalF1ZXJ5LmV2ZW50LnJlbW92ZSdzIG92ZXJoZWFkXHJcblx0XHRcdFx0XHRcdFx0fSBlbHNlIHtcclxuXHRcdFx0XHRcdFx0XHRcdGpRdWVyeS5yZW1vdmVFdmVudCggZWxlbSwgdHlwZSwgZGF0YS5oYW5kbGUgKTtcclxuXHRcdFx0XHRcdFx0XHR9XHJcblx0XHRcdFx0XHRcdH1cclxuXHRcdFx0XHRcdH1cclxuXHJcblx0XHRcdFx0XHQvLyBTdXBwb3J0OiBDaHJvbWUgPD0zNSAtIDQ1K1xyXG5cdFx0XHRcdFx0Ly8gQXNzaWduIHVuZGVmaW5lZCBpbnN0ZWFkIG9mIHVzaW5nIGRlbGV0ZSwgc2VlIERhdGEjcmVtb3ZlXHJcblx0XHRcdFx0XHRlbGVtWyBkYXRhUHJpdi5leHBhbmRvIF0gPSB1bmRlZmluZWQ7XHJcblx0XHRcdFx0fVxyXG5cdFx0XHRcdGlmICggZWxlbVsgZGF0YVVzZXIuZXhwYW5kbyBdICkge1xyXG5cclxuXHRcdFx0XHRcdC8vIFN1cHBvcnQ6IENocm9tZSA8PTM1IC0gNDUrXHJcblx0XHRcdFx0XHQvLyBBc3NpZ24gdW5kZWZpbmVkIGluc3RlYWQgb2YgdXNpbmcgZGVsZXRlLCBzZWUgRGF0YSNyZW1vdmVcclxuXHRcdFx0XHRcdGVsZW1bIGRhdGFVc2VyLmV4cGFuZG8gXSA9IHVuZGVmaW5lZDtcclxuXHRcdFx0XHR9XHJcblx0XHRcdH1cclxuXHRcdH1cclxuXHR9XHJcbn0gKTtcclxuXHJcbmpRdWVyeS5mbi5leHRlbmQoIHtcclxuXHRkZXRhY2g6IGZ1bmN0aW9uKCBzZWxlY3RvciApIHtcclxuXHRcdHJldHVybiByZW1vdmUoIHRoaXMsIHNlbGVjdG9yLCB0cnVlICk7XHJcblx0fSxcclxuXHJcblx0cmVtb3ZlOiBmdW5jdGlvbiggc2VsZWN0b3IgKSB7XHJcblx0XHRyZXR1cm4gcmVtb3ZlKCB0aGlzLCBzZWxlY3RvciApO1xyXG5cdH0sXHJcblxyXG5cdHRleHQ6IGZ1bmN0aW9uKCB2YWx1ZSApIHtcclxuXHRcdHJldHVybiBhY2Nlc3MoIHRoaXMsIGZ1bmN0aW9uKCB2YWx1ZSApIHtcclxuXHRcdFx0cmV0dXJuIHZhbHVlID09PSB1bmRlZmluZWQgP1xyXG5cdFx0XHRcdGpRdWVyeS50ZXh0KCB0aGlzICkgOlxyXG5cdFx0XHRcdHRoaXMuZW1wdHkoKS5lYWNoKCBmdW5jdGlvbigpIHtcclxuXHRcdFx0XHRcdGlmICggdGhpcy5ub2RlVHlwZSA9PT0gMSB8fCB0aGlzLm5vZGVUeXBlID09PSAxMSB8fCB0aGlzLm5vZGVUeXBlID09PSA5ICkge1xyXG5cdFx0XHRcdFx0XHR0aGlzLnRleHRDb250ZW50ID0gdmFsdWU7XHJcblx0XHRcdFx0XHR9XHJcblx0XHRcdFx0fSApO1xyXG5cdFx0fSwgbnVsbCwgdmFsdWUsIGFyZ3VtZW50cy5sZW5ndGggKTtcclxuXHR9LFxyXG5cclxuXHRhcHBlbmQ6IGZ1bmN0aW9uKCkge1xyXG5cdFx0cmV0dXJuIGRvbU1hbmlwKCB0aGlzLCBhcmd1bWVudHMsIGZ1bmN0aW9uKCBlbGVtICkge1xyXG5cdFx0XHRpZiAoIHRoaXMubm9kZVR5cGUgPT09IDEgfHwgdGhpcy5ub2RlVHlwZSA9PT0gMTEgfHwgdGhpcy5ub2RlVHlwZSA9PT0gOSApIHtcclxuXHRcdFx0XHR2YXIgdGFyZ2V0ID0gbWFuaXB1bGF0aW9uVGFyZ2V0KCB0aGlzLCBlbGVtICk7XHJcblx0XHRcdFx0dGFyZ2V0LmFwcGVuZENoaWxkKCBlbGVtICk7XHJcblx0XHRcdH1cclxuXHRcdH0gKTtcclxuXHR9LFxyXG5cclxuXHRwcmVwZW5kOiBmdW5jdGlvbigpIHtcclxuXHRcdHJldHVybiBkb21NYW5pcCggdGhpcywgYXJndW1lbnRzLCBmdW5jdGlvbiggZWxlbSApIHtcclxuXHRcdFx0aWYgKCB0aGlzLm5vZGVUeXBlID09PSAxIHx8IHRoaXMubm9kZVR5cGUgPT09IDExIHx8IHRoaXMubm9kZVR5cGUgPT09IDkgKSB7XHJcblx0XHRcdFx0dmFyIHRhcmdldCA9IG1hbmlwdWxhdGlvblRhcmdldCggdGhpcywgZWxlbSApO1xyXG5cdFx0XHRcdHRhcmdldC5pbnNlcnRCZWZvcmUoIGVsZW0sIHRhcmdldC5maXJzdENoaWxkICk7XHJcblx0XHRcdH1cclxuXHRcdH0gKTtcclxuXHR9LFxyXG5cclxuXHRiZWZvcmU6IGZ1bmN0aW9uKCkge1xyXG5cdFx0cmV0dXJuIGRvbU1hbmlwKCB0aGlzLCBhcmd1bWVudHMsIGZ1bmN0aW9uKCBlbGVtICkge1xyXG5cdFx0XHRpZiAoIHRoaXMucGFyZW50Tm9kZSApIHtcclxuXHRcdFx0XHR0aGlzLnBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKCBlbGVtLCB0aGlzICk7XHJcblx0XHRcdH1cclxuXHRcdH0gKTtcclxuXHR9LFxyXG5cclxuXHRhZnRlcjogZnVuY3Rpb24oKSB7XHJcblx0XHRyZXR1cm4gZG9tTWFuaXAoIHRoaXMsIGFyZ3VtZW50cywgZnVuY3Rpb24oIGVsZW0gKSB7XHJcblx0XHRcdGlmICggdGhpcy5wYXJlbnROb2RlICkge1xyXG5cdFx0XHRcdHRoaXMucGFyZW50Tm9kZS5pbnNlcnRCZWZvcmUoIGVsZW0sIHRoaXMubmV4dFNpYmxpbmcgKTtcclxuXHRcdFx0fVxyXG5cdFx0fSApO1xyXG5cdH0sXHJcblxyXG5cdGVtcHR5OiBmdW5jdGlvbigpIHtcclxuXHRcdHZhciBlbGVtLFxyXG5cdFx0XHRpID0gMDtcclxuXHJcblx0XHRmb3IgKCA7ICggZWxlbSA9IHRoaXNbIGkgXSApICE9IG51bGw7IGkrKyApIHtcclxuXHRcdFx0aWYgKCBlbGVtLm5vZGVUeXBlID09PSAxICkge1xyXG5cclxuXHRcdFx0XHQvLyBQcmV2ZW50IG1lbW9yeSBsZWFrc1xyXG5cdFx0XHRcdGpRdWVyeS5jbGVhbkRhdGEoIGdldEFsbCggZWxlbSwgZmFsc2UgKSApO1xyXG5cclxuXHRcdFx0XHQvLyBSZW1vdmUgYW55IHJlbWFpbmluZyBub2Rlc1xyXG5cdFx0XHRcdGVsZW0udGV4dENvbnRlbnQgPSBcIlwiO1xyXG5cdFx0XHR9XHJcblx0XHR9XHJcblxyXG5cdFx0cmV0dXJuIHRoaXM7XHJcblx0fSxcclxuXHJcblx0Y2xvbmU6IGZ1bmN0aW9uKCBkYXRhQW5kRXZlbnRzLCBkZWVwRGF0YUFuZEV2ZW50cyApIHtcclxuXHRcdGRhdGFBbmRFdmVudHMgPSBkYXRhQW5kRXZlbnRzID09IG51bGwgPyBmYWxzZSA6IGRhdGFBbmRFdmVudHM7XHJcblx0XHRkZWVwRGF0YUFuZEV2ZW50cyA9IGRlZXBEYXRhQW5kRXZlbnRzID09IG51bGwgPyBkYXRhQW5kRXZlbnRzIDogZGVlcERhdGFBbmRFdmVudHM7XHJcblxyXG5cdFx0cmV0dXJuIHRoaXMubWFwKCBmdW5jdGlvbigpIHtcclxuXHRcdFx0cmV0dXJuIGpRdWVyeS5jbG9uZSggdGhpcywgZGF0YUFuZEV2ZW50cywgZGVlcERhdGFBbmRFdmVudHMgKTtcclxuXHRcdH0gKTtcclxuXHR9LFxyXG5cclxuXHRodG1sOiBmdW5jdGlvbiggdmFsdWUgKSB7XHJcblx0XHRyZXR1cm4gYWNjZXNzKCB0aGlzLCBmdW5jdGlvbiggdmFsdWUgKSB7XHJcblx0XHRcdHZhciBlbGVtID0gdGhpc1sgMCBdIHx8IHt9LFxyXG5cdFx0XHRcdGkgPSAwLFxyXG5cdFx0XHRcdGwgPSB0aGlzLmxlbmd0aDtcclxuXHJcblx0XHRcdGlmICggdmFsdWUgPT09IHVuZGVmaW5lZCAmJiBlbGVtLm5vZGVUeXBlID09PSAxICkge1xyXG5cdFx0XHRcdHJldHVybiBlbGVtLmlubmVySFRNTDtcclxuXHRcdFx0fVxyXG5cclxuXHRcdFx0Ly8gU2VlIGlmIHdlIGNhbiB0YWtlIGEgc2hvcnRjdXQgYW5kIGp1c3QgdXNlIGlubmVySFRNTFxyXG5cdFx0XHRpZiAoIHR5cGVvZiB2YWx1ZSA9PT0gXCJzdHJpbmdcIiAmJiAhcm5vSW5uZXJodG1sLnRlc3QoIHZhbHVlICkgJiZcclxuXHRcdFx0XHQhd3JhcE1hcFsgKCBydGFnTmFtZS5leGVjKCB2YWx1ZSApIHx8IFsgXCJcIiwgXCJcIiBdIClbIDEgXS50b0xvd2VyQ2FzZSgpIF0gKSB7XHJcblxyXG5cdFx0XHRcdHZhbHVlID0galF1ZXJ5Lmh0bWxQcmVmaWx0ZXIoIHZhbHVlICk7XHJcblxyXG5cdFx0XHRcdHRyeSB7XHJcblx0XHRcdFx0XHRmb3IgKCA7IGkgPCBsOyBpKysgKSB7XHJcblx0XHRcdFx0XHRcdGVsZW0gPSB0aGlzWyBpIF0gfHwge307XHJcblxyXG5cdFx0XHRcdFx0XHQvLyBSZW1vdmUgZWxlbWVudCBub2RlcyBhbmQgcHJldmVudCBtZW1vcnkgbGVha3NcclxuXHRcdFx0XHRcdFx0aWYgKCBlbGVtLm5vZGVUeXBlID09PSAxICkge1xyXG5cdFx0XHRcdFx0XHRcdGpRdWVyeS5jbGVhbkRhdGEoIGdldEFsbCggZWxlbSwgZmFsc2UgKSApO1xyXG5cdFx0XHRcdFx0XHRcdGVsZW0uaW5uZXJIVE1MID0gdmFsdWU7XHJcblx0XHRcdFx0XHRcdH1cclxuXHRcdFx0XHRcdH1cclxuXHJcblx0XHRcdFx0XHRlbGVtID0gMDtcclxuXHJcblx0XHRcdFx0Ly8gSWYgdXNpbmcgaW5uZXJIVE1MIHRocm93cyBhbiBleGNlcHRpb24sIHVzZSB0aGUgZmFsbGJhY2sgbWV0aG9kXHJcblx0XHRcdFx0fSBjYXRjaCAoIGUgKSB7fVxyXG5cdFx0XHR9XHJcblxyXG5cdFx0XHRpZiAoIGVsZW0gKSB7XHJcblx0XHRcdFx0dGhpcy5lbXB0eSgpLmFwcGVuZCggdmFsdWUgKTtcclxuXHRcdFx0fVxyXG5cdFx0fSwgbnVsbCwgdmFsdWUsIGFyZ3VtZW50cy5sZW5ndGggKTtcclxuXHR9LFxyXG5cclxuXHRyZXBsYWNlV2l0aDogZnVuY3Rpb24oKSB7XHJcblx0XHR2YXIgaWdub3JlZCA9IFtdO1xyXG5cclxuXHRcdC8vIE1ha2UgdGhlIGNoYW5nZXMsIHJlcGxhY2luZyBlYWNoIG5vbi1pZ25vcmVkIGNvbnRleHQgZWxlbWVudCB3aXRoIHRoZSBuZXcgY29udGVudFxyXG5cdFx0cmV0dXJuIGRvbU1hbmlwKCB0aGlzLCBhcmd1bWVudHMsIGZ1bmN0aW9uKCBlbGVtICkge1xyXG5cdFx0XHR2YXIgcGFyZW50ID0gdGhpcy5wYXJlbnROb2RlO1xyXG5cclxuXHRcdFx0aWYgKCBqUXVlcnkuaW5BcnJheSggdGhpcywgaWdub3JlZCApIDwgMCApIHtcclxuXHRcdFx0XHRqUXVlcnkuY2xlYW5EYXRhKCBnZXRBbGwoIHRoaXMgKSApO1xyXG5cdFx0XHRcdGlmICggcGFyZW50ICkge1xyXG5cdFx0XHRcdFx0cGFyZW50LnJlcGxhY2VDaGlsZCggZWxlbSwgdGhpcyApO1xyXG5cdFx0XHRcdH1cclxuXHRcdFx0fVxyXG5cclxuXHRcdC8vIEZvcmNlIGNhbGxiYWNrIGludm9jYXRpb25cclxuXHRcdH0sIGlnbm9yZWQgKTtcclxuXHR9XHJcbn0gKTtcclxuXHJcbmpRdWVyeS5lYWNoKCB7XHJcblx0YXBwZW5kVG86IFwiYXBwZW5kXCIsXHJcblx0cHJlcGVuZFRvOiBcInByZXBlbmRcIixcclxuXHRpbnNlcnRCZWZvcmU6IFwiYmVmb3JlXCIsXHJcblx0aW5zZXJ0QWZ0ZXI6IFwiYWZ0ZXJcIixcclxuXHRyZXBsYWNlQWxsOiBcInJlcGxhY2VXaXRoXCJcclxufSwgZnVuY3Rpb24oIG5hbWUsIG9yaWdpbmFsICkge1xyXG5cdGpRdWVyeS5mblsgbmFtZSBdID0gZnVuY3Rpb24oIHNlbGVjdG9yICkge1xyXG5cdFx0dmFyIGVsZW1zLFxyXG5cdFx0XHRyZXQgPSBbXSxcclxuXHRcdFx0aW5zZXJ0ID0galF1ZXJ5KCBzZWxlY3RvciApLFxyXG5cdFx0XHRsYXN0ID0gaW5zZXJ0Lmxlbmd0aCAtIDEsXHJcblx0XHRcdGkgPSAwO1xyXG5cclxuXHRcdGZvciAoIDsgaSA8PSBsYXN0OyBpKysgKSB7XHJcblx0XHRcdGVsZW1zID0gaSA9PT0gbGFzdCA/IHRoaXMgOiB0aGlzLmNsb25lKCB0cnVlICk7XHJcblx0XHRcdGpRdWVyeSggaW5zZXJ0WyBpIF0gKVsgb3JpZ2luYWwgXSggZWxlbXMgKTtcclxuXHJcblx0XHRcdC8vIFN1cHBvcnQ6IEFuZHJvaWQgPD00LjAgb25seSwgUGhhbnRvbUpTIDEgb25seVxyXG5cdFx0XHQvLyAuZ2V0KCkgYmVjYXVzZSBwdXNoLmFwcGx5KF8sIGFycmF5bGlrZSkgdGhyb3dzIG9uIGFuY2llbnQgV2ViS2l0XHJcblx0XHRcdHB1c2guYXBwbHkoIHJldCwgZWxlbXMuZ2V0KCkgKTtcclxuXHRcdH1cclxuXHJcblx0XHRyZXR1cm4gdGhpcy5wdXNoU3RhY2soIHJldCApO1xyXG5cdH07XHJcbn0gKTtcclxudmFyIHJudW1ub25weCA9IG5ldyBSZWdFeHAoIFwiXihcIiArIHBudW0gKyBcIikoPyFweClbYS16JV0rJFwiLCBcImlcIiApO1xyXG5cclxudmFyIGdldFN0eWxlcyA9IGZ1bmN0aW9uKCBlbGVtICkge1xyXG5cclxuXHRcdC8vIFN1cHBvcnQ6IElFIDw9MTEgb25seSwgRmlyZWZveCA8PTMwICgjMTUwOTgsICMxNDE1MClcclxuXHRcdC8vIElFIHRocm93cyBvbiBlbGVtZW50cyBjcmVhdGVkIGluIHBvcHVwc1xyXG5cdFx0Ly8gRkYgbWVhbndoaWxlIHRocm93cyBvbiBmcmFtZSBlbGVtZW50cyB0aHJvdWdoIFwiZGVmYXVsdFZpZXcuZ2V0Q29tcHV0ZWRTdHlsZVwiXHJcblx0XHR2YXIgdmlldyA9IGVsZW0ub3duZXJEb2N1bWVudC5kZWZhdWx0VmlldztcclxuXHJcblx0XHRpZiAoICF2aWV3IHx8ICF2aWV3Lm9wZW5lciApIHtcclxuXHRcdFx0dmlldyA9IHdpbmRvdztcclxuXHRcdH1cclxuXHJcblx0XHRyZXR1cm4gdmlldy5nZXRDb21wdXRlZFN0eWxlKCBlbGVtICk7XHJcblx0fTtcclxuXHJcbnZhciByYm94U3R5bGUgPSBuZXcgUmVnRXhwKCBjc3NFeHBhbmQuam9pbiggXCJ8XCIgKSwgXCJpXCIgKTtcclxuXHJcblxyXG5cclxuKCBmdW5jdGlvbigpIHtcclxuXHJcblx0Ly8gRXhlY3V0aW5nIGJvdGggcGl4ZWxQb3NpdGlvbiAmIGJveFNpemluZ1JlbGlhYmxlIHRlc3RzIHJlcXVpcmUgb25seSBvbmUgbGF5b3V0XHJcblx0Ly8gc28gdGhleSdyZSBleGVjdXRlZCBhdCB0aGUgc2FtZSB0aW1lIHRvIHNhdmUgdGhlIHNlY29uZCBjb21wdXRhdGlvbi5cclxuXHRmdW5jdGlvbiBjb21wdXRlU3R5bGVUZXN0cygpIHtcclxuXHJcblx0XHQvLyBUaGlzIGlzIGEgc2luZ2xldG9uLCB3ZSBuZWVkIHRvIGV4ZWN1dGUgaXQgb25seSBvbmNlXHJcblx0XHRpZiAoICFkaXYgKSB7XHJcblx0XHRcdHJldHVybjtcclxuXHRcdH1cclxuXHJcblx0XHRjb250YWluZXIuc3R5bGUuY3NzVGV4dCA9IFwicG9zaXRpb246YWJzb2x1dGU7bGVmdDotMTExMTFweDt3aWR0aDo2MHB4O1wiICtcclxuXHRcdFx0XCJtYXJnaW4tdG9wOjFweDtwYWRkaW5nOjA7Ym9yZGVyOjBcIjtcclxuXHRcdGRpdi5zdHlsZS5jc3NUZXh0ID1cclxuXHRcdFx0XCJwb3NpdGlvbjpyZWxhdGl2ZTtkaXNwbGF5OmJsb2NrO2JveC1zaXppbmc6Ym9yZGVyLWJveDtvdmVyZmxvdzpzY3JvbGw7XCIgK1xyXG5cdFx0XHRcIm1hcmdpbjphdXRvO2JvcmRlcjoxcHg7cGFkZGluZzoxcHg7XCIgK1xyXG5cdFx0XHRcIndpZHRoOjYwJTt0b3A6MSVcIjtcclxuXHRcdGRvY3VtZW50RWxlbWVudC5hcHBlbmRDaGlsZCggY29udGFpbmVyICkuYXBwZW5kQ2hpbGQoIGRpdiApO1xyXG5cclxuXHRcdHZhciBkaXZTdHlsZSA9IHdpbmRvdy5nZXRDb21wdXRlZFN0eWxlKCBkaXYgKTtcclxuXHRcdHBpeGVsUG9zaXRpb25WYWwgPSBkaXZTdHlsZS50b3AgIT09IFwiMSVcIjtcclxuXHJcblx0XHQvLyBTdXBwb3J0OiBBbmRyb2lkIDQuMCAtIDQuMyBvbmx5LCBGaXJlZm94IDw9MyAtIDQ0XHJcblx0XHRyZWxpYWJsZU1hcmdpbkxlZnRWYWwgPSByb3VuZFBpeGVsTWVhc3VyZXMoIGRpdlN0eWxlLm1hcmdpbkxlZnQgKSA9PT0gMTI7XHJcblxyXG5cdFx0Ly8gU3VwcG9ydDogQW5kcm9pZCA0LjAgLSA0LjMgb25seSwgU2FmYXJpIDw9OS4xIC0gMTAuMSwgaU9TIDw9Ny4wIC0gOS4zXHJcblx0XHQvLyBTb21lIHN0eWxlcyBjb21lIGJhY2sgd2l0aCBwZXJjZW50YWdlIHZhbHVlcywgZXZlbiB0aG91Z2ggdGhleSBzaG91bGRuJ3RcclxuXHRcdGRpdi5zdHlsZS5yaWdodCA9IFwiNjAlXCI7XHJcblx0XHRwaXhlbEJveFN0eWxlc1ZhbCA9IHJvdW5kUGl4ZWxNZWFzdXJlcyggZGl2U3R5bGUucmlnaHQgKSA9PT0gMzY7XHJcblxyXG5cdFx0Ly8gU3VwcG9ydDogSUUgOSAtIDExIG9ubHlcclxuXHRcdC8vIERldGVjdCBtaXNyZXBvcnRpbmcgb2YgY29udGVudCBkaW1lbnNpb25zIGZvciBib3gtc2l6aW5nOmJvcmRlci1ib3ggZWxlbWVudHNcclxuXHRcdGJveFNpemluZ1JlbGlhYmxlVmFsID0gcm91bmRQaXhlbE1lYXN1cmVzKCBkaXZTdHlsZS53aWR0aCApID09PSAzNjtcclxuXHJcblx0XHQvLyBTdXBwb3J0OiBJRSA5IG9ubHlcclxuXHRcdC8vIERldGVjdCBvdmVyZmxvdzpzY3JvbGwgc2NyZXdpbmVzcyAoZ2gtMzY5OSlcclxuXHRcdGRpdi5zdHlsZS5wb3NpdGlvbiA9IFwiYWJzb2x1dGVcIjtcclxuXHRcdHNjcm9sbGJveFNpemVWYWwgPSBkaXYub2Zmc2V0V2lkdGggPT09IDM2IHx8IFwiYWJzb2x1dGVcIjtcclxuXHJcblx0XHRkb2N1bWVudEVsZW1lbnQucmVtb3ZlQ2hpbGQoIGNvbnRhaW5lciApO1xyXG5cclxuXHRcdC8vIE51bGxpZnkgdGhlIGRpdiBzbyBpdCB3b3VsZG4ndCBiZSBzdG9yZWQgaW4gdGhlIG1lbW9yeSBhbmRcclxuXHRcdC8vIGl0IHdpbGwgYWxzbyBiZSBhIHNpZ24gdGhhdCBjaGVja3MgYWxyZWFkeSBwZXJmb3JtZWRcclxuXHRcdGRpdiA9IG51bGw7XHJcblx0fVxyXG5cclxuXHRmdW5jdGlvbiByb3VuZFBpeGVsTWVhc3VyZXMoIG1lYXN1cmUgKSB7XHJcblx0XHRyZXR1cm4gTWF0aC5yb3VuZCggcGFyc2VGbG9hdCggbWVhc3VyZSApICk7XHJcblx0fVxyXG5cclxuXHR2YXIgcGl4ZWxQb3NpdGlvblZhbCwgYm94U2l6aW5nUmVsaWFibGVWYWwsIHNjcm9sbGJveFNpemVWYWwsIHBpeGVsQm94U3R5bGVzVmFsLFxyXG5cdFx0cmVsaWFibGVNYXJnaW5MZWZ0VmFsLFxyXG5cdFx0Y29udGFpbmVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCggXCJkaXZcIiApLFxyXG5cdFx0ZGl2ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCggXCJkaXZcIiApO1xyXG5cclxuXHQvLyBGaW5pc2ggZWFybHkgaW4gbGltaXRlZCAobm9uLWJyb3dzZXIpIGVudmlyb25tZW50c1xyXG5cdGlmICggIWRpdi5zdHlsZSApIHtcclxuXHRcdHJldHVybjtcclxuXHR9XHJcblxyXG5cdC8vIFN1cHBvcnQ6IElFIDw9OSAtIDExIG9ubHlcclxuXHQvLyBTdHlsZSBvZiBjbG9uZWQgZWxlbWVudCBhZmZlY3RzIHNvdXJjZSBlbGVtZW50IGNsb25lZCAoIzg5MDgpXHJcblx0ZGl2LnN0eWxlLmJhY2tncm91bmRDbGlwID0gXCJjb250ZW50LWJveFwiO1xyXG5cdGRpdi5jbG9uZU5vZGUoIHRydWUgKS5zdHlsZS5iYWNrZ3JvdW5kQ2xpcCA9IFwiXCI7XHJcblx0c3VwcG9ydC5jbGVhckNsb25lU3R5bGUgPSBkaXYuc3R5bGUuYmFja2dyb3VuZENsaXAgPT09IFwiY29udGVudC1ib3hcIjtcclxuXHJcblx0alF1ZXJ5LmV4dGVuZCggc3VwcG9ydCwge1xyXG5cdFx0Ym94U2l6aW5nUmVsaWFibGU6IGZ1bmN0aW9uKCkge1xyXG5cdFx0XHRjb21wdXRlU3R5bGVUZXN0cygpO1xyXG5cdFx0XHRyZXR1cm4gYm94U2l6aW5nUmVsaWFibGVWYWw7XHJcblx0XHR9LFxyXG5cdFx0cGl4ZWxCb3hTdHlsZXM6IGZ1bmN0aW9uKCkge1xyXG5cdFx0XHRjb21wdXRlU3R5bGVUZXN0cygpO1xyXG5cdFx0XHRyZXR1cm4gcGl4ZWxCb3hTdHlsZXNWYWw7XHJcblx0XHR9LFxyXG5cdFx0cGl4ZWxQb3NpdGlvbjogZnVuY3Rpb24oKSB7XHJcblx0XHRcdGNvbXB1dGVTdHlsZVRlc3RzKCk7XHJcblx0XHRcdHJldHVybiBwaXhlbFBvc2l0aW9uVmFsO1xyXG5cdFx0fSxcclxuXHRcdHJlbGlhYmxlTWFyZ2luTGVmdDogZnVuY3Rpb24oKSB7XHJcblx0XHRcdGNvbXB1dGVTdHlsZVRlc3RzKCk7XHJcblx0XHRcdHJldHVybiByZWxpYWJsZU1hcmdpbkxlZnRWYWw7XHJcblx0XHR9LFxyXG5cdFx0c2Nyb2xsYm94U2l6ZTogZnVuY3Rpb24oKSB7XHJcblx0XHRcdGNvbXB1dGVTdHlsZVRlc3RzKCk7XHJcblx0XHRcdHJldHVybiBzY3JvbGxib3hTaXplVmFsO1xyXG5cdFx0fVxyXG5cdH0gKTtcclxufSApKCk7XHJcblxyXG5cclxuZnVuY3Rpb24gY3VyQ1NTKCBlbGVtLCBuYW1lLCBjb21wdXRlZCApIHtcclxuXHR2YXIgd2lkdGgsIG1pbldpZHRoLCBtYXhXaWR0aCwgcmV0LFxyXG5cclxuXHRcdC8vIFN1cHBvcnQ6IEZpcmVmb3ggNTErXHJcblx0XHQvLyBSZXRyaWV2aW5nIHN0eWxlIGJlZm9yZSBjb21wdXRlZCBzb21laG93XHJcblx0XHQvLyBmaXhlcyBhbiBpc3N1ZSB3aXRoIGdldHRpbmcgd3JvbmcgdmFsdWVzXHJcblx0XHQvLyBvbiBkZXRhY2hlZCBlbGVtZW50c1xyXG5cdFx0c3R5bGUgPSBlbGVtLnN0eWxlO1xyXG5cclxuXHRjb21wdXRlZCA9IGNvbXB1dGVkIHx8IGdldFN0eWxlcyggZWxlbSApO1xyXG5cclxuXHQvLyBnZXRQcm9wZXJ0eVZhbHVlIGlzIG5lZWRlZCBmb3I6XHJcblx0Ly8gICAuY3NzKCdmaWx0ZXInKSAoSUUgOSBvbmx5LCAjMTI1MzcpXHJcblx0Ly8gICAuY3NzKCctLWN1c3RvbVByb3BlcnR5KSAoIzMxNDQpXHJcblx0aWYgKCBjb21wdXRlZCApIHtcclxuXHRcdHJldCA9IGNvbXB1dGVkLmdldFByb3BlcnR5VmFsdWUoIG5hbWUgKSB8fCBjb21wdXRlZFsgbmFtZSBdO1xyXG5cclxuXHRcdGlmICggcmV0ID09PSBcIlwiICYmICFqUXVlcnkuY29udGFpbnMoIGVsZW0ub3duZXJEb2N1bWVudCwgZWxlbSApICkge1xyXG5cdFx0XHRyZXQgPSBqUXVlcnkuc3R5bGUoIGVsZW0sIG5hbWUgKTtcclxuXHRcdH1cclxuXHJcblx0XHQvLyBBIHRyaWJ1dGUgdG8gdGhlIFwiYXdlc29tZSBoYWNrIGJ5IERlYW4gRWR3YXJkc1wiXHJcblx0XHQvLyBBbmRyb2lkIEJyb3dzZXIgcmV0dXJucyBwZXJjZW50YWdlIGZvciBzb21lIHZhbHVlcyxcclxuXHRcdC8vIGJ1dCB3aWR0aCBzZWVtcyB0byBiZSByZWxpYWJseSBwaXhlbHMuXHJcblx0XHQvLyBUaGlzIGlzIGFnYWluc3QgdGhlIENTU09NIGRyYWZ0IHNwZWM6XHJcblx0XHQvLyBodHRwczovL2RyYWZ0cy5jc3N3Zy5vcmcvY3Nzb20vI3Jlc29sdmVkLXZhbHVlc1xyXG5cdFx0aWYgKCAhc3VwcG9ydC5waXhlbEJveFN0eWxlcygpICYmIHJudW1ub25weC50ZXN0KCByZXQgKSAmJiByYm94U3R5bGUudGVzdCggbmFtZSApICkge1xyXG5cclxuXHRcdFx0Ly8gUmVtZW1iZXIgdGhlIG9yaWdpbmFsIHZhbHVlc1xyXG5cdFx0XHR3aWR0aCA9IHN0eWxlLndpZHRoO1xyXG5cdFx0XHRtaW5XaWR0aCA9IHN0eWxlLm1pbldpZHRoO1xyXG5cdFx0XHRtYXhXaWR0aCA9IHN0eWxlLm1heFdpZHRoO1xyXG5cclxuXHRcdFx0Ly8gUHV0IGluIHRoZSBuZXcgdmFsdWVzIHRvIGdldCBhIGNvbXB1dGVkIHZhbHVlIG91dFxyXG5cdFx0XHRzdHlsZS5taW5XaWR0aCA9IHN0eWxlLm1heFdpZHRoID0gc3R5bGUud2lkdGggPSByZXQ7XHJcblx0XHRcdHJldCA9IGNvbXB1dGVkLndpZHRoO1xyXG5cclxuXHRcdFx0Ly8gUmV2ZXJ0IHRoZSBjaGFuZ2VkIHZhbHVlc1xyXG5cdFx0XHRzdHlsZS53aWR0aCA9IHdpZHRoO1xyXG5cdFx0XHRzdHlsZS5taW5XaWR0aCA9IG1pbldpZHRoO1xyXG5cdFx0XHRzdHlsZS5tYXhXaWR0aCA9IG1heFdpZHRoO1xyXG5cdFx0fVxyXG5cdH1cclxuXHJcblx0cmV0dXJuIHJldCAhPT0gdW5kZWZpbmVkID9cclxuXHJcblx0XHQvLyBTdXBwb3J0OiBJRSA8PTkgLSAxMSBvbmx5XHJcblx0XHQvLyBJRSByZXR1cm5zIHpJbmRleCB2YWx1ZSBhcyBhbiBpbnRlZ2VyLlxyXG5cdFx0cmV0ICsgXCJcIiA6XHJcblx0XHRyZXQ7XHJcbn1cclxuXHJcblxyXG5mdW5jdGlvbiBhZGRHZXRIb29rSWYoIGNvbmRpdGlvbkZuLCBob29rRm4gKSB7XHJcblxyXG5cdC8vIERlZmluZSB0aGUgaG9vaywgd2UnbGwgY2hlY2sgb24gdGhlIGZpcnN0IHJ1biBpZiBpdCdzIHJlYWxseSBuZWVkZWQuXHJcblx0cmV0dXJuIHtcclxuXHRcdGdldDogZnVuY3Rpb24oKSB7XHJcblx0XHRcdGlmICggY29uZGl0aW9uRm4oKSApIHtcclxuXHJcblx0XHRcdFx0Ly8gSG9vayBub3QgbmVlZGVkIChvciBpdCdzIG5vdCBwb3NzaWJsZSB0byB1c2UgaXQgZHVlXHJcblx0XHRcdFx0Ly8gdG8gbWlzc2luZyBkZXBlbmRlbmN5KSwgcmVtb3ZlIGl0LlxyXG5cdFx0XHRcdGRlbGV0ZSB0aGlzLmdldDtcclxuXHRcdFx0XHRyZXR1cm47XHJcblx0XHRcdH1cclxuXHJcblx0XHRcdC8vIEhvb2sgbmVlZGVkOyByZWRlZmluZSBpdCBzbyB0aGF0IHRoZSBzdXBwb3J0IHRlc3QgaXMgbm90IGV4ZWN1dGVkIGFnYWluLlxyXG5cdFx0XHRyZXR1cm4gKCB0aGlzLmdldCA9IGhvb2tGbiApLmFwcGx5KCB0aGlzLCBhcmd1bWVudHMgKTtcclxuXHRcdH1cclxuXHR9O1xyXG59XHJcblxyXG5cclxudmFyXHJcblxyXG5cdC8vIFN3YXBwYWJsZSBpZiBkaXNwbGF5IGlzIG5vbmUgb3Igc3RhcnRzIHdpdGggdGFibGVcclxuXHQvLyBleGNlcHQgXCJ0YWJsZVwiLCBcInRhYmxlLWNlbGxcIiwgb3IgXCJ0YWJsZS1jYXB0aW9uXCJcclxuXHQvLyBTZWUgaGVyZSBmb3IgZGlzcGxheSB2YWx1ZXM6IGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2VuLVVTL2RvY3MvQ1NTL2Rpc3BsYXlcclxuXHRyZGlzcGxheXN3YXAgPSAvXihub25lfHRhYmxlKD8hLWNbZWFdKS4rKS8sXHJcblx0cmN1c3RvbVByb3AgPSAvXi0tLyxcclxuXHRjc3NTaG93ID0geyBwb3NpdGlvbjogXCJhYnNvbHV0ZVwiLCB2aXNpYmlsaXR5OiBcImhpZGRlblwiLCBkaXNwbGF5OiBcImJsb2NrXCIgfSxcclxuXHRjc3NOb3JtYWxUcmFuc2Zvcm0gPSB7XHJcblx0XHRsZXR0ZXJTcGFjaW5nOiBcIjBcIixcclxuXHRcdGZvbnRXZWlnaHQ6IFwiNDAwXCJcclxuXHR9LFxyXG5cclxuXHRjc3NQcmVmaXhlcyA9IFsgXCJXZWJraXRcIiwgXCJNb3pcIiwgXCJtc1wiIF0sXHJcblx0ZW1wdHlTdHlsZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoIFwiZGl2XCIgKS5zdHlsZTtcclxuXHJcbi8vIFJldHVybiBhIGNzcyBwcm9wZXJ0eSBtYXBwZWQgdG8gYSBwb3RlbnRpYWxseSB2ZW5kb3IgcHJlZml4ZWQgcHJvcGVydHlcclxuZnVuY3Rpb24gdmVuZG9yUHJvcE5hbWUoIG5hbWUgKSB7XHJcblxyXG5cdC8vIFNob3J0Y3V0IGZvciBuYW1lcyB0aGF0IGFyZSBub3QgdmVuZG9yIHByZWZpeGVkXHJcblx0aWYgKCBuYW1lIGluIGVtcHR5U3R5bGUgKSB7XHJcblx0XHRyZXR1cm4gbmFtZTtcclxuXHR9XHJcblxyXG5cdC8vIENoZWNrIGZvciB2ZW5kb3IgcHJlZml4ZWQgbmFtZXNcclxuXHR2YXIgY2FwTmFtZSA9IG5hbWVbIDAgXS50b1VwcGVyQ2FzZSgpICsgbmFtZS5zbGljZSggMSApLFxyXG5cdFx0aSA9IGNzc1ByZWZpeGVzLmxlbmd0aDtcclxuXHJcblx0d2hpbGUgKCBpLS0gKSB7XHJcblx0XHRuYW1lID0gY3NzUHJlZml4ZXNbIGkgXSArIGNhcE5hbWU7XHJcblx0XHRpZiAoIG5hbWUgaW4gZW1wdHlTdHlsZSApIHtcclxuXHRcdFx0cmV0dXJuIG5hbWU7XHJcblx0XHR9XHJcblx0fVxyXG59XHJcblxyXG4vLyBSZXR1cm4gYSBwcm9wZXJ0eSBtYXBwZWQgYWxvbmcgd2hhdCBqUXVlcnkuY3NzUHJvcHMgc3VnZ2VzdHMgb3IgdG9cclxuLy8gYSB2ZW5kb3IgcHJlZml4ZWQgcHJvcGVydHkuXHJcbmZ1bmN0aW9uIGZpbmFsUHJvcE5hbWUoIG5hbWUgKSB7XHJcblx0dmFyIHJldCA9IGpRdWVyeS5jc3NQcm9wc1sgbmFtZSBdO1xyXG5cdGlmICggIXJldCApIHtcclxuXHRcdHJldCA9IGpRdWVyeS5jc3NQcm9wc1sgbmFtZSBdID0gdmVuZG9yUHJvcE5hbWUoIG5hbWUgKSB8fCBuYW1lO1xyXG5cdH1cclxuXHRyZXR1cm4gcmV0O1xyXG59XHJcblxyXG5mdW5jdGlvbiBzZXRQb3NpdGl2ZU51bWJlciggZWxlbSwgdmFsdWUsIHN1YnRyYWN0ICkge1xyXG5cclxuXHQvLyBBbnkgcmVsYXRpdmUgKCsvLSkgdmFsdWVzIGhhdmUgYWxyZWFkeSBiZWVuXHJcblx0Ly8gbm9ybWFsaXplZCBhdCB0aGlzIHBvaW50XHJcblx0dmFyIG1hdGNoZXMgPSByY3NzTnVtLmV4ZWMoIHZhbHVlICk7XHJcblx0cmV0dXJuIG1hdGNoZXMgP1xyXG5cclxuXHRcdC8vIEd1YXJkIGFnYWluc3QgdW5kZWZpbmVkIFwic3VidHJhY3RcIiwgZS5nLiwgd2hlbiB1c2VkIGFzIGluIGNzc0hvb2tzXHJcblx0XHRNYXRoLm1heCggMCwgbWF0Y2hlc1sgMiBdIC0gKCBzdWJ0cmFjdCB8fCAwICkgKSArICggbWF0Y2hlc1sgMyBdIHx8IFwicHhcIiApIDpcclxuXHRcdHZhbHVlO1xyXG59XHJcblxyXG5mdW5jdGlvbiBib3hNb2RlbEFkanVzdG1lbnQoIGVsZW0sIGRpbWVuc2lvbiwgYm94LCBpc0JvcmRlckJveCwgc3R5bGVzLCBjb21wdXRlZFZhbCApIHtcclxuXHR2YXIgaSA9IGRpbWVuc2lvbiA9PT0gXCJ3aWR0aFwiID8gMSA6IDAsXHJcblx0XHRleHRyYSA9IDAsXHJcblx0XHRkZWx0YSA9IDA7XHJcblxyXG5cdC8vIEFkanVzdG1lbnQgbWF5IG5vdCBiZSBuZWNlc3NhcnlcclxuXHRpZiAoIGJveCA9PT0gKCBpc0JvcmRlckJveCA/IFwiYm9yZGVyXCIgOiBcImNvbnRlbnRcIiApICkge1xyXG5cdFx0cmV0dXJuIDA7XHJcblx0fVxyXG5cclxuXHRmb3IgKCA7IGkgPCA0OyBpICs9IDIgKSB7XHJcblxyXG5cdFx0Ly8gQm90aCBib3ggbW9kZWxzIGV4Y2x1ZGUgbWFyZ2luXHJcblx0XHRpZiAoIGJveCA9PT0gXCJtYXJnaW5cIiApIHtcclxuXHRcdFx0ZGVsdGEgKz0galF1ZXJ5LmNzcyggZWxlbSwgYm94ICsgY3NzRXhwYW5kWyBpIF0sIHRydWUsIHN0eWxlcyApO1xyXG5cdFx0fVxyXG5cclxuXHRcdC8vIElmIHdlIGdldCBoZXJlIHdpdGggYSBjb250ZW50LWJveCwgd2UncmUgc2Vla2luZyBcInBhZGRpbmdcIiBvciBcImJvcmRlclwiIG9yIFwibWFyZ2luXCJcclxuXHRcdGlmICggIWlzQm9yZGVyQm94ICkge1xyXG5cclxuXHRcdFx0Ly8gQWRkIHBhZGRpbmdcclxuXHRcdFx0ZGVsdGEgKz0galF1ZXJ5LmNzcyggZWxlbSwgXCJwYWRkaW5nXCIgKyBjc3NFeHBhbmRbIGkgXSwgdHJ1ZSwgc3R5bGVzICk7XHJcblxyXG5cdFx0XHQvLyBGb3IgXCJib3JkZXJcIiBvciBcIm1hcmdpblwiLCBhZGQgYm9yZGVyXHJcblx0XHRcdGlmICggYm94ICE9PSBcInBhZGRpbmdcIiApIHtcclxuXHRcdFx0XHRkZWx0YSArPSBqUXVlcnkuY3NzKCBlbGVtLCBcImJvcmRlclwiICsgY3NzRXhwYW5kWyBpIF0gKyBcIldpZHRoXCIsIHRydWUsIHN0eWxlcyApO1xyXG5cclxuXHRcdFx0Ly8gQnV0IHN0aWxsIGtlZXAgdHJhY2sgb2YgaXQgb3RoZXJ3aXNlXHJcblx0XHRcdH0gZWxzZSB7XHJcblx0XHRcdFx0ZXh0cmEgKz0galF1ZXJ5LmNzcyggZWxlbSwgXCJib3JkZXJcIiArIGNzc0V4cGFuZFsgaSBdICsgXCJXaWR0aFwiLCB0cnVlLCBzdHlsZXMgKTtcclxuXHRcdFx0fVxyXG5cclxuXHRcdC8vIElmIHdlIGdldCBoZXJlIHdpdGggYSBib3JkZXItYm94IChjb250ZW50ICsgcGFkZGluZyArIGJvcmRlciksIHdlJ3JlIHNlZWtpbmcgXCJjb250ZW50XCIgb3JcclxuXHRcdC8vIFwicGFkZGluZ1wiIG9yIFwibWFyZ2luXCJcclxuXHRcdH0gZWxzZSB7XHJcblxyXG5cdFx0XHQvLyBGb3IgXCJjb250ZW50XCIsIHN1YnRyYWN0IHBhZGRpbmdcclxuXHRcdFx0aWYgKCBib3ggPT09IFwiY29udGVudFwiICkge1xyXG5cdFx0XHRcdGRlbHRhIC09IGpRdWVyeS5jc3MoIGVsZW0sIFwicGFkZGluZ1wiICsgY3NzRXhwYW5kWyBpIF0sIHRydWUsIHN0eWxlcyApO1xyXG5cdFx0XHR9XHJcblxyXG5cdFx0XHQvLyBGb3IgXCJjb250ZW50XCIgb3IgXCJwYWRkaW5nXCIsIHN1YnRyYWN0IGJvcmRlclxyXG5cdFx0XHRpZiAoIGJveCAhPT0gXCJtYXJnaW5cIiApIHtcclxuXHRcdFx0XHRkZWx0YSAtPSBqUXVlcnkuY3NzKCBlbGVtLCBcImJvcmRlclwiICsgY3NzRXhwYW5kWyBpIF0gKyBcIldpZHRoXCIsIHRydWUsIHN0eWxlcyApO1xyXG5cdFx0XHR9XHJcblx0XHR9XHJcblx0fVxyXG5cclxuXHQvLyBBY2NvdW50IGZvciBwb3NpdGl2ZSBjb250ZW50LWJveCBzY3JvbGwgZ3V0dGVyIHdoZW4gcmVxdWVzdGVkIGJ5IHByb3ZpZGluZyBjb21wdXRlZFZhbFxyXG5cdGlmICggIWlzQm9yZGVyQm94ICYmIGNvbXB1dGVkVmFsID49IDAgKSB7XHJcblxyXG5cdFx0Ly8gb2Zmc2V0V2lkdGgvb2Zmc2V0SGVpZ2h0IGlzIGEgcm91bmRlZCBzdW0gb2YgY29udGVudCwgcGFkZGluZywgc2Nyb2xsIGd1dHRlciwgYW5kIGJvcmRlclxyXG5cdFx0Ly8gQXNzdW1pbmcgaW50ZWdlciBzY3JvbGwgZ3V0dGVyLCBzdWJ0cmFjdCB0aGUgcmVzdCBhbmQgcm91bmQgZG93blxyXG5cdFx0ZGVsdGEgKz0gTWF0aC5tYXgoIDAsIE1hdGguY2VpbChcclxuXHRcdFx0ZWxlbVsgXCJvZmZzZXRcIiArIGRpbWVuc2lvblsgMCBdLnRvVXBwZXJDYXNlKCkgKyBkaW1lbnNpb24uc2xpY2UoIDEgKSBdIC1cclxuXHRcdFx0Y29tcHV0ZWRWYWwgLVxyXG5cdFx0XHRkZWx0YSAtXHJcblx0XHRcdGV4dHJhIC1cclxuXHRcdFx0MC41XHJcblx0XHQpICk7XHJcblx0fVxyXG5cclxuXHRyZXR1cm4gZGVsdGE7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIGdldFdpZHRoT3JIZWlnaHQoIGVsZW0sIGRpbWVuc2lvbiwgZXh0cmEgKSB7XHJcblxyXG5cdC8vIFN0YXJ0IHdpdGggY29tcHV0ZWQgc3R5bGVcclxuXHR2YXIgc3R5bGVzID0gZ2V0U3R5bGVzKCBlbGVtICksXHJcblx0XHR2YWwgPSBjdXJDU1MoIGVsZW0sIGRpbWVuc2lvbiwgc3R5bGVzICksXHJcblx0XHRpc0JvcmRlckJveCA9IGpRdWVyeS5jc3MoIGVsZW0sIFwiYm94U2l6aW5nXCIsIGZhbHNlLCBzdHlsZXMgKSA9PT0gXCJib3JkZXItYm94XCIsXHJcblx0XHR2YWx1ZUlzQm9yZGVyQm94ID0gaXNCb3JkZXJCb3g7XHJcblxyXG5cdC8vIFN1cHBvcnQ6IEZpcmVmb3ggPD01NFxyXG5cdC8vIFJldHVybiBhIGNvbmZvdW5kaW5nIG5vbi1waXhlbCB2YWx1ZSBvciBmZWlnbiBpZ25vcmFuY2UsIGFzIGFwcHJvcHJpYXRlLlxyXG5cdGlmICggcm51bW5vbnB4LnRlc3QoIHZhbCApICkge1xyXG5cdFx0aWYgKCAhZXh0cmEgKSB7XHJcblx0XHRcdHJldHVybiB2YWw7XHJcblx0XHR9XHJcblx0XHR2YWwgPSBcImF1dG9cIjtcclxuXHR9XHJcblxyXG5cdC8vIENoZWNrIGZvciBzdHlsZSBpbiBjYXNlIGEgYnJvd3NlciB3aGljaCByZXR1cm5zIHVucmVsaWFibGUgdmFsdWVzXHJcblx0Ly8gZm9yIGdldENvbXB1dGVkU3R5bGUgc2lsZW50bHkgZmFsbHMgYmFjayB0byB0aGUgcmVsaWFibGUgZWxlbS5zdHlsZVxyXG5cdHZhbHVlSXNCb3JkZXJCb3ggPSB2YWx1ZUlzQm9yZGVyQm94ICYmXHJcblx0XHQoIHN1cHBvcnQuYm94U2l6aW5nUmVsaWFibGUoKSB8fCB2YWwgPT09IGVsZW0uc3R5bGVbIGRpbWVuc2lvbiBdICk7XHJcblxyXG5cdC8vIEZhbGwgYmFjayB0byBvZmZzZXRXaWR0aC9vZmZzZXRIZWlnaHQgd2hlbiB2YWx1ZSBpcyBcImF1dG9cIlxyXG5cdC8vIFRoaXMgaGFwcGVucyBmb3IgaW5saW5lIGVsZW1lbnRzIHdpdGggbm8gZXhwbGljaXQgc2V0dGluZyAoZ2gtMzU3MSlcclxuXHQvLyBTdXBwb3J0OiBBbmRyb2lkIDw9NC4xIC0gNC4zIG9ubHlcclxuXHQvLyBBbHNvIHVzZSBvZmZzZXRXaWR0aC9vZmZzZXRIZWlnaHQgZm9yIG1pc3JlcG9ydGVkIGlubGluZSBkaW1lbnNpb25zIChnaC0zNjAyKVxyXG5cdGlmICggdmFsID09PSBcImF1dG9cIiB8fFxyXG5cdFx0IXBhcnNlRmxvYXQoIHZhbCApICYmIGpRdWVyeS5jc3MoIGVsZW0sIFwiZGlzcGxheVwiLCBmYWxzZSwgc3R5bGVzICkgPT09IFwiaW5saW5lXCIgKSB7XHJcblxyXG5cdFx0dmFsID0gZWxlbVsgXCJvZmZzZXRcIiArIGRpbWVuc2lvblsgMCBdLnRvVXBwZXJDYXNlKCkgKyBkaW1lbnNpb24uc2xpY2UoIDEgKSBdO1xyXG5cclxuXHRcdC8vIG9mZnNldFdpZHRoL29mZnNldEhlaWdodCBwcm92aWRlIGJvcmRlci1ib3ggdmFsdWVzXHJcblx0XHR2YWx1ZUlzQm9yZGVyQm94ID0gdHJ1ZTtcclxuXHR9XHJcblxyXG5cdC8vIE5vcm1hbGl6ZSBcIlwiIGFuZCBhdXRvXHJcblx0dmFsID0gcGFyc2VGbG9hdCggdmFsICkgfHwgMDtcclxuXHJcblx0Ly8gQWRqdXN0IGZvciB0aGUgZWxlbWVudCdzIGJveCBtb2RlbFxyXG5cdHJldHVybiAoIHZhbCArXHJcblx0XHRib3hNb2RlbEFkanVzdG1lbnQoXHJcblx0XHRcdGVsZW0sXHJcblx0XHRcdGRpbWVuc2lvbixcclxuXHRcdFx0ZXh0cmEgfHwgKCBpc0JvcmRlckJveCA/IFwiYm9yZGVyXCIgOiBcImNvbnRlbnRcIiApLFxyXG5cdFx0XHR2YWx1ZUlzQm9yZGVyQm94LFxyXG5cdFx0XHRzdHlsZXMsXHJcblxyXG5cdFx0XHQvLyBQcm92aWRlIHRoZSBjdXJyZW50IGNvbXB1dGVkIHNpemUgdG8gcmVxdWVzdCBzY3JvbGwgZ3V0dGVyIGNhbGN1bGF0aW9uIChnaC0zNTg5KVxyXG5cdFx0XHR2YWxcclxuXHRcdClcclxuXHQpICsgXCJweFwiO1xyXG59XHJcblxyXG5qUXVlcnkuZXh0ZW5kKCB7XHJcblxyXG5cdC8vIEFkZCBpbiBzdHlsZSBwcm9wZXJ0eSBob29rcyBmb3Igb3ZlcnJpZGluZyB0aGUgZGVmYXVsdFxyXG5cdC8vIGJlaGF2aW9yIG9mIGdldHRpbmcgYW5kIHNldHRpbmcgYSBzdHlsZSBwcm9wZXJ0eVxyXG5cdGNzc0hvb2tzOiB7XHJcblx0XHRvcGFjaXR5OiB7XHJcblx0XHRcdGdldDogZnVuY3Rpb24oIGVsZW0sIGNvbXB1dGVkICkge1xyXG5cdFx0XHRcdGlmICggY29tcHV0ZWQgKSB7XHJcblxyXG5cdFx0XHRcdFx0Ly8gV2Ugc2hvdWxkIGFsd2F5cyBnZXQgYSBudW1iZXIgYmFjayBmcm9tIG9wYWNpdHlcclxuXHRcdFx0XHRcdHZhciByZXQgPSBjdXJDU1MoIGVsZW0sIFwib3BhY2l0eVwiICk7XHJcblx0XHRcdFx0XHRyZXR1cm4gcmV0ID09PSBcIlwiID8gXCIxXCIgOiByZXQ7XHJcblx0XHRcdFx0fVxyXG5cdFx0XHR9XHJcblx0XHR9XHJcblx0fSxcclxuXHJcblx0Ly8gRG9uJ3QgYXV0b21hdGljYWxseSBhZGQgXCJweFwiIHRvIHRoZXNlIHBvc3NpYmx5LXVuaXRsZXNzIHByb3BlcnRpZXNcclxuXHRjc3NOdW1iZXI6IHtcclxuXHRcdFwiYW5pbWF0aW9uSXRlcmF0aW9uQ291bnRcIjogdHJ1ZSxcclxuXHRcdFwiY29sdW1uQ291bnRcIjogdHJ1ZSxcclxuXHRcdFwiZmlsbE9wYWNpdHlcIjogdHJ1ZSxcclxuXHRcdFwiZmxleEdyb3dcIjogdHJ1ZSxcclxuXHRcdFwiZmxleFNocmlua1wiOiB0cnVlLFxyXG5cdFx0XCJmb250V2VpZ2h0XCI6IHRydWUsXHJcblx0XHRcImxpbmVIZWlnaHRcIjogdHJ1ZSxcclxuXHRcdFwib3BhY2l0eVwiOiB0cnVlLFxyXG5cdFx0XCJvcmRlclwiOiB0cnVlLFxyXG5cdFx0XCJvcnBoYW5zXCI6IHRydWUsXHJcblx0XHRcIndpZG93c1wiOiB0cnVlLFxyXG5cdFx0XCJ6SW5kZXhcIjogdHJ1ZSxcclxuXHRcdFwiem9vbVwiOiB0cnVlXHJcblx0fSxcclxuXHJcblx0Ly8gQWRkIGluIHByb3BlcnRpZXMgd2hvc2UgbmFtZXMgeW91IHdpc2ggdG8gZml4IGJlZm9yZVxyXG5cdC8vIHNldHRpbmcgb3IgZ2V0dGluZyB0aGUgdmFsdWVcclxuXHRjc3NQcm9wczoge30sXHJcblxyXG5cdC8vIEdldCBhbmQgc2V0IHRoZSBzdHlsZSBwcm9wZXJ0eSBvbiBhIERPTSBOb2RlXHJcblx0c3R5bGU6IGZ1bmN0aW9uKCBlbGVtLCBuYW1lLCB2YWx1ZSwgZXh0cmEgKSB7XHJcblxyXG5cdFx0Ly8gRG9uJ3Qgc2V0IHN0eWxlcyBvbiB0ZXh0IGFuZCBjb21tZW50IG5vZGVzXHJcblx0XHRpZiAoICFlbGVtIHx8IGVsZW0ubm9kZVR5cGUgPT09IDMgfHwgZWxlbS5ub2RlVHlwZSA9PT0gOCB8fCAhZWxlbS5zdHlsZSApIHtcclxuXHRcdFx0cmV0dXJuO1xyXG5cdFx0fVxyXG5cclxuXHRcdC8vIE1ha2Ugc3VyZSB0aGF0IHdlJ3JlIHdvcmtpbmcgd2l0aCB0aGUgcmlnaHQgbmFtZVxyXG5cdFx0dmFyIHJldCwgdHlwZSwgaG9va3MsXHJcblx0XHRcdG9yaWdOYW1lID0gY2FtZWxDYXNlKCBuYW1lICksXHJcblx0XHRcdGlzQ3VzdG9tUHJvcCA9IHJjdXN0b21Qcm9wLnRlc3QoIG5hbWUgKSxcclxuXHRcdFx0c3R5bGUgPSBlbGVtLnN0eWxlO1xyXG5cclxuXHRcdC8vIE1ha2Ugc3VyZSB0aGF0IHdlJ3JlIHdvcmtpbmcgd2l0aCB0aGUgcmlnaHQgbmFtZS4gV2UgZG9uJ3RcclxuXHRcdC8vIHdhbnQgdG8gcXVlcnkgdGhlIHZhbHVlIGlmIGl0IGlzIGEgQ1NTIGN1c3RvbSBwcm9wZXJ0eVxyXG5cdFx0Ly8gc2luY2UgdGhleSBhcmUgdXNlci1kZWZpbmVkLlxyXG5cdFx0aWYgKCAhaXNDdXN0b21Qcm9wICkge1xyXG5cdFx0XHRuYW1lID0gZmluYWxQcm9wTmFtZSggb3JpZ05hbWUgKTtcclxuXHRcdH1cclxuXHJcblx0XHQvLyBHZXRzIGhvb2sgZm9yIHRoZSBwcmVmaXhlZCB2ZXJzaW9uLCB0aGVuIHVucHJlZml4ZWQgdmVyc2lvblxyXG5cdFx0aG9va3MgPSBqUXVlcnkuY3NzSG9va3NbIG5hbWUgXSB8fCBqUXVlcnkuY3NzSG9va3NbIG9yaWdOYW1lIF07XHJcblxyXG5cdFx0Ly8gQ2hlY2sgaWYgd2UncmUgc2V0dGluZyBhIHZhbHVlXHJcblx0XHRpZiAoIHZhbHVlICE9PSB1bmRlZmluZWQgKSB7XHJcblx0XHRcdHR5cGUgPSB0eXBlb2YgdmFsdWU7XHJcblxyXG5cdFx0XHQvLyBDb252ZXJ0IFwiKz1cIiBvciBcIi09XCIgdG8gcmVsYXRpdmUgbnVtYmVycyAoIzczNDUpXHJcblx0XHRcdGlmICggdHlwZSA9PT0gXCJzdHJpbmdcIiAmJiAoIHJldCA9IHJjc3NOdW0uZXhlYyggdmFsdWUgKSApICYmIHJldFsgMSBdICkge1xyXG5cdFx0XHRcdHZhbHVlID0gYWRqdXN0Q1NTKCBlbGVtLCBuYW1lLCByZXQgKTtcclxuXHJcblx0XHRcdFx0Ly8gRml4ZXMgYnVnICM5MjM3XHJcblx0XHRcdFx0dHlwZSA9IFwibnVtYmVyXCI7XHJcblx0XHRcdH1cclxuXHJcblx0XHRcdC8vIE1ha2Ugc3VyZSB0aGF0IG51bGwgYW5kIE5hTiB2YWx1ZXMgYXJlbid0IHNldCAoIzcxMTYpXHJcblx0XHRcdGlmICggdmFsdWUgPT0gbnVsbCB8fCB2YWx1ZSAhPT0gdmFsdWUgKSB7XHJcblx0XHRcdFx0cmV0dXJuO1xyXG5cdFx0XHR9XHJcblxyXG5cdFx0XHQvLyBJZiBhIG51bWJlciB3YXMgcGFzc2VkIGluLCBhZGQgdGhlIHVuaXQgKGV4Y2VwdCBmb3IgY2VydGFpbiBDU1MgcHJvcGVydGllcylcclxuXHRcdFx0aWYgKCB0eXBlID09PSBcIm51bWJlclwiICkge1xyXG5cdFx0XHRcdHZhbHVlICs9IHJldCAmJiByZXRbIDMgXSB8fCAoIGpRdWVyeS5jc3NOdW1iZXJbIG9yaWdOYW1lIF0gPyBcIlwiIDogXCJweFwiICk7XHJcblx0XHRcdH1cclxuXHJcblx0XHRcdC8vIGJhY2tncm91bmQtKiBwcm9wcyBhZmZlY3Qgb3JpZ2luYWwgY2xvbmUncyB2YWx1ZXNcclxuXHRcdFx0aWYgKCAhc3VwcG9ydC5jbGVhckNsb25lU3R5bGUgJiYgdmFsdWUgPT09IFwiXCIgJiYgbmFtZS5pbmRleE9mKCBcImJhY2tncm91bmRcIiApID09PSAwICkge1xyXG5cdFx0XHRcdHN0eWxlWyBuYW1lIF0gPSBcImluaGVyaXRcIjtcclxuXHRcdFx0fVxyXG5cclxuXHRcdFx0Ly8gSWYgYSBob29rIHdhcyBwcm92aWRlZCwgdXNlIHRoYXQgdmFsdWUsIG90aGVyd2lzZSBqdXN0IHNldCB0aGUgc3BlY2lmaWVkIHZhbHVlXHJcblx0XHRcdGlmICggIWhvb2tzIHx8ICEoIFwic2V0XCIgaW4gaG9va3MgKSB8fFxyXG5cdFx0XHRcdCggdmFsdWUgPSBob29rcy5zZXQoIGVsZW0sIHZhbHVlLCBleHRyYSApICkgIT09IHVuZGVmaW5lZCApIHtcclxuXHJcblx0XHRcdFx0aWYgKCBpc0N1c3RvbVByb3AgKSB7XHJcblx0XHRcdFx0XHRzdHlsZS5zZXRQcm9wZXJ0eSggbmFtZSwgdmFsdWUgKTtcclxuXHRcdFx0XHR9IGVsc2Uge1xyXG5cdFx0XHRcdFx0c3R5bGVbIG5hbWUgXSA9IHZhbHVlO1xyXG5cdFx0XHRcdH1cclxuXHRcdFx0fVxyXG5cclxuXHRcdH0gZWxzZSB7XHJcblxyXG5cdFx0XHQvLyBJZiBhIGhvb2sgd2FzIHByb3ZpZGVkIGdldCB0aGUgbm9uLWNvbXB1dGVkIHZhbHVlIGZyb20gdGhlcmVcclxuXHRcdFx0aWYgKCBob29rcyAmJiBcImdldFwiIGluIGhvb2tzICYmXHJcblx0XHRcdFx0KCByZXQgPSBob29rcy5nZXQoIGVsZW0sIGZhbHNlLCBleHRyYSApICkgIT09IHVuZGVmaW5lZCApIHtcclxuXHJcblx0XHRcdFx0cmV0dXJuIHJldDtcclxuXHRcdFx0fVxyXG5cclxuXHRcdFx0Ly8gT3RoZXJ3aXNlIGp1c3QgZ2V0IHRoZSB2YWx1ZSBmcm9tIHRoZSBzdHlsZSBvYmplY3RcclxuXHRcdFx0cmV0dXJuIHN0eWxlWyBuYW1lIF07XHJcblx0XHR9XHJcblx0fSxcclxuXHJcblx0Y3NzOiBmdW5jdGlvbiggZWxlbSwgbmFtZSwgZXh0cmEsIHN0eWxlcyApIHtcclxuXHRcdHZhciB2YWwsIG51bSwgaG9va3MsXHJcblx0XHRcdG9yaWdOYW1lID0gY2FtZWxDYXNlKCBuYW1lICksXHJcblx0XHRcdGlzQ3VzdG9tUHJvcCA9IHJjdXN0b21Qcm9wLnRlc3QoIG5hbWUgKTtcclxuXHJcblx0XHQvLyBNYWtlIHN1cmUgdGhhdCB3ZSdyZSB3b3JraW5nIHdpdGggdGhlIHJpZ2h0IG5hbWUuIFdlIGRvbid0XHJcblx0XHQvLyB3YW50IHRvIG1vZGlmeSB0aGUgdmFsdWUgaWYgaXQgaXMgYSBDU1MgY3VzdG9tIHByb3BlcnR5XHJcblx0XHQvLyBzaW5jZSB0aGV5IGFyZSB1c2VyLWRlZmluZWQuXHJcblx0XHRpZiAoICFpc0N1c3RvbVByb3AgKSB7XHJcblx0XHRcdG5hbWUgPSBmaW5hbFByb3BOYW1lKCBvcmlnTmFtZSApO1xyXG5cdFx0fVxyXG5cclxuXHRcdC8vIFRyeSBwcmVmaXhlZCBuYW1lIGZvbGxvd2VkIGJ5IHRoZSB1bnByZWZpeGVkIG5hbWVcclxuXHRcdGhvb2tzID0galF1ZXJ5LmNzc0hvb2tzWyBuYW1lIF0gfHwgalF1ZXJ5LmNzc0hvb2tzWyBvcmlnTmFtZSBdO1xyXG5cclxuXHRcdC8vIElmIGEgaG9vayB3YXMgcHJvdmlkZWQgZ2V0IHRoZSBjb21wdXRlZCB2YWx1ZSBmcm9tIHRoZXJlXHJcblx0XHRpZiAoIGhvb2tzICYmIFwiZ2V0XCIgaW4gaG9va3MgKSB7XHJcblx0XHRcdHZhbCA9IGhvb2tzLmdldCggZWxlbSwgdHJ1ZSwgZXh0cmEgKTtcclxuXHRcdH1cclxuXHJcblx0XHQvLyBPdGhlcndpc2UsIGlmIGEgd2F5IHRvIGdldCB0aGUgY29tcHV0ZWQgdmFsdWUgZXhpc3RzLCB1c2UgdGhhdFxyXG5cdFx0aWYgKCB2YWwgPT09IHVuZGVmaW5lZCApIHtcclxuXHRcdFx0dmFsID0gY3VyQ1NTKCBlbGVtLCBuYW1lLCBzdHlsZXMgKTtcclxuXHRcdH1cclxuXHJcblx0XHQvLyBDb252ZXJ0IFwibm9ybWFsXCIgdG8gY29tcHV0ZWQgdmFsdWVcclxuXHRcdGlmICggdmFsID09PSBcIm5vcm1hbFwiICYmIG5hbWUgaW4gY3NzTm9ybWFsVHJhbnNmb3JtICkge1xyXG5cdFx0XHR2YWwgPSBjc3NOb3JtYWxUcmFuc2Zvcm1bIG5hbWUgXTtcclxuXHRcdH1cclxuXHJcblx0XHQvLyBNYWtlIG51bWVyaWMgaWYgZm9yY2VkIG9yIGEgcXVhbGlmaWVyIHdhcyBwcm92aWRlZCBhbmQgdmFsIGxvb2tzIG51bWVyaWNcclxuXHRcdGlmICggZXh0cmEgPT09IFwiXCIgfHwgZXh0cmEgKSB7XHJcblx0XHRcdG51bSA9IHBhcnNlRmxvYXQoIHZhbCApO1xyXG5cdFx0XHRyZXR1cm4gZXh0cmEgPT09IHRydWUgfHwgaXNGaW5pdGUoIG51bSApID8gbnVtIHx8IDAgOiB2YWw7XHJcblx0XHR9XHJcblxyXG5cdFx0cmV0dXJuIHZhbDtcclxuXHR9XHJcbn0gKTtcclxuXHJcbmpRdWVyeS5lYWNoKCBbIFwiaGVpZ2h0XCIsIFwid2lkdGhcIiBdLCBmdW5jdGlvbiggaSwgZGltZW5zaW9uICkge1xyXG5cdGpRdWVyeS5jc3NIb29rc1sgZGltZW5zaW9uIF0gPSB7XHJcblx0XHRnZXQ6IGZ1bmN0aW9uKCBlbGVtLCBjb21wdXRlZCwgZXh0cmEgKSB7XHJcblx0XHRcdGlmICggY29tcHV0ZWQgKSB7XHJcblxyXG5cdFx0XHRcdC8vIENlcnRhaW4gZWxlbWVudHMgY2FuIGhhdmUgZGltZW5zaW9uIGluZm8gaWYgd2UgaW52aXNpYmx5IHNob3cgdGhlbVxyXG5cdFx0XHRcdC8vIGJ1dCBpdCBtdXN0IGhhdmUgYSBjdXJyZW50IGRpc3BsYXkgc3R5bGUgdGhhdCB3b3VsZCBiZW5lZml0XHJcblx0XHRcdFx0cmV0dXJuIHJkaXNwbGF5c3dhcC50ZXN0KCBqUXVlcnkuY3NzKCBlbGVtLCBcImRpc3BsYXlcIiApICkgJiZcclxuXHJcblx0XHRcdFx0XHQvLyBTdXBwb3J0OiBTYWZhcmkgOCtcclxuXHRcdFx0XHRcdC8vIFRhYmxlIGNvbHVtbnMgaW4gU2FmYXJpIGhhdmUgbm9uLXplcm8gb2Zmc2V0V2lkdGggJiB6ZXJvXHJcblx0XHRcdFx0XHQvLyBnZXRCb3VuZGluZ0NsaWVudFJlY3QoKS53aWR0aCB1bmxlc3MgZGlzcGxheSBpcyBjaGFuZ2VkLlxyXG5cdFx0XHRcdFx0Ly8gU3VwcG9ydDogSUUgPD0xMSBvbmx5XHJcblx0XHRcdFx0XHQvLyBSdW5uaW5nIGdldEJvdW5kaW5nQ2xpZW50UmVjdCBvbiBhIGRpc2Nvbm5lY3RlZCBub2RlXHJcblx0XHRcdFx0XHQvLyBpbiBJRSB0aHJvd3MgYW4gZXJyb3IuXHJcblx0XHRcdFx0XHQoICFlbGVtLmdldENsaWVudFJlY3RzKCkubGVuZ3RoIHx8ICFlbGVtLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpLndpZHRoICkgP1xyXG5cdFx0XHRcdFx0XHRzd2FwKCBlbGVtLCBjc3NTaG93LCBmdW5jdGlvbigpIHtcclxuXHRcdFx0XHRcdFx0XHRyZXR1cm4gZ2V0V2lkdGhPckhlaWdodCggZWxlbSwgZGltZW5zaW9uLCBleHRyYSApO1xyXG5cdFx0XHRcdFx0XHR9ICkgOlxyXG5cdFx0XHRcdFx0XHRnZXRXaWR0aE9ySGVpZ2h0KCBlbGVtLCBkaW1lbnNpb24sIGV4dHJhICk7XHJcblx0XHRcdH1cclxuXHRcdH0sXHJcblxyXG5cdFx0c2V0OiBmdW5jdGlvbiggZWxlbSwgdmFsdWUsIGV4dHJhICkge1xyXG5cdFx0XHR2YXIgbWF0Y2hlcyxcclxuXHRcdFx0XHRzdHlsZXMgPSBnZXRTdHlsZXMoIGVsZW0gKSxcclxuXHRcdFx0XHRpc0JvcmRlckJveCA9IGpRdWVyeS5jc3MoIGVsZW0sIFwiYm94U2l6aW5nXCIsIGZhbHNlLCBzdHlsZXMgKSA9PT0gXCJib3JkZXItYm94XCIsXHJcblx0XHRcdFx0c3VidHJhY3QgPSBleHRyYSAmJiBib3hNb2RlbEFkanVzdG1lbnQoXHJcblx0XHRcdFx0XHRlbGVtLFxyXG5cdFx0XHRcdFx0ZGltZW5zaW9uLFxyXG5cdFx0XHRcdFx0ZXh0cmEsXHJcblx0XHRcdFx0XHRpc0JvcmRlckJveCxcclxuXHRcdFx0XHRcdHN0eWxlc1xyXG5cdFx0XHRcdCk7XHJcblxyXG5cdFx0XHQvLyBBY2NvdW50IGZvciB1bnJlbGlhYmxlIGJvcmRlci1ib3ggZGltZW5zaW9ucyBieSBjb21wYXJpbmcgb2Zmc2V0KiB0byBjb21wdXRlZCBhbmRcclxuXHRcdFx0Ly8gZmFraW5nIGEgY29udGVudC1ib3ggdG8gZ2V0IGJvcmRlciBhbmQgcGFkZGluZyAoZ2gtMzY5OSlcclxuXHRcdFx0aWYgKCBpc0JvcmRlckJveCAmJiBzdXBwb3J0LnNjcm9sbGJveFNpemUoKSA9PT0gc3R5bGVzLnBvc2l0aW9uICkge1xyXG5cdFx0XHRcdHN1YnRyYWN0IC09IE1hdGguY2VpbChcclxuXHRcdFx0XHRcdGVsZW1bIFwib2Zmc2V0XCIgKyBkaW1lbnNpb25bIDAgXS50b1VwcGVyQ2FzZSgpICsgZGltZW5zaW9uLnNsaWNlKCAxICkgXSAtXHJcblx0XHRcdFx0XHRwYXJzZUZsb2F0KCBzdHlsZXNbIGRpbWVuc2lvbiBdICkgLVxyXG5cdFx0XHRcdFx0Ym94TW9kZWxBZGp1c3RtZW50KCBlbGVtLCBkaW1lbnNpb24sIFwiYm9yZGVyXCIsIGZhbHNlLCBzdHlsZXMgKSAtXHJcblx0XHRcdFx0XHQwLjVcclxuXHRcdFx0XHQpO1xyXG5cdFx0XHR9XHJcblxyXG5cdFx0XHQvLyBDb252ZXJ0IHRvIHBpeGVscyBpZiB2YWx1ZSBhZGp1c3RtZW50IGlzIG5lZWRlZFxyXG5cdFx0XHRpZiAoIHN1YnRyYWN0ICYmICggbWF0Y2hlcyA9IHJjc3NOdW0uZXhlYyggdmFsdWUgKSApICYmXHJcblx0XHRcdFx0KCBtYXRjaGVzWyAzIF0gfHwgXCJweFwiICkgIT09IFwicHhcIiApIHtcclxuXHJcblx0XHRcdFx0ZWxlbS5zdHlsZVsgZGltZW5zaW9uIF0gPSB2YWx1ZTtcclxuXHRcdFx0XHR2YWx1ZSA9IGpRdWVyeS5jc3MoIGVsZW0sIGRpbWVuc2lvbiApO1xyXG5cdFx0XHR9XHJcblxyXG5cdFx0XHRyZXR1cm4gc2V0UG9zaXRpdmVOdW1iZXIoIGVsZW0sIHZhbHVlLCBzdWJ0cmFjdCApO1xyXG5cdFx0fVxyXG5cdH07XHJcbn0gKTtcclxuXHJcbmpRdWVyeS5jc3NIb29rcy5tYXJnaW5MZWZ0ID0gYWRkR2V0SG9va0lmKCBzdXBwb3J0LnJlbGlhYmxlTWFyZ2luTGVmdCxcclxuXHRmdW5jdGlvbiggZWxlbSwgY29tcHV0ZWQgKSB7XHJcblx0XHRpZiAoIGNvbXB1dGVkICkge1xyXG5cdFx0XHRyZXR1cm4gKCBwYXJzZUZsb2F0KCBjdXJDU1MoIGVsZW0sIFwibWFyZ2luTGVmdFwiICkgKSB8fFxyXG5cdFx0XHRcdGVsZW0uZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCkubGVmdCAtXHJcblx0XHRcdFx0XHRzd2FwKCBlbGVtLCB7IG1hcmdpbkxlZnQ6IDAgfSwgZnVuY3Rpb24oKSB7XHJcblx0XHRcdFx0XHRcdHJldHVybiBlbGVtLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpLmxlZnQ7XHJcblx0XHRcdFx0XHR9IClcclxuXHRcdFx0XHQpICsgXCJweFwiO1xyXG5cdFx0fVxyXG5cdH1cclxuKTtcclxuXHJcbi8vIFRoZXNlIGhvb2tzIGFyZSB1c2VkIGJ5IGFuaW1hdGUgdG8gZXhwYW5kIHByb3BlcnRpZXNcclxualF1ZXJ5LmVhY2goIHtcclxuXHRtYXJnaW46IFwiXCIsXHJcblx0cGFkZGluZzogXCJcIixcclxuXHRib3JkZXI6IFwiV2lkdGhcIlxyXG59LCBmdW5jdGlvbiggcHJlZml4LCBzdWZmaXggKSB7XHJcblx0alF1ZXJ5LmNzc0hvb2tzWyBwcmVmaXggKyBzdWZmaXggXSA9IHtcclxuXHRcdGV4cGFuZDogZnVuY3Rpb24oIHZhbHVlICkge1xyXG5cdFx0XHR2YXIgaSA9IDAsXHJcblx0XHRcdFx0ZXhwYW5kZWQgPSB7fSxcclxuXHJcblx0XHRcdFx0Ly8gQXNzdW1lcyBhIHNpbmdsZSBudW1iZXIgaWYgbm90IGEgc3RyaW5nXHJcblx0XHRcdFx0cGFydHMgPSB0eXBlb2YgdmFsdWUgPT09IFwic3RyaW5nXCIgPyB2YWx1ZS5zcGxpdCggXCIgXCIgKSA6IFsgdmFsdWUgXTtcclxuXHJcblx0XHRcdGZvciAoIDsgaSA8IDQ7IGkrKyApIHtcclxuXHRcdFx0XHRleHBhbmRlZFsgcHJlZml4ICsgY3NzRXhwYW5kWyBpIF0gKyBzdWZmaXggXSA9XHJcblx0XHRcdFx0XHRwYXJ0c1sgaSBdIHx8IHBhcnRzWyBpIC0gMiBdIHx8IHBhcnRzWyAwIF07XHJcblx0XHRcdH1cclxuXHJcblx0XHRcdHJldHVybiBleHBhbmRlZDtcclxuXHRcdH1cclxuXHR9O1xyXG5cclxuXHRpZiAoIHByZWZpeCAhPT0gXCJtYXJnaW5cIiApIHtcclxuXHRcdGpRdWVyeS5jc3NIb29rc1sgcHJlZml4ICsgc3VmZml4IF0uc2V0ID0gc2V0UG9zaXRpdmVOdW1iZXI7XHJcblx0fVxyXG59ICk7XHJcblxyXG5qUXVlcnkuZm4uZXh0ZW5kKCB7XHJcblx0Y3NzOiBmdW5jdGlvbiggbmFtZSwgdmFsdWUgKSB7XHJcblx0XHRyZXR1cm4gYWNjZXNzKCB0aGlzLCBmdW5jdGlvbiggZWxlbSwgbmFtZSwgdmFsdWUgKSB7XHJcblx0XHRcdHZhciBzdHlsZXMsIGxlbixcclxuXHRcdFx0XHRtYXAgPSB7fSxcclxuXHRcdFx0XHRpID0gMDtcclxuXHJcblx0XHRcdGlmICggQXJyYXkuaXNBcnJheSggbmFtZSApICkge1xyXG5cdFx0XHRcdHN0eWxlcyA9IGdldFN0eWxlcyggZWxlbSApO1xyXG5cdFx0XHRcdGxlbiA9IG5hbWUubGVuZ3RoO1xyXG5cclxuXHRcdFx0XHRmb3IgKCA7IGkgPCBsZW47IGkrKyApIHtcclxuXHRcdFx0XHRcdG1hcFsgbmFtZVsgaSBdIF0gPSBqUXVlcnkuY3NzKCBlbGVtLCBuYW1lWyBpIF0sIGZhbHNlLCBzdHlsZXMgKTtcclxuXHRcdFx0XHR9XHJcblxyXG5cdFx0XHRcdHJldHVybiBtYXA7XHJcblx0XHRcdH1cclxuXHJcblx0XHRcdHJldHVybiB2YWx1ZSAhPT0gdW5kZWZpbmVkID9cclxuXHRcdFx0XHRqUXVlcnkuc3R5bGUoIGVsZW0sIG5hbWUsIHZhbHVlICkgOlxyXG5cdFx0XHRcdGpRdWVyeS5jc3MoIGVsZW0sIG5hbWUgKTtcclxuXHRcdH0sIG5hbWUsIHZhbHVlLCBhcmd1bWVudHMubGVuZ3RoID4gMSApO1xyXG5cdH1cclxufSApO1xyXG5cclxuXHJcbmZ1bmN0aW9uIFR3ZWVuKCBlbGVtLCBvcHRpb25zLCBwcm9wLCBlbmQsIGVhc2luZyApIHtcclxuXHRyZXR1cm4gbmV3IFR3ZWVuLnByb3RvdHlwZS5pbml0KCBlbGVtLCBvcHRpb25zLCBwcm9wLCBlbmQsIGVhc2luZyApO1xyXG59XHJcbmpRdWVyeS5Ud2VlbiA9IFR3ZWVuO1xyXG5cclxuVHdlZW4ucHJvdG90eXBlID0ge1xyXG5cdGNvbnN0cnVjdG9yOiBUd2VlbixcclxuXHRpbml0OiBmdW5jdGlvbiggZWxlbSwgb3B0aW9ucywgcHJvcCwgZW5kLCBlYXNpbmcsIHVuaXQgKSB7XHJcblx0XHR0aGlzLmVsZW0gPSBlbGVtO1xyXG5cdFx0dGhpcy5wcm9wID0gcHJvcDtcclxuXHRcdHRoaXMuZWFzaW5nID0gZWFzaW5nIHx8IGpRdWVyeS5lYXNpbmcuX2RlZmF1bHQ7XHJcblx0XHR0aGlzLm9wdGlvbnMgPSBvcHRpb25zO1xyXG5cdFx0dGhpcy5zdGFydCA9IHRoaXMubm93ID0gdGhpcy5jdXIoKTtcclxuXHRcdHRoaXMuZW5kID0gZW5kO1xyXG5cdFx0dGhpcy51bml0ID0gdW5pdCB8fCAoIGpRdWVyeS5jc3NOdW1iZXJbIHByb3AgXSA/IFwiXCIgOiBcInB4XCIgKTtcclxuXHR9LFxyXG5cdGN1cjogZnVuY3Rpb24oKSB7XHJcblx0XHR2YXIgaG9va3MgPSBUd2Vlbi5wcm9wSG9va3NbIHRoaXMucHJvcCBdO1xyXG5cclxuXHRcdHJldHVybiBob29rcyAmJiBob29rcy5nZXQgP1xyXG5cdFx0XHRob29rcy5nZXQoIHRoaXMgKSA6XHJcblx0XHRcdFR3ZWVuLnByb3BIb29rcy5fZGVmYXVsdC5nZXQoIHRoaXMgKTtcclxuXHR9LFxyXG5cdHJ1bjogZnVuY3Rpb24oIHBlcmNlbnQgKSB7XHJcblx0XHR2YXIgZWFzZWQsXHJcblx0XHRcdGhvb2tzID0gVHdlZW4ucHJvcEhvb2tzWyB0aGlzLnByb3AgXTtcclxuXHJcblx0XHRpZiAoIHRoaXMub3B0aW9ucy5kdXJhdGlvbiApIHtcclxuXHRcdFx0dGhpcy5wb3MgPSBlYXNlZCA9IGpRdWVyeS5lYXNpbmdbIHRoaXMuZWFzaW5nIF0oXHJcblx0XHRcdFx0cGVyY2VudCwgdGhpcy5vcHRpb25zLmR1cmF0aW9uICogcGVyY2VudCwgMCwgMSwgdGhpcy5vcHRpb25zLmR1cmF0aW9uXHJcblx0XHRcdCk7XHJcblx0XHR9IGVsc2Uge1xyXG5cdFx0XHR0aGlzLnBvcyA9IGVhc2VkID0gcGVyY2VudDtcclxuXHRcdH1cclxuXHRcdHRoaXMubm93ID0gKCB0aGlzLmVuZCAtIHRoaXMuc3RhcnQgKSAqIGVhc2VkICsgdGhpcy5zdGFydDtcclxuXHJcblx0XHRpZiAoIHRoaXMub3B0aW9ucy5zdGVwICkge1xyXG5cdFx0XHR0aGlzLm9wdGlvbnMuc3RlcC5jYWxsKCB0aGlzLmVsZW0sIHRoaXMubm93LCB0aGlzICk7XHJcblx0XHR9XHJcblxyXG5cdFx0aWYgKCBob29rcyAmJiBob29rcy5zZXQgKSB7XHJcblx0XHRcdGhvb2tzLnNldCggdGhpcyApO1xyXG5cdFx0fSBlbHNlIHtcclxuXHRcdFx0VHdlZW4ucHJvcEhvb2tzLl9kZWZhdWx0LnNldCggdGhpcyApO1xyXG5cdFx0fVxyXG5cdFx0cmV0dXJuIHRoaXM7XHJcblx0fVxyXG59O1xyXG5cclxuVHdlZW4ucHJvdG90eXBlLmluaXQucHJvdG90eXBlID0gVHdlZW4ucHJvdG90eXBlO1xyXG5cclxuVHdlZW4ucHJvcEhvb2tzID0ge1xyXG5cdF9kZWZhdWx0OiB7XHJcblx0XHRnZXQ6IGZ1bmN0aW9uKCB0d2VlbiApIHtcclxuXHRcdFx0dmFyIHJlc3VsdDtcclxuXHJcblx0XHRcdC8vIFVzZSBhIHByb3BlcnR5IG9uIHRoZSBlbGVtZW50IGRpcmVjdGx5IHdoZW4gaXQgaXMgbm90IGEgRE9NIGVsZW1lbnQsXHJcblx0XHRcdC8vIG9yIHdoZW4gdGhlcmUgaXMgbm8gbWF0Y2hpbmcgc3R5bGUgcHJvcGVydHkgdGhhdCBleGlzdHMuXHJcblx0XHRcdGlmICggdHdlZW4uZWxlbS5ub2RlVHlwZSAhPT0gMSB8fFxyXG5cdFx0XHRcdHR3ZWVuLmVsZW1bIHR3ZWVuLnByb3AgXSAhPSBudWxsICYmIHR3ZWVuLmVsZW0uc3R5bGVbIHR3ZWVuLnByb3AgXSA9PSBudWxsICkge1xyXG5cdFx0XHRcdHJldHVybiB0d2Vlbi5lbGVtWyB0d2Vlbi5wcm9wIF07XHJcblx0XHRcdH1cclxuXHJcblx0XHRcdC8vIFBhc3NpbmcgYW4gZW1wdHkgc3RyaW5nIGFzIGEgM3JkIHBhcmFtZXRlciB0byAuY3NzIHdpbGwgYXV0b21hdGljYWxseVxyXG5cdFx0XHQvLyBhdHRlbXB0IGEgcGFyc2VGbG9hdCBhbmQgZmFsbGJhY2sgdG8gYSBzdHJpbmcgaWYgdGhlIHBhcnNlIGZhaWxzLlxyXG5cdFx0XHQvLyBTaW1wbGUgdmFsdWVzIHN1Y2ggYXMgXCIxMHB4XCIgYXJlIHBhcnNlZCB0byBGbG9hdDtcclxuXHRcdFx0Ly8gY29tcGxleCB2YWx1ZXMgc3VjaCBhcyBcInJvdGF0ZSgxcmFkKVwiIGFyZSByZXR1cm5lZCBhcy1pcy5cclxuXHRcdFx0cmVzdWx0ID0galF1ZXJ5LmNzcyggdHdlZW4uZWxlbSwgdHdlZW4ucHJvcCwgXCJcIiApO1xyXG5cclxuXHRcdFx0Ly8gRW1wdHkgc3RyaW5ncywgbnVsbCwgdW5kZWZpbmVkIGFuZCBcImF1dG9cIiBhcmUgY29udmVydGVkIHRvIDAuXHJcblx0XHRcdHJldHVybiAhcmVzdWx0IHx8IHJlc3VsdCA9PT0gXCJhdXRvXCIgPyAwIDogcmVzdWx0O1xyXG5cdFx0fSxcclxuXHRcdHNldDogZnVuY3Rpb24oIHR3ZWVuICkge1xyXG5cclxuXHRcdFx0Ly8gVXNlIHN0ZXAgaG9vayBmb3IgYmFjayBjb21wYXQuXHJcblx0XHRcdC8vIFVzZSBjc3NIb29rIGlmIGl0cyB0aGVyZS5cclxuXHRcdFx0Ly8gVXNlIC5zdHlsZSBpZiBhdmFpbGFibGUgYW5kIHVzZSBwbGFpbiBwcm9wZXJ0aWVzIHdoZXJlIGF2YWlsYWJsZS5cclxuXHRcdFx0aWYgKCBqUXVlcnkuZnguc3RlcFsgdHdlZW4ucHJvcCBdICkge1xyXG5cdFx0XHRcdGpRdWVyeS5meC5zdGVwWyB0d2Vlbi5wcm9wIF0oIHR3ZWVuICk7XHJcblx0XHRcdH0gZWxzZSBpZiAoIHR3ZWVuLmVsZW0ubm9kZVR5cGUgPT09IDEgJiZcclxuXHRcdFx0XHQoIHR3ZWVuLmVsZW0uc3R5bGVbIGpRdWVyeS5jc3NQcm9wc1sgdHdlZW4ucHJvcCBdIF0gIT0gbnVsbCB8fFxyXG5cdFx0XHRcdFx0alF1ZXJ5LmNzc0hvb2tzWyB0d2Vlbi5wcm9wIF0gKSApIHtcclxuXHRcdFx0XHRqUXVlcnkuc3R5bGUoIHR3ZWVuLmVsZW0sIHR3ZWVuLnByb3AsIHR3ZWVuLm5vdyArIHR3ZWVuLnVuaXQgKTtcclxuXHRcdFx0fSBlbHNlIHtcclxuXHRcdFx0XHR0d2Vlbi5lbGVtWyB0d2Vlbi5wcm9wIF0gPSB0d2Vlbi5ub3c7XHJcblx0XHRcdH1cclxuXHRcdH1cclxuXHR9XHJcbn07XHJcblxyXG4vLyBTdXBwb3J0OiBJRSA8PTkgb25seVxyXG4vLyBQYW5pYyBiYXNlZCBhcHByb2FjaCB0byBzZXR0aW5nIHRoaW5ncyBvbiBkaXNjb25uZWN0ZWQgbm9kZXNcclxuVHdlZW4ucHJvcEhvb2tzLnNjcm9sbFRvcCA9IFR3ZWVuLnByb3BIb29rcy5zY3JvbGxMZWZ0ID0ge1xyXG5cdHNldDogZnVuY3Rpb24oIHR3ZWVuICkge1xyXG5cdFx0aWYgKCB0d2Vlbi5lbGVtLm5vZGVUeXBlICYmIHR3ZWVuLmVsZW0ucGFyZW50Tm9kZSApIHtcclxuXHRcdFx0dHdlZW4uZWxlbVsgdHdlZW4ucHJvcCBdID0gdHdlZW4ubm93O1xyXG5cdFx0fVxyXG5cdH1cclxufTtcclxuXHJcbmpRdWVyeS5lYXNpbmcgPSB7XHJcblx0bGluZWFyOiBmdW5jdGlvbiggcCApIHtcclxuXHRcdHJldHVybiBwO1xyXG5cdH0sXHJcblx0c3dpbmc6IGZ1bmN0aW9uKCBwICkge1xyXG5cdFx0cmV0dXJuIDAuNSAtIE1hdGguY29zKCBwICogTWF0aC5QSSApIC8gMjtcclxuXHR9LFxyXG5cdF9kZWZhdWx0OiBcInN3aW5nXCJcclxufTtcclxuXHJcbmpRdWVyeS5meCA9IFR3ZWVuLnByb3RvdHlwZS5pbml0O1xyXG5cclxuLy8gQmFjayBjb21wYXQgPDEuOCBleHRlbnNpb24gcG9pbnRcclxualF1ZXJ5LmZ4LnN0ZXAgPSB7fTtcclxuXHJcblxyXG5cclxuXHJcbnZhclxyXG5cdGZ4Tm93LCBpblByb2dyZXNzLFxyXG5cdHJmeHR5cGVzID0gL14oPzp0b2dnbGV8c2hvd3xoaWRlKSQvLFxyXG5cdHJydW4gPSAvcXVldWVIb29rcyQvO1xyXG5cclxuZnVuY3Rpb24gc2NoZWR1bGUoKSB7XHJcblx0aWYgKCBpblByb2dyZXNzICkge1xyXG5cdFx0aWYgKCBkb2N1bWVudC5oaWRkZW4gPT09IGZhbHNlICYmIHdpbmRvdy5yZXF1ZXN0QW5pbWF0aW9uRnJhbWUgKSB7XHJcblx0XHRcdHdpbmRvdy5yZXF1ZXN0QW5pbWF0aW9uRnJhbWUoIHNjaGVkdWxlICk7XHJcblx0XHR9IGVsc2Uge1xyXG5cdFx0XHR3aW5kb3cuc2V0VGltZW91dCggc2NoZWR1bGUsIGpRdWVyeS5meC5pbnRlcnZhbCApO1xyXG5cdFx0fVxyXG5cclxuXHRcdGpRdWVyeS5meC50aWNrKCk7XHJcblx0fVxyXG59XHJcblxyXG4vLyBBbmltYXRpb25zIGNyZWF0ZWQgc3luY2hyb25vdXNseSB3aWxsIHJ1biBzeW5jaHJvbm91c2x5XHJcbmZ1bmN0aW9uIGNyZWF0ZUZ4Tm93KCkge1xyXG5cdHdpbmRvdy5zZXRUaW1lb3V0KCBmdW5jdGlvbigpIHtcclxuXHRcdGZ4Tm93ID0gdW5kZWZpbmVkO1xyXG5cdH0gKTtcclxuXHRyZXR1cm4gKCBmeE5vdyA9IERhdGUubm93KCkgKTtcclxufVxyXG5cclxuLy8gR2VuZXJhdGUgcGFyYW1ldGVycyB0byBjcmVhdGUgYSBzdGFuZGFyZCBhbmltYXRpb25cclxuZnVuY3Rpb24gZ2VuRngoIHR5cGUsIGluY2x1ZGVXaWR0aCApIHtcclxuXHR2YXIgd2hpY2gsXHJcblx0XHRpID0gMCxcclxuXHRcdGF0dHJzID0geyBoZWlnaHQ6IHR5cGUgfTtcclxuXHJcblx0Ly8gSWYgd2UgaW5jbHVkZSB3aWR0aCwgc3RlcCB2YWx1ZSBpcyAxIHRvIGRvIGFsbCBjc3NFeHBhbmQgdmFsdWVzLFxyXG5cdC8vIG90aGVyd2lzZSBzdGVwIHZhbHVlIGlzIDIgdG8gc2tpcCBvdmVyIExlZnQgYW5kIFJpZ2h0XHJcblx0aW5jbHVkZVdpZHRoID0gaW5jbHVkZVdpZHRoID8gMSA6IDA7XHJcblx0Zm9yICggOyBpIDwgNDsgaSArPSAyIC0gaW5jbHVkZVdpZHRoICkge1xyXG5cdFx0d2hpY2ggPSBjc3NFeHBhbmRbIGkgXTtcclxuXHRcdGF0dHJzWyBcIm1hcmdpblwiICsgd2hpY2ggXSA9IGF0dHJzWyBcInBhZGRpbmdcIiArIHdoaWNoIF0gPSB0eXBlO1xyXG5cdH1cclxuXHJcblx0aWYgKCBpbmNsdWRlV2lkdGggKSB7XHJcblx0XHRhdHRycy5vcGFjaXR5ID0gYXR0cnMud2lkdGggPSB0eXBlO1xyXG5cdH1cclxuXHJcblx0cmV0dXJuIGF0dHJzO1xyXG59XHJcblxyXG5mdW5jdGlvbiBjcmVhdGVUd2VlbiggdmFsdWUsIHByb3AsIGFuaW1hdGlvbiApIHtcclxuXHR2YXIgdHdlZW4sXHJcblx0XHRjb2xsZWN0aW9uID0gKCBBbmltYXRpb24udHdlZW5lcnNbIHByb3AgXSB8fCBbXSApLmNvbmNhdCggQW5pbWF0aW9uLnR3ZWVuZXJzWyBcIipcIiBdICksXHJcblx0XHRpbmRleCA9IDAsXHJcblx0XHRsZW5ndGggPSBjb2xsZWN0aW9uLmxlbmd0aDtcclxuXHRmb3IgKCA7IGluZGV4IDwgbGVuZ3RoOyBpbmRleCsrICkge1xyXG5cdFx0aWYgKCAoIHR3ZWVuID0gY29sbGVjdGlvblsgaW5kZXggXS5jYWxsKCBhbmltYXRpb24sIHByb3AsIHZhbHVlICkgKSApIHtcclxuXHJcblx0XHRcdC8vIFdlJ3JlIGRvbmUgd2l0aCB0aGlzIHByb3BlcnR5XHJcblx0XHRcdHJldHVybiB0d2VlbjtcclxuXHRcdH1cclxuXHR9XHJcbn1cclxuXHJcbmZ1bmN0aW9uIGRlZmF1bHRQcmVmaWx0ZXIoIGVsZW0sIHByb3BzLCBvcHRzICkge1xyXG5cdHZhciBwcm9wLCB2YWx1ZSwgdG9nZ2xlLCBob29rcywgb2xkZmlyZSwgcHJvcFR3ZWVuLCByZXN0b3JlRGlzcGxheSwgZGlzcGxheSxcclxuXHRcdGlzQm94ID0gXCJ3aWR0aFwiIGluIHByb3BzIHx8IFwiaGVpZ2h0XCIgaW4gcHJvcHMsXHJcblx0XHRhbmltID0gdGhpcyxcclxuXHRcdG9yaWcgPSB7fSxcclxuXHRcdHN0eWxlID0gZWxlbS5zdHlsZSxcclxuXHRcdGhpZGRlbiA9IGVsZW0ubm9kZVR5cGUgJiYgaXNIaWRkZW5XaXRoaW5UcmVlKCBlbGVtICksXHJcblx0XHRkYXRhU2hvdyA9IGRhdGFQcml2LmdldCggZWxlbSwgXCJmeHNob3dcIiApO1xyXG5cclxuXHQvLyBRdWV1ZS1za2lwcGluZyBhbmltYXRpb25zIGhpamFjayB0aGUgZnggaG9va3NcclxuXHRpZiAoICFvcHRzLnF1ZXVlICkge1xyXG5cdFx0aG9va3MgPSBqUXVlcnkuX3F1ZXVlSG9va3MoIGVsZW0sIFwiZnhcIiApO1xyXG5cdFx0aWYgKCBob29rcy51bnF1ZXVlZCA9PSBudWxsICkge1xyXG5cdFx0XHRob29rcy51bnF1ZXVlZCA9IDA7XHJcblx0XHRcdG9sZGZpcmUgPSBob29rcy5lbXB0eS5maXJlO1xyXG5cdFx0XHRob29rcy5lbXB0eS5maXJlID0gZnVuY3Rpb24oKSB7XHJcblx0XHRcdFx0aWYgKCAhaG9va3MudW5xdWV1ZWQgKSB7XHJcblx0XHRcdFx0XHRvbGRmaXJlKCk7XHJcblx0XHRcdFx0fVxyXG5cdFx0XHR9O1xyXG5cdFx0fVxyXG5cdFx0aG9va3MudW5xdWV1ZWQrKztcclxuXHJcblx0XHRhbmltLmFsd2F5cyggZnVuY3Rpb24oKSB7XHJcblxyXG5cdFx0XHQvLyBFbnN1cmUgdGhlIGNvbXBsZXRlIGhhbmRsZXIgaXMgY2FsbGVkIGJlZm9yZSB0aGlzIGNvbXBsZXRlc1xyXG5cdFx0XHRhbmltLmFsd2F5cyggZnVuY3Rpb24oKSB7XHJcblx0XHRcdFx0aG9va3MudW5xdWV1ZWQtLTtcclxuXHRcdFx0XHRpZiAoICFqUXVlcnkucXVldWUoIGVsZW0sIFwiZnhcIiApLmxlbmd0aCApIHtcclxuXHRcdFx0XHRcdGhvb2tzLmVtcHR5LmZpcmUoKTtcclxuXHRcdFx0XHR9XHJcblx0XHRcdH0gKTtcclxuXHRcdH0gKTtcclxuXHR9XHJcblxyXG5cdC8vIERldGVjdCBzaG93L2hpZGUgYW5pbWF0aW9uc1xyXG5cdGZvciAoIHByb3AgaW4gcHJvcHMgKSB7XHJcblx0XHR2YWx1ZSA9IHByb3BzWyBwcm9wIF07XHJcblx0XHRpZiAoIHJmeHR5cGVzLnRlc3QoIHZhbHVlICkgKSB7XHJcblx0XHRcdGRlbGV0ZSBwcm9wc1sgcHJvcCBdO1xyXG5cdFx0XHR0b2dnbGUgPSB0b2dnbGUgfHwgdmFsdWUgPT09IFwidG9nZ2xlXCI7XHJcblx0XHRcdGlmICggdmFsdWUgPT09ICggaGlkZGVuID8gXCJoaWRlXCIgOiBcInNob3dcIiApICkge1xyXG5cclxuXHRcdFx0XHQvLyBQcmV0ZW5kIHRvIGJlIGhpZGRlbiBpZiB0aGlzIGlzIGEgXCJzaG93XCIgYW5kXHJcblx0XHRcdFx0Ly8gdGhlcmUgaXMgc3RpbGwgZGF0YSBmcm9tIGEgc3RvcHBlZCBzaG93L2hpZGVcclxuXHRcdFx0XHRpZiAoIHZhbHVlID09PSBcInNob3dcIiAmJiBkYXRhU2hvdyAmJiBkYXRhU2hvd1sgcHJvcCBdICE9PSB1bmRlZmluZWQgKSB7XHJcblx0XHRcdFx0XHRoaWRkZW4gPSB0cnVlO1xyXG5cclxuXHRcdFx0XHQvLyBJZ25vcmUgYWxsIG90aGVyIG5vLW9wIHNob3cvaGlkZSBkYXRhXHJcblx0XHRcdFx0fSBlbHNlIHtcclxuXHRcdFx0XHRcdGNvbnRpbnVlO1xyXG5cdFx0XHRcdH1cclxuXHRcdFx0fVxyXG5cdFx0XHRvcmlnWyBwcm9wIF0gPSBkYXRhU2hvdyAmJiBkYXRhU2hvd1sgcHJvcCBdIHx8IGpRdWVyeS5zdHlsZSggZWxlbSwgcHJvcCApO1xyXG5cdFx0fVxyXG5cdH1cclxuXHJcblx0Ly8gQmFpbCBvdXQgaWYgdGhpcyBpcyBhIG5vLW9wIGxpa2UgLmhpZGUoKS5oaWRlKClcclxuXHRwcm9wVHdlZW4gPSAhalF1ZXJ5LmlzRW1wdHlPYmplY3QoIHByb3BzICk7XHJcblx0aWYgKCAhcHJvcFR3ZWVuICYmIGpRdWVyeS5pc0VtcHR5T2JqZWN0KCBvcmlnICkgKSB7XHJcblx0XHRyZXR1cm47XHJcblx0fVxyXG5cclxuXHQvLyBSZXN0cmljdCBcIm92ZXJmbG93XCIgYW5kIFwiZGlzcGxheVwiIHN0eWxlcyBkdXJpbmcgYm94IGFuaW1hdGlvbnNcclxuXHRpZiAoIGlzQm94ICYmIGVsZW0ubm9kZVR5cGUgPT09IDEgKSB7XHJcblxyXG5cdFx0Ly8gU3VwcG9ydDogSUUgPD05IC0gMTEsIEVkZ2UgMTIgLSAxNVxyXG5cdFx0Ly8gUmVjb3JkIGFsbCAzIG92ZXJmbG93IGF0dHJpYnV0ZXMgYmVjYXVzZSBJRSBkb2VzIG5vdCBpbmZlciB0aGUgc2hvcnRoYW5kXHJcblx0XHQvLyBmcm9tIGlkZW50aWNhbGx5LXZhbHVlZCBvdmVyZmxvd1ggYW5kIG92ZXJmbG93WSBhbmQgRWRnZSBqdXN0IG1pcnJvcnNcclxuXHRcdC8vIHRoZSBvdmVyZmxvd1ggdmFsdWUgdGhlcmUuXHJcblx0XHRvcHRzLm92ZXJmbG93ID0gWyBzdHlsZS5vdmVyZmxvdywgc3R5bGUub3ZlcmZsb3dYLCBzdHlsZS5vdmVyZmxvd1kgXTtcclxuXHJcblx0XHQvLyBJZGVudGlmeSBhIGRpc3BsYXkgdHlwZSwgcHJlZmVycmluZyBvbGQgc2hvdy9oaWRlIGRhdGEgb3ZlciB0aGUgQ1NTIGNhc2NhZGVcclxuXHRcdHJlc3RvcmVEaXNwbGF5ID0gZGF0YVNob3cgJiYgZGF0YVNob3cuZGlzcGxheTtcclxuXHRcdGlmICggcmVzdG9yZURpc3BsYXkgPT0gbnVsbCApIHtcclxuXHRcdFx0cmVzdG9yZURpc3BsYXkgPSBkYXRhUHJpdi5nZXQoIGVsZW0sIFwiZGlzcGxheVwiICk7XHJcblx0XHR9XHJcblx0XHRkaXNwbGF5ID0galF1ZXJ5LmNzcyggZWxlbSwgXCJkaXNwbGF5XCIgKTtcclxuXHRcdGlmICggZGlzcGxheSA9PT0gXCJub25lXCIgKSB7XHJcblx0XHRcdGlmICggcmVzdG9yZURpc3BsYXkgKSB7XHJcblx0XHRcdFx0ZGlzcGxheSA9IHJlc3RvcmVEaXNwbGF5O1xyXG5cdFx0XHR9IGVsc2Uge1xyXG5cclxuXHRcdFx0XHQvLyBHZXQgbm9uZW1wdHkgdmFsdWUocykgYnkgdGVtcG9yYXJpbHkgZm9yY2luZyB2aXNpYmlsaXR5XHJcblx0XHRcdFx0c2hvd0hpZGUoIFsgZWxlbSBdLCB0cnVlICk7XHJcblx0XHRcdFx0cmVzdG9yZURpc3BsYXkgPSBlbGVtLnN0eWxlLmRpc3BsYXkgfHwgcmVzdG9yZURpc3BsYXk7XHJcblx0XHRcdFx0ZGlzcGxheSA9IGpRdWVyeS5jc3MoIGVsZW0sIFwiZGlzcGxheVwiICk7XHJcblx0XHRcdFx0c2hvd0hpZGUoIFsgZWxlbSBdICk7XHJcblx0XHRcdH1cclxuXHRcdH1cclxuXHJcblx0XHQvLyBBbmltYXRlIGlubGluZSBlbGVtZW50cyBhcyBpbmxpbmUtYmxvY2tcclxuXHRcdGlmICggZGlzcGxheSA9PT0gXCJpbmxpbmVcIiB8fCBkaXNwbGF5ID09PSBcImlubGluZS1ibG9ja1wiICYmIHJlc3RvcmVEaXNwbGF5ICE9IG51bGwgKSB7XHJcblx0XHRcdGlmICggalF1ZXJ5LmNzcyggZWxlbSwgXCJmbG9hdFwiICkgPT09IFwibm9uZVwiICkge1xyXG5cclxuXHRcdFx0XHQvLyBSZXN0b3JlIHRoZSBvcmlnaW5hbCBkaXNwbGF5IHZhbHVlIGF0IHRoZSBlbmQgb2YgcHVyZSBzaG93L2hpZGUgYW5pbWF0aW9uc1xyXG5cdFx0XHRcdGlmICggIXByb3BUd2VlbiApIHtcclxuXHRcdFx0XHRcdGFuaW0uZG9uZSggZnVuY3Rpb24oKSB7XHJcblx0XHRcdFx0XHRcdHN0eWxlLmRpc3BsYXkgPSByZXN0b3JlRGlzcGxheTtcclxuXHRcdFx0XHRcdH0gKTtcclxuXHRcdFx0XHRcdGlmICggcmVzdG9yZURpc3BsYXkgPT0gbnVsbCApIHtcclxuXHRcdFx0XHRcdFx0ZGlzcGxheSA9IHN0eWxlLmRpc3BsYXk7XHJcblx0XHRcdFx0XHRcdHJlc3RvcmVEaXNwbGF5ID0gZGlzcGxheSA9PT0gXCJub25lXCIgPyBcIlwiIDogZGlzcGxheTtcclxuXHRcdFx0XHRcdH1cclxuXHRcdFx0XHR9XHJcblx0XHRcdFx0c3R5bGUuZGlzcGxheSA9IFwiaW5saW5lLWJsb2NrXCI7XHJcblx0XHRcdH1cclxuXHRcdH1cclxuXHR9XHJcblxyXG5cdGlmICggb3B0cy5vdmVyZmxvdyApIHtcclxuXHRcdHN0eWxlLm92ZXJmbG93ID0gXCJoaWRkZW5cIjtcclxuXHRcdGFuaW0uYWx3YXlzKCBmdW5jdGlvbigpIHtcclxuXHRcdFx0c3R5bGUub3ZlcmZsb3cgPSBvcHRzLm92ZXJmbG93WyAwIF07XHJcblx0XHRcdHN0eWxlLm92ZXJmbG93WCA9IG9wdHMub3ZlcmZsb3dbIDEgXTtcclxuXHRcdFx0c3R5bGUub3ZlcmZsb3dZID0gb3B0cy5vdmVyZmxvd1sgMiBdO1xyXG5cdFx0fSApO1xyXG5cdH1cclxuXHJcblx0Ly8gSW1wbGVtZW50IHNob3cvaGlkZSBhbmltYXRpb25zXHJcblx0cHJvcFR3ZWVuID0gZmFsc2U7XHJcblx0Zm9yICggcHJvcCBpbiBvcmlnICkge1xyXG5cclxuXHRcdC8vIEdlbmVyYWwgc2hvdy9oaWRlIHNldHVwIGZvciB0aGlzIGVsZW1lbnQgYW5pbWF0aW9uXHJcblx0XHRpZiAoICFwcm9wVHdlZW4gKSB7XHJcblx0XHRcdGlmICggZGF0YVNob3cgKSB7XHJcblx0XHRcdFx0aWYgKCBcImhpZGRlblwiIGluIGRhdGFTaG93ICkge1xyXG5cdFx0XHRcdFx0aGlkZGVuID0gZGF0YVNob3cuaGlkZGVuO1xyXG5cdFx0XHRcdH1cclxuXHRcdFx0fSBlbHNlIHtcclxuXHRcdFx0XHRkYXRhU2hvdyA9IGRhdGFQcml2LmFjY2VzcyggZWxlbSwgXCJmeHNob3dcIiwgeyBkaXNwbGF5OiByZXN0b3JlRGlzcGxheSB9ICk7XHJcblx0XHRcdH1cclxuXHJcblx0XHRcdC8vIFN0b3JlIGhpZGRlbi92aXNpYmxlIGZvciB0b2dnbGUgc28gYC5zdG9wKCkudG9nZ2xlKClgIFwicmV2ZXJzZXNcIlxyXG5cdFx0XHRpZiAoIHRvZ2dsZSApIHtcclxuXHRcdFx0XHRkYXRhU2hvdy5oaWRkZW4gPSAhaGlkZGVuO1xyXG5cdFx0XHR9XHJcblxyXG5cdFx0XHQvLyBTaG93IGVsZW1lbnRzIGJlZm9yZSBhbmltYXRpbmcgdGhlbVxyXG5cdFx0XHRpZiAoIGhpZGRlbiApIHtcclxuXHRcdFx0XHRzaG93SGlkZSggWyBlbGVtIF0sIHRydWUgKTtcclxuXHRcdFx0fVxyXG5cclxuXHRcdFx0LyogZXNsaW50LWRpc2FibGUgbm8tbG9vcC1mdW5jICovXHJcblxyXG5cdFx0XHRhbmltLmRvbmUoIGZ1bmN0aW9uKCkge1xyXG5cclxuXHRcdFx0LyogZXNsaW50LWVuYWJsZSBuby1sb29wLWZ1bmMgKi9cclxuXHJcblx0XHRcdFx0Ly8gVGhlIGZpbmFsIHN0ZXAgb2YgYSBcImhpZGVcIiBhbmltYXRpb24gaXMgYWN0dWFsbHkgaGlkaW5nIHRoZSBlbGVtZW50XHJcblx0XHRcdFx0aWYgKCAhaGlkZGVuICkge1xyXG5cdFx0XHRcdFx0c2hvd0hpZGUoIFsgZWxlbSBdICk7XHJcblx0XHRcdFx0fVxyXG5cdFx0XHRcdGRhdGFQcml2LnJlbW92ZSggZWxlbSwgXCJmeHNob3dcIiApO1xyXG5cdFx0XHRcdGZvciAoIHByb3AgaW4gb3JpZyApIHtcclxuXHRcdFx0XHRcdGpRdWVyeS5zdHlsZSggZWxlbSwgcHJvcCwgb3JpZ1sgcHJvcCBdICk7XHJcblx0XHRcdFx0fVxyXG5cdFx0XHR9ICk7XHJcblx0XHR9XHJcblxyXG5cdFx0Ly8gUGVyLXByb3BlcnR5IHNldHVwXHJcblx0XHRwcm9wVHdlZW4gPSBjcmVhdGVUd2VlbiggaGlkZGVuID8gZGF0YVNob3dbIHByb3AgXSA6IDAsIHByb3AsIGFuaW0gKTtcclxuXHRcdGlmICggISggcHJvcCBpbiBkYXRhU2hvdyApICkge1xyXG5cdFx0XHRkYXRhU2hvd1sgcHJvcCBdID0gcHJvcFR3ZWVuLnN0YXJ0O1xyXG5cdFx0XHRpZiAoIGhpZGRlbiApIHtcclxuXHRcdFx0XHRwcm9wVHdlZW4uZW5kID0gcHJvcFR3ZWVuLnN0YXJ0O1xyXG5cdFx0XHRcdHByb3BUd2Vlbi5zdGFydCA9IDA7XHJcblx0XHRcdH1cclxuXHRcdH1cclxuXHR9XHJcbn1cclxuXHJcbmZ1bmN0aW9uIHByb3BGaWx0ZXIoIHByb3BzLCBzcGVjaWFsRWFzaW5nICkge1xyXG5cdHZhciBpbmRleCwgbmFtZSwgZWFzaW5nLCB2YWx1ZSwgaG9va3M7XHJcblxyXG5cdC8vIGNhbWVsQ2FzZSwgc3BlY2lhbEVhc2luZyBhbmQgZXhwYW5kIGNzc0hvb2sgcGFzc1xyXG5cdGZvciAoIGluZGV4IGluIHByb3BzICkge1xyXG5cdFx0bmFtZSA9IGNhbWVsQ2FzZSggaW5kZXggKTtcclxuXHRcdGVhc2luZyA9IHNwZWNpYWxFYXNpbmdbIG5hbWUgXTtcclxuXHRcdHZhbHVlID0gcHJvcHNbIGluZGV4IF07XHJcblx0XHRpZiAoIEFycmF5LmlzQXJyYXkoIHZhbHVlICkgKSB7XHJcblx0XHRcdGVhc2luZyA9IHZhbHVlWyAxIF07XHJcblx0XHRcdHZhbHVlID0gcHJvcHNbIGluZGV4IF0gPSB2YWx1ZVsgMCBdO1xyXG5cdFx0fVxyXG5cclxuXHRcdGlmICggaW5kZXggIT09IG5hbWUgKSB7XHJcblx0XHRcdHByb3BzWyBuYW1lIF0gPSB2YWx1ZTtcclxuXHRcdFx0ZGVsZXRlIHByb3BzWyBpbmRleCBdO1xyXG5cdFx0fVxyXG5cclxuXHRcdGhvb2tzID0galF1ZXJ5LmNzc0hvb2tzWyBuYW1lIF07XHJcblx0XHRpZiAoIGhvb2tzICYmIFwiZXhwYW5kXCIgaW4gaG9va3MgKSB7XHJcblx0XHRcdHZhbHVlID0gaG9va3MuZXhwYW5kKCB2YWx1ZSApO1xyXG5cdFx0XHRkZWxldGUgcHJvcHNbIG5hbWUgXTtcclxuXHJcblx0XHRcdC8vIE5vdCBxdWl0ZSAkLmV4dGVuZCwgdGhpcyB3b24ndCBvdmVyd3JpdGUgZXhpc3Rpbmcga2V5cy5cclxuXHRcdFx0Ly8gUmV1c2luZyAnaW5kZXgnIGJlY2F1c2Ugd2UgaGF2ZSB0aGUgY29ycmVjdCBcIm5hbWVcIlxyXG5cdFx0XHRmb3IgKCBpbmRleCBpbiB2YWx1ZSApIHtcclxuXHRcdFx0XHRpZiAoICEoIGluZGV4IGluIHByb3BzICkgKSB7XHJcblx0XHRcdFx0XHRwcm9wc1sgaW5kZXggXSA9IHZhbHVlWyBpbmRleCBdO1xyXG5cdFx0XHRcdFx0c3BlY2lhbEVhc2luZ1sgaW5kZXggXSA9IGVhc2luZztcclxuXHRcdFx0XHR9XHJcblx0XHRcdH1cclxuXHRcdH0gZWxzZSB7XHJcblx0XHRcdHNwZWNpYWxFYXNpbmdbIG5hbWUgXSA9IGVhc2luZztcclxuXHRcdH1cclxuXHR9XHJcbn1cclxuXHJcbmZ1bmN0aW9uIEFuaW1hdGlvbiggZWxlbSwgcHJvcGVydGllcywgb3B0aW9ucyApIHtcclxuXHR2YXIgcmVzdWx0LFxyXG5cdFx0c3RvcHBlZCxcclxuXHRcdGluZGV4ID0gMCxcclxuXHRcdGxlbmd0aCA9IEFuaW1hdGlvbi5wcmVmaWx0ZXJzLmxlbmd0aCxcclxuXHRcdGRlZmVycmVkID0galF1ZXJ5LkRlZmVycmVkKCkuYWx3YXlzKCBmdW5jdGlvbigpIHtcclxuXHJcblx0XHRcdC8vIERvbid0IG1hdGNoIGVsZW0gaW4gdGhlIDphbmltYXRlZCBzZWxlY3RvclxyXG5cdFx0XHRkZWxldGUgdGljay5lbGVtO1xyXG5cdFx0fSApLFxyXG5cdFx0dGljayA9IGZ1bmN0aW9uKCkge1xyXG5cdFx0XHRpZiAoIHN0b3BwZWQgKSB7XHJcblx0XHRcdFx0cmV0dXJuIGZhbHNlO1xyXG5cdFx0XHR9XHJcblx0XHRcdHZhciBjdXJyZW50VGltZSA9IGZ4Tm93IHx8IGNyZWF0ZUZ4Tm93KCksXHJcblx0XHRcdFx0cmVtYWluaW5nID0gTWF0aC5tYXgoIDAsIGFuaW1hdGlvbi5zdGFydFRpbWUgKyBhbmltYXRpb24uZHVyYXRpb24gLSBjdXJyZW50VGltZSApLFxyXG5cclxuXHRcdFx0XHQvLyBTdXBwb3J0OiBBbmRyb2lkIDIuMyBvbmx5XHJcblx0XHRcdFx0Ly8gQXJjaGFpYyBjcmFzaCBidWcgd29uJ3QgYWxsb3cgdXMgdG8gdXNlIGAxIC0gKCAwLjUgfHwgMCApYCAoIzEyNDk3KVxyXG5cdFx0XHRcdHRlbXAgPSByZW1haW5pbmcgLyBhbmltYXRpb24uZHVyYXRpb24gfHwgMCxcclxuXHRcdFx0XHRwZXJjZW50ID0gMSAtIHRlbXAsXHJcblx0XHRcdFx0aW5kZXggPSAwLFxyXG5cdFx0XHRcdGxlbmd0aCA9IGFuaW1hdGlvbi50d2VlbnMubGVuZ3RoO1xyXG5cclxuXHRcdFx0Zm9yICggOyBpbmRleCA8IGxlbmd0aDsgaW5kZXgrKyApIHtcclxuXHRcdFx0XHRhbmltYXRpb24udHdlZW5zWyBpbmRleCBdLnJ1biggcGVyY2VudCApO1xyXG5cdFx0XHR9XHJcblxyXG5cdFx0XHRkZWZlcnJlZC5ub3RpZnlXaXRoKCBlbGVtLCBbIGFuaW1hdGlvbiwgcGVyY2VudCwgcmVtYWluaW5nIF0gKTtcclxuXHJcblx0XHRcdC8vIElmIHRoZXJlJ3MgbW9yZSB0byBkbywgeWllbGRcclxuXHRcdFx0aWYgKCBwZXJjZW50IDwgMSAmJiBsZW5ndGggKSB7XHJcblx0XHRcdFx0cmV0dXJuIHJlbWFpbmluZztcclxuXHRcdFx0fVxyXG5cclxuXHRcdFx0Ly8gSWYgdGhpcyB3YXMgYW4gZW1wdHkgYW5pbWF0aW9uLCBzeW50aGVzaXplIGEgZmluYWwgcHJvZ3Jlc3Mgbm90aWZpY2F0aW9uXHJcblx0XHRcdGlmICggIWxlbmd0aCApIHtcclxuXHRcdFx0XHRkZWZlcnJlZC5ub3RpZnlXaXRoKCBlbGVtLCBbIGFuaW1hdGlvbiwgMSwgMCBdICk7XHJcblx0XHRcdH1cclxuXHJcblx0XHRcdC8vIFJlc29sdmUgdGhlIGFuaW1hdGlvbiBhbmQgcmVwb3J0IGl0cyBjb25jbHVzaW9uXHJcblx0XHRcdGRlZmVycmVkLnJlc29sdmVXaXRoKCBlbGVtLCBbIGFuaW1hdGlvbiBdICk7XHJcblx0XHRcdHJldHVybiBmYWxzZTtcclxuXHRcdH0sXHJcblx0XHRhbmltYXRpb24gPSBkZWZlcnJlZC5wcm9taXNlKCB7XHJcblx0XHRcdGVsZW06IGVsZW0sXHJcblx0XHRcdHByb3BzOiBqUXVlcnkuZXh0ZW5kKCB7fSwgcHJvcGVydGllcyApLFxyXG5cdFx0XHRvcHRzOiBqUXVlcnkuZXh0ZW5kKCB0cnVlLCB7XHJcblx0XHRcdFx0c3BlY2lhbEVhc2luZzoge30sXHJcblx0XHRcdFx0ZWFzaW5nOiBqUXVlcnkuZWFzaW5nLl9kZWZhdWx0XHJcblx0XHRcdH0sIG9wdGlvbnMgKSxcclxuXHRcdFx0b3JpZ2luYWxQcm9wZXJ0aWVzOiBwcm9wZXJ0aWVzLFxyXG5cdFx0XHRvcmlnaW5hbE9wdGlvbnM6IG9wdGlvbnMsXHJcblx0XHRcdHN0YXJ0VGltZTogZnhOb3cgfHwgY3JlYXRlRnhOb3coKSxcclxuXHRcdFx0ZHVyYXRpb246IG9wdGlvbnMuZHVyYXRpb24sXHJcblx0XHRcdHR3ZWVuczogW10sXHJcblx0XHRcdGNyZWF0ZVR3ZWVuOiBmdW5jdGlvbiggcHJvcCwgZW5kICkge1xyXG5cdFx0XHRcdHZhciB0d2VlbiA9IGpRdWVyeS5Ud2VlbiggZWxlbSwgYW5pbWF0aW9uLm9wdHMsIHByb3AsIGVuZCxcclxuXHRcdFx0XHRcdFx0YW5pbWF0aW9uLm9wdHMuc3BlY2lhbEVhc2luZ1sgcHJvcCBdIHx8IGFuaW1hdGlvbi5vcHRzLmVhc2luZyApO1xyXG5cdFx0XHRcdGFuaW1hdGlvbi50d2VlbnMucHVzaCggdHdlZW4gKTtcclxuXHRcdFx0XHRyZXR1cm4gdHdlZW47XHJcblx0XHRcdH0sXHJcblx0XHRcdHN0b3A6IGZ1bmN0aW9uKCBnb3RvRW5kICkge1xyXG5cdFx0XHRcdHZhciBpbmRleCA9IDAsXHJcblxyXG5cdFx0XHRcdFx0Ly8gSWYgd2UgYXJlIGdvaW5nIHRvIHRoZSBlbmQsIHdlIHdhbnQgdG8gcnVuIGFsbCB0aGUgdHdlZW5zXHJcblx0XHRcdFx0XHQvLyBvdGhlcndpc2Ugd2Ugc2tpcCB0aGlzIHBhcnRcclxuXHRcdFx0XHRcdGxlbmd0aCA9IGdvdG9FbmQgPyBhbmltYXRpb24udHdlZW5zLmxlbmd0aCA6IDA7XHJcblx0XHRcdFx0aWYgKCBzdG9wcGVkICkge1xyXG5cdFx0XHRcdFx0cmV0dXJuIHRoaXM7XHJcblx0XHRcdFx0fVxyXG5cdFx0XHRcdHN0b3BwZWQgPSB0cnVlO1xyXG5cdFx0XHRcdGZvciAoIDsgaW5kZXggPCBsZW5ndGg7IGluZGV4KysgKSB7XHJcblx0XHRcdFx0XHRhbmltYXRpb24udHdlZW5zWyBpbmRleCBdLnJ1biggMSApO1xyXG5cdFx0XHRcdH1cclxuXHJcblx0XHRcdFx0Ly8gUmVzb2x2ZSB3aGVuIHdlIHBsYXllZCB0aGUgbGFzdCBmcmFtZTsgb3RoZXJ3aXNlLCByZWplY3RcclxuXHRcdFx0XHRpZiAoIGdvdG9FbmQgKSB7XHJcblx0XHRcdFx0XHRkZWZlcnJlZC5ub3RpZnlXaXRoKCBlbGVtLCBbIGFuaW1hdGlvbiwgMSwgMCBdICk7XHJcblx0XHRcdFx0XHRkZWZlcnJlZC5yZXNvbHZlV2l0aCggZWxlbSwgWyBhbmltYXRpb24sIGdvdG9FbmQgXSApO1xyXG5cdFx0XHRcdH0gZWxzZSB7XHJcblx0XHRcdFx0XHRkZWZlcnJlZC5yZWplY3RXaXRoKCBlbGVtLCBbIGFuaW1hdGlvbiwgZ290b0VuZCBdICk7XHJcblx0XHRcdFx0fVxyXG5cdFx0XHRcdHJldHVybiB0aGlzO1xyXG5cdFx0XHR9XHJcblx0XHR9ICksXHJcblx0XHRwcm9wcyA9IGFuaW1hdGlvbi5wcm9wcztcclxuXHJcblx0cHJvcEZpbHRlciggcHJvcHMsIGFuaW1hdGlvbi5vcHRzLnNwZWNpYWxFYXNpbmcgKTtcclxuXHJcblx0Zm9yICggOyBpbmRleCA8IGxlbmd0aDsgaW5kZXgrKyApIHtcclxuXHRcdHJlc3VsdCA9IEFuaW1hdGlvbi5wcmVmaWx0ZXJzWyBpbmRleCBdLmNhbGwoIGFuaW1hdGlvbiwgZWxlbSwgcHJvcHMsIGFuaW1hdGlvbi5vcHRzICk7XHJcblx0XHRpZiAoIHJlc3VsdCApIHtcclxuXHRcdFx0aWYgKCBpc0Z1bmN0aW9uKCByZXN1bHQuc3RvcCApICkge1xyXG5cdFx0XHRcdGpRdWVyeS5fcXVldWVIb29rcyggYW5pbWF0aW9uLmVsZW0sIGFuaW1hdGlvbi5vcHRzLnF1ZXVlICkuc3RvcCA9XHJcblx0XHRcdFx0XHRyZXN1bHQuc3RvcC5iaW5kKCByZXN1bHQgKTtcclxuXHRcdFx0fVxyXG5cdFx0XHRyZXR1cm4gcmVzdWx0O1xyXG5cdFx0fVxyXG5cdH1cclxuXHJcblx0alF1ZXJ5Lm1hcCggcHJvcHMsIGNyZWF0ZVR3ZWVuLCBhbmltYXRpb24gKTtcclxuXHJcblx0aWYgKCBpc0Z1bmN0aW9uKCBhbmltYXRpb24ub3B0cy5zdGFydCApICkge1xyXG5cdFx0YW5pbWF0aW9uLm9wdHMuc3RhcnQuY2FsbCggZWxlbSwgYW5pbWF0aW9uICk7XHJcblx0fVxyXG5cclxuXHQvLyBBdHRhY2ggY2FsbGJhY2tzIGZyb20gb3B0aW9uc1xyXG5cdGFuaW1hdGlvblxyXG5cdFx0LnByb2dyZXNzKCBhbmltYXRpb24ub3B0cy5wcm9ncmVzcyApXHJcblx0XHQuZG9uZSggYW5pbWF0aW9uLm9wdHMuZG9uZSwgYW5pbWF0aW9uLm9wdHMuY29tcGxldGUgKVxyXG5cdFx0LmZhaWwoIGFuaW1hdGlvbi5vcHRzLmZhaWwgKVxyXG5cdFx0LmFsd2F5cyggYW5pbWF0aW9uLm9wdHMuYWx3YXlzICk7XHJcblxyXG5cdGpRdWVyeS5meC50aW1lcihcclxuXHRcdGpRdWVyeS5leHRlbmQoIHRpY2ssIHtcclxuXHRcdFx0ZWxlbTogZWxlbSxcclxuXHRcdFx0YW5pbTogYW5pbWF0aW9uLFxyXG5cdFx0XHRxdWV1ZTogYW5pbWF0aW9uLm9wdHMucXVldWVcclxuXHRcdH0gKVxyXG5cdCk7XHJcblxyXG5cdHJldHVybiBhbmltYXRpb247XHJcbn1cclxuXHJcbmpRdWVyeS5BbmltYXRpb24gPSBqUXVlcnkuZXh0ZW5kKCBBbmltYXRpb24sIHtcclxuXHJcblx0dHdlZW5lcnM6IHtcclxuXHRcdFwiKlwiOiBbIGZ1bmN0aW9uKCBwcm9wLCB2YWx1ZSApIHtcclxuXHRcdFx0dmFyIHR3ZWVuID0gdGhpcy5jcmVhdGVUd2VlbiggcHJvcCwgdmFsdWUgKTtcclxuXHRcdFx0YWRqdXN0Q1NTKCB0d2Vlbi5lbGVtLCBwcm9wLCByY3NzTnVtLmV4ZWMoIHZhbHVlICksIHR3ZWVuICk7XHJcblx0XHRcdHJldHVybiB0d2VlbjtcclxuXHRcdH0gXVxyXG5cdH0sXHJcblxyXG5cdHR3ZWVuZXI6IGZ1bmN0aW9uKCBwcm9wcywgY2FsbGJhY2sgKSB7XHJcblx0XHRpZiAoIGlzRnVuY3Rpb24oIHByb3BzICkgKSB7XHJcblx0XHRcdGNhbGxiYWNrID0gcHJvcHM7XHJcblx0XHRcdHByb3BzID0gWyBcIipcIiBdO1xyXG5cdFx0fSBlbHNlIHtcclxuXHRcdFx0cHJvcHMgPSBwcm9wcy5tYXRjaCggcm5vdGh0bWx3aGl0ZSApO1xyXG5cdFx0fVxyXG5cclxuXHRcdHZhciBwcm9wLFxyXG5cdFx0XHRpbmRleCA9IDAsXHJcblx0XHRcdGxlbmd0aCA9IHByb3BzLmxlbmd0aDtcclxuXHJcblx0XHRmb3IgKCA7IGluZGV4IDwgbGVuZ3RoOyBpbmRleCsrICkge1xyXG5cdFx0XHRwcm9wID0gcHJvcHNbIGluZGV4IF07XHJcblx0XHRcdEFuaW1hdGlvbi50d2VlbmVyc1sgcHJvcCBdID0gQW5pbWF0aW9uLnR3ZWVuZXJzWyBwcm9wIF0gfHwgW107XHJcblx0XHRcdEFuaW1hdGlvbi50d2VlbmVyc1sgcHJvcCBdLnVuc2hpZnQoIGNhbGxiYWNrICk7XHJcblx0XHR9XHJcblx0fSxcclxuXHJcblx0cHJlZmlsdGVyczogWyBkZWZhdWx0UHJlZmlsdGVyIF0sXHJcblxyXG5cdHByZWZpbHRlcjogZnVuY3Rpb24oIGNhbGxiYWNrLCBwcmVwZW5kICkge1xyXG5cdFx0aWYgKCBwcmVwZW5kICkge1xyXG5cdFx0XHRBbmltYXRpb24ucHJlZmlsdGVycy51bnNoaWZ0KCBjYWxsYmFjayApO1xyXG5cdFx0fSBlbHNlIHtcclxuXHRcdFx0QW5pbWF0aW9uLnByZWZpbHRlcnMucHVzaCggY2FsbGJhY2sgKTtcclxuXHRcdH1cclxuXHR9XHJcbn0gKTtcclxuXHJcbmpRdWVyeS5zcGVlZCA9IGZ1bmN0aW9uKCBzcGVlZCwgZWFzaW5nLCBmbiApIHtcclxuXHR2YXIgb3B0ID0gc3BlZWQgJiYgdHlwZW9mIHNwZWVkID09PSBcIm9iamVjdFwiID8galF1ZXJ5LmV4dGVuZCgge30sIHNwZWVkICkgOiB7XHJcblx0XHRjb21wbGV0ZTogZm4gfHwgIWZuICYmIGVhc2luZyB8fFxyXG5cdFx0XHRpc0Z1bmN0aW9uKCBzcGVlZCApICYmIHNwZWVkLFxyXG5cdFx0ZHVyYXRpb246IHNwZWVkLFxyXG5cdFx0ZWFzaW5nOiBmbiAmJiBlYXNpbmcgfHwgZWFzaW5nICYmICFpc0Z1bmN0aW9uKCBlYXNpbmcgKSAmJiBlYXNpbmdcclxuXHR9O1xyXG5cclxuXHQvLyBHbyB0byB0aGUgZW5kIHN0YXRlIGlmIGZ4IGFyZSBvZmZcclxuXHRpZiAoIGpRdWVyeS5meC5vZmYgKSB7XHJcblx0XHRvcHQuZHVyYXRpb24gPSAwO1xyXG5cclxuXHR9IGVsc2Uge1xyXG5cdFx0aWYgKCB0eXBlb2Ygb3B0LmR1cmF0aW9uICE9PSBcIm51bWJlclwiICkge1xyXG5cdFx0XHRpZiAoIG9wdC5kdXJhdGlvbiBpbiBqUXVlcnkuZnguc3BlZWRzICkge1xyXG5cdFx0XHRcdG9wdC5kdXJhdGlvbiA9IGpRdWVyeS5meC5zcGVlZHNbIG9wdC5kdXJhdGlvbiBdO1xyXG5cclxuXHRcdFx0fSBlbHNlIHtcclxuXHRcdFx0XHRvcHQuZHVyYXRpb24gPSBqUXVlcnkuZnguc3BlZWRzLl9kZWZhdWx0O1xyXG5cdFx0XHR9XHJcblx0XHR9XHJcblx0fVxyXG5cclxuXHQvLyBOb3JtYWxpemUgb3B0LnF1ZXVlIC0gdHJ1ZS91bmRlZmluZWQvbnVsbCAtPiBcImZ4XCJcclxuXHRpZiAoIG9wdC5xdWV1ZSA9PSBudWxsIHx8IG9wdC5xdWV1ZSA9PT0gdHJ1ZSApIHtcclxuXHRcdG9wdC5xdWV1ZSA9IFwiZnhcIjtcclxuXHR9XHJcblxyXG5cdC8vIFF1ZXVlaW5nXHJcblx0b3B0Lm9sZCA9IG9wdC5jb21wbGV0ZTtcclxuXHJcblx0b3B0LmNvbXBsZXRlID0gZnVuY3Rpb24oKSB7XHJcblx0XHRpZiAoIGlzRnVuY3Rpb24oIG9wdC5vbGQgKSApIHtcclxuXHRcdFx0b3B0Lm9sZC5jYWxsKCB0aGlzICk7XHJcblx0XHR9XHJcblxyXG5cdFx0aWYgKCBvcHQucXVldWUgKSB7XHJcblx0XHRcdGpRdWVyeS5kZXF1ZXVlKCB0aGlzLCBvcHQucXVldWUgKTtcclxuXHRcdH1cclxuXHR9O1xyXG5cclxuXHRyZXR1cm4gb3B0O1xyXG59O1xyXG5cclxualF1ZXJ5LmZuLmV4dGVuZCgge1xyXG5cdGZhZGVUbzogZnVuY3Rpb24oIHNwZWVkLCB0bywgZWFzaW5nLCBjYWxsYmFjayApIHtcclxuXHJcblx0XHQvLyBTaG93IGFueSBoaWRkZW4gZWxlbWVudHMgYWZ0ZXIgc2V0dGluZyBvcGFjaXR5IHRvIDBcclxuXHRcdHJldHVybiB0aGlzLmZpbHRlciggaXNIaWRkZW5XaXRoaW5UcmVlICkuY3NzKCBcIm9wYWNpdHlcIiwgMCApLnNob3coKVxyXG5cclxuXHRcdFx0Ly8gQW5pbWF0ZSB0byB0aGUgdmFsdWUgc3BlY2lmaWVkXHJcblx0XHRcdC5lbmQoKS5hbmltYXRlKCB7IG9wYWNpdHk6IHRvIH0sIHNwZWVkLCBlYXNpbmcsIGNhbGxiYWNrICk7XHJcblx0fSxcclxuXHRhbmltYXRlOiBmdW5jdGlvbiggcHJvcCwgc3BlZWQsIGVhc2luZywgY2FsbGJhY2sgKSB7XHJcblx0XHR2YXIgZW1wdHkgPSBqUXVlcnkuaXNFbXB0eU9iamVjdCggcHJvcCApLFxyXG5cdFx0XHRvcHRhbGwgPSBqUXVlcnkuc3BlZWQoIHNwZWVkLCBlYXNpbmcsIGNhbGxiYWNrICksXHJcblx0XHRcdGRvQW5pbWF0aW9uID0gZnVuY3Rpb24oKSB7XHJcblxyXG5cdFx0XHRcdC8vIE9wZXJhdGUgb24gYSBjb3B5IG9mIHByb3Agc28gcGVyLXByb3BlcnR5IGVhc2luZyB3b24ndCBiZSBsb3N0XHJcblx0XHRcdFx0dmFyIGFuaW0gPSBBbmltYXRpb24oIHRoaXMsIGpRdWVyeS5leHRlbmQoIHt9LCBwcm9wICksIG9wdGFsbCApO1xyXG5cclxuXHRcdFx0XHQvLyBFbXB0eSBhbmltYXRpb25zLCBvciBmaW5pc2hpbmcgcmVzb2x2ZXMgaW1tZWRpYXRlbHlcclxuXHRcdFx0XHRpZiAoIGVtcHR5IHx8IGRhdGFQcml2LmdldCggdGhpcywgXCJmaW5pc2hcIiApICkge1xyXG5cdFx0XHRcdFx0YW5pbS5zdG9wKCB0cnVlICk7XHJcblx0XHRcdFx0fVxyXG5cdFx0XHR9O1xyXG5cdFx0XHRkb0FuaW1hdGlvbi5maW5pc2ggPSBkb0FuaW1hdGlvbjtcclxuXHJcblx0XHRyZXR1cm4gZW1wdHkgfHwgb3B0YWxsLnF1ZXVlID09PSBmYWxzZSA/XHJcblx0XHRcdHRoaXMuZWFjaCggZG9BbmltYXRpb24gKSA6XHJcblx0XHRcdHRoaXMucXVldWUoIG9wdGFsbC5xdWV1ZSwgZG9BbmltYXRpb24gKTtcclxuXHR9LFxyXG5cdHN0b3A6IGZ1bmN0aW9uKCB0eXBlLCBjbGVhclF1ZXVlLCBnb3RvRW5kICkge1xyXG5cdFx0dmFyIHN0b3BRdWV1ZSA9IGZ1bmN0aW9uKCBob29rcyApIHtcclxuXHRcdFx0dmFyIHN0b3AgPSBob29rcy5zdG9wO1xyXG5cdFx0XHRkZWxldGUgaG9va3Muc3RvcDtcclxuXHRcdFx0c3RvcCggZ290b0VuZCApO1xyXG5cdFx0fTtcclxuXHJcblx0XHRpZiAoIHR5cGVvZiB0eXBlICE9PSBcInN0cmluZ1wiICkge1xyXG5cdFx0XHRnb3RvRW5kID0gY2xlYXJRdWV1ZTtcclxuXHRcdFx0Y2xlYXJRdWV1ZSA9IHR5cGU7XHJcblx0XHRcdHR5cGUgPSB1bmRlZmluZWQ7XHJcblx0XHR9XHJcblx0XHRpZiAoIGNsZWFyUXVldWUgJiYgdHlwZSAhPT0gZmFsc2UgKSB7XHJcblx0XHRcdHRoaXMucXVldWUoIHR5cGUgfHwgXCJmeFwiLCBbXSApO1xyXG5cdFx0fVxyXG5cclxuXHRcdHJldHVybiB0aGlzLmVhY2goIGZ1bmN0aW9uKCkge1xyXG5cdFx0XHR2YXIgZGVxdWV1ZSA9IHRydWUsXHJcblx0XHRcdFx0aW5kZXggPSB0eXBlICE9IG51bGwgJiYgdHlwZSArIFwicXVldWVIb29rc1wiLFxyXG5cdFx0XHRcdHRpbWVycyA9IGpRdWVyeS50aW1lcnMsXHJcblx0XHRcdFx0ZGF0YSA9IGRhdGFQcml2LmdldCggdGhpcyApO1xyXG5cclxuXHRcdFx0aWYgKCBpbmRleCApIHtcclxuXHRcdFx0XHRpZiAoIGRhdGFbIGluZGV4IF0gJiYgZGF0YVsgaW5kZXggXS5zdG9wICkge1xyXG5cdFx0XHRcdFx0c3RvcFF1ZXVlKCBkYXRhWyBpbmRleCBdICk7XHJcblx0XHRcdFx0fVxyXG5cdFx0XHR9IGVsc2Uge1xyXG5cdFx0XHRcdGZvciAoIGluZGV4IGluIGRhdGEgKSB7XHJcblx0XHRcdFx0XHRpZiAoIGRhdGFbIGluZGV4IF0gJiYgZGF0YVsgaW5kZXggXS5zdG9wICYmIHJydW4udGVzdCggaW5kZXggKSApIHtcclxuXHRcdFx0XHRcdFx0c3RvcFF1ZXVlKCBkYXRhWyBpbmRleCBdICk7XHJcblx0XHRcdFx0XHR9XHJcblx0XHRcdFx0fVxyXG5cdFx0XHR9XHJcblxyXG5cdFx0XHRmb3IgKCBpbmRleCA9IHRpbWVycy5sZW5ndGg7IGluZGV4LS07ICkge1xyXG5cdFx0XHRcdGlmICggdGltZXJzWyBpbmRleCBdLmVsZW0gPT09IHRoaXMgJiZcclxuXHRcdFx0XHRcdCggdHlwZSA9PSBudWxsIHx8IHRpbWVyc1sgaW5kZXggXS5xdWV1ZSA9PT0gdHlwZSApICkge1xyXG5cclxuXHRcdFx0XHRcdHRpbWVyc1sgaW5kZXggXS5hbmltLnN0b3AoIGdvdG9FbmQgKTtcclxuXHRcdFx0XHRcdGRlcXVldWUgPSBmYWxzZTtcclxuXHRcdFx0XHRcdHRpbWVycy5zcGxpY2UoIGluZGV4LCAxICk7XHJcblx0XHRcdFx0fVxyXG5cdFx0XHR9XHJcblxyXG5cdFx0XHQvLyBTdGFydCB0aGUgbmV4dCBpbiB0aGUgcXVldWUgaWYgdGhlIGxhc3Qgc3RlcCB3YXNuJ3QgZm9yY2VkLlxyXG5cdFx0XHQvLyBUaW1lcnMgY3VycmVudGx5IHdpbGwgY2FsbCB0aGVpciBjb21wbGV0ZSBjYWxsYmFja3MsIHdoaWNoXHJcblx0XHRcdC8vIHdpbGwgZGVxdWV1ZSBidXQgb25seSBpZiB0aGV5IHdlcmUgZ290b0VuZC5cclxuXHRcdFx0aWYgKCBkZXF1ZXVlIHx8ICFnb3RvRW5kICkge1xyXG5cdFx0XHRcdGpRdWVyeS5kZXF1ZXVlKCB0aGlzLCB0eXBlICk7XHJcblx0XHRcdH1cclxuXHRcdH0gKTtcclxuXHR9LFxyXG5cdGZpbmlzaDogZnVuY3Rpb24oIHR5cGUgKSB7XHJcblx0XHRpZiAoIHR5cGUgIT09IGZhbHNlICkge1xyXG5cdFx0XHR0eXBlID0gdHlwZSB8fCBcImZ4XCI7XHJcblx0XHR9XHJcblx0XHRyZXR1cm4gdGhpcy5lYWNoKCBmdW5jdGlvbigpIHtcclxuXHRcdFx0dmFyIGluZGV4LFxyXG5cdFx0XHRcdGRhdGEgPSBkYXRhUHJpdi5nZXQoIHRoaXMgKSxcclxuXHRcdFx0XHRxdWV1ZSA9IGRhdGFbIHR5cGUgKyBcInF1ZXVlXCIgXSxcclxuXHRcdFx0XHRob29rcyA9IGRhdGFbIHR5cGUgKyBcInF1ZXVlSG9va3NcIiBdLFxyXG5cdFx0XHRcdHRpbWVycyA9IGpRdWVyeS50aW1lcnMsXHJcblx0XHRcdFx0bGVuZ3RoID0gcXVldWUgPyBxdWV1ZS5sZW5ndGggOiAwO1xyXG5cclxuXHRcdFx0Ly8gRW5hYmxlIGZpbmlzaGluZyBmbGFnIG9uIHByaXZhdGUgZGF0YVxyXG5cdFx0XHRkYXRhLmZpbmlzaCA9IHRydWU7XHJcblxyXG5cdFx0XHQvLyBFbXB0eSB0aGUgcXVldWUgZmlyc3RcclxuXHRcdFx0alF1ZXJ5LnF1ZXVlKCB0aGlzLCB0eXBlLCBbXSApO1xyXG5cclxuXHRcdFx0aWYgKCBob29rcyAmJiBob29rcy5zdG9wICkge1xyXG5cdFx0XHRcdGhvb2tzLnN0b3AuY2FsbCggdGhpcywgdHJ1ZSApO1xyXG5cdFx0XHR9XHJcblxyXG5cdFx0XHQvLyBMb29rIGZvciBhbnkgYWN0aXZlIGFuaW1hdGlvbnMsIGFuZCBmaW5pc2ggdGhlbVxyXG5cdFx0XHRmb3IgKCBpbmRleCA9IHRpbWVycy5sZW5ndGg7IGluZGV4LS07ICkge1xyXG5cdFx0XHRcdGlmICggdGltZXJzWyBpbmRleCBdLmVsZW0gPT09IHRoaXMgJiYgdGltZXJzWyBpbmRleCBdLnF1ZXVlID09PSB0eXBlICkge1xyXG5cdFx0XHRcdFx0dGltZXJzWyBpbmRleCBdLmFuaW0uc3RvcCggdHJ1ZSApO1xyXG5cdFx0XHRcdFx0dGltZXJzLnNwbGljZSggaW5kZXgsIDEgKTtcclxuXHRcdFx0XHR9XHJcblx0XHRcdH1cclxuXHJcblx0XHRcdC8vIExvb2sgZm9yIGFueSBhbmltYXRpb25zIGluIHRoZSBvbGQgcXVldWUgYW5kIGZpbmlzaCB0aGVtXHJcblx0XHRcdGZvciAoIGluZGV4ID0gMDsgaW5kZXggPCBsZW5ndGg7IGluZGV4KysgKSB7XHJcblx0XHRcdFx0aWYgKCBxdWV1ZVsgaW5kZXggXSAmJiBxdWV1ZVsgaW5kZXggXS5maW5pc2ggKSB7XHJcblx0XHRcdFx0XHRxdWV1ZVsgaW5kZXggXS5maW5pc2guY2FsbCggdGhpcyApO1xyXG5cdFx0XHRcdH1cclxuXHRcdFx0fVxyXG5cclxuXHRcdFx0Ly8gVHVybiBvZmYgZmluaXNoaW5nIGZsYWdcclxuXHRcdFx0ZGVsZXRlIGRhdGEuZmluaXNoO1xyXG5cdFx0fSApO1xyXG5cdH1cclxufSApO1xyXG5cclxualF1ZXJ5LmVhY2goIFsgXCJ0b2dnbGVcIiwgXCJzaG93XCIsIFwiaGlkZVwiIF0sIGZ1bmN0aW9uKCBpLCBuYW1lICkge1xyXG5cdHZhciBjc3NGbiA9IGpRdWVyeS5mblsgbmFtZSBdO1xyXG5cdGpRdWVyeS5mblsgbmFtZSBdID0gZnVuY3Rpb24oIHNwZWVkLCBlYXNpbmcsIGNhbGxiYWNrICkge1xyXG5cdFx0cmV0dXJuIHNwZWVkID09IG51bGwgfHwgdHlwZW9mIHNwZWVkID09PSBcImJvb2xlYW5cIiA/XHJcblx0XHRcdGNzc0ZuLmFwcGx5KCB0aGlzLCBhcmd1bWVudHMgKSA6XHJcblx0XHRcdHRoaXMuYW5pbWF0ZSggZ2VuRngoIG5hbWUsIHRydWUgKSwgc3BlZWQsIGVhc2luZywgY2FsbGJhY2sgKTtcclxuXHR9O1xyXG59ICk7XHJcblxyXG4vLyBHZW5lcmF0ZSBzaG9ydGN1dHMgZm9yIGN1c3RvbSBhbmltYXRpb25zXHJcbmpRdWVyeS5lYWNoKCB7XHJcblx0c2xpZGVEb3duOiBnZW5GeCggXCJzaG93XCIgKSxcclxuXHRzbGlkZVVwOiBnZW5GeCggXCJoaWRlXCIgKSxcclxuXHRzbGlkZVRvZ2dsZTogZ2VuRngoIFwidG9nZ2xlXCIgKSxcclxuXHRmYWRlSW46IHsgb3BhY2l0eTogXCJzaG93XCIgfSxcclxuXHRmYWRlT3V0OiB7IG9wYWNpdHk6IFwiaGlkZVwiIH0sXHJcblx0ZmFkZVRvZ2dsZTogeyBvcGFjaXR5OiBcInRvZ2dsZVwiIH1cclxufSwgZnVuY3Rpb24oIG5hbWUsIHByb3BzICkge1xyXG5cdGpRdWVyeS5mblsgbmFtZSBdID0gZnVuY3Rpb24oIHNwZWVkLCBlYXNpbmcsIGNhbGxiYWNrICkge1xyXG5cdFx0cmV0dXJuIHRoaXMuYW5pbWF0ZSggcHJvcHMsIHNwZWVkLCBlYXNpbmcsIGNhbGxiYWNrICk7XHJcblx0fTtcclxufSApO1xyXG5cclxualF1ZXJ5LnRpbWVycyA9IFtdO1xyXG5qUXVlcnkuZngudGljayA9IGZ1bmN0aW9uKCkge1xyXG5cdHZhciB0aW1lcixcclxuXHRcdGkgPSAwLFxyXG5cdFx0dGltZXJzID0galF1ZXJ5LnRpbWVycztcclxuXHJcblx0ZnhOb3cgPSBEYXRlLm5vdygpO1xyXG5cclxuXHRmb3IgKCA7IGkgPCB0aW1lcnMubGVuZ3RoOyBpKysgKSB7XHJcblx0XHR0aW1lciA9IHRpbWVyc1sgaSBdO1xyXG5cclxuXHRcdC8vIFJ1biB0aGUgdGltZXIgYW5kIHNhZmVseSByZW1vdmUgaXQgd2hlbiBkb25lIChhbGxvd2luZyBmb3IgZXh0ZXJuYWwgcmVtb3ZhbClcclxuXHRcdGlmICggIXRpbWVyKCkgJiYgdGltZXJzWyBpIF0gPT09IHRpbWVyICkge1xyXG5cdFx0XHR0aW1lcnMuc3BsaWNlKCBpLS0sIDEgKTtcclxuXHRcdH1cclxuXHR9XHJcblxyXG5cdGlmICggIXRpbWVycy5sZW5ndGggKSB7XHJcblx0XHRqUXVlcnkuZnguc3RvcCgpO1xyXG5cdH1cclxuXHRmeE5vdyA9IHVuZGVmaW5lZDtcclxufTtcclxuXHJcbmpRdWVyeS5meC50aW1lciA9IGZ1bmN0aW9uKCB0aW1lciApIHtcclxuXHRqUXVlcnkudGltZXJzLnB1c2goIHRpbWVyICk7XHJcblx0alF1ZXJ5LmZ4LnN0YXJ0KCk7XHJcbn07XHJcblxyXG5qUXVlcnkuZnguaW50ZXJ2YWwgPSAxMztcclxualF1ZXJ5LmZ4LnN0YXJ0ID0gZnVuY3Rpb24oKSB7XHJcblx0aWYgKCBpblByb2dyZXNzICkge1xyXG5cdFx0cmV0dXJuO1xyXG5cdH1cclxuXHJcblx0aW5Qcm9ncmVzcyA9IHRydWU7XHJcblx0c2NoZWR1bGUoKTtcclxufTtcclxuXHJcbmpRdWVyeS5meC5zdG9wID0gZnVuY3Rpb24oKSB7XHJcblx0aW5Qcm9ncmVzcyA9IG51bGw7XHJcbn07XHJcblxyXG5qUXVlcnkuZnguc3BlZWRzID0ge1xyXG5cdHNsb3c6IDYwMCxcclxuXHRmYXN0OiAyMDAsXHJcblxyXG5cdC8vIERlZmF1bHQgc3BlZWRcclxuXHRfZGVmYXVsdDogNDAwXHJcbn07XHJcblxyXG5cclxuLy8gQmFzZWQgb2ZmIG9mIHRoZSBwbHVnaW4gYnkgQ2xpbnQgSGVsZmVycywgd2l0aCBwZXJtaXNzaW9uLlxyXG4vLyBodHRwczovL3dlYi5hcmNoaXZlLm9yZy93ZWIvMjAxMDAzMjQwMTQ3NDcvaHR0cDovL2JsaW5kc2lnbmFscy5jb20vaW5kZXgucGhwLzIwMDkvMDcvanF1ZXJ5LWRlbGF5L1xyXG5qUXVlcnkuZm4uZGVsYXkgPSBmdW5jdGlvbiggdGltZSwgdHlwZSApIHtcclxuXHR0aW1lID0galF1ZXJ5LmZ4ID8galF1ZXJ5LmZ4LnNwZWVkc1sgdGltZSBdIHx8IHRpbWUgOiB0aW1lO1xyXG5cdHR5cGUgPSB0eXBlIHx8IFwiZnhcIjtcclxuXHJcblx0cmV0dXJuIHRoaXMucXVldWUoIHR5cGUsIGZ1bmN0aW9uKCBuZXh0LCBob29rcyApIHtcclxuXHRcdHZhciB0aW1lb3V0ID0gd2luZG93LnNldFRpbWVvdXQoIG5leHQsIHRpbWUgKTtcclxuXHRcdGhvb2tzLnN0b3AgPSBmdW5jdGlvbigpIHtcclxuXHRcdFx0d2luZG93LmNsZWFyVGltZW91dCggdGltZW91dCApO1xyXG5cdFx0fTtcclxuXHR9ICk7XHJcbn07XHJcblxyXG5cclxuKCBmdW5jdGlvbigpIHtcclxuXHR2YXIgaW5wdXQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCBcImlucHV0XCIgKSxcclxuXHRcdHNlbGVjdCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoIFwic2VsZWN0XCIgKSxcclxuXHRcdG9wdCA9IHNlbGVjdC5hcHBlbmRDaGlsZCggZG9jdW1lbnQuY3JlYXRlRWxlbWVudCggXCJvcHRpb25cIiApICk7XHJcblxyXG5cdGlucHV0LnR5cGUgPSBcImNoZWNrYm94XCI7XHJcblxyXG5cdC8vIFN1cHBvcnQ6IEFuZHJvaWQgPD00LjMgb25seVxyXG5cdC8vIERlZmF1bHQgdmFsdWUgZm9yIGEgY2hlY2tib3ggc2hvdWxkIGJlIFwib25cIlxyXG5cdHN1cHBvcnQuY2hlY2tPbiA9IGlucHV0LnZhbHVlICE9PSBcIlwiO1xyXG5cclxuXHQvLyBTdXBwb3J0OiBJRSA8PTExIG9ubHlcclxuXHQvLyBNdXN0IGFjY2VzcyBzZWxlY3RlZEluZGV4IHRvIG1ha2UgZGVmYXVsdCBvcHRpb25zIHNlbGVjdFxyXG5cdHN1cHBvcnQub3B0U2VsZWN0ZWQgPSBvcHQuc2VsZWN0ZWQ7XHJcblxyXG5cdC8vIFN1cHBvcnQ6IElFIDw9MTEgb25seVxyXG5cdC8vIEFuIGlucHV0IGxvc2VzIGl0cyB2YWx1ZSBhZnRlciBiZWNvbWluZyBhIHJhZGlvXHJcblx0aW5wdXQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCBcImlucHV0XCIgKTtcclxuXHRpbnB1dC52YWx1ZSA9IFwidFwiO1xyXG5cdGlucHV0LnR5cGUgPSBcInJhZGlvXCI7XHJcblx0c3VwcG9ydC5yYWRpb1ZhbHVlID0gaW5wdXQudmFsdWUgPT09IFwidFwiO1xyXG59ICkoKTtcclxuXHJcblxyXG52YXIgYm9vbEhvb2ssXHJcblx0YXR0ckhhbmRsZSA9IGpRdWVyeS5leHByLmF0dHJIYW5kbGU7XHJcblxyXG5qUXVlcnkuZm4uZXh0ZW5kKCB7XHJcblx0YXR0cjogZnVuY3Rpb24oIG5hbWUsIHZhbHVlICkge1xyXG5cdFx0cmV0dXJuIGFjY2VzcyggdGhpcywgalF1ZXJ5LmF0dHIsIG5hbWUsIHZhbHVlLCBhcmd1bWVudHMubGVuZ3RoID4gMSApO1xyXG5cdH0sXHJcblxyXG5cdHJlbW92ZUF0dHI6IGZ1bmN0aW9uKCBuYW1lICkge1xyXG5cdFx0cmV0dXJuIHRoaXMuZWFjaCggZnVuY3Rpb24oKSB7XHJcblx0XHRcdGpRdWVyeS5yZW1vdmVBdHRyKCB0aGlzLCBuYW1lICk7XHJcblx0XHR9ICk7XHJcblx0fVxyXG59ICk7XHJcblxyXG5qUXVlcnkuZXh0ZW5kKCB7XHJcblx0YXR0cjogZnVuY3Rpb24oIGVsZW0sIG5hbWUsIHZhbHVlICkge1xyXG5cdFx0dmFyIHJldCwgaG9va3MsXHJcblx0XHRcdG5UeXBlID0gZWxlbS5ub2RlVHlwZTtcclxuXHJcblx0XHQvLyBEb24ndCBnZXQvc2V0IGF0dHJpYnV0ZXMgb24gdGV4dCwgY29tbWVudCBhbmQgYXR0cmlidXRlIG5vZGVzXHJcblx0XHRpZiAoIG5UeXBlID09PSAzIHx8IG5UeXBlID09PSA4IHx8IG5UeXBlID09PSAyICkge1xyXG5cdFx0XHRyZXR1cm47XHJcblx0XHR9XHJcblxyXG5cdFx0Ly8gRmFsbGJhY2sgdG8gcHJvcCB3aGVuIGF0dHJpYnV0ZXMgYXJlIG5vdCBzdXBwb3J0ZWRcclxuXHRcdGlmICggdHlwZW9mIGVsZW0uZ2V0QXR0cmlidXRlID09PSBcInVuZGVmaW5lZFwiICkge1xyXG5cdFx0XHRyZXR1cm4galF1ZXJ5LnByb3AoIGVsZW0sIG5hbWUsIHZhbHVlICk7XHJcblx0XHR9XHJcblxyXG5cdFx0Ly8gQXR0cmlidXRlIGhvb2tzIGFyZSBkZXRlcm1pbmVkIGJ5IHRoZSBsb3dlcmNhc2UgdmVyc2lvblxyXG5cdFx0Ly8gR3JhYiBuZWNlc3NhcnkgaG9vayBpZiBvbmUgaXMgZGVmaW5lZFxyXG5cdFx0aWYgKCBuVHlwZSAhPT0gMSB8fCAhalF1ZXJ5LmlzWE1MRG9jKCBlbGVtICkgKSB7XHJcblx0XHRcdGhvb2tzID0galF1ZXJ5LmF0dHJIb29rc1sgbmFtZS50b0xvd2VyQ2FzZSgpIF0gfHxcclxuXHRcdFx0XHQoIGpRdWVyeS5leHByLm1hdGNoLmJvb2wudGVzdCggbmFtZSApID8gYm9vbEhvb2sgOiB1bmRlZmluZWQgKTtcclxuXHRcdH1cclxuXHJcblx0XHRpZiAoIHZhbHVlICE9PSB1bmRlZmluZWQgKSB7XHJcblx0XHRcdGlmICggdmFsdWUgPT09IG51bGwgKSB7XHJcblx0XHRcdFx0alF1ZXJ5LnJlbW92ZUF0dHIoIGVsZW0sIG5hbWUgKTtcclxuXHRcdFx0XHRyZXR1cm47XHJcblx0XHRcdH1cclxuXHJcblx0XHRcdGlmICggaG9va3MgJiYgXCJzZXRcIiBpbiBob29rcyAmJlxyXG5cdFx0XHRcdCggcmV0ID0gaG9va3Muc2V0KCBlbGVtLCB2YWx1ZSwgbmFtZSApICkgIT09IHVuZGVmaW5lZCApIHtcclxuXHRcdFx0XHRyZXR1cm4gcmV0O1xyXG5cdFx0XHR9XHJcblxyXG5cdFx0XHRlbGVtLnNldEF0dHJpYnV0ZSggbmFtZSwgdmFsdWUgKyBcIlwiICk7XHJcblx0XHRcdHJldHVybiB2YWx1ZTtcclxuXHRcdH1cclxuXHJcblx0XHRpZiAoIGhvb2tzICYmIFwiZ2V0XCIgaW4gaG9va3MgJiYgKCByZXQgPSBob29rcy5nZXQoIGVsZW0sIG5hbWUgKSApICE9PSBudWxsICkge1xyXG5cdFx0XHRyZXR1cm4gcmV0O1xyXG5cdFx0fVxyXG5cclxuXHRcdHJldCA9IGpRdWVyeS5maW5kLmF0dHIoIGVsZW0sIG5hbWUgKTtcclxuXHJcblx0XHQvLyBOb24tZXhpc3RlbnQgYXR0cmlidXRlcyByZXR1cm4gbnVsbCwgd2Ugbm9ybWFsaXplIHRvIHVuZGVmaW5lZFxyXG5cdFx0cmV0dXJuIHJldCA9PSBudWxsID8gdW5kZWZpbmVkIDogcmV0O1xyXG5cdH0sXHJcblxyXG5cdGF0dHJIb29rczoge1xyXG5cdFx0dHlwZToge1xyXG5cdFx0XHRzZXQ6IGZ1bmN0aW9uKCBlbGVtLCB2YWx1ZSApIHtcclxuXHRcdFx0XHRpZiAoICFzdXBwb3J0LnJhZGlvVmFsdWUgJiYgdmFsdWUgPT09IFwicmFkaW9cIiAmJlxyXG5cdFx0XHRcdFx0bm9kZU5hbWUoIGVsZW0sIFwiaW5wdXRcIiApICkge1xyXG5cdFx0XHRcdFx0dmFyIHZhbCA9IGVsZW0udmFsdWU7XHJcblx0XHRcdFx0XHRlbGVtLnNldEF0dHJpYnV0ZSggXCJ0eXBlXCIsIHZhbHVlICk7XHJcblx0XHRcdFx0XHRpZiAoIHZhbCApIHtcclxuXHRcdFx0XHRcdFx0ZWxlbS52YWx1ZSA9IHZhbDtcclxuXHRcdFx0XHRcdH1cclxuXHRcdFx0XHRcdHJldHVybiB2YWx1ZTtcclxuXHRcdFx0XHR9XHJcblx0XHRcdH1cclxuXHRcdH1cclxuXHR9LFxyXG5cclxuXHRyZW1vdmVBdHRyOiBmdW5jdGlvbiggZWxlbSwgdmFsdWUgKSB7XHJcblx0XHR2YXIgbmFtZSxcclxuXHRcdFx0aSA9IDAsXHJcblxyXG5cdFx0XHQvLyBBdHRyaWJ1dGUgbmFtZXMgY2FuIGNvbnRhaW4gbm9uLUhUTUwgd2hpdGVzcGFjZSBjaGFyYWN0ZXJzXHJcblx0XHRcdC8vIGh0dHBzOi8vaHRtbC5zcGVjLndoYXR3Zy5vcmcvbXVsdGlwYWdlL3N5bnRheC5odG1sI2F0dHJpYnV0ZXMtMlxyXG5cdFx0XHRhdHRyTmFtZXMgPSB2YWx1ZSAmJiB2YWx1ZS5tYXRjaCggcm5vdGh0bWx3aGl0ZSApO1xyXG5cclxuXHRcdGlmICggYXR0ck5hbWVzICYmIGVsZW0ubm9kZVR5cGUgPT09IDEgKSB7XHJcblx0XHRcdHdoaWxlICggKCBuYW1lID0gYXR0ck5hbWVzWyBpKysgXSApICkge1xyXG5cdFx0XHRcdGVsZW0ucmVtb3ZlQXR0cmlidXRlKCBuYW1lICk7XHJcblx0XHRcdH1cclxuXHRcdH1cclxuXHR9XHJcbn0gKTtcclxuXHJcbi8vIEhvb2tzIGZvciBib29sZWFuIGF0dHJpYnV0ZXNcclxuYm9vbEhvb2sgPSB7XHJcblx0c2V0OiBmdW5jdGlvbiggZWxlbSwgdmFsdWUsIG5hbWUgKSB7XHJcblx0XHRpZiAoIHZhbHVlID09PSBmYWxzZSApIHtcclxuXHJcblx0XHRcdC8vIFJlbW92ZSBib29sZWFuIGF0dHJpYnV0ZXMgd2hlbiBzZXQgdG8gZmFsc2VcclxuXHRcdFx0alF1ZXJ5LnJlbW92ZUF0dHIoIGVsZW0sIG5hbWUgKTtcclxuXHRcdH0gZWxzZSB7XHJcblx0XHRcdGVsZW0uc2V0QXR0cmlidXRlKCBuYW1lLCBuYW1lICk7XHJcblx0XHR9XHJcblx0XHRyZXR1cm4gbmFtZTtcclxuXHR9XHJcbn07XHJcblxyXG5qUXVlcnkuZWFjaCggalF1ZXJ5LmV4cHIubWF0Y2guYm9vbC5zb3VyY2UubWF0Y2goIC9cXHcrL2cgKSwgZnVuY3Rpb24oIGksIG5hbWUgKSB7XHJcblx0dmFyIGdldHRlciA9IGF0dHJIYW5kbGVbIG5hbWUgXSB8fCBqUXVlcnkuZmluZC5hdHRyO1xyXG5cclxuXHRhdHRySGFuZGxlWyBuYW1lIF0gPSBmdW5jdGlvbiggZWxlbSwgbmFtZSwgaXNYTUwgKSB7XHJcblx0XHR2YXIgcmV0LCBoYW5kbGUsXHJcblx0XHRcdGxvd2VyY2FzZU5hbWUgPSBuYW1lLnRvTG93ZXJDYXNlKCk7XHJcblxyXG5cdFx0aWYgKCAhaXNYTUwgKSB7XHJcblxyXG5cdFx0XHQvLyBBdm9pZCBhbiBpbmZpbml0ZSBsb29wIGJ5IHRlbXBvcmFyaWx5IHJlbW92aW5nIHRoaXMgZnVuY3Rpb24gZnJvbSB0aGUgZ2V0dGVyXHJcblx0XHRcdGhhbmRsZSA9IGF0dHJIYW5kbGVbIGxvd2VyY2FzZU5hbWUgXTtcclxuXHRcdFx0YXR0ckhhbmRsZVsgbG93ZXJjYXNlTmFtZSBdID0gcmV0O1xyXG5cdFx0XHRyZXQgPSBnZXR0ZXIoIGVsZW0sIG5hbWUsIGlzWE1MICkgIT0gbnVsbCA/XHJcblx0XHRcdFx0bG93ZXJjYXNlTmFtZSA6XHJcblx0XHRcdFx0bnVsbDtcclxuXHRcdFx0YXR0ckhhbmRsZVsgbG93ZXJjYXNlTmFtZSBdID0gaGFuZGxlO1xyXG5cdFx0fVxyXG5cdFx0cmV0dXJuIHJldDtcclxuXHR9O1xyXG59ICk7XHJcblxyXG5cclxuXHJcblxyXG52YXIgcmZvY3VzYWJsZSA9IC9eKD86aW5wdXR8c2VsZWN0fHRleHRhcmVhfGJ1dHRvbikkL2ksXHJcblx0cmNsaWNrYWJsZSA9IC9eKD86YXxhcmVhKSQvaTtcclxuXHJcbmpRdWVyeS5mbi5leHRlbmQoIHtcclxuXHRwcm9wOiBmdW5jdGlvbiggbmFtZSwgdmFsdWUgKSB7XHJcblx0XHRyZXR1cm4gYWNjZXNzKCB0aGlzLCBqUXVlcnkucHJvcCwgbmFtZSwgdmFsdWUsIGFyZ3VtZW50cy5sZW5ndGggPiAxICk7XHJcblx0fSxcclxuXHJcblx0cmVtb3ZlUHJvcDogZnVuY3Rpb24oIG5hbWUgKSB7XHJcblx0XHRyZXR1cm4gdGhpcy5lYWNoKCBmdW5jdGlvbigpIHtcclxuXHRcdFx0ZGVsZXRlIHRoaXNbIGpRdWVyeS5wcm9wRml4WyBuYW1lIF0gfHwgbmFtZSBdO1xyXG5cdFx0fSApO1xyXG5cdH1cclxufSApO1xyXG5cclxualF1ZXJ5LmV4dGVuZCgge1xyXG5cdHByb3A6IGZ1bmN0aW9uKCBlbGVtLCBuYW1lLCB2YWx1ZSApIHtcclxuXHRcdHZhciByZXQsIGhvb2tzLFxyXG5cdFx0XHRuVHlwZSA9IGVsZW0ubm9kZVR5cGU7XHJcblxyXG5cdFx0Ly8gRG9uJ3QgZ2V0L3NldCBwcm9wZXJ0aWVzIG9uIHRleHQsIGNvbW1lbnQgYW5kIGF0dHJpYnV0ZSBub2Rlc1xyXG5cdFx0aWYgKCBuVHlwZSA9PT0gMyB8fCBuVHlwZSA9PT0gOCB8fCBuVHlwZSA9PT0gMiApIHtcclxuXHRcdFx0cmV0dXJuO1xyXG5cdFx0fVxyXG5cclxuXHRcdGlmICggblR5cGUgIT09IDEgfHwgIWpRdWVyeS5pc1hNTERvYyggZWxlbSApICkge1xyXG5cclxuXHRcdFx0Ly8gRml4IG5hbWUgYW5kIGF0dGFjaCBob29rc1xyXG5cdFx0XHRuYW1lID0galF1ZXJ5LnByb3BGaXhbIG5hbWUgXSB8fCBuYW1lO1xyXG5cdFx0XHRob29rcyA9IGpRdWVyeS5wcm9wSG9va3NbIG5hbWUgXTtcclxuXHRcdH1cclxuXHJcblx0XHRpZiAoIHZhbHVlICE9PSB1bmRlZmluZWQgKSB7XHJcblx0XHRcdGlmICggaG9va3MgJiYgXCJzZXRcIiBpbiBob29rcyAmJlxyXG5cdFx0XHRcdCggcmV0ID0gaG9va3Muc2V0KCBlbGVtLCB2YWx1ZSwgbmFtZSApICkgIT09IHVuZGVmaW5lZCApIHtcclxuXHRcdFx0XHRyZXR1cm4gcmV0O1xyXG5cdFx0XHR9XHJcblxyXG5cdFx0XHRyZXR1cm4gKCBlbGVtWyBuYW1lIF0gPSB2YWx1ZSApO1xyXG5cdFx0fVxyXG5cclxuXHRcdGlmICggaG9va3MgJiYgXCJnZXRcIiBpbiBob29rcyAmJiAoIHJldCA9IGhvb2tzLmdldCggZWxlbSwgbmFtZSApICkgIT09IG51bGwgKSB7XHJcblx0XHRcdHJldHVybiByZXQ7XHJcblx0XHR9XHJcblxyXG5cdFx0cmV0dXJuIGVsZW1bIG5hbWUgXTtcclxuXHR9LFxyXG5cclxuXHRwcm9wSG9va3M6IHtcclxuXHRcdHRhYkluZGV4OiB7XHJcblx0XHRcdGdldDogZnVuY3Rpb24oIGVsZW0gKSB7XHJcblxyXG5cdFx0XHRcdC8vIFN1cHBvcnQ6IElFIDw9OSAtIDExIG9ubHlcclxuXHRcdFx0XHQvLyBlbGVtLnRhYkluZGV4IGRvZXNuJ3QgYWx3YXlzIHJldHVybiB0aGVcclxuXHRcdFx0XHQvLyBjb3JyZWN0IHZhbHVlIHdoZW4gaXQgaGFzbid0IGJlZW4gZXhwbGljaXRseSBzZXRcclxuXHRcdFx0XHQvLyBodHRwczovL3dlYi5hcmNoaXZlLm9yZy93ZWIvMjAxNDExMTYyMzMzNDcvaHR0cDovL2ZsdWlkcHJvamVjdC5vcmcvYmxvZy8yMDA4LzAxLzA5L2dldHRpbmctc2V0dGluZy1hbmQtcmVtb3ZpbmctdGFiaW5kZXgtdmFsdWVzLXdpdGgtamF2YXNjcmlwdC9cclxuXHRcdFx0XHQvLyBVc2UgcHJvcGVyIGF0dHJpYnV0ZSByZXRyaWV2YWwoIzEyMDcyKVxyXG5cdFx0XHRcdHZhciB0YWJpbmRleCA9IGpRdWVyeS5maW5kLmF0dHIoIGVsZW0sIFwidGFiaW5kZXhcIiApO1xyXG5cclxuXHRcdFx0XHRpZiAoIHRhYmluZGV4ICkge1xyXG5cdFx0XHRcdFx0cmV0dXJuIHBhcnNlSW50KCB0YWJpbmRleCwgMTAgKTtcclxuXHRcdFx0XHR9XHJcblxyXG5cdFx0XHRcdGlmIChcclxuXHRcdFx0XHRcdHJmb2N1c2FibGUudGVzdCggZWxlbS5ub2RlTmFtZSApIHx8XHJcblx0XHRcdFx0XHRyY2xpY2thYmxlLnRlc3QoIGVsZW0ubm9kZU5hbWUgKSAmJlxyXG5cdFx0XHRcdFx0ZWxlbS5ocmVmXHJcblx0XHRcdFx0KSB7XHJcblx0XHRcdFx0XHRyZXR1cm4gMDtcclxuXHRcdFx0XHR9XHJcblxyXG5cdFx0XHRcdHJldHVybiAtMTtcclxuXHRcdFx0fVxyXG5cdFx0fVxyXG5cdH0sXHJcblxyXG5cdHByb3BGaXg6IHtcclxuXHRcdFwiZm9yXCI6IFwiaHRtbEZvclwiLFxyXG5cdFx0XCJjbGFzc1wiOiBcImNsYXNzTmFtZVwiXHJcblx0fVxyXG59ICk7XHJcblxyXG4vLyBTdXBwb3J0OiBJRSA8PTExIG9ubHlcclxuLy8gQWNjZXNzaW5nIHRoZSBzZWxlY3RlZEluZGV4IHByb3BlcnR5XHJcbi8vIGZvcmNlcyB0aGUgYnJvd3NlciB0byByZXNwZWN0IHNldHRpbmcgc2VsZWN0ZWRcclxuLy8gb24gdGhlIG9wdGlvblxyXG4vLyBUaGUgZ2V0dGVyIGVuc3VyZXMgYSBkZWZhdWx0IG9wdGlvbiBpcyBzZWxlY3RlZFxyXG4vLyB3aGVuIGluIGFuIG9wdGdyb3VwXHJcbi8vIGVzbGludCBydWxlIFwibm8tdW51c2VkLWV4cHJlc3Npb25zXCIgaXMgZGlzYWJsZWQgZm9yIHRoaXMgY29kZVxyXG4vLyBzaW5jZSBpdCBjb25zaWRlcnMgc3VjaCBhY2Nlc3Npb25zIG5vb3BcclxuaWYgKCAhc3VwcG9ydC5vcHRTZWxlY3RlZCApIHtcclxuXHRqUXVlcnkucHJvcEhvb2tzLnNlbGVjdGVkID0ge1xyXG5cdFx0Z2V0OiBmdW5jdGlvbiggZWxlbSApIHtcclxuXHJcblx0XHRcdC8qIGVzbGludCBuby11bnVzZWQtZXhwcmVzc2lvbnM6IFwib2ZmXCIgKi9cclxuXHJcblx0XHRcdHZhciBwYXJlbnQgPSBlbGVtLnBhcmVudE5vZGU7XHJcblx0XHRcdGlmICggcGFyZW50ICYmIHBhcmVudC5wYXJlbnROb2RlICkge1xyXG5cdFx0XHRcdHBhcmVudC5wYXJlbnROb2RlLnNlbGVjdGVkSW5kZXg7XHJcblx0XHRcdH1cclxuXHRcdFx0cmV0dXJuIG51bGw7XHJcblx0XHR9LFxyXG5cdFx0c2V0OiBmdW5jdGlvbiggZWxlbSApIHtcclxuXHJcblx0XHRcdC8qIGVzbGludCBuby11bnVzZWQtZXhwcmVzc2lvbnM6IFwib2ZmXCIgKi9cclxuXHJcblx0XHRcdHZhciBwYXJlbnQgPSBlbGVtLnBhcmVudE5vZGU7XHJcblx0XHRcdGlmICggcGFyZW50ICkge1xyXG5cdFx0XHRcdHBhcmVudC5zZWxlY3RlZEluZGV4O1xyXG5cclxuXHRcdFx0XHRpZiAoIHBhcmVudC5wYXJlbnROb2RlICkge1xyXG5cdFx0XHRcdFx0cGFyZW50LnBhcmVudE5vZGUuc2VsZWN0ZWRJbmRleDtcclxuXHRcdFx0XHR9XHJcblx0XHRcdH1cclxuXHRcdH1cclxuXHR9O1xyXG59XHJcblxyXG5qUXVlcnkuZWFjaCggW1xyXG5cdFwidGFiSW5kZXhcIixcclxuXHRcInJlYWRPbmx5XCIsXHJcblx0XCJtYXhMZW5ndGhcIixcclxuXHRcImNlbGxTcGFjaW5nXCIsXHJcblx0XCJjZWxsUGFkZGluZ1wiLFxyXG5cdFwicm93U3BhblwiLFxyXG5cdFwiY29sU3BhblwiLFxyXG5cdFwidXNlTWFwXCIsXHJcblx0XCJmcmFtZUJvcmRlclwiLFxyXG5cdFwiY29udGVudEVkaXRhYmxlXCJcclxuXSwgZnVuY3Rpb24oKSB7XHJcblx0alF1ZXJ5LnByb3BGaXhbIHRoaXMudG9Mb3dlckNhc2UoKSBdID0gdGhpcztcclxufSApO1xyXG5cclxuXHJcblxyXG5cclxuXHQvLyBTdHJpcCBhbmQgY29sbGFwc2Ugd2hpdGVzcGFjZSBhY2NvcmRpbmcgdG8gSFRNTCBzcGVjXHJcblx0Ly8gaHR0cHM6Ly9pbmZyYS5zcGVjLndoYXR3Zy5vcmcvI3N0cmlwLWFuZC1jb2xsYXBzZS1hc2NpaS13aGl0ZXNwYWNlXHJcblx0ZnVuY3Rpb24gc3RyaXBBbmRDb2xsYXBzZSggdmFsdWUgKSB7XHJcblx0XHR2YXIgdG9rZW5zID0gdmFsdWUubWF0Y2goIHJub3RodG1sd2hpdGUgKSB8fCBbXTtcclxuXHRcdHJldHVybiB0b2tlbnMuam9pbiggXCIgXCIgKTtcclxuXHR9XHJcblxyXG5cclxuZnVuY3Rpb24gZ2V0Q2xhc3MoIGVsZW0gKSB7XHJcblx0cmV0dXJuIGVsZW0uZ2V0QXR0cmlidXRlICYmIGVsZW0uZ2V0QXR0cmlidXRlKCBcImNsYXNzXCIgKSB8fCBcIlwiO1xyXG59XHJcblxyXG5mdW5jdGlvbiBjbGFzc2VzVG9BcnJheSggdmFsdWUgKSB7XHJcblx0aWYgKCBBcnJheS5pc0FycmF5KCB2YWx1ZSApICkge1xyXG5cdFx0cmV0dXJuIHZhbHVlO1xyXG5cdH1cclxuXHRpZiAoIHR5cGVvZiB2YWx1ZSA9PT0gXCJzdHJpbmdcIiApIHtcclxuXHRcdHJldHVybiB2YWx1ZS5tYXRjaCggcm5vdGh0bWx3aGl0ZSApIHx8IFtdO1xyXG5cdH1cclxuXHRyZXR1cm4gW107XHJcbn1cclxuXHJcbmpRdWVyeS5mbi5leHRlbmQoIHtcclxuXHRhZGRDbGFzczogZnVuY3Rpb24oIHZhbHVlICkge1xyXG5cdFx0dmFyIGNsYXNzZXMsIGVsZW0sIGN1ciwgY3VyVmFsdWUsIGNsYXp6LCBqLCBmaW5hbFZhbHVlLFxyXG5cdFx0XHRpID0gMDtcclxuXHJcblx0XHRpZiAoIGlzRnVuY3Rpb24oIHZhbHVlICkgKSB7XHJcblx0XHRcdHJldHVybiB0aGlzLmVhY2goIGZ1bmN0aW9uKCBqICkge1xyXG5cdFx0XHRcdGpRdWVyeSggdGhpcyApLmFkZENsYXNzKCB2YWx1ZS5jYWxsKCB0aGlzLCBqLCBnZXRDbGFzcyggdGhpcyApICkgKTtcclxuXHRcdFx0fSApO1xyXG5cdFx0fVxyXG5cclxuXHRcdGNsYXNzZXMgPSBjbGFzc2VzVG9BcnJheSggdmFsdWUgKTtcclxuXHJcblx0XHRpZiAoIGNsYXNzZXMubGVuZ3RoICkge1xyXG5cdFx0XHR3aGlsZSAoICggZWxlbSA9IHRoaXNbIGkrKyBdICkgKSB7XHJcblx0XHRcdFx0Y3VyVmFsdWUgPSBnZXRDbGFzcyggZWxlbSApO1xyXG5cdFx0XHRcdGN1ciA9IGVsZW0ubm9kZVR5cGUgPT09IDEgJiYgKCBcIiBcIiArIHN0cmlwQW5kQ29sbGFwc2UoIGN1clZhbHVlICkgKyBcIiBcIiApO1xyXG5cclxuXHRcdFx0XHRpZiAoIGN1ciApIHtcclxuXHRcdFx0XHRcdGogPSAwO1xyXG5cdFx0XHRcdFx0d2hpbGUgKCAoIGNsYXp6ID0gY2xhc3Nlc1sgaisrIF0gKSApIHtcclxuXHRcdFx0XHRcdFx0aWYgKCBjdXIuaW5kZXhPZiggXCIgXCIgKyBjbGF6eiArIFwiIFwiICkgPCAwICkge1xyXG5cdFx0XHRcdFx0XHRcdGN1ciArPSBjbGF6eiArIFwiIFwiO1xyXG5cdFx0XHRcdFx0XHR9XHJcblx0XHRcdFx0XHR9XHJcblxyXG5cdFx0XHRcdFx0Ly8gT25seSBhc3NpZ24gaWYgZGlmZmVyZW50IHRvIGF2b2lkIHVubmVlZGVkIHJlbmRlcmluZy5cclxuXHRcdFx0XHRcdGZpbmFsVmFsdWUgPSBzdHJpcEFuZENvbGxhcHNlKCBjdXIgKTtcclxuXHRcdFx0XHRcdGlmICggY3VyVmFsdWUgIT09IGZpbmFsVmFsdWUgKSB7XHJcblx0XHRcdFx0XHRcdGVsZW0uc2V0QXR0cmlidXRlKCBcImNsYXNzXCIsIGZpbmFsVmFsdWUgKTtcclxuXHRcdFx0XHRcdH1cclxuXHRcdFx0XHR9XHJcblx0XHRcdH1cclxuXHRcdH1cclxuXHJcblx0XHRyZXR1cm4gdGhpcztcclxuXHR9LFxyXG5cclxuXHRyZW1vdmVDbGFzczogZnVuY3Rpb24oIHZhbHVlICkge1xyXG5cdFx0dmFyIGNsYXNzZXMsIGVsZW0sIGN1ciwgY3VyVmFsdWUsIGNsYXp6LCBqLCBmaW5hbFZhbHVlLFxyXG5cdFx0XHRpID0gMDtcclxuXHJcblx0XHRpZiAoIGlzRnVuY3Rpb24oIHZhbHVlICkgKSB7XHJcblx0XHRcdHJldHVybiB0aGlzLmVhY2goIGZ1bmN0aW9uKCBqICkge1xyXG5cdFx0XHRcdGpRdWVyeSggdGhpcyApLnJlbW92ZUNsYXNzKCB2YWx1ZS5jYWxsKCB0aGlzLCBqLCBnZXRDbGFzcyggdGhpcyApICkgKTtcclxuXHRcdFx0fSApO1xyXG5cdFx0fVxyXG5cclxuXHRcdGlmICggIWFyZ3VtZW50cy5sZW5ndGggKSB7XHJcblx0XHRcdHJldHVybiB0aGlzLmF0dHIoIFwiY2xhc3NcIiwgXCJcIiApO1xyXG5cdFx0fVxyXG5cclxuXHRcdGNsYXNzZXMgPSBjbGFzc2VzVG9BcnJheSggdmFsdWUgKTtcclxuXHJcblx0XHRpZiAoIGNsYXNzZXMubGVuZ3RoICkge1xyXG5cdFx0XHR3aGlsZSAoICggZWxlbSA9IHRoaXNbIGkrKyBdICkgKSB7XHJcblx0XHRcdFx0Y3VyVmFsdWUgPSBnZXRDbGFzcyggZWxlbSApO1xyXG5cclxuXHRcdFx0XHQvLyBUaGlzIGV4cHJlc3Npb24gaXMgaGVyZSBmb3IgYmV0dGVyIGNvbXByZXNzaWJpbGl0eSAoc2VlIGFkZENsYXNzKVxyXG5cdFx0XHRcdGN1ciA9IGVsZW0ubm9kZVR5cGUgPT09IDEgJiYgKCBcIiBcIiArIHN0cmlwQW5kQ29sbGFwc2UoIGN1clZhbHVlICkgKyBcIiBcIiApO1xyXG5cclxuXHRcdFx0XHRpZiAoIGN1ciApIHtcclxuXHRcdFx0XHRcdGogPSAwO1xyXG5cdFx0XHRcdFx0d2hpbGUgKCAoIGNsYXp6ID0gY2xhc3Nlc1sgaisrIF0gKSApIHtcclxuXHJcblx0XHRcdFx0XHRcdC8vIFJlbW92ZSAqYWxsKiBpbnN0YW5jZXNcclxuXHRcdFx0XHRcdFx0d2hpbGUgKCBjdXIuaW5kZXhPZiggXCIgXCIgKyBjbGF6eiArIFwiIFwiICkgPiAtMSApIHtcclxuXHRcdFx0XHRcdFx0XHRjdXIgPSBjdXIucmVwbGFjZSggXCIgXCIgKyBjbGF6eiArIFwiIFwiLCBcIiBcIiApO1xyXG5cdFx0XHRcdFx0XHR9XHJcblx0XHRcdFx0XHR9XHJcblxyXG5cdFx0XHRcdFx0Ly8gT25seSBhc3NpZ24gaWYgZGlmZmVyZW50IHRvIGF2b2lkIHVubmVlZGVkIHJlbmRlcmluZy5cclxuXHRcdFx0XHRcdGZpbmFsVmFsdWUgPSBzdHJpcEFuZENvbGxhcHNlKCBjdXIgKTtcclxuXHRcdFx0XHRcdGlmICggY3VyVmFsdWUgIT09IGZpbmFsVmFsdWUgKSB7XHJcblx0XHRcdFx0XHRcdGVsZW0uc2V0QXR0cmlidXRlKCBcImNsYXNzXCIsIGZpbmFsVmFsdWUgKTtcclxuXHRcdFx0XHRcdH1cclxuXHRcdFx0XHR9XHJcblx0XHRcdH1cclxuXHRcdH1cclxuXHJcblx0XHRyZXR1cm4gdGhpcztcclxuXHR9LFxyXG5cclxuXHR0b2dnbGVDbGFzczogZnVuY3Rpb24oIHZhbHVlLCBzdGF0ZVZhbCApIHtcclxuXHRcdHZhciB0eXBlID0gdHlwZW9mIHZhbHVlLFxyXG5cdFx0XHRpc1ZhbGlkVmFsdWUgPSB0eXBlID09PSBcInN0cmluZ1wiIHx8IEFycmF5LmlzQXJyYXkoIHZhbHVlICk7XHJcblxyXG5cdFx0aWYgKCB0eXBlb2Ygc3RhdGVWYWwgPT09IFwiYm9vbGVhblwiICYmIGlzVmFsaWRWYWx1ZSApIHtcclxuXHRcdFx0cmV0dXJuIHN0YXRlVmFsID8gdGhpcy5hZGRDbGFzcyggdmFsdWUgKSA6IHRoaXMucmVtb3ZlQ2xhc3MoIHZhbHVlICk7XHJcblx0XHR9XHJcblxyXG5cdFx0aWYgKCBpc0Z1bmN0aW9uKCB2YWx1ZSApICkge1xyXG5cdFx0XHRyZXR1cm4gdGhpcy5lYWNoKCBmdW5jdGlvbiggaSApIHtcclxuXHRcdFx0XHRqUXVlcnkoIHRoaXMgKS50b2dnbGVDbGFzcyhcclxuXHRcdFx0XHRcdHZhbHVlLmNhbGwoIHRoaXMsIGksIGdldENsYXNzKCB0aGlzICksIHN0YXRlVmFsICksXHJcblx0XHRcdFx0XHRzdGF0ZVZhbFxyXG5cdFx0XHRcdCk7XHJcblx0XHRcdH0gKTtcclxuXHRcdH1cclxuXHJcblx0XHRyZXR1cm4gdGhpcy5lYWNoKCBmdW5jdGlvbigpIHtcclxuXHRcdFx0dmFyIGNsYXNzTmFtZSwgaSwgc2VsZiwgY2xhc3NOYW1lcztcclxuXHJcblx0XHRcdGlmICggaXNWYWxpZFZhbHVlICkge1xyXG5cclxuXHRcdFx0XHQvLyBUb2dnbGUgaW5kaXZpZHVhbCBjbGFzcyBuYW1lc1xyXG5cdFx0XHRcdGkgPSAwO1xyXG5cdFx0XHRcdHNlbGYgPSBqUXVlcnkoIHRoaXMgKTtcclxuXHRcdFx0XHRjbGFzc05hbWVzID0gY2xhc3Nlc1RvQXJyYXkoIHZhbHVlICk7XHJcblxyXG5cdFx0XHRcdHdoaWxlICggKCBjbGFzc05hbWUgPSBjbGFzc05hbWVzWyBpKysgXSApICkge1xyXG5cclxuXHRcdFx0XHRcdC8vIENoZWNrIGVhY2ggY2xhc3NOYW1lIGdpdmVuLCBzcGFjZSBzZXBhcmF0ZWQgbGlzdFxyXG5cdFx0XHRcdFx0aWYgKCBzZWxmLmhhc0NsYXNzKCBjbGFzc05hbWUgKSApIHtcclxuXHRcdFx0XHRcdFx0c2VsZi5yZW1vdmVDbGFzcyggY2xhc3NOYW1lICk7XHJcblx0XHRcdFx0XHR9IGVsc2Uge1xyXG5cdFx0XHRcdFx0XHRzZWxmLmFkZENsYXNzKCBjbGFzc05hbWUgKTtcclxuXHRcdFx0XHRcdH1cclxuXHRcdFx0XHR9XHJcblxyXG5cdFx0XHQvLyBUb2dnbGUgd2hvbGUgY2xhc3MgbmFtZVxyXG5cdFx0XHR9IGVsc2UgaWYgKCB2YWx1ZSA9PT0gdW5kZWZpbmVkIHx8IHR5cGUgPT09IFwiYm9vbGVhblwiICkge1xyXG5cdFx0XHRcdGNsYXNzTmFtZSA9IGdldENsYXNzKCB0aGlzICk7XHJcblx0XHRcdFx0aWYgKCBjbGFzc05hbWUgKSB7XHJcblxyXG5cdFx0XHRcdFx0Ly8gU3RvcmUgY2xhc3NOYW1lIGlmIHNldFxyXG5cdFx0XHRcdFx0ZGF0YVByaXYuc2V0KCB0aGlzLCBcIl9fY2xhc3NOYW1lX19cIiwgY2xhc3NOYW1lICk7XHJcblx0XHRcdFx0fVxyXG5cclxuXHRcdFx0XHQvLyBJZiB0aGUgZWxlbWVudCBoYXMgYSBjbGFzcyBuYW1lIG9yIGlmIHdlJ3JlIHBhc3NlZCBgZmFsc2VgLFxyXG5cdFx0XHRcdC8vIHRoZW4gcmVtb3ZlIHRoZSB3aG9sZSBjbGFzc25hbWUgKGlmIHRoZXJlIHdhcyBvbmUsIHRoZSBhYm92ZSBzYXZlZCBpdCkuXHJcblx0XHRcdFx0Ly8gT3RoZXJ3aXNlIGJyaW5nIGJhY2sgd2hhdGV2ZXIgd2FzIHByZXZpb3VzbHkgc2F2ZWQgKGlmIGFueXRoaW5nKSxcclxuXHRcdFx0XHQvLyBmYWxsaW5nIGJhY2sgdG8gdGhlIGVtcHR5IHN0cmluZyBpZiBub3RoaW5nIHdhcyBzdG9yZWQuXHJcblx0XHRcdFx0aWYgKCB0aGlzLnNldEF0dHJpYnV0ZSApIHtcclxuXHRcdFx0XHRcdHRoaXMuc2V0QXR0cmlidXRlKCBcImNsYXNzXCIsXHJcblx0XHRcdFx0XHRcdGNsYXNzTmFtZSB8fCB2YWx1ZSA9PT0gZmFsc2UgP1xyXG5cdFx0XHRcdFx0XHRcIlwiIDpcclxuXHRcdFx0XHRcdFx0ZGF0YVByaXYuZ2V0KCB0aGlzLCBcIl9fY2xhc3NOYW1lX19cIiApIHx8IFwiXCJcclxuXHRcdFx0XHRcdCk7XHJcblx0XHRcdFx0fVxyXG5cdFx0XHR9XHJcblx0XHR9ICk7XHJcblx0fSxcclxuXHJcblx0aGFzQ2xhc3M6IGZ1bmN0aW9uKCBzZWxlY3RvciApIHtcclxuXHRcdHZhciBjbGFzc05hbWUsIGVsZW0sXHJcblx0XHRcdGkgPSAwO1xyXG5cclxuXHRcdGNsYXNzTmFtZSA9IFwiIFwiICsgc2VsZWN0b3IgKyBcIiBcIjtcclxuXHRcdHdoaWxlICggKCBlbGVtID0gdGhpc1sgaSsrIF0gKSApIHtcclxuXHRcdFx0aWYgKCBlbGVtLm5vZGVUeXBlID09PSAxICYmXHJcblx0XHRcdFx0KCBcIiBcIiArIHN0cmlwQW5kQ29sbGFwc2UoIGdldENsYXNzKCBlbGVtICkgKSArIFwiIFwiICkuaW5kZXhPZiggY2xhc3NOYW1lICkgPiAtMSApIHtcclxuXHRcdFx0XHRcdHJldHVybiB0cnVlO1xyXG5cdFx0XHR9XHJcblx0XHR9XHJcblxyXG5cdFx0cmV0dXJuIGZhbHNlO1xyXG5cdH1cclxufSApO1xyXG5cclxuXHJcblxyXG5cclxudmFyIHJyZXR1cm4gPSAvXFxyL2c7XHJcblxyXG5qUXVlcnkuZm4uZXh0ZW5kKCB7XHJcblx0dmFsOiBmdW5jdGlvbiggdmFsdWUgKSB7XHJcblx0XHR2YXIgaG9va3MsIHJldCwgdmFsdWVJc0Z1bmN0aW9uLFxyXG5cdFx0XHRlbGVtID0gdGhpc1sgMCBdO1xyXG5cclxuXHRcdGlmICggIWFyZ3VtZW50cy5sZW5ndGggKSB7XHJcblx0XHRcdGlmICggZWxlbSApIHtcclxuXHRcdFx0XHRob29rcyA9IGpRdWVyeS52YWxIb29rc1sgZWxlbS50eXBlIF0gfHxcclxuXHRcdFx0XHRcdGpRdWVyeS52YWxIb29rc1sgZWxlbS5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpIF07XHJcblxyXG5cdFx0XHRcdGlmICggaG9va3MgJiZcclxuXHRcdFx0XHRcdFwiZ2V0XCIgaW4gaG9va3MgJiZcclxuXHRcdFx0XHRcdCggcmV0ID0gaG9va3MuZ2V0KCBlbGVtLCBcInZhbHVlXCIgKSApICE9PSB1bmRlZmluZWRcclxuXHRcdFx0XHQpIHtcclxuXHRcdFx0XHRcdHJldHVybiByZXQ7XHJcblx0XHRcdFx0fVxyXG5cclxuXHRcdFx0XHRyZXQgPSBlbGVtLnZhbHVlO1xyXG5cclxuXHRcdFx0XHQvLyBIYW5kbGUgbW9zdCBjb21tb24gc3RyaW5nIGNhc2VzXHJcblx0XHRcdFx0aWYgKCB0eXBlb2YgcmV0ID09PSBcInN0cmluZ1wiICkge1xyXG5cdFx0XHRcdFx0cmV0dXJuIHJldC5yZXBsYWNlKCBycmV0dXJuLCBcIlwiICk7XHJcblx0XHRcdFx0fVxyXG5cclxuXHRcdFx0XHQvLyBIYW5kbGUgY2FzZXMgd2hlcmUgdmFsdWUgaXMgbnVsbC91bmRlZiBvciBudW1iZXJcclxuXHRcdFx0XHRyZXR1cm4gcmV0ID09IG51bGwgPyBcIlwiIDogcmV0O1xyXG5cdFx0XHR9XHJcblxyXG5cdFx0XHRyZXR1cm47XHJcblx0XHR9XHJcblxyXG5cdFx0dmFsdWVJc0Z1bmN0aW9uID0gaXNGdW5jdGlvbiggdmFsdWUgKTtcclxuXHJcblx0XHRyZXR1cm4gdGhpcy5lYWNoKCBmdW5jdGlvbiggaSApIHtcclxuXHRcdFx0dmFyIHZhbDtcclxuXHJcblx0XHRcdGlmICggdGhpcy5ub2RlVHlwZSAhPT0gMSApIHtcclxuXHRcdFx0XHRyZXR1cm47XHJcblx0XHRcdH1cclxuXHJcblx0XHRcdGlmICggdmFsdWVJc0Z1bmN0aW9uICkge1xyXG5cdFx0XHRcdHZhbCA9IHZhbHVlLmNhbGwoIHRoaXMsIGksIGpRdWVyeSggdGhpcyApLnZhbCgpICk7XHJcblx0XHRcdH0gZWxzZSB7XHJcblx0XHRcdFx0dmFsID0gdmFsdWU7XHJcblx0XHRcdH1cclxuXHJcblx0XHRcdC8vIFRyZWF0IG51bGwvdW5kZWZpbmVkIGFzIFwiXCI7IGNvbnZlcnQgbnVtYmVycyB0byBzdHJpbmdcclxuXHRcdFx0aWYgKCB2YWwgPT0gbnVsbCApIHtcclxuXHRcdFx0XHR2YWwgPSBcIlwiO1xyXG5cclxuXHRcdFx0fSBlbHNlIGlmICggdHlwZW9mIHZhbCA9PT0gXCJudW1iZXJcIiApIHtcclxuXHRcdFx0XHR2YWwgKz0gXCJcIjtcclxuXHJcblx0XHRcdH0gZWxzZSBpZiAoIEFycmF5LmlzQXJyYXkoIHZhbCApICkge1xyXG5cdFx0XHRcdHZhbCA9IGpRdWVyeS5tYXAoIHZhbCwgZnVuY3Rpb24oIHZhbHVlICkge1xyXG5cdFx0XHRcdFx0cmV0dXJuIHZhbHVlID09IG51bGwgPyBcIlwiIDogdmFsdWUgKyBcIlwiO1xyXG5cdFx0XHRcdH0gKTtcclxuXHRcdFx0fVxyXG5cclxuXHRcdFx0aG9va3MgPSBqUXVlcnkudmFsSG9va3NbIHRoaXMudHlwZSBdIHx8IGpRdWVyeS52YWxIb29rc1sgdGhpcy5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpIF07XHJcblxyXG5cdFx0XHQvLyBJZiBzZXQgcmV0dXJucyB1bmRlZmluZWQsIGZhbGwgYmFjayB0byBub3JtYWwgc2V0dGluZ1xyXG5cdFx0XHRpZiAoICFob29rcyB8fCAhKCBcInNldFwiIGluIGhvb2tzICkgfHwgaG9va3Muc2V0KCB0aGlzLCB2YWwsIFwidmFsdWVcIiApID09PSB1bmRlZmluZWQgKSB7XHJcblx0XHRcdFx0dGhpcy52YWx1ZSA9IHZhbDtcclxuXHRcdFx0fVxyXG5cdFx0fSApO1xyXG5cdH1cclxufSApO1xyXG5cclxualF1ZXJ5LmV4dGVuZCgge1xyXG5cdHZhbEhvb2tzOiB7XHJcblx0XHRvcHRpb246IHtcclxuXHRcdFx0Z2V0OiBmdW5jdGlvbiggZWxlbSApIHtcclxuXHJcblx0XHRcdFx0dmFyIHZhbCA9IGpRdWVyeS5maW5kLmF0dHIoIGVsZW0sIFwidmFsdWVcIiApO1xyXG5cdFx0XHRcdHJldHVybiB2YWwgIT0gbnVsbCA/XHJcblx0XHRcdFx0XHR2YWwgOlxyXG5cclxuXHRcdFx0XHRcdC8vIFN1cHBvcnQ6IElFIDw9MTAgLSAxMSBvbmx5XHJcblx0XHRcdFx0XHQvLyBvcHRpb24udGV4dCB0aHJvd3MgZXhjZXB0aW9ucyAoIzE0Njg2LCAjMTQ4NTgpXHJcblx0XHRcdFx0XHQvLyBTdHJpcCBhbmQgY29sbGFwc2Ugd2hpdGVzcGFjZVxyXG5cdFx0XHRcdFx0Ly8gaHR0cHM6Ly9odG1sLnNwZWMud2hhdHdnLm9yZy8jc3RyaXAtYW5kLWNvbGxhcHNlLXdoaXRlc3BhY2VcclxuXHRcdFx0XHRcdHN0cmlwQW5kQ29sbGFwc2UoIGpRdWVyeS50ZXh0KCBlbGVtICkgKTtcclxuXHRcdFx0fVxyXG5cdFx0fSxcclxuXHRcdHNlbGVjdDoge1xyXG5cdFx0XHRnZXQ6IGZ1bmN0aW9uKCBlbGVtICkge1xyXG5cdFx0XHRcdHZhciB2YWx1ZSwgb3B0aW9uLCBpLFxyXG5cdFx0XHRcdFx0b3B0aW9ucyA9IGVsZW0ub3B0aW9ucyxcclxuXHRcdFx0XHRcdGluZGV4ID0gZWxlbS5zZWxlY3RlZEluZGV4LFxyXG5cdFx0XHRcdFx0b25lID0gZWxlbS50eXBlID09PSBcInNlbGVjdC1vbmVcIixcclxuXHRcdFx0XHRcdHZhbHVlcyA9IG9uZSA/IG51bGwgOiBbXSxcclxuXHRcdFx0XHRcdG1heCA9IG9uZSA/IGluZGV4ICsgMSA6IG9wdGlvbnMubGVuZ3RoO1xyXG5cclxuXHRcdFx0XHRpZiAoIGluZGV4IDwgMCApIHtcclxuXHRcdFx0XHRcdGkgPSBtYXg7XHJcblxyXG5cdFx0XHRcdH0gZWxzZSB7XHJcblx0XHRcdFx0XHRpID0gb25lID8gaW5kZXggOiAwO1xyXG5cdFx0XHRcdH1cclxuXHJcblx0XHRcdFx0Ly8gTG9vcCB0aHJvdWdoIGFsbCB0aGUgc2VsZWN0ZWQgb3B0aW9uc1xyXG5cdFx0XHRcdGZvciAoIDsgaSA8IG1heDsgaSsrICkge1xyXG5cdFx0XHRcdFx0b3B0aW9uID0gb3B0aW9uc1sgaSBdO1xyXG5cclxuXHRcdFx0XHRcdC8vIFN1cHBvcnQ6IElFIDw9OSBvbmx5XHJcblx0XHRcdFx0XHQvLyBJRTgtOSBkb2Vzbid0IHVwZGF0ZSBzZWxlY3RlZCBhZnRlciBmb3JtIHJlc2V0ICgjMjU1MSlcclxuXHRcdFx0XHRcdGlmICggKCBvcHRpb24uc2VsZWN0ZWQgfHwgaSA9PT0gaW5kZXggKSAmJlxyXG5cclxuXHRcdFx0XHRcdFx0XHQvLyBEb24ndCByZXR1cm4gb3B0aW9ucyB0aGF0IGFyZSBkaXNhYmxlZCBvciBpbiBhIGRpc2FibGVkIG9wdGdyb3VwXHJcblx0XHRcdFx0XHRcdFx0IW9wdGlvbi5kaXNhYmxlZCAmJlxyXG5cdFx0XHRcdFx0XHRcdCggIW9wdGlvbi5wYXJlbnROb2RlLmRpc2FibGVkIHx8XHJcblx0XHRcdFx0XHRcdFx0XHQhbm9kZU5hbWUoIG9wdGlvbi5wYXJlbnROb2RlLCBcIm9wdGdyb3VwXCIgKSApICkge1xyXG5cclxuXHRcdFx0XHRcdFx0Ly8gR2V0IHRoZSBzcGVjaWZpYyB2YWx1ZSBmb3IgdGhlIG9wdGlvblxyXG5cdFx0XHRcdFx0XHR2YWx1ZSA9IGpRdWVyeSggb3B0aW9uICkudmFsKCk7XHJcblxyXG5cdFx0XHRcdFx0XHQvLyBXZSBkb24ndCBuZWVkIGFuIGFycmF5IGZvciBvbmUgc2VsZWN0c1xyXG5cdFx0XHRcdFx0XHRpZiAoIG9uZSApIHtcclxuXHRcdFx0XHRcdFx0XHRyZXR1cm4gdmFsdWU7XHJcblx0XHRcdFx0XHRcdH1cclxuXHJcblx0XHRcdFx0XHRcdC8vIE11bHRpLVNlbGVjdHMgcmV0dXJuIGFuIGFycmF5XHJcblx0XHRcdFx0XHRcdHZhbHVlcy5wdXNoKCB2YWx1ZSApO1xyXG5cdFx0XHRcdFx0fVxyXG5cdFx0XHRcdH1cclxuXHJcblx0XHRcdFx0cmV0dXJuIHZhbHVlcztcclxuXHRcdFx0fSxcclxuXHJcblx0XHRcdHNldDogZnVuY3Rpb24oIGVsZW0sIHZhbHVlICkge1xyXG5cdFx0XHRcdHZhciBvcHRpb25TZXQsIG9wdGlvbixcclxuXHRcdFx0XHRcdG9wdGlvbnMgPSBlbGVtLm9wdGlvbnMsXHJcblx0XHRcdFx0XHR2YWx1ZXMgPSBqUXVlcnkubWFrZUFycmF5KCB2YWx1ZSApLFxyXG5cdFx0XHRcdFx0aSA9IG9wdGlvbnMubGVuZ3RoO1xyXG5cclxuXHRcdFx0XHR3aGlsZSAoIGktLSApIHtcclxuXHRcdFx0XHRcdG9wdGlvbiA9IG9wdGlvbnNbIGkgXTtcclxuXHJcblx0XHRcdFx0XHQvKiBlc2xpbnQtZGlzYWJsZSBuby1jb25kLWFzc2lnbiAqL1xyXG5cclxuXHRcdFx0XHRcdGlmICggb3B0aW9uLnNlbGVjdGVkID1cclxuXHRcdFx0XHRcdFx0alF1ZXJ5LmluQXJyYXkoIGpRdWVyeS52YWxIb29rcy5vcHRpb24uZ2V0KCBvcHRpb24gKSwgdmFsdWVzICkgPiAtMVxyXG5cdFx0XHRcdFx0KSB7XHJcblx0XHRcdFx0XHRcdG9wdGlvblNldCA9IHRydWU7XHJcblx0XHRcdFx0XHR9XHJcblxyXG5cdFx0XHRcdFx0LyogZXNsaW50LWVuYWJsZSBuby1jb25kLWFzc2lnbiAqL1xyXG5cdFx0XHRcdH1cclxuXHJcblx0XHRcdFx0Ly8gRm9yY2UgYnJvd3NlcnMgdG8gYmVoYXZlIGNvbnNpc3RlbnRseSB3aGVuIG5vbi1tYXRjaGluZyB2YWx1ZSBpcyBzZXRcclxuXHRcdFx0XHRpZiAoICFvcHRpb25TZXQgKSB7XHJcblx0XHRcdFx0XHRlbGVtLnNlbGVjdGVkSW5kZXggPSAtMTtcclxuXHRcdFx0XHR9XHJcblx0XHRcdFx0cmV0dXJuIHZhbHVlcztcclxuXHRcdFx0fVxyXG5cdFx0fVxyXG5cdH1cclxufSApO1xyXG5cclxuLy8gUmFkaW9zIGFuZCBjaGVja2JveGVzIGdldHRlci9zZXR0ZXJcclxualF1ZXJ5LmVhY2goIFsgXCJyYWRpb1wiLCBcImNoZWNrYm94XCIgXSwgZnVuY3Rpb24oKSB7XHJcblx0alF1ZXJ5LnZhbEhvb2tzWyB0aGlzIF0gPSB7XHJcblx0XHRzZXQ6IGZ1bmN0aW9uKCBlbGVtLCB2YWx1ZSApIHtcclxuXHRcdFx0aWYgKCBBcnJheS5pc0FycmF5KCB2YWx1ZSApICkge1xyXG5cdFx0XHRcdHJldHVybiAoIGVsZW0uY2hlY2tlZCA9IGpRdWVyeS5pbkFycmF5KCBqUXVlcnkoIGVsZW0gKS52YWwoKSwgdmFsdWUgKSA+IC0xICk7XHJcblx0XHRcdH1cclxuXHRcdH1cclxuXHR9O1xyXG5cdGlmICggIXN1cHBvcnQuY2hlY2tPbiApIHtcclxuXHRcdGpRdWVyeS52YWxIb29rc1sgdGhpcyBdLmdldCA9IGZ1bmN0aW9uKCBlbGVtICkge1xyXG5cdFx0XHRyZXR1cm4gZWxlbS5nZXRBdHRyaWJ1dGUoIFwidmFsdWVcIiApID09PSBudWxsID8gXCJvblwiIDogZWxlbS52YWx1ZTtcclxuXHRcdH07XHJcblx0fVxyXG59ICk7XHJcblxyXG5cclxuXHJcblxyXG4vLyBSZXR1cm4galF1ZXJ5IGZvciBhdHRyaWJ1dGVzLW9ubHkgaW5jbHVzaW9uXHJcblxyXG5cclxuc3VwcG9ydC5mb2N1c2luID0gXCJvbmZvY3VzaW5cIiBpbiB3aW5kb3c7XHJcblxyXG5cclxudmFyIHJmb2N1c01vcnBoID0gL14oPzpmb2N1c2luZm9jdXN8Zm9jdXNvdXRibHVyKSQvLFxyXG5cdHN0b3BQcm9wYWdhdGlvbkNhbGxiYWNrID0gZnVuY3Rpb24oIGUgKSB7XHJcblx0XHRlLnN0b3BQcm9wYWdhdGlvbigpO1xyXG5cdH07XHJcblxyXG5qUXVlcnkuZXh0ZW5kKCBqUXVlcnkuZXZlbnQsIHtcclxuXHJcblx0dHJpZ2dlcjogZnVuY3Rpb24oIGV2ZW50LCBkYXRhLCBlbGVtLCBvbmx5SGFuZGxlcnMgKSB7XHJcblxyXG5cdFx0dmFyIGksIGN1ciwgdG1wLCBidWJibGVUeXBlLCBvbnR5cGUsIGhhbmRsZSwgc3BlY2lhbCwgbGFzdEVsZW1lbnQsXHJcblx0XHRcdGV2ZW50UGF0aCA9IFsgZWxlbSB8fCBkb2N1bWVudCBdLFxyXG5cdFx0XHR0eXBlID0gaGFzT3duLmNhbGwoIGV2ZW50LCBcInR5cGVcIiApID8gZXZlbnQudHlwZSA6IGV2ZW50LFxyXG5cdFx0XHRuYW1lc3BhY2VzID0gaGFzT3duLmNhbGwoIGV2ZW50LCBcIm5hbWVzcGFjZVwiICkgPyBldmVudC5uYW1lc3BhY2Uuc3BsaXQoIFwiLlwiICkgOiBbXTtcclxuXHJcblx0XHRjdXIgPSBsYXN0RWxlbWVudCA9IHRtcCA9IGVsZW0gPSBlbGVtIHx8IGRvY3VtZW50O1xyXG5cclxuXHRcdC8vIERvbid0IGRvIGV2ZW50cyBvbiB0ZXh0IGFuZCBjb21tZW50IG5vZGVzXHJcblx0XHRpZiAoIGVsZW0ubm9kZVR5cGUgPT09IDMgfHwgZWxlbS5ub2RlVHlwZSA9PT0gOCApIHtcclxuXHRcdFx0cmV0dXJuO1xyXG5cdFx0fVxyXG5cclxuXHRcdC8vIGZvY3VzL2JsdXIgbW9ycGhzIHRvIGZvY3VzaW4vb3V0OyBlbnN1cmUgd2UncmUgbm90IGZpcmluZyB0aGVtIHJpZ2h0IG5vd1xyXG5cdFx0aWYgKCByZm9jdXNNb3JwaC50ZXN0KCB0eXBlICsgalF1ZXJ5LmV2ZW50LnRyaWdnZXJlZCApICkge1xyXG5cdFx0XHRyZXR1cm47XHJcblx0XHR9XHJcblxyXG5cdFx0aWYgKCB0eXBlLmluZGV4T2YoIFwiLlwiICkgPiAtMSApIHtcclxuXHJcblx0XHRcdC8vIE5hbWVzcGFjZWQgdHJpZ2dlcjsgY3JlYXRlIGEgcmVnZXhwIHRvIG1hdGNoIGV2ZW50IHR5cGUgaW4gaGFuZGxlKClcclxuXHRcdFx0bmFtZXNwYWNlcyA9IHR5cGUuc3BsaXQoIFwiLlwiICk7XHJcblx0XHRcdHR5cGUgPSBuYW1lc3BhY2VzLnNoaWZ0KCk7XHJcblx0XHRcdG5hbWVzcGFjZXMuc29ydCgpO1xyXG5cdFx0fVxyXG5cdFx0b250eXBlID0gdHlwZS5pbmRleE9mKCBcIjpcIiApIDwgMCAmJiBcIm9uXCIgKyB0eXBlO1xyXG5cclxuXHRcdC8vIENhbGxlciBjYW4gcGFzcyBpbiBhIGpRdWVyeS5FdmVudCBvYmplY3QsIE9iamVjdCwgb3IganVzdCBhbiBldmVudCB0eXBlIHN0cmluZ1xyXG5cdFx0ZXZlbnQgPSBldmVudFsgalF1ZXJ5LmV4cGFuZG8gXSA/XHJcblx0XHRcdGV2ZW50IDpcclxuXHRcdFx0bmV3IGpRdWVyeS5FdmVudCggdHlwZSwgdHlwZW9mIGV2ZW50ID09PSBcIm9iamVjdFwiICYmIGV2ZW50ICk7XHJcblxyXG5cdFx0Ly8gVHJpZ2dlciBiaXRtYXNrOiAmIDEgZm9yIG5hdGl2ZSBoYW5kbGVyczsgJiAyIGZvciBqUXVlcnkgKGFsd2F5cyB0cnVlKVxyXG5cdFx0ZXZlbnQuaXNUcmlnZ2VyID0gb25seUhhbmRsZXJzID8gMiA6IDM7XHJcblx0XHRldmVudC5uYW1lc3BhY2UgPSBuYW1lc3BhY2VzLmpvaW4oIFwiLlwiICk7XHJcblx0XHRldmVudC5ybmFtZXNwYWNlID0gZXZlbnQubmFtZXNwYWNlID9cclxuXHRcdFx0bmV3IFJlZ0V4cCggXCIoXnxcXFxcLilcIiArIG5hbWVzcGFjZXMuam9pbiggXCJcXFxcLig/Oi4qXFxcXC58KVwiICkgKyBcIihcXFxcLnwkKVwiICkgOlxyXG5cdFx0XHRudWxsO1xyXG5cclxuXHRcdC8vIENsZWFuIHVwIHRoZSBldmVudCBpbiBjYXNlIGl0IGlzIGJlaW5nIHJldXNlZFxyXG5cdFx0ZXZlbnQucmVzdWx0ID0gdW5kZWZpbmVkO1xyXG5cdFx0aWYgKCAhZXZlbnQudGFyZ2V0ICkge1xyXG5cdFx0XHRldmVudC50YXJnZXQgPSBlbGVtO1xyXG5cdFx0fVxyXG5cclxuXHRcdC8vIENsb25lIGFueSBpbmNvbWluZyBkYXRhIGFuZCBwcmVwZW5kIHRoZSBldmVudCwgY3JlYXRpbmcgdGhlIGhhbmRsZXIgYXJnIGxpc3RcclxuXHRcdGRhdGEgPSBkYXRhID09IG51bGwgP1xyXG5cdFx0XHRbIGV2ZW50IF0gOlxyXG5cdFx0XHRqUXVlcnkubWFrZUFycmF5KCBkYXRhLCBbIGV2ZW50IF0gKTtcclxuXHJcblx0XHQvLyBBbGxvdyBzcGVjaWFsIGV2ZW50cyB0byBkcmF3IG91dHNpZGUgdGhlIGxpbmVzXHJcblx0XHRzcGVjaWFsID0galF1ZXJ5LmV2ZW50LnNwZWNpYWxbIHR5cGUgXSB8fCB7fTtcclxuXHRcdGlmICggIW9ubHlIYW5kbGVycyAmJiBzcGVjaWFsLnRyaWdnZXIgJiYgc3BlY2lhbC50cmlnZ2VyLmFwcGx5KCBlbGVtLCBkYXRhICkgPT09IGZhbHNlICkge1xyXG5cdFx0XHRyZXR1cm47XHJcblx0XHR9XHJcblxyXG5cdFx0Ly8gRGV0ZXJtaW5lIGV2ZW50IHByb3BhZ2F0aW9uIHBhdGggaW4gYWR2YW5jZSwgcGVyIFczQyBldmVudHMgc3BlYyAoIzk5NTEpXHJcblx0XHQvLyBCdWJibGUgdXAgdG8gZG9jdW1lbnQsIHRoZW4gdG8gd2luZG93OyB3YXRjaCBmb3IgYSBnbG9iYWwgb3duZXJEb2N1bWVudCB2YXIgKCM5NzI0KVxyXG5cdFx0aWYgKCAhb25seUhhbmRsZXJzICYmICFzcGVjaWFsLm5vQnViYmxlICYmICFpc1dpbmRvdyggZWxlbSApICkge1xyXG5cclxuXHRcdFx0YnViYmxlVHlwZSA9IHNwZWNpYWwuZGVsZWdhdGVUeXBlIHx8IHR5cGU7XHJcblx0XHRcdGlmICggIXJmb2N1c01vcnBoLnRlc3QoIGJ1YmJsZVR5cGUgKyB0eXBlICkgKSB7XHJcblx0XHRcdFx0Y3VyID0gY3VyLnBhcmVudE5vZGU7XHJcblx0XHRcdH1cclxuXHRcdFx0Zm9yICggOyBjdXI7IGN1ciA9IGN1ci5wYXJlbnROb2RlICkge1xyXG5cdFx0XHRcdGV2ZW50UGF0aC5wdXNoKCBjdXIgKTtcclxuXHRcdFx0XHR0bXAgPSBjdXI7XHJcblx0XHRcdH1cclxuXHJcblx0XHRcdC8vIE9ubHkgYWRkIHdpbmRvdyBpZiB3ZSBnb3QgdG8gZG9jdW1lbnQgKGUuZy4sIG5vdCBwbGFpbiBvYmogb3IgZGV0YWNoZWQgRE9NKVxyXG5cdFx0XHRpZiAoIHRtcCA9PT0gKCBlbGVtLm93bmVyRG9jdW1lbnQgfHwgZG9jdW1lbnQgKSApIHtcclxuXHRcdFx0XHRldmVudFBhdGgucHVzaCggdG1wLmRlZmF1bHRWaWV3IHx8IHRtcC5wYXJlbnRXaW5kb3cgfHwgd2luZG93ICk7XHJcblx0XHRcdH1cclxuXHRcdH1cclxuXHJcblx0XHQvLyBGaXJlIGhhbmRsZXJzIG9uIHRoZSBldmVudCBwYXRoXHJcblx0XHRpID0gMDtcclxuXHRcdHdoaWxlICggKCBjdXIgPSBldmVudFBhdGhbIGkrKyBdICkgJiYgIWV2ZW50LmlzUHJvcGFnYXRpb25TdG9wcGVkKCkgKSB7XHJcblx0XHRcdGxhc3RFbGVtZW50ID0gY3VyO1xyXG5cdFx0XHRldmVudC50eXBlID0gaSA+IDEgP1xyXG5cdFx0XHRcdGJ1YmJsZVR5cGUgOlxyXG5cdFx0XHRcdHNwZWNpYWwuYmluZFR5cGUgfHwgdHlwZTtcclxuXHJcblx0XHRcdC8vIGpRdWVyeSBoYW5kbGVyXHJcblx0XHRcdGhhbmRsZSA9ICggZGF0YVByaXYuZ2V0KCBjdXIsIFwiZXZlbnRzXCIgKSB8fCB7fSApWyBldmVudC50eXBlIF0gJiZcclxuXHRcdFx0XHRkYXRhUHJpdi5nZXQoIGN1ciwgXCJoYW5kbGVcIiApO1xyXG5cdFx0XHRpZiAoIGhhbmRsZSApIHtcclxuXHRcdFx0XHRoYW5kbGUuYXBwbHkoIGN1ciwgZGF0YSApO1xyXG5cdFx0XHR9XHJcblxyXG5cdFx0XHQvLyBOYXRpdmUgaGFuZGxlclxyXG5cdFx0XHRoYW5kbGUgPSBvbnR5cGUgJiYgY3VyWyBvbnR5cGUgXTtcclxuXHRcdFx0aWYgKCBoYW5kbGUgJiYgaGFuZGxlLmFwcGx5ICYmIGFjY2VwdERhdGEoIGN1ciApICkge1xyXG5cdFx0XHRcdGV2ZW50LnJlc3VsdCA9IGhhbmRsZS5hcHBseSggY3VyLCBkYXRhICk7XHJcblx0XHRcdFx0aWYgKCBldmVudC5yZXN1bHQgPT09IGZhbHNlICkge1xyXG5cdFx0XHRcdFx0ZXZlbnQucHJldmVudERlZmF1bHQoKTtcclxuXHRcdFx0XHR9XHJcblx0XHRcdH1cclxuXHRcdH1cclxuXHRcdGV2ZW50LnR5cGUgPSB0eXBlO1xyXG5cclxuXHRcdC8vIElmIG5vYm9keSBwcmV2ZW50ZWQgdGhlIGRlZmF1bHQgYWN0aW9uLCBkbyBpdCBub3dcclxuXHRcdGlmICggIW9ubHlIYW5kbGVycyAmJiAhZXZlbnQuaXNEZWZhdWx0UHJldmVudGVkKCkgKSB7XHJcblxyXG5cdFx0XHRpZiAoICggIXNwZWNpYWwuX2RlZmF1bHQgfHxcclxuXHRcdFx0XHRzcGVjaWFsLl9kZWZhdWx0LmFwcGx5KCBldmVudFBhdGgucG9wKCksIGRhdGEgKSA9PT0gZmFsc2UgKSAmJlxyXG5cdFx0XHRcdGFjY2VwdERhdGEoIGVsZW0gKSApIHtcclxuXHJcblx0XHRcdFx0Ly8gQ2FsbCBhIG5hdGl2ZSBET00gbWV0aG9kIG9uIHRoZSB0YXJnZXQgd2l0aCB0aGUgc2FtZSBuYW1lIGFzIHRoZSBldmVudC5cclxuXHRcdFx0XHQvLyBEb24ndCBkbyBkZWZhdWx0IGFjdGlvbnMgb24gd2luZG93LCB0aGF0J3Mgd2hlcmUgZ2xvYmFsIHZhcmlhYmxlcyBiZSAoIzYxNzApXHJcblx0XHRcdFx0aWYgKCBvbnR5cGUgJiYgaXNGdW5jdGlvbiggZWxlbVsgdHlwZSBdICkgJiYgIWlzV2luZG93KCBlbGVtICkgKSB7XHJcblxyXG5cdFx0XHRcdFx0Ly8gRG9uJ3QgcmUtdHJpZ2dlciBhbiBvbkZPTyBldmVudCB3aGVuIHdlIGNhbGwgaXRzIEZPTygpIG1ldGhvZFxyXG5cdFx0XHRcdFx0dG1wID0gZWxlbVsgb250eXBlIF07XHJcblxyXG5cdFx0XHRcdFx0aWYgKCB0bXAgKSB7XHJcblx0XHRcdFx0XHRcdGVsZW1bIG9udHlwZSBdID0gbnVsbDtcclxuXHRcdFx0XHRcdH1cclxuXHJcblx0XHRcdFx0XHQvLyBQcmV2ZW50IHJlLXRyaWdnZXJpbmcgb2YgdGhlIHNhbWUgZXZlbnQsIHNpbmNlIHdlIGFscmVhZHkgYnViYmxlZCBpdCBhYm92ZVxyXG5cdFx0XHRcdFx0alF1ZXJ5LmV2ZW50LnRyaWdnZXJlZCA9IHR5cGU7XHJcblxyXG5cdFx0XHRcdFx0aWYgKCBldmVudC5pc1Byb3BhZ2F0aW9uU3RvcHBlZCgpICkge1xyXG5cdFx0XHRcdFx0XHRsYXN0RWxlbWVudC5hZGRFdmVudExpc3RlbmVyKCB0eXBlLCBzdG9wUHJvcGFnYXRpb25DYWxsYmFjayApO1xyXG5cdFx0XHRcdFx0fVxyXG5cclxuXHRcdFx0XHRcdGVsZW1bIHR5cGUgXSgpO1xyXG5cclxuXHRcdFx0XHRcdGlmICggZXZlbnQuaXNQcm9wYWdhdGlvblN0b3BwZWQoKSApIHtcclxuXHRcdFx0XHRcdFx0bGFzdEVsZW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lciggdHlwZSwgc3RvcFByb3BhZ2F0aW9uQ2FsbGJhY2sgKTtcclxuXHRcdFx0XHRcdH1cclxuXHJcblx0XHRcdFx0XHRqUXVlcnkuZXZlbnQudHJpZ2dlcmVkID0gdW5kZWZpbmVkO1xyXG5cclxuXHRcdFx0XHRcdGlmICggdG1wICkge1xyXG5cdFx0XHRcdFx0XHRlbGVtWyBvbnR5cGUgXSA9IHRtcDtcclxuXHRcdFx0XHRcdH1cclxuXHRcdFx0XHR9XHJcblx0XHRcdH1cclxuXHRcdH1cclxuXHJcblx0XHRyZXR1cm4gZXZlbnQucmVzdWx0O1xyXG5cdH0sXHJcblxyXG5cdC8vIFBpZ2d5YmFjayBvbiBhIGRvbm9yIGV2ZW50IHRvIHNpbXVsYXRlIGEgZGlmZmVyZW50IG9uZVxyXG5cdC8vIFVzZWQgb25seSBmb3IgYGZvY3VzKGluIHwgb3V0KWAgZXZlbnRzXHJcblx0c2ltdWxhdGU6IGZ1bmN0aW9uKCB0eXBlLCBlbGVtLCBldmVudCApIHtcclxuXHRcdHZhciBlID0galF1ZXJ5LmV4dGVuZChcclxuXHRcdFx0bmV3IGpRdWVyeS5FdmVudCgpLFxyXG5cdFx0XHRldmVudCxcclxuXHRcdFx0e1xyXG5cdFx0XHRcdHR5cGU6IHR5cGUsXHJcblx0XHRcdFx0aXNTaW11bGF0ZWQ6IHRydWVcclxuXHRcdFx0fVxyXG5cdFx0KTtcclxuXHJcblx0XHRqUXVlcnkuZXZlbnQudHJpZ2dlciggZSwgbnVsbCwgZWxlbSApO1xyXG5cdH1cclxuXHJcbn0gKTtcclxuXHJcbmpRdWVyeS5mbi5leHRlbmQoIHtcclxuXHJcblx0dHJpZ2dlcjogZnVuY3Rpb24oIHR5cGUsIGRhdGEgKSB7XHJcblx0XHRyZXR1cm4gdGhpcy5lYWNoKCBmdW5jdGlvbigpIHtcclxuXHRcdFx0alF1ZXJ5LmV2ZW50LnRyaWdnZXIoIHR5cGUsIGRhdGEsIHRoaXMgKTtcclxuXHRcdH0gKTtcclxuXHR9LFxyXG5cdHRyaWdnZXJIYW5kbGVyOiBmdW5jdGlvbiggdHlwZSwgZGF0YSApIHtcclxuXHRcdHZhciBlbGVtID0gdGhpc1sgMCBdO1xyXG5cdFx0aWYgKCBlbGVtICkge1xyXG5cdFx0XHRyZXR1cm4galF1ZXJ5LmV2ZW50LnRyaWdnZXIoIHR5cGUsIGRhdGEsIGVsZW0sIHRydWUgKTtcclxuXHRcdH1cclxuXHR9XHJcbn0gKTtcclxuXHJcblxyXG4vLyBTdXBwb3J0OiBGaXJlZm94IDw9NDRcclxuLy8gRmlyZWZveCBkb2Vzbid0IGhhdmUgZm9jdXMoaW4gfCBvdXQpIGV2ZW50c1xyXG4vLyBSZWxhdGVkIHRpY2tldCAtIGh0dHBzOi8vYnVnemlsbGEubW96aWxsYS5vcmcvc2hvd19idWcuY2dpP2lkPTY4Nzc4N1xyXG4vL1xyXG4vLyBTdXBwb3J0OiBDaHJvbWUgPD00OCAtIDQ5LCBTYWZhcmkgPD05LjAgLSA5LjFcclxuLy8gZm9jdXMoaW4gfCBvdXQpIGV2ZW50cyBmaXJlIGFmdGVyIGZvY3VzICYgYmx1ciBldmVudHMsXHJcbi8vIHdoaWNoIGlzIHNwZWMgdmlvbGF0aW9uIC0gaHR0cDovL3d3dy53My5vcmcvVFIvRE9NLUxldmVsLTMtRXZlbnRzLyNldmVudHMtZm9jdXNldmVudC1ldmVudC1vcmRlclxyXG4vLyBSZWxhdGVkIHRpY2tldCAtIGh0dHBzOi8vYnVncy5jaHJvbWl1bS5vcmcvcC9jaHJvbWl1bS9pc3N1ZXMvZGV0YWlsP2lkPTQ0OTg1N1xyXG5pZiAoICFzdXBwb3J0LmZvY3VzaW4gKSB7XHJcblx0alF1ZXJ5LmVhY2goIHsgZm9jdXM6IFwiZm9jdXNpblwiLCBibHVyOiBcImZvY3Vzb3V0XCIgfSwgZnVuY3Rpb24oIG9yaWcsIGZpeCApIHtcclxuXHJcblx0XHQvLyBBdHRhY2ggYSBzaW5nbGUgY2FwdHVyaW5nIGhhbmRsZXIgb24gdGhlIGRvY3VtZW50IHdoaWxlIHNvbWVvbmUgd2FudHMgZm9jdXNpbi9mb2N1c291dFxyXG5cdFx0dmFyIGhhbmRsZXIgPSBmdW5jdGlvbiggZXZlbnQgKSB7XHJcblx0XHRcdGpRdWVyeS5ldmVudC5zaW11bGF0ZSggZml4LCBldmVudC50YXJnZXQsIGpRdWVyeS5ldmVudC5maXgoIGV2ZW50ICkgKTtcclxuXHRcdH07XHJcblxyXG5cdFx0alF1ZXJ5LmV2ZW50LnNwZWNpYWxbIGZpeCBdID0ge1xyXG5cdFx0XHRzZXR1cDogZnVuY3Rpb24oKSB7XHJcblx0XHRcdFx0dmFyIGRvYyA9IHRoaXMub3duZXJEb2N1bWVudCB8fCB0aGlzLFxyXG5cdFx0XHRcdFx0YXR0YWNoZXMgPSBkYXRhUHJpdi5hY2Nlc3MoIGRvYywgZml4ICk7XHJcblxyXG5cdFx0XHRcdGlmICggIWF0dGFjaGVzICkge1xyXG5cdFx0XHRcdFx0ZG9jLmFkZEV2ZW50TGlzdGVuZXIoIG9yaWcsIGhhbmRsZXIsIHRydWUgKTtcclxuXHRcdFx0XHR9XHJcblx0XHRcdFx0ZGF0YVByaXYuYWNjZXNzKCBkb2MsIGZpeCwgKCBhdHRhY2hlcyB8fCAwICkgKyAxICk7XHJcblx0XHRcdH0sXHJcblx0XHRcdHRlYXJkb3duOiBmdW5jdGlvbigpIHtcclxuXHRcdFx0XHR2YXIgZG9jID0gdGhpcy5vd25lckRvY3VtZW50IHx8IHRoaXMsXHJcblx0XHRcdFx0XHRhdHRhY2hlcyA9IGRhdGFQcml2LmFjY2VzcyggZG9jLCBmaXggKSAtIDE7XHJcblxyXG5cdFx0XHRcdGlmICggIWF0dGFjaGVzICkge1xyXG5cdFx0XHRcdFx0ZG9jLnJlbW92ZUV2ZW50TGlzdGVuZXIoIG9yaWcsIGhhbmRsZXIsIHRydWUgKTtcclxuXHRcdFx0XHRcdGRhdGFQcml2LnJlbW92ZSggZG9jLCBmaXggKTtcclxuXHJcblx0XHRcdFx0fSBlbHNlIHtcclxuXHRcdFx0XHRcdGRhdGFQcml2LmFjY2VzcyggZG9jLCBmaXgsIGF0dGFjaGVzICk7XHJcblx0XHRcdFx0fVxyXG5cdFx0XHR9XHJcblx0XHR9O1xyXG5cdH0gKTtcclxufVxyXG52YXIgbG9jYXRpb24gPSB3aW5kb3cubG9jYXRpb247XHJcblxyXG52YXIgbm9uY2UgPSBEYXRlLm5vdygpO1xyXG5cclxudmFyIHJxdWVyeSA9ICggL1xcPy8gKTtcclxuXHJcblxyXG5cclxuLy8gQ3Jvc3MtYnJvd3NlciB4bWwgcGFyc2luZ1xyXG5qUXVlcnkucGFyc2VYTUwgPSBmdW5jdGlvbiggZGF0YSApIHtcclxuXHR2YXIgeG1sO1xyXG5cdGlmICggIWRhdGEgfHwgdHlwZW9mIGRhdGEgIT09IFwic3RyaW5nXCIgKSB7XHJcblx0XHRyZXR1cm4gbnVsbDtcclxuXHR9XHJcblxyXG5cdC8vIFN1cHBvcnQ6IElFIDkgLSAxMSBvbmx5XHJcblx0Ly8gSUUgdGhyb3dzIG9uIHBhcnNlRnJvbVN0cmluZyB3aXRoIGludmFsaWQgaW5wdXQuXHJcblx0dHJ5IHtcclxuXHRcdHhtbCA9ICggbmV3IHdpbmRvdy5ET01QYXJzZXIoKSApLnBhcnNlRnJvbVN0cmluZyggZGF0YSwgXCJ0ZXh0L3htbFwiICk7XHJcblx0fSBjYXRjaCAoIGUgKSB7XHJcblx0XHR4bWwgPSB1bmRlZmluZWQ7XHJcblx0fVxyXG5cclxuXHRpZiAoICF4bWwgfHwgeG1sLmdldEVsZW1lbnRzQnlUYWdOYW1lKCBcInBhcnNlcmVycm9yXCIgKS5sZW5ndGggKSB7XHJcblx0XHRqUXVlcnkuZXJyb3IoIFwiSW52YWxpZCBYTUw6IFwiICsgZGF0YSApO1xyXG5cdH1cclxuXHRyZXR1cm4geG1sO1xyXG59O1xyXG5cclxuXHJcbnZhclxyXG5cdHJicmFja2V0ID0gL1xcW1xcXSQvLFxyXG5cdHJDUkxGID0gL1xccj9cXG4vZyxcclxuXHRyc3VibWl0dGVyVHlwZXMgPSAvXig/OnN1Ym1pdHxidXR0b258aW1hZ2V8cmVzZXR8ZmlsZSkkL2ksXHJcblx0cnN1Ym1pdHRhYmxlID0gL14oPzppbnB1dHxzZWxlY3R8dGV4dGFyZWF8a2V5Z2VuKS9pO1xyXG5cclxuZnVuY3Rpb24gYnVpbGRQYXJhbXMoIHByZWZpeCwgb2JqLCB0cmFkaXRpb25hbCwgYWRkICkge1xyXG5cdHZhciBuYW1lO1xyXG5cclxuXHRpZiAoIEFycmF5LmlzQXJyYXkoIG9iaiApICkge1xyXG5cclxuXHRcdC8vIFNlcmlhbGl6ZSBhcnJheSBpdGVtLlxyXG5cdFx0alF1ZXJ5LmVhY2goIG9iaiwgZnVuY3Rpb24oIGksIHYgKSB7XHJcblx0XHRcdGlmICggdHJhZGl0aW9uYWwgfHwgcmJyYWNrZXQudGVzdCggcHJlZml4ICkgKSB7XHJcblxyXG5cdFx0XHRcdC8vIFRyZWF0IGVhY2ggYXJyYXkgaXRlbSBhcyBhIHNjYWxhci5cclxuXHRcdFx0XHRhZGQoIHByZWZpeCwgdiApO1xyXG5cclxuXHRcdFx0fSBlbHNlIHtcclxuXHJcblx0XHRcdFx0Ly8gSXRlbSBpcyBub24tc2NhbGFyIChhcnJheSBvciBvYmplY3QpLCBlbmNvZGUgaXRzIG51bWVyaWMgaW5kZXguXHJcblx0XHRcdFx0YnVpbGRQYXJhbXMoXHJcblx0XHRcdFx0XHRwcmVmaXggKyBcIltcIiArICggdHlwZW9mIHYgPT09IFwib2JqZWN0XCIgJiYgdiAhPSBudWxsID8gaSA6IFwiXCIgKSArIFwiXVwiLFxyXG5cdFx0XHRcdFx0dixcclxuXHRcdFx0XHRcdHRyYWRpdGlvbmFsLFxyXG5cdFx0XHRcdFx0YWRkXHJcblx0XHRcdFx0KTtcclxuXHRcdFx0fVxyXG5cdFx0fSApO1xyXG5cclxuXHR9IGVsc2UgaWYgKCAhdHJhZGl0aW9uYWwgJiYgdG9UeXBlKCBvYmogKSA9PT0gXCJvYmplY3RcIiApIHtcclxuXHJcblx0XHQvLyBTZXJpYWxpemUgb2JqZWN0IGl0ZW0uXHJcblx0XHRmb3IgKCBuYW1lIGluIG9iaiApIHtcclxuXHRcdFx0YnVpbGRQYXJhbXMoIHByZWZpeCArIFwiW1wiICsgbmFtZSArIFwiXVwiLCBvYmpbIG5hbWUgXSwgdHJhZGl0aW9uYWwsIGFkZCApO1xyXG5cdFx0fVxyXG5cclxuXHR9IGVsc2Uge1xyXG5cclxuXHRcdC8vIFNlcmlhbGl6ZSBzY2FsYXIgaXRlbS5cclxuXHRcdGFkZCggcHJlZml4LCBvYmogKTtcclxuXHR9XHJcbn1cclxuXHJcbi8vIFNlcmlhbGl6ZSBhbiBhcnJheSBvZiBmb3JtIGVsZW1lbnRzIG9yIGEgc2V0IG9mXHJcbi8vIGtleS92YWx1ZXMgaW50byBhIHF1ZXJ5IHN0cmluZ1xyXG5qUXVlcnkucGFyYW0gPSBmdW5jdGlvbiggYSwgdHJhZGl0aW9uYWwgKSB7XHJcblx0dmFyIHByZWZpeCxcclxuXHRcdHMgPSBbXSxcclxuXHRcdGFkZCA9IGZ1bmN0aW9uKCBrZXksIHZhbHVlT3JGdW5jdGlvbiApIHtcclxuXHJcblx0XHRcdC8vIElmIHZhbHVlIGlzIGEgZnVuY3Rpb24sIGludm9rZSBpdCBhbmQgdXNlIGl0cyByZXR1cm4gdmFsdWVcclxuXHRcdFx0dmFyIHZhbHVlID0gaXNGdW5jdGlvbiggdmFsdWVPckZ1bmN0aW9uICkgP1xyXG5cdFx0XHRcdHZhbHVlT3JGdW5jdGlvbigpIDpcclxuXHRcdFx0XHR2YWx1ZU9yRnVuY3Rpb247XHJcblxyXG5cdFx0XHRzWyBzLmxlbmd0aCBdID0gZW5jb2RlVVJJQ29tcG9uZW50KCBrZXkgKSArIFwiPVwiICtcclxuXHRcdFx0XHRlbmNvZGVVUklDb21wb25lbnQoIHZhbHVlID09IG51bGwgPyBcIlwiIDogdmFsdWUgKTtcclxuXHRcdH07XHJcblxyXG5cdC8vIElmIGFuIGFycmF5IHdhcyBwYXNzZWQgaW4sIGFzc3VtZSB0aGF0IGl0IGlzIGFuIGFycmF5IG9mIGZvcm0gZWxlbWVudHMuXHJcblx0aWYgKCBBcnJheS5pc0FycmF5KCBhICkgfHwgKCBhLmpxdWVyeSAmJiAhalF1ZXJ5LmlzUGxhaW5PYmplY3QoIGEgKSApICkge1xyXG5cclxuXHRcdC8vIFNlcmlhbGl6ZSB0aGUgZm9ybSBlbGVtZW50c1xyXG5cdFx0alF1ZXJ5LmVhY2goIGEsIGZ1bmN0aW9uKCkge1xyXG5cdFx0XHRhZGQoIHRoaXMubmFtZSwgdGhpcy52YWx1ZSApO1xyXG5cdFx0fSApO1xyXG5cclxuXHR9IGVsc2Uge1xyXG5cclxuXHRcdC8vIElmIHRyYWRpdGlvbmFsLCBlbmNvZGUgdGhlIFwib2xkXCIgd2F5ICh0aGUgd2F5IDEuMy4yIG9yIG9sZGVyXHJcblx0XHQvLyBkaWQgaXQpLCBvdGhlcndpc2UgZW5jb2RlIHBhcmFtcyByZWN1cnNpdmVseS5cclxuXHRcdGZvciAoIHByZWZpeCBpbiBhICkge1xyXG5cdFx0XHRidWlsZFBhcmFtcyggcHJlZml4LCBhWyBwcmVmaXggXSwgdHJhZGl0aW9uYWwsIGFkZCApO1xyXG5cdFx0fVxyXG5cdH1cclxuXHJcblx0Ly8gUmV0dXJuIHRoZSByZXN1bHRpbmcgc2VyaWFsaXphdGlvblxyXG5cdHJldHVybiBzLmpvaW4oIFwiJlwiICk7XHJcbn07XHJcblxyXG5qUXVlcnkuZm4uZXh0ZW5kKCB7XHJcblx0c2VyaWFsaXplOiBmdW5jdGlvbigpIHtcclxuXHRcdHJldHVybiBqUXVlcnkucGFyYW0oIHRoaXMuc2VyaWFsaXplQXJyYXkoKSApO1xyXG5cdH0sXHJcblx0c2VyaWFsaXplQXJyYXk6IGZ1bmN0aW9uKCkge1xyXG5cdFx0cmV0dXJuIHRoaXMubWFwKCBmdW5jdGlvbigpIHtcclxuXHJcblx0XHRcdC8vIENhbiBhZGQgcHJvcEhvb2sgZm9yIFwiZWxlbWVudHNcIiB0byBmaWx0ZXIgb3IgYWRkIGZvcm0gZWxlbWVudHNcclxuXHRcdFx0dmFyIGVsZW1lbnRzID0galF1ZXJ5LnByb3AoIHRoaXMsIFwiZWxlbWVudHNcIiApO1xyXG5cdFx0XHRyZXR1cm4gZWxlbWVudHMgPyBqUXVlcnkubWFrZUFycmF5KCBlbGVtZW50cyApIDogdGhpcztcclxuXHRcdH0gKVxyXG5cdFx0LmZpbHRlciggZnVuY3Rpb24oKSB7XHJcblx0XHRcdHZhciB0eXBlID0gdGhpcy50eXBlO1xyXG5cclxuXHRcdFx0Ly8gVXNlIC5pcyggXCI6ZGlzYWJsZWRcIiApIHNvIHRoYXQgZmllbGRzZXRbZGlzYWJsZWRdIHdvcmtzXHJcblx0XHRcdHJldHVybiB0aGlzLm5hbWUgJiYgIWpRdWVyeSggdGhpcyApLmlzKCBcIjpkaXNhYmxlZFwiICkgJiZcclxuXHRcdFx0XHRyc3VibWl0dGFibGUudGVzdCggdGhpcy5ub2RlTmFtZSApICYmICFyc3VibWl0dGVyVHlwZXMudGVzdCggdHlwZSApICYmXHJcblx0XHRcdFx0KCB0aGlzLmNoZWNrZWQgfHwgIXJjaGVja2FibGVUeXBlLnRlc3QoIHR5cGUgKSApO1xyXG5cdFx0fSApXHJcblx0XHQubWFwKCBmdW5jdGlvbiggaSwgZWxlbSApIHtcclxuXHRcdFx0dmFyIHZhbCA9IGpRdWVyeSggdGhpcyApLnZhbCgpO1xyXG5cclxuXHRcdFx0aWYgKCB2YWwgPT0gbnVsbCApIHtcclxuXHRcdFx0XHRyZXR1cm4gbnVsbDtcclxuXHRcdFx0fVxyXG5cclxuXHRcdFx0aWYgKCBBcnJheS5pc0FycmF5KCB2YWwgKSApIHtcclxuXHRcdFx0XHRyZXR1cm4galF1ZXJ5Lm1hcCggdmFsLCBmdW5jdGlvbiggdmFsICkge1xyXG5cdFx0XHRcdFx0cmV0dXJuIHsgbmFtZTogZWxlbS5uYW1lLCB2YWx1ZTogdmFsLnJlcGxhY2UoIHJDUkxGLCBcIlxcclxcblwiICkgfTtcclxuXHRcdFx0XHR9ICk7XHJcblx0XHRcdH1cclxuXHJcblx0XHRcdHJldHVybiB7IG5hbWU6IGVsZW0ubmFtZSwgdmFsdWU6IHZhbC5yZXBsYWNlKCByQ1JMRiwgXCJcXHJcXG5cIiApIH07XHJcblx0XHR9ICkuZ2V0KCk7XHJcblx0fVxyXG59ICk7XHJcblxyXG5cclxudmFyXHJcblx0cjIwID0gLyUyMC9nLFxyXG5cdHJoYXNoID0gLyMuKiQvLFxyXG5cdHJhbnRpQ2FjaGUgPSAvKFs/Jl0pXz1bXiZdKi8sXHJcblx0cmhlYWRlcnMgPSAvXiguKj8pOlsgXFx0XSooW15cXHJcXG5dKikkL21nLFxyXG5cclxuXHQvLyAjNzY1MywgIzgxMjUsICM4MTUyOiBsb2NhbCBwcm90b2NvbCBkZXRlY3Rpb25cclxuXHRybG9jYWxQcm90b2NvbCA9IC9eKD86YWJvdXR8YXBwfGFwcC1zdG9yYWdlfC4rLWV4dGVuc2lvbnxmaWxlfHJlc3x3aWRnZXQpOiQvLFxyXG5cdHJub0NvbnRlbnQgPSAvXig/OkdFVHxIRUFEKSQvLFxyXG5cdHJwcm90b2NvbCA9IC9eXFwvXFwvLyxcclxuXHJcblx0LyogUHJlZmlsdGVyc1xyXG5cdCAqIDEpIFRoZXkgYXJlIHVzZWZ1bCB0byBpbnRyb2R1Y2UgY3VzdG9tIGRhdGFUeXBlcyAoc2VlIGFqYXgvanNvbnAuanMgZm9yIGFuIGV4YW1wbGUpXHJcblx0ICogMikgVGhlc2UgYXJlIGNhbGxlZDpcclxuXHQgKiAgICAtIEJFRk9SRSBhc2tpbmcgZm9yIGEgdHJhbnNwb3J0XHJcblx0ICogICAgLSBBRlRFUiBwYXJhbSBzZXJpYWxpemF0aW9uIChzLmRhdGEgaXMgYSBzdHJpbmcgaWYgcy5wcm9jZXNzRGF0YSBpcyB0cnVlKVxyXG5cdCAqIDMpIGtleSBpcyB0aGUgZGF0YVR5cGVcclxuXHQgKiA0KSB0aGUgY2F0Y2hhbGwgc3ltYm9sIFwiKlwiIGNhbiBiZSB1c2VkXHJcblx0ICogNSkgZXhlY3V0aW9uIHdpbGwgc3RhcnQgd2l0aCB0cmFuc3BvcnQgZGF0YVR5cGUgYW5kIFRIRU4gY29udGludWUgZG93biB0byBcIipcIiBpZiBuZWVkZWRcclxuXHQgKi9cclxuXHRwcmVmaWx0ZXJzID0ge30sXHJcblxyXG5cdC8qIFRyYW5zcG9ydHMgYmluZGluZ3NcclxuXHQgKiAxKSBrZXkgaXMgdGhlIGRhdGFUeXBlXHJcblx0ICogMikgdGhlIGNhdGNoYWxsIHN5bWJvbCBcIipcIiBjYW4gYmUgdXNlZFxyXG5cdCAqIDMpIHNlbGVjdGlvbiB3aWxsIHN0YXJ0IHdpdGggdHJhbnNwb3J0IGRhdGFUeXBlIGFuZCBUSEVOIGdvIHRvIFwiKlwiIGlmIG5lZWRlZFxyXG5cdCAqL1xyXG5cdHRyYW5zcG9ydHMgPSB7fSxcclxuXHJcblx0Ly8gQXZvaWQgY29tbWVudC1wcm9sb2cgY2hhciBzZXF1ZW5jZSAoIzEwMDk4KTsgbXVzdCBhcHBlYXNlIGxpbnQgYW5kIGV2YWRlIGNvbXByZXNzaW9uXHJcblx0YWxsVHlwZXMgPSBcIiovXCIuY29uY2F0KCBcIipcIiApLFxyXG5cclxuXHQvLyBBbmNob3IgdGFnIGZvciBwYXJzaW5nIHRoZSBkb2N1bWVudCBvcmlnaW5cclxuXHRvcmlnaW5BbmNob3IgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCBcImFcIiApO1xyXG5cdG9yaWdpbkFuY2hvci5ocmVmID0gbG9jYXRpb24uaHJlZjtcclxuXHJcbi8vIEJhc2UgXCJjb25zdHJ1Y3RvclwiIGZvciBqUXVlcnkuYWpheFByZWZpbHRlciBhbmQgalF1ZXJ5LmFqYXhUcmFuc3BvcnRcclxuZnVuY3Rpb24gYWRkVG9QcmVmaWx0ZXJzT3JUcmFuc3BvcnRzKCBzdHJ1Y3R1cmUgKSB7XHJcblxyXG5cdC8vIGRhdGFUeXBlRXhwcmVzc2lvbiBpcyBvcHRpb25hbCBhbmQgZGVmYXVsdHMgdG8gXCIqXCJcclxuXHRyZXR1cm4gZnVuY3Rpb24oIGRhdGFUeXBlRXhwcmVzc2lvbiwgZnVuYyApIHtcclxuXHJcblx0XHRpZiAoIHR5cGVvZiBkYXRhVHlwZUV4cHJlc3Npb24gIT09IFwic3RyaW5nXCIgKSB7XHJcblx0XHRcdGZ1bmMgPSBkYXRhVHlwZUV4cHJlc3Npb247XHJcblx0XHRcdGRhdGFUeXBlRXhwcmVzc2lvbiA9IFwiKlwiO1xyXG5cdFx0fVxyXG5cclxuXHRcdHZhciBkYXRhVHlwZSxcclxuXHRcdFx0aSA9IDAsXHJcblx0XHRcdGRhdGFUeXBlcyA9IGRhdGFUeXBlRXhwcmVzc2lvbi50b0xvd2VyQ2FzZSgpLm1hdGNoKCBybm90aHRtbHdoaXRlICkgfHwgW107XHJcblxyXG5cdFx0aWYgKCBpc0Z1bmN0aW9uKCBmdW5jICkgKSB7XHJcblxyXG5cdFx0XHQvLyBGb3IgZWFjaCBkYXRhVHlwZSBpbiB0aGUgZGF0YVR5cGVFeHByZXNzaW9uXHJcblx0XHRcdHdoaWxlICggKCBkYXRhVHlwZSA9IGRhdGFUeXBlc1sgaSsrIF0gKSApIHtcclxuXHJcblx0XHRcdFx0Ly8gUHJlcGVuZCBpZiByZXF1ZXN0ZWRcclxuXHRcdFx0XHRpZiAoIGRhdGFUeXBlWyAwIF0gPT09IFwiK1wiICkge1xyXG5cdFx0XHRcdFx0ZGF0YVR5cGUgPSBkYXRhVHlwZS5zbGljZSggMSApIHx8IFwiKlwiO1xyXG5cdFx0XHRcdFx0KCBzdHJ1Y3R1cmVbIGRhdGFUeXBlIF0gPSBzdHJ1Y3R1cmVbIGRhdGFUeXBlIF0gfHwgW10gKS51bnNoaWZ0KCBmdW5jICk7XHJcblxyXG5cdFx0XHRcdC8vIE90aGVyd2lzZSBhcHBlbmRcclxuXHRcdFx0XHR9IGVsc2Uge1xyXG5cdFx0XHRcdFx0KCBzdHJ1Y3R1cmVbIGRhdGFUeXBlIF0gPSBzdHJ1Y3R1cmVbIGRhdGFUeXBlIF0gfHwgW10gKS5wdXNoKCBmdW5jICk7XHJcblx0XHRcdFx0fVxyXG5cdFx0XHR9XHJcblx0XHR9XHJcblx0fTtcclxufVxyXG5cclxuLy8gQmFzZSBpbnNwZWN0aW9uIGZ1bmN0aW9uIGZvciBwcmVmaWx0ZXJzIGFuZCB0cmFuc3BvcnRzXHJcbmZ1bmN0aW9uIGluc3BlY3RQcmVmaWx0ZXJzT3JUcmFuc3BvcnRzKCBzdHJ1Y3R1cmUsIG9wdGlvbnMsIG9yaWdpbmFsT3B0aW9ucywganFYSFIgKSB7XHJcblxyXG5cdHZhciBpbnNwZWN0ZWQgPSB7fSxcclxuXHRcdHNlZWtpbmdUcmFuc3BvcnQgPSAoIHN0cnVjdHVyZSA9PT0gdHJhbnNwb3J0cyApO1xyXG5cclxuXHRmdW5jdGlvbiBpbnNwZWN0KCBkYXRhVHlwZSApIHtcclxuXHRcdHZhciBzZWxlY3RlZDtcclxuXHRcdGluc3BlY3RlZFsgZGF0YVR5cGUgXSA9IHRydWU7XHJcblx0XHRqUXVlcnkuZWFjaCggc3RydWN0dXJlWyBkYXRhVHlwZSBdIHx8IFtdLCBmdW5jdGlvbiggXywgcHJlZmlsdGVyT3JGYWN0b3J5ICkge1xyXG5cdFx0XHR2YXIgZGF0YVR5cGVPclRyYW5zcG9ydCA9IHByZWZpbHRlck9yRmFjdG9yeSggb3B0aW9ucywgb3JpZ2luYWxPcHRpb25zLCBqcVhIUiApO1xyXG5cdFx0XHRpZiAoIHR5cGVvZiBkYXRhVHlwZU9yVHJhbnNwb3J0ID09PSBcInN0cmluZ1wiICYmXHJcblx0XHRcdFx0IXNlZWtpbmdUcmFuc3BvcnQgJiYgIWluc3BlY3RlZFsgZGF0YVR5cGVPclRyYW5zcG9ydCBdICkge1xyXG5cclxuXHRcdFx0XHRvcHRpb25zLmRhdGFUeXBlcy51bnNoaWZ0KCBkYXRhVHlwZU9yVHJhbnNwb3J0ICk7XHJcblx0XHRcdFx0aW5zcGVjdCggZGF0YVR5cGVPclRyYW5zcG9ydCApO1xyXG5cdFx0XHRcdHJldHVybiBmYWxzZTtcclxuXHRcdFx0fSBlbHNlIGlmICggc2Vla2luZ1RyYW5zcG9ydCApIHtcclxuXHRcdFx0XHRyZXR1cm4gISggc2VsZWN0ZWQgPSBkYXRhVHlwZU9yVHJhbnNwb3J0ICk7XHJcblx0XHRcdH1cclxuXHRcdH0gKTtcclxuXHRcdHJldHVybiBzZWxlY3RlZDtcclxuXHR9XHJcblxyXG5cdHJldHVybiBpbnNwZWN0KCBvcHRpb25zLmRhdGFUeXBlc1sgMCBdICkgfHwgIWluc3BlY3RlZFsgXCIqXCIgXSAmJiBpbnNwZWN0KCBcIipcIiApO1xyXG59XHJcblxyXG4vLyBBIHNwZWNpYWwgZXh0ZW5kIGZvciBhamF4IG9wdGlvbnNcclxuLy8gdGhhdCB0YWtlcyBcImZsYXRcIiBvcHRpb25zIChub3QgdG8gYmUgZGVlcCBleHRlbmRlZClcclxuLy8gRml4ZXMgIzk4ODdcclxuZnVuY3Rpb24gYWpheEV4dGVuZCggdGFyZ2V0LCBzcmMgKSB7XHJcblx0dmFyIGtleSwgZGVlcCxcclxuXHRcdGZsYXRPcHRpb25zID0galF1ZXJ5LmFqYXhTZXR0aW5ncy5mbGF0T3B0aW9ucyB8fCB7fTtcclxuXHJcblx0Zm9yICgga2V5IGluIHNyYyApIHtcclxuXHRcdGlmICggc3JjWyBrZXkgXSAhPT0gdW5kZWZpbmVkICkge1xyXG5cdFx0XHQoIGZsYXRPcHRpb25zWyBrZXkgXSA/IHRhcmdldCA6ICggZGVlcCB8fCAoIGRlZXAgPSB7fSApICkgKVsga2V5IF0gPSBzcmNbIGtleSBdO1xyXG5cdFx0fVxyXG5cdH1cclxuXHRpZiAoIGRlZXAgKSB7XHJcblx0XHRqUXVlcnkuZXh0ZW5kKCB0cnVlLCB0YXJnZXQsIGRlZXAgKTtcclxuXHR9XHJcblxyXG5cdHJldHVybiB0YXJnZXQ7XHJcbn1cclxuXHJcbi8qIEhhbmRsZXMgcmVzcG9uc2VzIHRvIGFuIGFqYXggcmVxdWVzdDpcclxuICogLSBmaW5kcyB0aGUgcmlnaHQgZGF0YVR5cGUgKG1lZGlhdGVzIGJldHdlZW4gY29udGVudC10eXBlIGFuZCBleHBlY3RlZCBkYXRhVHlwZSlcclxuICogLSByZXR1cm5zIHRoZSBjb3JyZXNwb25kaW5nIHJlc3BvbnNlXHJcbiAqL1xyXG5mdW5jdGlvbiBhamF4SGFuZGxlUmVzcG9uc2VzKCBzLCBqcVhIUiwgcmVzcG9uc2VzICkge1xyXG5cclxuXHR2YXIgY3QsIHR5cGUsIGZpbmFsRGF0YVR5cGUsIGZpcnN0RGF0YVR5cGUsXHJcblx0XHRjb250ZW50cyA9IHMuY29udGVudHMsXHJcblx0XHRkYXRhVHlwZXMgPSBzLmRhdGFUeXBlcztcclxuXHJcblx0Ly8gUmVtb3ZlIGF1dG8gZGF0YVR5cGUgYW5kIGdldCBjb250ZW50LXR5cGUgaW4gdGhlIHByb2Nlc3NcclxuXHR3aGlsZSAoIGRhdGFUeXBlc1sgMCBdID09PSBcIipcIiApIHtcclxuXHRcdGRhdGFUeXBlcy5zaGlmdCgpO1xyXG5cdFx0aWYgKCBjdCA9PT0gdW5kZWZpbmVkICkge1xyXG5cdFx0XHRjdCA9IHMubWltZVR5cGUgfHwganFYSFIuZ2V0UmVzcG9uc2VIZWFkZXIoIFwiQ29udGVudC1UeXBlXCIgKTtcclxuXHRcdH1cclxuXHR9XHJcblxyXG5cdC8vIENoZWNrIGlmIHdlJ3JlIGRlYWxpbmcgd2l0aCBhIGtub3duIGNvbnRlbnQtdHlwZVxyXG5cdGlmICggY3QgKSB7XHJcblx0XHRmb3IgKCB0eXBlIGluIGNvbnRlbnRzICkge1xyXG5cdFx0XHRpZiAoIGNvbnRlbnRzWyB0eXBlIF0gJiYgY29udGVudHNbIHR5cGUgXS50ZXN0KCBjdCApICkge1xyXG5cdFx0XHRcdGRhdGFUeXBlcy51bnNoaWZ0KCB0eXBlICk7XHJcblx0XHRcdFx0YnJlYWs7XHJcblx0XHRcdH1cclxuXHRcdH1cclxuXHR9XHJcblxyXG5cdC8vIENoZWNrIHRvIHNlZSBpZiB3ZSBoYXZlIGEgcmVzcG9uc2UgZm9yIHRoZSBleHBlY3RlZCBkYXRhVHlwZVxyXG5cdGlmICggZGF0YVR5cGVzWyAwIF0gaW4gcmVzcG9uc2VzICkge1xyXG5cdFx0ZmluYWxEYXRhVHlwZSA9IGRhdGFUeXBlc1sgMCBdO1xyXG5cdH0gZWxzZSB7XHJcblxyXG5cdFx0Ly8gVHJ5IGNvbnZlcnRpYmxlIGRhdGFUeXBlc1xyXG5cdFx0Zm9yICggdHlwZSBpbiByZXNwb25zZXMgKSB7XHJcblx0XHRcdGlmICggIWRhdGFUeXBlc1sgMCBdIHx8IHMuY29udmVydGVyc1sgdHlwZSArIFwiIFwiICsgZGF0YVR5cGVzWyAwIF0gXSApIHtcclxuXHRcdFx0XHRmaW5hbERhdGFUeXBlID0gdHlwZTtcclxuXHRcdFx0XHRicmVhaztcclxuXHRcdFx0fVxyXG5cdFx0XHRpZiAoICFmaXJzdERhdGFUeXBlICkge1xyXG5cdFx0XHRcdGZpcnN0RGF0YVR5cGUgPSB0eXBlO1xyXG5cdFx0XHR9XHJcblx0XHR9XHJcblxyXG5cdFx0Ly8gT3IganVzdCB1c2UgZmlyc3Qgb25lXHJcblx0XHRmaW5hbERhdGFUeXBlID0gZmluYWxEYXRhVHlwZSB8fCBmaXJzdERhdGFUeXBlO1xyXG5cdH1cclxuXHJcblx0Ly8gSWYgd2UgZm91bmQgYSBkYXRhVHlwZVxyXG5cdC8vIFdlIGFkZCB0aGUgZGF0YVR5cGUgdG8gdGhlIGxpc3QgaWYgbmVlZGVkXHJcblx0Ly8gYW5kIHJldHVybiB0aGUgY29ycmVzcG9uZGluZyByZXNwb25zZVxyXG5cdGlmICggZmluYWxEYXRhVHlwZSApIHtcclxuXHRcdGlmICggZmluYWxEYXRhVHlwZSAhPT0gZGF0YVR5cGVzWyAwIF0gKSB7XHJcblx0XHRcdGRhdGFUeXBlcy51bnNoaWZ0KCBmaW5hbERhdGFUeXBlICk7XHJcblx0XHR9XHJcblx0XHRyZXR1cm4gcmVzcG9uc2VzWyBmaW5hbERhdGFUeXBlIF07XHJcblx0fVxyXG59XHJcblxyXG4vKiBDaGFpbiBjb252ZXJzaW9ucyBnaXZlbiB0aGUgcmVxdWVzdCBhbmQgdGhlIG9yaWdpbmFsIHJlc3BvbnNlXHJcbiAqIEFsc28gc2V0cyB0aGUgcmVzcG9uc2VYWFggZmllbGRzIG9uIHRoZSBqcVhIUiBpbnN0YW5jZVxyXG4gKi9cclxuZnVuY3Rpb24gYWpheENvbnZlcnQoIHMsIHJlc3BvbnNlLCBqcVhIUiwgaXNTdWNjZXNzICkge1xyXG5cdHZhciBjb252MiwgY3VycmVudCwgY29udiwgdG1wLCBwcmV2LFxyXG5cdFx0Y29udmVydGVycyA9IHt9LFxyXG5cclxuXHRcdC8vIFdvcmsgd2l0aCBhIGNvcHkgb2YgZGF0YVR5cGVzIGluIGNhc2Ugd2UgbmVlZCB0byBtb2RpZnkgaXQgZm9yIGNvbnZlcnNpb25cclxuXHRcdGRhdGFUeXBlcyA9IHMuZGF0YVR5cGVzLnNsaWNlKCk7XHJcblxyXG5cdC8vIENyZWF0ZSBjb252ZXJ0ZXJzIG1hcCB3aXRoIGxvd2VyY2FzZWQga2V5c1xyXG5cdGlmICggZGF0YVR5cGVzWyAxIF0gKSB7XHJcblx0XHRmb3IgKCBjb252IGluIHMuY29udmVydGVycyApIHtcclxuXHRcdFx0Y29udmVydGVyc1sgY29udi50b0xvd2VyQ2FzZSgpIF0gPSBzLmNvbnZlcnRlcnNbIGNvbnYgXTtcclxuXHRcdH1cclxuXHR9XHJcblxyXG5cdGN1cnJlbnQgPSBkYXRhVHlwZXMuc2hpZnQoKTtcclxuXHJcblx0Ly8gQ29udmVydCB0byBlYWNoIHNlcXVlbnRpYWwgZGF0YVR5cGVcclxuXHR3aGlsZSAoIGN1cnJlbnQgKSB7XHJcblxyXG5cdFx0aWYgKCBzLnJlc3BvbnNlRmllbGRzWyBjdXJyZW50IF0gKSB7XHJcblx0XHRcdGpxWEhSWyBzLnJlc3BvbnNlRmllbGRzWyBjdXJyZW50IF0gXSA9IHJlc3BvbnNlO1xyXG5cdFx0fVxyXG5cclxuXHRcdC8vIEFwcGx5IHRoZSBkYXRhRmlsdGVyIGlmIHByb3ZpZGVkXHJcblx0XHRpZiAoICFwcmV2ICYmIGlzU3VjY2VzcyAmJiBzLmRhdGFGaWx0ZXIgKSB7XHJcblx0XHRcdHJlc3BvbnNlID0gcy5kYXRhRmlsdGVyKCByZXNwb25zZSwgcy5kYXRhVHlwZSApO1xyXG5cdFx0fVxyXG5cclxuXHRcdHByZXYgPSBjdXJyZW50O1xyXG5cdFx0Y3VycmVudCA9IGRhdGFUeXBlcy5zaGlmdCgpO1xyXG5cclxuXHRcdGlmICggY3VycmVudCApIHtcclxuXHJcblx0XHRcdC8vIFRoZXJlJ3Mgb25seSB3b3JrIHRvIGRvIGlmIGN1cnJlbnQgZGF0YVR5cGUgaXMgbm9uLWF1dG9cclxuXHRcdFx0aWYgKCBjdXJyZW50ID09PSBcIipcIiApIHtcclxuXHJcblx0XHRcdFx0Y3VycmVudCA9IHByZXY7XHJcblxyXG5cdFx0XHQvLyBDb252ZXJ0IHJlc3BvbnNlIGlmIHByZXYgZGF0YVR5cGUgaXMgbm9uLWF1dG8gYW5kIGRpZmZlcnMgZnJvbSBjdXJyZW50XHJcblx0XHRcdH0gZWxzZSBpZiAoIHByZXYgIT09IFwiKlwiICYmIHByZXYgIT09IGN1cnJlbnQgKSB7XHJcblxyXG5cdFx0XHRcdC8vIFNlZWsgYSBkaXJlY3QgY29udmVydGVyXHJcblx0XHRcdFx0Y29udiA9IGNvbnZlcnRlcnNbIHByZXYgKyBcIiBcIiArIGN1cnJlbnQgXSB8fCBjb252ZXJ0ZXJzWyBcIiogXCIgKyBjdXJyZW50IF07XHJcblxyXG5cdFx0XHRcdC8vIElmIG5vbmUgZm91bmQsIHNlZWsgYSBwYWlyXHJcblx0XHRcdFx0aWYgKCAhY29udiApIHtcclxuXHRcdFx0XHRcdGZvciAoIGNvbnYyIGluIGNvbnZlcnRlcnMgKSB7XHJcblxyXG5cdFx0XHRcdFx0XHQvLyBJZiBjb252MiBvdXRwdXRzIGN1cnJlbnRcclxuXHRcdFx0XHRcdFx0dG1wID0gY29udjIuc3BsaXQoIFwiIFwiICk7XHJcblx0XHRcdFx0XHRcdGlmICggdG1wWyAxIF0gPT09IGN1cnJlbnQgKSB7XHJcblxyXG5cdFx0XHRcdFx0XHRcdC8vIElmIHByZXYgY2FuIGJlIGNvbnZlcnRlZCB0byBhY2NlcHRlZCBpbnB1dFxyXG5cdFx0XHRcdFx0XHRcdGNvbnYgPSBjb252ZXJ0ZXJzWyBwcmV2ICsgXCIgXCIgKyB0bXBbIDAgXSBdIHx8XHJcblx0XHRcdFx0XHRcdFx0XHRjb252ZXJ0ZXJzWyBcIiogXCIgKyB0bXBbIDAgXSBdO1xyXG5cdFx0XHRcdFx0XHRcdGlmICggY29udiApIHtcclxuXHJcblx0XHRcdFx0XHRcdFx0XHQvLyBDb25kZW5zZSBlcXVpdmFsZW5jZSBjb252ZXJ0ZXJzXHJcblx0XHRcdFx0XHRcdFx0XHRpZiAoIGNvbnYgPT09IHRydWUgKSB7XHJcblx0XHRcdFx0XHRcdFx0XHRcdGNvbnYgPSBjb252ZXJ0ZXJzWyBjb252MiBdO1xyXG5cclxuXHRcdFx0XHRcdFx0XHRcdC8vIE90aGVyd2lzZSwgaW5zZXJ0IHRoZSBpbnRlcm1lZGlhdGUgZGF0YVR5cGVcclxuXHRcdFx0XHRcdFx0XHRcdH0gZWxzZSBpZiAoIGNvbnZlcnRlcnNbIGNvbnYyIF0gIT09IHRydWUgKSB7XHJcblx0XHRcdFx0XHRcdFx0XHRcdGN1cnJlbnQgPSB0bXBbIDAgXTtcclxuXHRcdFx0XHRcdFx0XHRcdFx0ZGF0YVR5cGVzLnVuc2hpZnQoIHRtcFsgMSBdICk7XHJcblx0XHRcdFx0XHRcdFx0XHR9XHJcblx0XHRcdFx0XHRcdFx0XHRicmVhaztcclxuXHRcdFx0XHRcdFx0XHR9XHJcblx0XHRcdFx0XHRcdH1cclxuXHRcdFx0XHRcdH1cclxuXHRcdFx0XHR9XHJcblxyXG5cdFx0XHRcdC8vIEFwcGx5IGNvbnZlcnRlciAoaWYgbm90IGFuIGVxdWl2YWxlbmNlKVxyXG5cdFx0XHRcdGlmICggY29udiAhPT0gdHJ1ZSApIHtcclxuXHJcblx0XHRcdFx0XHQvLyBVbmxlc3MgZXJyb3JzIGFyZSBhbGxvd2VkIHRvIGJ1YmJsZSwgY2F0Y2ggYW5kIHJldHVybiB0aGVtXHJcblx0XHRcdFx0XHRpZiAoIGNvbnYgJiYgcy50aHJvd3MgKSB7XHJcblx0XHRcdFx0XHRcdHJlc3BvbnNlID0gY29udiggcmVzcG9uc2UgKTtcclxuXHRcdFx0XHRcdH0gZWxzZSB7XHJcblx0XHRcdFx0XHRcdHRyeSB7XHJcblx0XHRcdFx0XHRcdFx0cmVzcG9uc2UgPSBjb252KCByZXNwb25zZSApO1xyXG5cdFx0XHRcdFx0XHR9IGNhdGNoICggZSApIHtcclxuXHRcdFx0XHRcdFx0XHRyZXR1cm4ge1xyXG5cdFx0XHRcdFx0XHRcdFx0c3RhdGU6IFwicGFyc2VyZXJyb3JcIixcclxuXHRcdFx0XHRcdFx0XHRcdGVycm9yOiBjb252ID8gZSA6IFwiTm8gY29udmVyc2lvbiBmcm9tIFwiICsgcHJldiArIFwiIHRvIFwiICsgY3VycmVudFxyXG5cdFx0XHRcdFx0XHRcdH07XHJcblx0XHRcdFx0XHRcdH1cclxuXHRcdFx0XHRcdH1cclxuXHRcdFx0XHR9XHJcblx0XHRcdH1cclxuXHRcdH1cclxuXHR9XHJcblxyXG5cdHJldHVybiB7IHN0YXRlOiBcInN1Y2Nlc3NcIiwgZGF0YTogcmVzcG9uc2UgfTtcclxufVxyXG5cclxualF1ZXJ5LmV4dGVuZCgge1xyXG5cclxuXHQvLyBDb3VudGVyIGZvciBob2xkaW5nIHRoZSBudW1iZXIgb2YgYWN0aXZlIHF1ZXJpZXNcclxuXHRhY3RpdmU6IDAsXHJcblxyXG5cdC8vIExhc3QtTW9kaWZpZWQgaGVhZGVyIGNhY2hlIGZvciBuZXh0IHJlcXVlc3RcclxuXHRsYXN0TW9kaWZpZWQ6IHt9LFxyXG5cdGV0YWc6IHt9LFxyXG5cclxuXHRhamF4U2V0dGluZ3M6IHtcclxuXHRcdHVybDogbG9jYXRpb24uaHJlZixcclxuXHRcdHR5cGU6IFwiR0VUXCIsXHJcblx0XHRpc0xvY2FsOiBybG9jYWxQcm90b2NvbC50ZXN0KCBsb2NhdGlvbi5wcm90b2NvbCApLFxyXG5cdFx0Z2xvYmFsOiB0cnVlLFxyXG5cdFx0cHJvY2Vzc0RhdGE6IHRydWUsXHJcblx0XHRhc3luYzogdHJ1ZSxcclxuXHRcdGNvbnRlbnRUeXBlOiBcImFwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZDsgY2hhcnNldD1VVEYtOFwiLFxyXG5cclxuXHRcdC8qXHJcblx0XHR0aW1lb3V0OiAwLFxyXG5cdFx0ZGF0YTogbnVsbCxcclxuXHRcdGRhdGFUeXBlOiBudWxsLFxyXG5cdFx0dXNlcm5hbWU6IG51bGwsXHJcblx0XHRwYXNzd29yZDogbnVsbCxcclxuXHRcdGNhY2hlOiBudWxsLFxyXG5cdFx0dGhyb3dzOiBmYWxzZSxcclxuXHRcdHRyYWRpdGlvbmFsOiBmYWxzZSxcclxuXHRcdGhlYWRlcnM6IHt9LFxyXG5cdFx0Ki9cclxuXHJcblx0XHRhY2NlcHRzOiB7XHJcblx0XHRcdFwiKlwiOiBhbGxUeXBlcyxcclxuXHRcdFx0dGV4dDogXCJ0ZXh0L3BsYWluXCIsXHJcblx0XHRcdGh0bWw6IFwidGV4dC9odG1sXCIsXHJcblx0XHRcdHhtbDogXCJhcHBsaWNhdGlvbi94bWwsIHRleHQveG1sXCIsXHJcblx0XHRcdGpzb246IFwiYXBwbGljYXRpb24vanNvbiwgdGV4dC9qYXZhc2NyaXB0XCJcclxuXHRcdH0sXHJcblxyXG5cdFx0Y29udGVudHM6IHtcclxuXHRcdFx0eG1sOiAvXFxieG1sXFxiLyxcclxuXHRcdFx0aHRtbDogL1xcYmh0bWwvLFxyXG5cdFx0XHRqc29uOiAvXFxianNvblxcYi9cclxuXHRcdH0sXHJcblxyXG5cdFx0cmVzcG9uc2VGaWVsZHM6IHtcclxuXHRcdFx0eG1sOiBcInJlc3BvbnNlWE1MXCIsXHJcblx0XHRcdHRleHQ6IFwicmVzcG9uc2VUZXh0XCIsXHJcblx0XHRcdGpzb246IFwicmVzcG9uc2VKU09OXCJcclxuXHRcdH0sXHJcblxyXG5cdFx0Ly8gRGF0YSBjb252ZXJ0ZXJzXHJcblx0XHQvLyBLZXlzIHNlcGFyYXRlIHNvdXJjZSAob3IgY2F0Y2hhbGwgXCIqXCIpIGFuZCBkZXN0aW5hdGlvbiB0eXBlcyB3aXRoIGEgc2luZ2xlIHNwYWNlXHJcblx0XHRjb252ZXJ0ZXJzOiB7XHJcblxyXG5cdFx0XHQvLyBDb252ZXJ0IGFueXRoaW5nIHRvIHRleHRcclxuXHRcdFx0XCIqIHRleHRcIjogU3RyaW5nLFxyXG5cclxuXHRcdFx0Ly8gVGV4dCB0byBodG1sICh0cnVlID0gbm8gdHJhbnNmb3JtYXRpb24pXHJcblx0XHRcdFwidGV4dCBodG1sXCI6IHRydWUsXHJcblxyXG5cdFx0XHQvLyBFdmFsdWF0ZSB0ZXh0IGFzIGEganNvbiBleHByZXNzaW9uXHJcblx0XHRcdFwidGV4dCBqc29uXCI6IEpTT04ucGFyc2UsXHJcblxyXG5cdFx0XHQvLyBQYXJzZSB0ZXh0IGFzIHhtbFxyXG5cdFx0XHRcInRleHQgeG1sXCI6IGpRdWVyeS5wYXJzZVhNTFxyXG5cdFx0fSxcclxuXHJcblx0XHQvLyBGb3Igb3B0aW9ucyB0aGF0IHNob3VsZG4ndCBiZSBkZWVwIGV4dGVuZGVkOlxyXG5cdFx0Ly8geW91IGNhbiBhZGQgeW91ciBvd24gY3VzdG9tIG9wdGlvbnMgaGVyZSBpZlxyXG5cdFx0Ly8gYW5kIHdoZW4geW91IGNyZWF0ZSBvbmUgdGhhdCBzaG91bGRuJ3QgYmVcclxuXHRcdC8vIGRlZXAgZXh0ZW5kZWQgKHNlZSBhamF4RXh0ZW5kKVxyXG5cdFx0ZmxhdE9wdGlvbnM6IHtcclxuXHRcdFx0dXJsOiB0cnVlLFxyXG5cdFx0XHRjb250ZXh0OiB0cnVlXHJcblx0XHR9XHJcblx0fSxcclxuXHJcblx0Ly8gQ3JlYXRlcyBhIGZ1bGwgZmxlZGdlZCBzZXR0aW5ncyBvYmplY3QgaW50byB0YXJnZXRcclxuXHQvLyB3aXRoIGJvdGggYWpheFNldHRpbmdzIGFuZCBzZXR0aW5ncyBmaWVsZHMuXHJcblx0Ly8gSWYgdGFyZ2V0IGlzIG9taXR0ZWQsIHdyaXRlcyBpbnRvIGFqYXhTZXR0aW5ncy5cclxuXHRhamF4U2V0dXA6IGZ1bmN0aW9uKCB0YXJnZXQsIHNldHRpbmdzICkge1xyXG5cdFx0cmV0dXJuIHNldHRpbmdzID9cclxuXHJcblx0XHRcdC8vIEJ1aWxkaW5nIGEgc2V0dGluZ3Mgb2JqZWN0XHJcblx0XHRcdGFqYXhFeHRlbmQoIGFqYXhFeHRlbmQoIHRhcmdldCwgalF1ZXJ5LmFqYXhTZXR0aW5ncyApLCBzZXR0aW5ncyApIDpcclxuXHJcblx0XHRcdC8vIEV4dGVuZGluZyBhamF4U2V0dGluZ3NcclxuXHRcdFx0YWpheEV4dGVuZCggalF1ZXJ5LmFqYXhTZXR0aW5ncywgdGFyZ2V0ICk7XHJcblx0fSxcclxuXHJcblx0YWpheFByZWZpbHRlcjogYWRkVG9QcmVmaWx0ZXJzT3JUcmFuc3BvcnRzKCBwcmVmaWx0ZXJzICksXHJcblx0YWpheFRyYW5zcG9ydDogYWRkVG9QcmVmaWx0ZXJzT3JUcmFuc3BvcnRzKCB0cmFuc3BvcnRzICksXHJcblxyXG5cdC8vIE1haW4gbWV0aG9kXHJcblx0YWpheDogZnVuY3Rpb24oIHVybCwgb3B0aW9ucyApIHtcclxuXHJcblx0XHQvLyBJZiB1cmwgaXMgYW4gb2JqZWN0LCBzaW11bGF0ZSBwcmUtMS41IHNpZ25hdHVyZVxyXG5cdFx0aWYgKCB0eXBlb2YgdXJsID09PSBcIm9iamVjdFwiICkge1xyXG5cdFx0XHRvcHRpb25zID0gdXJsO1xyXG5cdFx0XHR1cmwgPSB1bmRlZmluZWQ7XHJcblx0XHR9XHJcblxyXG5cdFx0Ly8gRm9yY2Ugb3B0aW9ucyB0byBiZSBhbiBvYmplY3RcclxuXHRcdG9wdGlvbnMgPSBvcHRpb25zIHx8IHt9O1xyXG5cclxuXHRcdHZhciB0cmFuc3BvcnQsXHJcblxyXG5cdFx0XHQvLyBVUkwgd2l0aG91dCBhbnRpLWNhY2hlIHBhcmFtXHJcblx0XHRcdGNhY2hlVVJMLFxyXG5cclxuXHRcdFx0Ly8gUmVzcG9uc2UgaGVhZGVyc1xyXG5cdFx0XHRyZXNwb25zZUhlYWRlcnNTdHJpbmcsXHJcblx0XHRcdHJlc3BvbnNlSGVhZGVycyxcclxuXHJcblx0XHRcdC8vIHRpbWVvdXQgaGFuZGxlXHJcblx0XHRcdHRpbWVvdXRUaW1lcixcclxuXHJcblx0XHRcdC8vIFVybCBjbGVhbnVwIHZhclxyXG5cdFx0XHR1cmxBbmNob3IsXHJcblxyXG5cdFx0XHQvLyBSZXF1ZXN0IHN0YXRlIChiZWNvbWVzIGZhbHNlIHVwb24gc2VuZCBhbmQgdHJ1ZSB1cG9uIGNvbXBsZXRpb24pXHJcblx0XHRcdGNvbXBsZXRlZCxcclxuXHJcblx0XHRcdC8vIFRvIGtub3cgaWYgZ2xvYmFsIGV2ZW50cyBhcmUgdG8gYmUgZGlzcGF0Y2hlZFxyXG5cdFx0XHRmaXJlR2xvYmFscyxcclxuXHJcblx0XHRcdC8vIExvb3AgdmFyaWFibGVcclxuXHRcdFx0aSxcclxuXHJcblx0XHRcdC8vIHVuY2FjaGVkIHBhcnQgb2YgdGhlIHVybFxyXG5cdFx0XHR1bmNhY2hlZCxcclxuXHJcblx0XHRcdC8vIENyZWF0ZSB0aGUgZmluYWwgb3B0aW9ucyBvYmplY3RcclxuXHRcdFx0cyA9IGpRdWVyeS5hamF4U2V0dXAoIHt9LCBvcHRpb25zICksXHJcblxyXG5cdFx0XHQvLyBDYWxsYmFja3MgY29udGV4dFxyXG5cdFx0XHRjYWxsYmFja0NvbnRleHQgPSBzLmNvbnRleHQgfHwgcyxcclxuXHJcblx0XHRcdC8vIENvbnRleHQgZm9yIGdsb2JhbCBldmVudHMgaXMgY2FsbGJhY2tDb250ZXh0IGlmIGl0IGlzIGEgRE9NIG5vZGUgb3IgalF1ZXJ5IGNvbGxlY3Rpb25cclxuXHRcdFx0Z2xvYmFsRXZlbnRDb250ZXh0ID0gcy5jb250ZXh0ICYmXHJcblx0XHRcdFx0KCBjYWxsYmFja0NvbnRleHQubm9kZVR5cGUgfHwgY2FsbGJhY2tDb250ZXh0LmpxdWVyeSApID9cclxuXHRcdFx0XHRcdGpRdWVyeSggY2FsbGJhY2tDb250ZXh0ICkgOlxyXG5cdFx0XHRcdFx0alF1ZXJ5LmV2ZW50LFxyXG5cclxuXHRcdFx0Ly8gRGVmZXJyZWRzXHJcblx0XHRcdGRlZmVycmVkID0galF1ZXJ5LkRlZmVycmVkKCksXHJcblx0XHRcdGNvbXBsZXRlRGVmZXJyZWQgPSBqUXVlcnkuQ2FsbGJhY2tzKCBcIm9uY2UgbWVtb3J5XCIgKSxcclxuXHJcblx0XHRcdC8vIFN0YXR1cy1kZXBlbmRlbnQgY2FsbGJhY2tzXHJcblx0XHRcdHN0YXR1c0NvZGUgPSBzLnN0YXR1c0NvZGUgfHwge30sXHJcblxyXG5cdFx0XHQvLyBIZWFkZXJzICh0aGV5IGFyZSBzZW50IGFsbCBhdCBvbmNlKVxyXG5cdFx0XHRyZXF1ZXN0SGVhZGVycyA9IHt9LFxyXG5cdFx0XHRyZXF1ZXN0SGVhZGVyc05hbWVzID0ge30sXHJcblxyXG5cdFx0XHQvLyBEZWZhdWx0IGFib3J0IG1lc3NhZ2VcclxuXHRcdFx0c3RyQWJvcnQgPSBcImNhbmNlbGVkXCIsXHJcblxyXG5cdFx0XHQvLyBGYWtlIHhoclxyXG5cdFx0XHRqcVhIUiA9IHtcclxuXHRcdFx0XHRyZWFkeVN0YXRlOiAwLFxyXG5cclxuXHRcdFx0XHQvLyBCdWlsZHMgaGVhZGVycyBoYXNodGFibGUgaWYgbmVlZGVkXHJcblx0XHRcdFx0Z2V0UmVzcG9uc2VIZWFkZXI6IGZ1bmN0aW9uKCBrZXkgKSB7XHJcblx0XHRcdFx0XHR2YXIgbWF0Y2g7XHJcblx0XHRcdFx0XHRpZiAoIGNvbXBsZXRlZCApIHtcclxuXHRcdFx0XHRcdFx0aWYgKCAhcmVzcG9uc2VIZWFkZXJzICkge1xyXG5cdFx0XHRcdFx0XHRcdHJlc3BvbnNlSGVhZGVycyA9IHt9O1xyXG5cdFx0XHRcdFx0XHRcdHdoaWxlICggKCBtYXRjaCA9IHJoZWFkZXJzLmV4ZWMoIHJlc3BvbnNlSGVhZGVyc1N0cmluZyApICkgKSB7XHJcblx0XHRcdFx0XHRcdFx0XHRyZXNwb25zZUhlYWRlcnNbIG1hdGNoWyAxIF0udG9Mb3dlckNhc2UoKSBdID0gbWF0Y2hbIDIgXTtcclxuXHRcdFx0XHRcdFx0XHR9XHJcblx0XHRcdFx0XHRcdH1cclxuXHRcdFx0XHRcdFx0bWF0Y2ggPSByZXNwb25zZUhlYWRlcnNbIGtleS50b0xvd2VyQ2FzZSgpIF07XHJcblx0XHRcdFx0XHR9XHJcblx0XHRcdFx0XHRyZXR1cm4gbWF0Y2ggPT0gbnVsbCA/IG51bGwgOiBtYXRjaDtcclxuXHRcdFx0XHR9LFxyXG5cclxuXHRcdFx0XHQvLyBSYXcgc3RyaW5nXHJcblx0XHRcdFx0Z2V0QWxsUmVzcG9uc2VIZWFkZXJzOiBmdW5jdGlvbigpIHtcclxuXHRcdFx0XHRcdHJldHVybiBjb21wbGV0ZWQgPyByZXNwb25zZUhlYWRlcnNTdHJpbmcgOiBudWxsO1xyXG5cdFx0XHRcdH0sXHJcblxyXG5cdFx0XHRcdC8vIENhY2hlcyB0aGUgaGVhZGVyXHJcblx0XHRcdFx0c2V0UmVxdWVzdEhlYWRlcjogZnVuY3Rpb24oIG5hbWUsIHZhbHVlICkge1xyXG5cdFx0XHRcdFx0aWYgKCBjb21wbGV0ZWQgPT0gbnVsbCApIHtcclxuXHRcdFx0XHRcdFx0bmFtZSA9IHJlcXVlc3RIZWFkZXJzTmFtZXNbIG5hbWUudG9Mb3dlckNhc2UoKSBdID1cclxuXHRcdFx0XHRcdFx0XHRyZXF1ZXN0SGVhZGVyc05hbWVzWyBuYW1lLnRvTG93ZXJDYXNlKCkgXSB8fCBuYW1lO1xyXG5cdFx0XHRcdFx0XHRyZXF1ZXN0SGVhZGVyc1sgbmFtZSBdID0gdmFsdWU7XHJcblx0XHRcdFx0XHR9XHJcblx0XHRcdFx0XHRyZXR1cm4gdGhpcztcclxuXHRcdFx0XHR9LFxyXG5cclxuXHRcdFx0XHQvLyBPdmVycmlkZXMgcmVzcG9uc2UgY29udGVudC10eXBlIGhlYWRlclxyXG5cdFx0XHRcdG92ZXJyaWRlTWltZVR5cGU6IGZ1bmN0aW9uKCB0eXBlICkge1xyXG5cdFx0XHRcdFx0aWYgKCBjb21wbGV0ZWQgPT0gbnVsbCApIHtcclxuXHRcdFx0XHRcdFx0cy5taW1lVHlwZSA9IHR5cGU7XHJcblx0XHRcdFx0XHR9XHJcblx0XHRcdFx0XHRyZXR1cm4gdGhpcztcclxuXHRcdFx0XHR9LFxyXG5cclxuXHRcdFx0XHQvLyBTdGF0dXMtZGVwZW5kZW50IGNhbGxiYWNrc1xyXG5cdFx0XHRcdHN0YXR1c0NvZGU6IGZ1bmN0aW9uKCBtYXAgKSB7XHJcblx0XHRcdFx0XHR2YXIgY29kZTtcclxuXHRcdFx0XHRcdGlmICggbWFwICkge1xyXG5cdFx0XHRcdFx0XHRpZiAoIGNvbXBsZXRlZCApIHtcclxuXHJcblx0XHRcdFx0XHRcdFx0Ly8gRXhlY3V0ZSB0aGUgYXBwcm9wcmlhdGUgY2FsbGJhY2tzXHJcblx0XHRcdFx0XHRcdFx0anFYSFIuYWx3YXlzKCBtYXBbIGpxWEhSLnN0YXR1cyBdICk7XHJcblx0XHRcdFx0XHRcdH0gZWxzZSB7XHJcblxyXG5cdFx0XHRcdFx0XHRcdC8vIExhenktYWRkIHRoZSBuZXcgY2FsbGJhY2tzIGluIGEgd2F5IHRoYXQgcHJlc2VydmVzIG9sZCBvbmVzXHJcblx0XHRcdFx0XHRcdFx0Zm9yICggY29kZSBpbiBtYXAgKSB7XHJcblx0XHRcdFx0XHRcdFx0XHRzdGF0dXNDb2RlWyBjb2RlIF0gPSBbIHN0YXR1c0NvZGVbIGNvZGUgXSwgbWFwWyBjb2RlIF0gXTtcclxuXHRcdFx0XHRcdFx0XHR9XHJcblx0XHRcdFx0XHRcdH1cclxuXHRcdFx0XHRcdH1cclxuXHRcdFx0XHRcdHJldHVybiB0aGlzO1xyXG5cdFx0XHRcdH0sXHJcblxyXG5cdFx0XHRcdC8vIENhbmNlbCB0aGUgcmVxdWVzdFxyXG5cdFx0XHRcdGFib3J0OiBmdW5jdGlvbiggc3RhdHVzVGV4dCApIHtcclxuXHRcdFx0XHRcdHZhciBmaW5hbFRleHQgPSBzdGF0dXNUZXh0IHx8IHN0ckFib3J0O1xyXG5cdFx0XHRcdFx0aWYgKCB0cmFuc3BvcnQgKSB7XHJcblx0XHRcdFx0XHRcdHRyYW5zcG9ydC5hYm9ydCggZmluYWxUZXh0ICk7XHJcblx0XHRcdFx0XHR9XHJcblx0XHRcdFx0XHRkb25lKCAwLCBmaW5hbFRleHQgKTtcclxuXHRcdFx0XHRcdHJldHVybiB0aGlzO1xyXG5cdFx0XHRcdH1cclxuXHRcdFx0fTtcclxuXHJcblx0XHQvLyBBdHRhY2ggZGVmZXJyZWRzXHJcblx0XHRkZWZlcnJlZC5wcm9taXNlKCBqcVhIUiApO1xyXG5cclxuXHRcdC8vIEFkZCBwcm90b2NvbCBpZiBub3QgcHJvdmlkZWQgKHByZWZpbHRlcnMgbWlnaHQgZXhwZWN0IGl0KVxyXG5cdFx0Ly8gSGFuZGxlIGZhbHN5IHVybCBpbiB0aGUgc2V0dGluZ3Mgb2JqZWN0ICgjMTAwOTM6IGNvbnNpc3RlbmN5IHdpdGggb2xkIHNpZ25hdHVyZSlcclxuXHRcdC8vIFdlIGFsc28gdXNlIHRoZSB1cmwgcGFyYW1ldGVyIGlmIGF2YWlsYWJsZVxyXG5cdFx0cy51cmwgPSAoICggdXJsIHx8IHMudXJsIHx8IGxvY2F0aW9uLmhyZWYgKSArIFwiXCIgKVxyXG5cdFx0XHQucmVwbGFjZSggcnByb3RvY29sLCBsb2NhdGlvbi5wcm90b2NvbCArIFwiLy9cIiApO1xyXG5cclxuXHRcdC8vIEFsaWFzIG1ldGhvZCBvcHRpb24gdG8gdHlwZSBhcyBwZXIgdGlja2V0ICMxMjAwNFxyXG5cdFx0cy50eXBlID0gb3B0aW9ucy5tZXRob2QgfHwgb3B0aW9ucy50eXBlIHx8IHMubWV0aG9kIHx8IHMudHlwZTtcclxuXHJcblx0XHQvLyBFeHRyYWN0IGRhdGFUeXBlcyBsaXN0XHJcblx0XHRzLmRhdGFUeXBlcyA9ICggcy5kYXRhVHlwZSB8fCBcIipcIiApLnRvTG93ZXJDYXNlKCkubWF0Y2goIHJub3RodG1sd2hpdGUgKSB8fCBbIFwiXCIgXTtcclxuXHJcblx0XHQvLyBBIGNyb3NzLWRvbWFpbiByZXF1ZXN0IGlzIGluIG9yZGVyIHdoZW4gdGhlIG9yaWdpbiBkb2Vzbid0IG1hdGNoIHRoZSBjdXJyZW50IG9yaWdpbi5cclxuXHRcdGlmICggcy5jcm9zc0RvbWFpbiA9PSBudWxsICkge1xyXG5cdFx0XHR1cmxBbmNob3IgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCBcImFcIiApO1xyXG5cclxuXHRcdFx0Ly8gU3VwcG9ydDogSUUgPD04IC0gMTEsIEVkZ2UgMTIgLSAxNVxyXG5cdFx0XHQvLyBJRSB0aHJvd3MgZXhjZXB0aW9uIG9uIGFjY2Vzc2luZyB0aGUgaHJlZiBwcm9wZXJ0eSBpZiB1cmwgaXMgbWFsZm9ybWVkLFxyXG5cdFx0XHQvLyBlLmcuIGh0dHA6Ly9leGFtcGxlLmNvbTo4MHgvXHJcblx0XHRcdHRyeSB7XHJcblx0XHRcdFx0dXJsQW5jaG9yLmhyZWYgPSBzLnVybDtcclxuXHJcblx0XHRcdFx0Ly8gU3VwcG9ydDogSUUgPD04IC0gMTEgb25seVxyXG5cdFx0XHRcdC8vIEFuY2hvcidzIGhvc3QgcHJvcGVydHkgaXNuJ3QgY29ycmVjdGx5IHNldCB3aGVuIHMudXJsIGlzIHJlbGF0aXZlXHJcblx0XHRcdFx0dXJsQW5jaG9yLmhyZWYgPSB1cmxBbmNob3IuaHJlZjtcclxuXHRcdFx0XHRzLmNyb3NzRG9tYWluID0gb3JpZ2luQW5jaG9yLnByb3RvY29sICsgXCIvL1wiICsgb3JpZ2luQW5jaG9yLmhvc3QgIT09XHJcblx0XHRcdFx0XHR1cmxBbmNob3IucHJvdG9jb2wgKyBcIi8vXCIgKyB1cmxBbmNob3IuaG9zdDtcclxuXHRcdFx0fSBjYXRjaCAoIGUgKSB7XHJcblxyXG5cdFx0XHRcdC8vIElmIHRoZXJlIGlzIGFuIGVycm9yIHBhcnNpbmcgdGhlIFVSTCwgYXNzdW1lIGl0IGlzIGNyb3NzRG9tYWluLFxyXG5cdFx0XHRcdC8vIGl0IGNhbiBiZSByZWplY3RlZCBieSB0aGUgdHJhbnNwb3J0IGlmIGl0IGlzIGludmFsaWRcclxuXHRcdFx0XHRzLmNyb3NzRG9tYWluID0gdHJ1ZTtcclxuXHRcdFx0fVxyXG5cdFx0fVxyXG5cclxuXHRcdC8vIENvbnZlcnQgZGF0YSBpZiBub3QgYWxyZWFkeSBhIHN0cmluZ1xyXG5cdFx0aWYgKCBzLmRhdGEgJiYgcy5wcm9jZXNzRGF0YSAmJiB0eXBlb2Ygcy5kYXRhICE9PSBcInN0cmluZ1wiICkge1xyXG5cdFx0XHRzLmRhdGEgPSBqUXVlcnkucGFyYW0oIHMuZGF0YSwgcy50cmFkaXRpb25hbCApO1xyXG5cdFx0fVxyXG5cclxuXHRcdC8vIEFwcGx5IHByZWZpbHRlcnNcclxuXHRcdGluc3BlY3RQcmVmaWx0ZXJzT3JUcmFuc3BvcnRzKCBwcmVmaWx0ZXJzLCBzLCBvcHRpb25zLCBqcVhIUiApO1xyXG5cclxuXHRcdC8vIElmIHJlcXVlc3Qgd2FzIGFib3J0ZWQgaW5zaWRlIGEgcHJlZmlsdGVyLCBzdG9wIHRoZXJlXHJcblx0XHRpZiAoIGNvbXBsZXRlZCApIHtcclxuXHRcdFx0cmV0dXJuIGpxWEhSO1xyXG5cdFx0fVxyXG5cclxuXHRcdC8vIFdlIGNhbiBmaXJlIGdsb2JhbCBldmVudHMgYXMgb2Ygbm93IGlmIGFza2VkIHRvXHJcblx0XHQvLyBEb24ndCBmaXJlIGV2ZW50cyBpZiBqUXVlcnkuZXZlbnQgaXMgdW5kZWZpbmVkIGluIGFuIEFNRC11c2FnZSBzY2VuYXJpbyAoIzE1MTE4KVxyXG5cdFx0ZmlyZUdsb2JhbHMgPSBqUXVlcnkuZXZlbnQgJiYgcy5nbG9iYWw7XHJcblxyXG5cdFx0Ly8gV2F0Y2ggZm9yIGEgbmV3IHNldCBvZiByZXF1ZXN0c1xyXG5cdFx0aWYgKCBmaXJlR2xvYmFscyAmJiBqUXVlcnkuYWN0aXZlKysgPT09IDAgKSB7XHJcblx0XHRcdGpRdWVyeS5ldmVudC50cmlnZ2VyKCBcImFqYXhTdGFydFwiICk7XHJcblx0XHR9XHJcblxyXG5cdFx0Ly8gVXBwZXJjYXNlIHRoZSB0eXBlXHJcblx0XHRzLnR5cGUgPSBzLnR5cGUudG9VcHBlckNhc2UoKTtcclxuXHJcblx0XHQvLyBEZXRlcm1pbmUgaWYgcmVxdWVzdCBoYXMgY29udGVudFxyXG5cdFx0cy5oYXNDb250ZW50ID0gIXJub0NvbnRlbnQudGVzdCggcy50eXBlICk7XHJcblxyXG5cdFx0Ly8gU2F2ZSB0aGUgVVJMIGluIGNhc2Ugd2UncmUgdG95aW5nIHdpdGggdGhlIElmLU1vZGlmaWVkLVNpbmNlXHJcblx0XHQvLyBhbmQvb3IgSWYtTm9uZS1NYXRjaCBoZWFkZXIgbGF0ZXIgb25cclxuXHRcdC8vIFJlbW92ZSBoYXNoIHRvIHNpbXBsaWZ5IHVybCBtYW5pcHVsYXRpb25cclxuXHRcdGNhY2hlVVJMID0gcy51cmwucmVwbGFjZSggcmhhc2gsIFwiXCIgKTtcclxuXHJcblx0XHQvLyBNb3JlIG9wdGlvbnMgaGFuZGxpbmcgZm9yIHJlcXVlc3RzIHdpdGggbm8gY29udGVudFxyXG5cdFx0aWYgKCAhcy5oYXNDb250ZW50ICkge1xyXG5cclxuXHRcdFx0Ly8gUmVtZW1iZXIgdGhlIGhhc2ggc28gd2UgY2FuIHB1dCBpdCBiYWNrXHJcblx0XHRcdHVuY2FjaGVkID0gcy51cmwuc2xpY2UoIGNhY2hlVVJMLmxlbmd0aCApO1xyXG5cclxuXHRcdFx0Ly8gSWYgZGF0YSBpcyBhdmFpbGFibGUgYW5kIHNob3VsZCBiZSBwcm9jZXNzZWQsIGFwcGVuZCBkYXRhIHRvIHVybFxyXG5cdFx0XHRpZiAoIHMuZGF0YSAmJiAoIHMucHJvY2Vzc0RhdGEgfHwgdHlwZW9mIHMuZGF0YSA9PT0gXCJzdHJpbmdcIiApICkge1xyXG5cdFx0XHRcdGNhY2hlVVJMICs9ICggcnF1ZXJ5LnRlc3QoIGNhY2hlVVJMICkgPyBcIiZcIiA6IFwiP1wiICkgKyBzLmRhdGE7XHJcblxyXG5cdFx0XHRcdC8vICM5NjgyOiByZW1vdmUgZGF0YSBzbyB0aGF0IGl0J3Mgbm90IHVzZWQgaW4gYW4gZXZlbnR1YWwgcmV0cnlcclxuXHRcdFx0XHRkZWxldGUgcy5kYXRhO1xyXG5cdFx0XHR9XHJcblxyXG5cdFx0XHQvLyBBZGQgb3IgdXBkYXRlIGFudGktY2FjaGUgcGFyYW0gaWYgbmVlZGVkXHJcblx0XHRcdGlmICggcy5jYWNoZSA9PT0gZmFsc2UgKSB7XHJcblx0XHRcdFx0Y2FjaGVVUkwgPSBjYWNoZVVSTC5yZXBsYWNlKCByYW50aUNhY2hlLCBcIiQxXCIgKTtcclxuXHRcdFx0XHR1bmNhY2hlZCA9ICggcnF1ZXJ5LnRlc3QoIGNhY2hlVVJMICkgPyBcIiZcIiA6IFwiP1wiICkgKyBcIl89XCIgKyAoIG5vbmNlKysgKSArIHVuY2FjaGVkO1xyXG5cdFx0XHR9XHJcblxyXG5cdFx0XHQvLyBQdXQgaGFzaCBhbmQgYW50aS1jYWNoZSBvbiB0aGUgVVJMIHRoYXQgd2lsbCBiZSByZXF1ZXN0ZWQgKGdoLTE3MzIpXHJcblx0XHRcdHMudXJsID0gY2FjaGVVUkwgKyB1bmNhY2hlZDtcclxuXHJcblx0XHQvLyBDaGFuZ2UgJyUyMCcgdG8gJysnIGlmIHRoaXMgaXMgZW5jb2RlZCBmb3JtIGJvZHkgY29udGVudCAoZ2gtMjY1OClcclxuXHRcdH0gZWxzZSBpZiAoIHMuZGF0YSAmJiBzLnByb2Nlc3NEYXRhICYmXHJcblx0XHRcdCggcy5jb250ZW50VHlwZSB8fCBcIlwiICkuaW5kZXhPZiggXCJhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWRcIiApID09PSAwICkge1xyXG5cdFx0XHRzLmRhdGEgPSBzLmRhdGEucmVwbGFjZSggcjIwLCBcIitcIiApO1xyXG5cdFx0fVxyXG5cclxuXHRcdC8vIFNldCB0aGUgSWYtTW9kaWZpZWQtU2luY2UgYW5kL29yIElmLU5vbmUtTWF0Y2ggaGVhZGVyLCBpZiBpbiBpZk1vZGlmaWVkIG1vZGUuXHJcblx0XHRpZiAoIHMuaWZNb2RpZmllZCApIHtcclxuXHRcdFx0aWYgKCBqUXVlcnkubGFzdE1vZGlmaWVkWyBjYWNoZVVSTCBdICkge1xyXG5cdFx0XHRcdGpxWEhSLnNldFJlcXVlc3RIZWFkZXIoIFwiSWYtTW9kaWZpZWQtU2luY2VcIiwgalF1ZXJ5Lmxhc3RNb2RpZmllZFsgY2FjaGVVUkwgXSApO1xyXG5cdFx0XHR9XHJcblx0XHRcdGlmICggalF1ZXJ5LmV0YWdbIGNhY2hlVVJMIF0gKSB7XHJcblx0XHRcdFx0anFYSFIuc2V0UmVxdWVzdEhlYWRlciggXCJJZi1Ob25lLU1hdGNoXCIsIGpRdWVyeS5ldGFnWyBjYWNoZVVSTCBdICk7XHJcblx0XHRcdH1cclxuXHRcdH1cclxuXHJcblx0XHQvLyBTZXQgdGhlIGNvcnJlY3QgaGVhZGVyLCBpZiBkYXRhIGlzIGJlaW5nIHNlbnRcclxuXHRcdGlmICggcy5kYXRhICYmIHMuaGFzQ29udGVudCAmJiBzLmNvbnRlbnRUeXBlICE9PSBmYWxzZSB8fCBvcHRpb25zLmNvbnRlbnRUeXBlICkge1xyXG5cdFx0XHRqcVhIUi5zZXRSZXF1ZXN0SGVhZGVyKCBcIkNvbnRlbnQtVHlwZVwiLCBzLmNvbnRlbnRUeXBlICk7XHJcblx0XHR9XHJcblxyXG5cdFx0Ly8gU2V0IHRoZSBBY2NlcHRzIGhlYWRlciBmb3IgdGhlIHNlcnZlciwgZGVwZW5kaW5nIG9uIHRoZSBkYXRhVHlwZVxyXG5cdFx0anFYSFIuc2V0UmVxdWVzdEhlYWRlcihcclxuXHRcdFx0XCJBY2NlcHRcIixcclxuXHRcdFx0cy5kYXRhVHlwZXNbIDAgXSAmJiBzLmFjY2VwdHNbIHMuZGF0YVR5cGVzWyAwIF0gXSA/XHJcblx0XHRcdFx0cy5hY2NlcHRzWyBzLmRhdGFUeXBlc1sgMCBdIF0gK1xyXG5cdFx0XHRcdFx0KCBzLmRhdGFUeXBlc1sgMCBdICE9PSBcIipcIiA/IFwiLCBcIiArIGFsbFR5cGVzICsgXCI7IHE9MC4wMVwiIDogXCJcIiApIDpcclxuXHRcdFx0XHRzLmFjY2VwdHNbIFwiKlwiIF1cclxuXHRcdCk7XHJcblxyXG5cdFx0Ly8gQ2hlY2sgZm9yIGhlYWRlcnMgb3B0aW9uXHJcblx0XHRmb3IgKCBpIGluIHMuaGVhZGVycyApIHtcclxuXHRcdFx0anFYSFIuc2V0UmVxdWVzdEhlYWRlciggaSwgcy5oZWFkZXJzWyBpIF0gKTtcclxuXHRcdH1cclxuXHJcblx0XHQvLyBBbGxvdyBjdXN0b20gaGVhZGVycy9taW1ldHlwZXMgYW5kIGVhcmx5IGFib3J0XHJcblx0XHRpZiAoIHMuYmVmb3JlU2VuZCAmJlxyXG5cdFx0XHQoIHMuYmVmb3JlU2VuZC5jYWxsKCBjYWxsYmFja0NvbnRleHQsIGpxWEhSLCBzICkgPT09IGZhbHNlIHx8IGNvbXBsZXRlZCApICkge1xyXG5cclxuXHRcdFx0Ly8gQWJvcnQgaWYgbm90IGRvbmUgYWxyZWFkeSBhbmQgcmV0dXJuXHJcblx0XHRcdHJldHVybiBqcVhIUi5hYm9ydCgpO1xyXG5cdFx0fVxyXG5cclxuXHRcdC8vIEFib3J0aW5nIGlzIG5vIGxvbmdlciBhIGNhbmNlbGxhdGlvblxyXG5cdFx0c3RyQWJvcnQgPSBcImFib3J0XCI7XHJcblxyXG5cdFx0Ly8gSW5zdGFsbCBjYWxsYmFja3Mgb24gZGVmZXJyZWRzXHJcblx0XHRjb21wbGV0ZURlZmVycmVkLmFkZCggcy5jb21wbGV0ZSApO1xyXG5cdFx0anFYSFIuZG9uZSggcy5zdWNjZXNzICk7XHJcblx0XHRqcVhIUi5mYWlsKCBzLmVycm9yICk7XHJcblxyXG5cdFx0Ly8gR2V0IHRyYW5zcG9ydFxyXG5cdFx0dHJhbnNwb3J0ID0gaW5zcGVjdFByZWZpbHRlcnNPclRyYW5zcG9ydHMoIHRyYW5zcG9ydHMsIHMsIG9wdGlvbnMsIGpxWEhSICk7XHJcblxyXG5cdFx0Ly8gSWYgbm8gdHJhbnNwb3J0LCB3ZSBhdXRvLWFib3J0XHJcblx0XHRpZiAoICF0cmFuc3BvcnQgKSB7XHJcblx0XHRcdGRvbmUoIC0xLCBcIk5vIFRyYW5zcG9ydFwiICk7XHJcblx0XHR9IGVsc2Uge1xyXG5cdFx0XHRqcVhIUi5yZWFkeVN0YXRlID0gMTtcclxuXHJcblx0XHRcdC8vIFNlbmQgZ2xvYmFsIGV2ZW50XHJcblx0XHRcdGlmICggZmlyZUdsb2JhbHMgKSB7XHJcblx0XHRcdFx0Z2xvYmFsRXZlbnRDb250ZXh0LnRyaWdnZXIoIFwiYWpheFNlbmRcIiwgWyBqcVhIUiwgcyBdICk7XHJcblx0XHRcdH1cclxuXHJcblx0XHRcdC8vIElmIHJlcXVlc3Qgd2FzIGFib3J0ZWQgaW5zaWRlIGFqYXhTZW5kLCBzdG9wIHRoZXJlXHJcblx0XHRcdGlmICggY29tcGxldGVkICkge1xyXG5cdFx0XHRcdHJldHVybiBqcVhIUjtcclxuXHRcdFx0fVxyXG5cclxuXHRcdFx0Ly8gVGltZW91dFxyXG5cdFx0XHRpZiAoIHMuYXN5bmMgJiYgcy50aW1lb3V0ID4gMCApIHtcclxuXHRcdFx0XHR0aW1lb3V0VGltZXIgPSB3aW5kb3cuc2V0VGltZW91dCggZnVuY3Rpb24oKSB7XHJcblx0XHRcdFx0XHRqcVhIUi5hYm9ydCggXCJ0aW1lb3V0XCIgKTtcclxuXHRcdFx0XHR9LCBzLnRpbWVvdXQgKTtcclxuXHRcdFx0fVxyXG5cclxuXHRcdFx0dHJ5IHtcclxuXHRcdFx0XHRjb21wbGV0ZWQgPSBmYWxzZTtcclxuXHRcdFx0XHR0cmFuc3BvcnQuc2VuZCggcmVxdWVzdEhlYWRlcnMsIGRvbmUgKTtcclxuXHRcdFx0fSBjYXRjaCAoIGUgKSB7XHJcblxyXG5cdFx0XHRcdC8vIFJldGhyb3cgcG9zdC1jb21wbGV0aW9uIGV4Y2VwdGlvbnNcclxuXHRcdFx0XHRpZiAoIGNvbXBsZXRlZCApIHtcclxuXHRcdFx0XHRcdHRocm93IGU7XHJcblx0XHRcdFx0fVxyXG5cclxuXHRcdFx0XHQvLyBQcm9wYWdhdGUgb3RoZXJzIGFzIHJlc3VsdHNcclxuXHRcdFx0XHRkb25lKCAtMSwgZSApO1xyXG5cdFx0XHR9XHJcblx0XHR9XHJcblxyXG5cdFx0Ly8gQ2FsbGJhY2sgZm9yIHdoZW4gZXZlcnl0aGluZyBpcyBkb25lXHJcblx0XHRmdW5jdGlvbiBkb25lKCBzdGF0dXMsIG5hdGl2ZVN0YXR1c1RleHQsIHJlc3BvbnNlcywgaGVhZGVycyApIHtcclxuXHRcdFx0dmFyIGlzU3VjY2Vzcywgc3VjY2VzcywgZXJyb3IsIHJlc3BvbnNlLCBtb2RpZmllZCxcclxuXHRcdFx0XHRzdGF0dXNUZXh0ID0gbmF0aXZlU3RhdHVzVGV4dDtcclxuXHJcblx0XHRcdC8vIElnbm9yZSByZXBlYXQgaW52b2NhdGlvbnNcclxuXHRcdFx0aWYgKCBjb21wbGV0ZWQgKSB7XHJcblx0XHRcdFx0cmV0dXJuO1xyXG5cdFx0XHR9XHJcblxyXG5cdFx0XHRjb21wbGV0ZWQgPSB0cnVlO1xyXG5cclxuXHRcdFx0Ly8gQ2xlYXIgdGltZW91dCBpZiBpdCBleGlzdHNcclxuXHRcdFx0aWYgKCB0aW1lb3V0VGltZXIgKSB7XHJcblx0XHRcdFx0d2luZG93LmNsZWFyVGltZW91dCggdGltZW91dFRpbWVyICk7XHJcblx0XHRcdH1cclxuXHJcblx0XHRcdC8vIERlcmVmZXJlbmNlIHRyYW5zcG9ydCBmb3IgZWFybHkgZ2FyYmFnZSBjb2xsZWN0aW9uXHJcblx0XHRcdC8vIChubyBtYXR0ZXIgaG93IGxvbmcgdGhlIGpxWEhSIG9iamVjdCB3aWxsIGJlIHVzZWQpXHJcblx0XHRcdHRyYW5zcG9ydCA9IHVuZGVmaW5lZDtcclxuXHJcblx0XHRcdC8vIENhY2hlIHJlc3BvbnNlIGhlYWRlcnNcclxuXHRcdFx0cmVzcG9uc2VIZWFkZXJzU3RyaW5nID0gaGVhZGVycyB8fCBcIlwiO1xyXG5cclxuXHRcdFx0Ly8gU2V0IHJlYWR5U3RhdGVcclxuXHRcdFx0anFYSFIucmVhZHlTdGF0ZSA9IHN0YXR1cyA+IDAgPyA0IDogMDtcclxuXHJcblx0XHRcdC8vIERldGVybWluZSBpZiBzdWNjZXNzZnVsXHJcblx0XHRcdGlzU3VjY2VzcyA9IHN0YXR1cyA+PSAyMDAgJiYgc3RhdHVzIDwgMzAwIHx8IHN0YXR1cyA9PT0gMzA0O1xyXG5cclxuXHRcdFx0Ly8gR2V0IHJlc3BvbnNlIGRhdGFcclxuXHRcdFx0aWYgKCByZXNwb25zZXMgKSB7XHJcblx0XHRcdFx0cmVzcG9uc2UgPSBhamF4SGFuZGxlUmVzcG9uc2VzKCBzLCBqcVhIUiwgcmVzcG9uc2VzICk7XHJcblx0XHRcdH1cclxuXHJcblx0XHRcdC8vIENvbnZlcnQgbm8gbWF0dGVyIHdoYXQgKHRoYXQgd2F5IHJlc3BvbnNlWFhYIGZpZWxkcyBhcmUgYWx3YXlzIHNldClcclxuXHRcdFx0cmVzcG9uc2UgPSBhamF4Q29udmVydCggcywgcmVzcG9uc2UsIGpxWEhSLCBpc1N1Y2Nlc3MgKTtcclxuXHJcblx0XHRcdC8vIElmIHN1Y2Nlc3NmdWwsIGhhbmRsZSB0eXBlIGNoYWluaW5nXHJcblx0XHRcdGlmICggaXNTdWNjZXNzICkge1xyXG5cclxuXHRcdFx0XHQvLyBTZXQgdGhlIElmLU1vZGlmaWVkLVNpbmNlIGFuZC9vciBJZi1Ob25lLU1hdGNoIGhlYWRlciwgaWYgaW4gaWZNb2RpZmllZCBtb2RlLlxyXG5cdFx0XHRcdGlmICggcy5pZk1vZGlmaWVkICkge1xyXG5cdFx0XHRcdFx0bW9kaWZpZWQgPSBqcVhIUi5nZXRSZXNwb25zZUhlYWRlciggXCJMYXN0LU1vZGlmaWVkXCIgKTtcclxuXHRcdFx0XHRcdGlmICggbW9kaWZpZWQgKSB7XHJcblx0XHRcdFx0XHRcdGpRdWVyeS5sYXN0TW9kaWZpZWRbIGNhY2hlVVJMIF0gPSBtb2RpZmllZDtcclxuXHRcdFx0XHRcdH1cclxuXHRcdFx0XHRcdG1vZGlmaWVkID0ganFYSFIuZ2V0UmVzcG9uc2VIZWFkZXIoIFwiZXRhZ1wiICk7XHJcblx0XHRcdFx0XHRpZiAoIG1vZGlmaWVkICkge1xyXG5cdFx0XHRcdFx0XHRqUXVlcnkuZXRhZ1sgY2FjaGVVUkwgXSA9IG1vZGlmaWVkO1xyXG5cdFx0XHRcdFx0fVxyXG5cdFx0XHRcdH1cclxuXHJcblx0XHRcdFx0Ly8gaWYgbm8gY29udGVudFxyXG5cdFx0XHRcdGlmICggc3RhdHVzID09PSAyMDQgfHwgcy50eXBlID09PSBcIkhFQURcIiApIHtcclxuXHRcdFx0XHRcdHN0YXR1c1RleHQgPSBcIm5vY29udGVudFwiO1xyXG5cclxuXHRcdFx0XHQvLyBpZiBub3QgbW9kaWZpZWRcclxuXHRcdFx0XHR9IGVsc2UgaWYgKCBzdGF0dXMgPT09IDMwNCApIHtcclxuXHRcdFx0XHRcdHN0YXR1c1RleHQgPSBcIm5vdG1vZGlmaWVkXCI7XHJcblxyXG5cdFx0XHRcdC8vIElmIHdlIGhhdmUgZGF0YSwgbGV0J3MgY29udmVydCBpdFxyXG5cdFx0XHRcdH0gZWxzZSB7XHJcblx0XHRcdFx0XHRzdGF0dXNUZXh0ID0gcmVzcG9uc2Uuc3RhdGU7XHJcblx0XHRcdFx0XHRzdWNjZXNzID0gcmVzcG9uc2UuZGF0YTtcclxuXHRcdFx0XHRcdGVycm9yID0gcmVzcG9uc2UuZXJyb3I7XHJcblx0XHRcdFx0XHRpc1N1Y2Nlc3MgPSAhZXJyb3I7XHJcblx0XHRcdFx0fVxyXG5cdFx0XHR9IGVsc2Uge1xyXG5cclxuXHRcdFx0XHQvLyBFeHRyYWN0IGVycm9yIGZyb20gc3RhdHVzVGV4dCBhbmQgbm9ybWFsaXplIGZvciBub24tYWJvcnRzXHJcblx0XHRcdFx0ZXJyb3IgPSBzdGF0dXNUZXh0O1xyXG5cdFx0XHRcdGlmICggc3RhdHVzIHx8ICFzdGF0dXNUZXh0ICkge1xyXG5cdFx0XHRcdFx0c3RhdHVzVGV4dCA9IFwiZXJyb3JcIjtcclxuXHRcdFx0XHRcdGlmICggc3RhdHVzIDwgMCApIHtcclxuXHRcdFx0XHRcdFx0c3RhdHVzID0gMDtcclxuXHRcdFx0XHRcdH1cclxuXHRcdFx0XHR9XHJcblx0XHRcdH1cclxuXHJcblx0XHRcdC8vIFNldCBkYXRhIGZvciB0aGUgZmFrZSB4aHIgb2JqZWN0XHJcblx0XHRcdGpxWEhSLnN0YXR1cyA9IHN0YXR1cztcclxuXHRcdFx0anFYSFIuc3RhdHVzVGV4dCA9ICggbmF0aXZlU3RhdHVzVGV4dCB8fCBzdGF0dXNUZXh0ICkgKyBcIlwiO1xyXG5cclxuXHRcdFx0Ly8gU3VjY2Vzcy9FcnJvclxyXG5cdFx0XHRpZiAoIGlzU3VjY2VzcyApIHtcclxuXHRcdFx0XHRkZWZlcnJlZC5yZXNvbHZlV2l0aCggY2FsbGJhY2tDb250ZXh0LCBbIHN1Y2Nlc3MsIHN0YXR1c1RleHQsIGpxWEhSIF0gKTtcclxuXHRcdFx0fSBlbHNlIHtcclxuXHRcdFx0XHRkZWZlcnJlZC5yZWplY3RXaXRoKCBjYWxsYmFja0NvbnRleHQsIFsganFYSFIsIHN0YXR1c1RleHQsIGVycm9yIF0gKTtcclxuXHRcdFx0fVxyXG5cclxuXHRcdFx0Ly8gU3RhdHVzLWRlcGVuZGVudCBjYWxsYmFja3NcclxuXHRcdFx0anFYSFIuc3RhdHVzQ29kZSggc3RhdHVzQ29kZSApO1xyXG5cdFx0XHRzdGF0dXNDb2RlID0gdW5kZWZpbmVkO1xyXG5cclxuXHRcdFx0aWYgKCBmaXJlR2xvYmFscyApIHtcclxuXHRcdFx0XHRnbG9iYWxFdmVudENvbnRleHQudHJpZ2dlciggaXNTdWNjZXNzID8gXCJhamF4U3VjY2Vzc1wiIDogXCJhamF4RXJyb3JcIixcclxuXHRcdFx0XHRcdFsganFYSFIsIHMsIGlzU3VjY2VzcyA/IHN1Y2Nlc3MgOiBlcnJvciBdICk7XHJcblx0XHRcdH1cclxuXHJcblx0XHRcdC8vIENvbXBsZXRlXHJcblx0XHRcdGNvbXBsZXRlRGVmZXJyZWQuZmlyZVdpdGgoIGNhbGxiYWNrQ29udGV4dCwgWyBqcVhIUiwgc3RhdHVzVGV4dCBdICk7XHJcblxyXG5cdFx0XHRpZiAoIGZpcmVHbG9iYWxzICkge1xyXG5cdFx0XHRcdGdsb2JhbEV2ZW50Q29udGV4dC50cmlnZ2VyKCBcImFqYXhDb21wbGV0ZVwiLCBbIGpxWEhSLCBzIF0gKTtcclxuXHJcblx0XHRcdFx0Ly8gSGFuZGxlIHRoZSBnbG9iYWwgQUpBWCBjb3VudGVyXHJcblx0XHRcdFx0aWYgKCAhKCAtLWpRdWVyeS5hY3RpdmUgKSApIHtcclxuXHRcdFx0XHRcdGpRdWVyeS5ldmVudC50cmlnZ2VyKCBcImFqYXhTdG9wXCIgKTtcclxuXHRcdFx0XHR9XHJcblx0XHRcdH1cclxuXHRcdH1cclxuXHJcblx0XHRyZXR1cm4ganFYSFI7XHJcblx0fSxcclxuXHJcblx0Z2V0SlNPTjogZnVuY3Rpb24oIHVybCwgZGF0YSwgY2FsbGJhY2sgKSB7XHJcblx0XHRyZXR1cm4galF1ZXJ5LmdldCggdXJsLCBkYXRhLCBjYWxsYmFjaywgXCJqc29uXCIgKTtcclxuXHR9LFxyXG5cclxuXHRnZXRTY3JpcHQ6IGZ1bmN0aW9uKCB1cmwsIGNhbGxiYWNrICkge1xyXG5cdFx0cmV0dXJuIGpRdWVyeS5nZXQoIHVybCwgdW5kZWZpbmVkLCBjYWxsYmFjaywgXCJzY3JpcHRcIiApO1xyXG5cdH1cclxufSApO1xyXG5cclxualF1ZXJ5LmVhY2goIFsgXCJnZXRcIiwgXCJwb3N0XCIgXSwgZnVuY3Rpb24oIGksIG1ldGhvZCApIHtcclxuXHRqUXVlcnlbIG1ldGhvZCBdID0gZnVuY3Rpb24oIHVybCwgZGF0YSwgY2FsbGJhY2ssIHR5cGUgKSB7XHJcblxyXG5cdFx0Ly8gU2hpZnQgYXJndW1lbnRzIGlmIGRhdGEgYXJndW1lbnQgd2FzIG9taXR0ZWRcclxuXHRcdGlmICggaXNGdW5jdGlvbiggZGF0YSApICkge1xyXG5cdFx0XHR0eXBlID0gdHlwZSB8fCBjYWxsYmFjaztcclxuXHRcdFx0Y2FsbGJhY2sgPSBkYXRhO1xyXG5cdFx0XHRkYXRhID0gdW5kZWZpbmVkO1xyXG5cdFx0fVxyXG5cclxuXHRcdC8vIFRoZSB1cmwgY2FuIGJlIGFuIG9wdGlvbnMgb2JqZWN0ICh3aGljaCB0aGVuIG11c3QgaGF2ZSAudXJsKVxyXG5cdFx0cmV0dXJuIGpRdWVyeS5hamF4KCBqUXVlcnkuZXh0ZW5kKCB7XHJcblx0XHRcdHVybDogdXJsLFxyXG5cdFx0XHR0eXBlOiBtZXRob2QsXHJcblx0XHRcdGRhdGFUeXBlOiB0eXBlLFxyXG5cdFx0XHRkYXRhOiBkYXRhLFxyXG5cdFx0XHRzdWNjZXNzOiBjYWxsYmFja1xyXG5cdFx0fSwgalF1ZXJ5LmlzUGxhaW5PYmplY3QoIHVybCApICYmIHVybCApICk7XHJcblx0fTtcclxufSApO1xyXG5cclxuXHJcbmpRdWVyeS5fZXZhbFVybCA9IGZ1bmN0aW9uKCB1cmwgKSB7XHJcblx0cmV0dXJuIGpRdWVyeS5hamF4KCB7XHJcblx0XHR1cmw6IHVybCxcclxuXHJcblx0XHQvLyBNYWtlIHRoaXMgZXhwbGljaXQsIHNpbmNlIHVzZXIgY2FuIG92ZXJyaWRlIHRoaXMgdGhyb3VnaCBhamF4U2V0dXAgKCMxMTI2NClcclxuXHRcdHR5cGU6IFwiR0VUXCIsXHJcblx0XHRkYXRhVHlwZTogXCJzY3JpcHRcIixcclxuXHRcdGNhY2hlOiB0cnVlLFxyXG5cdFx0YXN5bmM6IGZhbHNlLFxyXG5cdFx0Z2xvYmFsOiBmYWxzZSxcclxuXHRcdFwidGhyb3dzXCI6IHRydWVcclxuXHR9ICk7XHJcbn07XHJcblxyXG5cclxualF1ZXJ5LmZuLmV4dGVuZCgge1xyXG5cdHdyYXBBbGw6IGZ1bmN0aW9uKCBodG1sICkge1xyXG5cdFx0dmFyIHdyYXA7XHJcblxyXG5cdFx0aWYgKCB0aGlzWyAwIF0gKSB7XHJcblx0XHRcdGlmICggaXNGdW5jdGlvbiggaHRtbCApICkge1xyXG5cdFx0XHRcdGh0bWwgPSBodG1sLmNhbGwoIHRoaXNbIDAgXSApO1xyXG5cdFx0XHR9XHJcblxyXG5cdFx0XHQvLyBUaGUgZWxlbWVudHMgdG8gd3JhcCB0aGUgdGFyZ2V0IGFyb3VuZFxyXG5cdFx0XHR3cmFwID0galF1ZXJ5KCBodG1sLCB0aGlzWyAwIF0ub3duZXJEb2N1bWVudCApLmVxKCAwICkuY2xvbmUoIHRydWUgKTtcclxuXHJcblx0XHRcdGlmICggdGhpc1sgMCBdLnBhcmVudE5vZGUgKSB7XHJcblx0XHRcdFx0d3JhcC5pbnNlcnRCZWZvcmUoIHRoaXNbIDAgXSApO1xyXG5cdFx0XHR9XHJcblxyXG5cdFx0XHR3cmFwLm1hcCggZnVuY3Rpb24oKSB7XHJcblx0XHRcdFx0dmFyIGVsZW0gPSB0aGlzO1xyXG5cclxuXHRcdFx0XHR3aGlsZSAoIGVsZW0uZmlyc3RFbGVtZW50Q2hpbGQgKSB7XHJcblx0XHRcdFx0XHRlbGVtID0gZWxlbS5maXJzdEVsZW1lbnRDaGlsZDtcclxuXHRcdFx0XHR9XHJcblxyXG5cdFx0XHRcdHJldHVybiBlbGVtO1xyXG5cdFx0XHR9ICkuYXBwZW5kKCB0aGlzICk7XHJcblx0XHR9XHJcblxyXG5cdFx0cmV0dXJuIHRoaXM7XHJcblx0fSxcclxuXHJcblx0d3JhcElubmVyOiBmdW5jdGlvbiggaHRtbCApIHtcclxuXHRcdGlmICggaXNGdW5jdGlvbiggaHRtbCApICkge1xyXG5cdFx0XHRyZXR1cm4gdGhpcy5lYWNoKCBmdW5jdGlvbiggaSApIHtcclxuXHRcdFx0XHRqUXVlcnkoIHRoaXMgKS53cmFwSW5uZXIoIGh0bWwuY2FsbCggdGhpcywgaSApICk7XHJcblx0XHRcdH0gKTtcclxuXHRcdH1cclxuXHJcblx0XHRyZXR1cm4gdGhpcy5lYWNoKCBmdW5jdGlvbigpIHtcclxuXHRcdFx0dmFyIHNlbGYgPSBqUXVlcnkoIHRoaXMgKSxcclxuXHRcdFx0XHRjb250ZW50cyA9IHNlbGYuY29udGVudHMoKTtcclxuXHJcblx0XHRcdGlmICggY29udGVudHMubGVuZ3RoICkge1xyXG5cdFx0XHRcdGNvbnRlbnRzLndyYXBBbGwoIGh0bWwgKTtcclxuXHJcblx0XHRcdH0gZWxzZSB7XHJcblx0XHRcdFx0c2VsZi5hcHBlbmQoIGh0bWwgKTtcclxuXHRcdFx0fVxyXG5cdFx0fSApO1xyXG5cdH0sXHJcblxyXG5cdHdyYXA6IGZ1bmN0aW9uKCBodG1sICkge1xyXG5cdFx0dmFyIGh0bWxJc0Z1bmN0aW9uID0gaXNGdW5jdGlvbiggaHRtbCApO1xyXG5cclxuXHRcdHJldHVybiB0aGlzLmVhY2goIGZ1bmN0aW9uKCBpICkge1xyXG5cdFx0XHRqUXVlcnkoIHRoaXMgKS53cmFwQWxsKCBodG1sSXNGdW5jdGlvbiA/IGh0bWwuY2FsbCggdGhpcywgaSApIDogaHRtbCApO1xyXG5cdFx0fSApO1xyXG5cdH0sXHJcblxyXG5cdHVud3JhcDogZnVuY3Rpb24oIHNlbGVjdG9yICkge1xyXG5cdFx0dGhpcy5wYXJlbnQoIHNlbGVjdG9yICkubm90KCBcImJvZHlcIiApLmVhY2goIGZ1bmN0aW9uKCkge1xyXG5cdFx0XHRqUXVlcnkoIHRoaXMgKS5yZXBsYWNlV2l0aCggdGhpcy5jaGlsZE5vZGVzICk7XHJcblx0XHR9ICk7XHJcblx0XHRyZXR1cm4gdGhpcztcclxuXHR9XHJcbn0gKTtcclxuXHJcblxyXG5qUXVlcnkuZXhwci5wc2V1ZG9zLmhpZGRlbiA9IGZ1bmN0aW9uKCBlbGVtICkge1xyXG5cdHJldHVybiAhalF1ZXJ5LmV4cHIucHNldWRvcy52aXNpYmxlKCBlbGVtICk7XHJcbn07XHJcbmpRdWVyeS5leHByLnBzZXVkb3MudmlzaWJsZSA9IGZ1bmN0aW9uKCBlbGVtICkge1xyXG5cdHJldHVybiAhISggZWxlbS5vZmZzZXRXaWR0aCB8fCBlbGVtLm9mZnNldEhlaWdodCB8fCBlbGVtLmdldENsaWVudFJlY3RzKCkubGVuZ3RoICk7XHJcbn07XHJcblxyXG5cclxuXHJcblxyXG5qUXVlcnkuYWpheFNldHRpbmdzLnhociA9IGZ1bmN0aW9uKCkge1xyXG5cdHRyeSB7XHJcblx0XHRyZXR1cm4gbmV3IHdpbmRvdy5YTUxIdHRwUmVxdWVzdCgpO1xyXG5cdH0gY2F0Y2ggKCBlICkge31cclxufTtcclxuXHJcbnZhciB4aHJTdWNjZXNzU3RhdHVzID0ge1xyXG5cclxuXHRcdC8vIEZpbGUgcHJvdG9jb2wgYWx3YXlzIHlpZWxkcyBzdGF0dXMgY29kZSAwLCBhc3N1bWUgMjAwXHJcblx0XHQwOiAyMDAsXHJcblxyXG5cdFx0Ly8gU3VwcG9ydDogSUUgPD05IG9ubHlcclxuXHRcdC8vICMxNDUwOiBzb21ldGltZXMgSUUgcmV0dXJucyAxMjIzIHdoZW4gaXQgc2hvdWxkIGJlIDIwNFxyXG5cdFx0MTIyMzogMjA0XHJcblx0fSxcclxuXHR4aHJTdXBwb3J0ZWQgPSBqUXVlcnkuYWpheFNldHRpbmdzLnhocigpO1xyXG5cclxuc3VwcG9ydC5jb3JzID0gISF4aHJTdXBwb3J0ZWQgJiYgKCBcIndpdGhDcmVkZW50aWFsc1wiIGluIHhoclN1cHBvcnRlZCApO1xyXG5zdXBwb3J0LmFqYXggPSB4aHJTdXBwb3J0ZWQgPSAhIXhoclN1cHBvcnRlZDtcclxuXHJcbmpRdWVyeS5hamF4VHJhbnNwb3J0KCBmdW5jdGlvbiggb3B0aW9ucyApIHtcclxuXHR2YXIgY2FsbGJhY2ssIGVycm9yQ2FsbGJhY2s7XHJcblxyXG5cdC8vIENyb3NzIGRvbWFpbiBvbmx5IGFsbG93ZWQgaWYgc3VwcG9ydGVkIHRocm91Z2ggWE1MSHR0cFJlcXVlc3RcclxuXHRpZiAoIHN1cHBvcnQuY29ycyB8fCB4aHJTdXBwb3J0ZWQgJiYgIW9wdGlvbnMuY3Jvc3NEb21haW4gKSB7XHJcblx0XHRyZXR1cm4ge1xyXG5cdFx0XHRzZW5kOiBmdW5jdGlvbiggaGVhZGVycywgY29tcGxldGUgKSB7XHJcblx0XHRcdFx0dmFyIGksXHJcblx0XHRcdFx0XHR4aHIgPSBvcHRpb25zLnhocigpO1xyXG5cclxuXHRcdFx0XHR4aHIub3BlbihcclxuXHRcdFx0XHRcdG9wdGlvbnMudHlwZSxcclxuXHRcdFx0XHRcdG9wdGlvbnMudXJsLFxyXG5cdFx0XHRcdFx0b3B0aW9ucy5hc3luYyxcclxuXHRcdFx0XHRcdG9wdGlvbnMudXNlcm5hbWUsXHJcblx0XHRcdFx0XHRvcHRpb25zLnBhc3N3b3JkXHJcblx0XHRcdFx0KTtcclxuXHJcblx0XHRcdFx0Ly8gQXBwbHkgY3VzdG9tIGZpZWxkcyBpZiBwcm92aWRlZFxyXG5cdFx0XHRcdGlmICggb3B0aW9ucy54aHJGaWVsZHMgKSB7XHJcblx0XHRcdFx0XHRmb3IgKCBpIGluIG9wdGlvbnMueGhyRmllbGRzICkge1xyXG5cdFx0XHRcdFx0XHR4aHJbIGkgXSA9IG9wdGlvbnMueGhyRmllbGRzWyBpIF07XHJcblx0XHRcdFx0XHR9XHJcblx0XHRcdFx0fVxyXG5cclxuXHRcdFx0XHQvLyBPdmVycmlkZSBtaW1lIHR5cGUgaWYgbmVlZGVkXHJcblx0XHRcdFx0aWYgKCBvcHRpb25zLm1pbWVUeXBlICYmIHhoci5vdmVycmlkZU1pbWVUeXBlICkge1xyXG5cdFx0XHRcdFx0eGhyLm92ZXJyaWRlTWltZVR5cGUoIG9wdGlvbnMubWltZVR5cGUgKTtcclxuXHRcdFx0XHR9XHJcblxyXG5cdFx0XHRcdC8vIFgtUmVxdWVzdGVkLVdpdGggaGVhZGVyXHJcblx0XHRcdFx0Ly8gRm9yIGNyb3NzLWRvbWFpbiByZXF1ZXN0cywgc2VlaW5nIGFzIGNvbmRpdGlvbnMgZm9yIGEgcHJlZmxpZ2h0IGFyZVxyXG5cdFx0XHRcdC8vIGFraW4gdG8gYSBqaWdzYXcgcHV6emxlLCB3ZSBzaW1wbHkgbmV2ZXIgc2V0IGl0IHRvIGJlIHN1cmUuXHJcblx0XHRcdFx0Ly8gKGl0IGNhbiBhbHdheXMgYmUgc2V0IG9uIGEgcGVyLXJlcXVlc3QgYmFzaXMgb3IgZXZlbiB1c2luZyBhamF4U2V0dXApXHJcblx0XHRcdFx0Ly8gRm9yIHNhbWUtZG9tYWluIHJlcXVlc3RzLCB3b24ndCBjaGFuZ2UgaGVhZGVyIGlmIGFscmVhZHkgcHJvdmlkZWQuXHJcblx0XHRcdFx0aWYgKCAhb3B0aW9ucy5jcm9zc0RvbWFpbiAmJiAhaGVhZGVyc1sgXCJYLVJlcXVlc3RlZC1XaXRoXCIgXSApIHtcclxuXHRcdFx0XHRcdGhlYWRlcnNbIFwiWC1SZXF1ZXN0ZWQtV2l0aFwiIF0gPSBcIlhNTEh0dHBSZXF1ZXN0XCI7XHJcblx0XHRcdFx0fVxyXG5cclxuXHRcdFx0XHQvLyBTZXQgaGVhZGVyc1xyXG5cdFx0XHRcdGZvciAoIGkgaW4gaGVhZGVycyApIHtcclxuXHRcdFx0XHRcdHhoci5zZXRSZXF1ZXN0SGVhZGVyKCBpLCBoZWFkZXJzWyBpIF0gKTtcclxuXHRcdFx0XHR9XHJcblxyXG5cdFx0XHRcdC8vIENhbGxiYWNrXHJcblx0XHRcdFx0Y2FsbGJhY2sgPSBmdW5jdGlvbiggdHlwZSApIHtcclxuXHRcdFx0XHRcdHJldHVybiBmdW5jdGlvbigpIHtcclxuXHRcdFx0XHRcdFx0aWYgKCBjYWxsYmFjayApIHtcclxuXHRcdFx0XHRcdFx0XHRjYWxsYmFjayA9IGVycm9yQ2FsbGJhY2sgPSB4aHIub25sb2FkID1cclxuXHRcdFx0XHRcdFx0XHRcdHhoci5vbmVycm9yID0geGhyLm9uYWJvcnQgPSB4aHIub250aW1lb3V0ID1cclxuXHRcdFx0XHRcdFx0XHRcdFx0eGhyLm9ucmVhZHlzdGF0ZWNoYW5nZSA9IG51bGw7XHJcblxyXG5cdFx0XHRcdFx0XHRcdGlmICggdHlwZSA9PT0gXCJhYm9ydFwiICkge1xyXG5cdFx0XHRcdFx0XHRcdFx0eGhyLmFib3J0KCk7XHJcblx0XHRcdFx0XHRcdFx0fSBlbHNlIGlmICggdHlwZSA9PT0gXCJlcnJvclwiICkge1xyXG5cclxuXHRcdFx0XHRcdFx0XHRcdC8vIFN1cHBvcnQ6IElFIDw9OSBvbmx5XHJcblx0XHRcdFx0XHRcdFx0XHQvLyBPbiBhIG1hbnVhbCBuYXRpdmUgYWJvcnQsIElFOSB0aHJvd3NcclxuXHRcdFx0XHRcdFx0XHRcdC8vIGVycm9ycyBvbiBhbnkgcHJvcGVydHkgYWNjZXNzIHRoYXQgaXMgbm90IHJlYWR5U3RhdGVcclxuXHRcdFx0XHRcdFx0XHRcdGlmICggdHlwZW9mIHhoci5zdGF0dXMgIT09IFwibnVtYmVyXCIgKSB7XHJcblx0XHRcdFx0XHRcdFx0XHRcdGNvbXBsZXRlKCAwLCBcImVycm9yXCIgKTtcclxuXHRcdFx0XHRcdFx0XHRcdH0gZWxzZSB7XHJcblx0XHRcdFx0XHRcdFx0XHRcdGNvbXBsZXRlKFxyXG5cclxuXHRcdFx0XHRcdFx0XHRcdFx0XHQvLyBGaWxlOiBwcm90b2NvbCBhbHdheXMgeWllbGRzIHN0YXR1cyAwOyBzZWUgIzg2MDUsICMxNDIwN1xyXG5cdFx0XHRcdFx0XHRcdFx0XHRcdHhoci5zdGF0dXMsXHJcblx0XHRcdFx0XHRcdFx0XHRcdFx0eGhyLnN0YXR1c1RleHRcclxuXHRcdFx0XHRcdFx0XHRcdFx0KTtcclxuXHRcdFx0XHRcdFx0XHRcdH1cclxuXHRcdFx0XHRcdFx0XHR9IGVsc2Uge1xyXG5cdFx0XHRcdFx0XHRcdFx0Y29tcGxldGUoXHJcblx0XHRcdFx0XHRcdFx0XHRcdHhoclN1Y2Nlc3NTdGF0dXNbIHhoci5zdGF0dXMgXSB8fCB4aHIuc3RhdHVzLFxyXG5cdFx0XHRcdFx0XHRcdFx0XHR4aHIuc3RhdHVzVGV4dCxcclxuXHJcblx0XHRcdFx0XHRcdFx0XHRcdC8vIFN1cHBvcnQ6IElFIDw9OSBvbmx5XHJcblx0XHRcdFx0XHRcdFx0XHRcdC8vIElFOSBoYXMgbm8gWEhSMiBidXQgdGhyb3dzIG9uIGJpbmFyeSAodHJhYy0xMTQyNilcclxuXHRcdFx0XHRcdFx0XHRcdFx0Ly8gRm9yIFhIUjIgbm9uLXRleHQsIGxldCB0aGUgY2FsbGVyIGhhbmRsZSBpdCAoZ2gtMjQ5OClcclxuXHRcdFx0XHRcdFx0XHRcdFx0KCB4aHIucmVzcG9uc2VUeXBlIHx8IFwidGV4dFwiICkgIT09IFwidGV4dFwiICB8fFxyXG5cdFx0XHRcdFx0XHRcdFx0XHR0eXBlb2YgeGhyLnJlc3BvbnNlVGV4dCAhPT0gXCJzdHJpbmdcIiA/XHJcblx0XHRcdFx0XHRcdFx0XHRcdFx0eyBiaW5hcnk6IHhoci5yZXNwb25zZSB9IDpcclxuXHRcdFx0XHRcdFx0XHRcdFx0XHR7IHRleHQ6IHhoci5yZXNwb25zZVRleHQgfSxcclxuXHRcdFx0XHRcdFx0XHRcdFx0eGhyLmdldEFsbFJlc3BvbnNlSGVhZGVycygpXHJcblx0XHRcdFx0XHRcdFx0XHQpO1xyXG5cdFx0XHRcdFx0XHRcdH1cclxuXHRcdFx0XHRcdFx0fVxyXG5cdFx0XHRcdFx0fTtcclxuXHRcdFx0XHR9O1xyXG5cclxuXHRcdFx0XHQvLyBMaXN0ZW4gdG8gZXZlbnRzXHJcblx0XHRcdFx0eGhyLm9ubG9hZCA9IGNhbGxiYWNrKCk7XHJcblx0XHRcdFx0ZXJyb3JDYWxsYmFjayA9IHhoci5vbmVycm9yID0geGhyLm9udGltZW91dCA9IGNhbGxiYWNrKCBcImVycm9yXCIgKTtcclxuXHJcblx0XHRcdFx0Ly8gU3VwcG9ydDogSUUgOSBvbmx5XHJcblx0XHRcdFx0Ly8gVXNlIG9ucmVhZHlzdGF0ZWNoYW5nZSB0byByZXBsYWNlIG9uYWJvcnRcclxuXHRcdFx0XHQvLyB0byBoYW5kbGUgdW5jYXVnaHQgYWJvcnRzXHJcblx0XHRcdFx0aWYgKCB4aHIub25hYm9ydCAhPT0gdW5kZWZpbmVkICkge1xyXG5cdFx0XHRcdFx0eGhyLm9uYWJvcnQgPSBlcnJvckNhbGxiYWNrO1xyXG5cdFx0XHRcdH0gZWxzZSB7XHJcblx0XHRcdFx0XHR4aHIub25yZWFkeXN0YXRlY2hhbmdlID0gZnVuY3Rpb24oKSB7XHJcblxyXG5cdFx0XHRcdFx0XHQvLyBDaGVjayByZWFkeVN0YXRlIGJlZm9yZSB0aW1lb3V0IGFzIGl0IGNoYW5nZXNcclxuXHRcdFx0XHRcdFx0aWYgKCB4aHIucmVhZHlTdGF0ZSA9PT0gNCApIHtcclxuXHJcblx0XHRcdFx0XHRcdFx0Ly8gQWxsb3cgb25lcnJvciB0byBiZSBjYWxsZWQgZmlyc3QsXHJcblx0XHRcdFx0XHRcdFx0Ly8gYnV0IHRoYXQgd2lsbCBub3QgaGFuZGxlIGEgbmF0aXZlIGFib3J0XHJcblx0XHRcdFx0XHRcdFx0Ly8gQWxzbywgc2F2ZSBlcnJvckNhbGxiYWNrIHRvIGEgdmFyaWFibGVcclxuXHRcdFx0XHRcdFx0XHQvLyBhcyB4aHIub25lcnJvciBjYW5ub3QgYmUgYWNjZXNzZWRcclxuXHRcdFx0XHRcdFx0XHR3aW5kb3cuc2V0VGltZW91dCggZnVuY3Rpb24oKSB7XHJcblx0XHRcdFx0XHRcdFx0XHRpZiAoIGNhbGxiYWNrICkge1xyXG5cdFx0XHRcdFx0XHRcdFx0XHRlcnJvckNhbGxiYWNrKCk7XHJcblx0XHRcdFx0XHRcdFx0XHR9XHJcblx0XHRcdFx0XHRcdFx0fSApO1xyXG5cdFx0XHRcdFx0XHR9XHJcblx0XHRcdFx0XHR9O1xyXG5cdFx0XHRcdH1cclxuXHJcblx0XHRcdFx0Ly8gQ3JlYXRlIHRoZSBhYm9ydCBjYWxsYmFja1xyXG5cdFx0XHRcdGNhbGxiYWNrID0gY2FsbGJhY2soIFwiYWJvcnRcIiApO1xyXG5cclxuXHRcdFx0XHR0cnkge1xyXG5cclxuXHRcdFx0XHRcdC8vIERvIHNlbmQgdGhlIHJlcXVlc3QgKHRoaXMgbWF5IHJhaXNlIGFuIGV4Y2VwdGlvbilcclxuXHRcdFx0XHRcdHhoci5zZW5kKCBvcHRpb25zLmhhc0NvbnRlbnQgJiYgb3B0aW9ucy5kYXRhIHx8IG51bGwgKTtcclxuXHRcdFx0XHR9IGNhdGNoICggZSApIHtcclxuXHJcblx0XHRcdFx0XHQvLyAjMTQ2ODM6IE9ubHkgcmV0aHJvdyBpZiB0aGlzIGhhc24ndCBiZWVuIG5vdGlmaWVkIGFzIGFuIGVycm9yIHlldFxyXG5cdFx0XHRcdFx0aWYgKCBjYWxsYmFjayApIHtcclxuXHRcdFx0XHRcdFx0dGhyb3cgZTtcclxuXHRcdFx0XHRcdH1cclxuXHRcdFx0XHR9XHJcblx0XHRcdH0sXHJcblxyXG5cdFx0XHRhYm9ydDogZnVuY3Rpb24oKSB7XHJcblx0XHRcdFx0aWYgKCBjYWxsYmFjayApIHtcclxuXHRcdFx0XHRcdGNhbGxiYWNrKCk7XHJcblx0XHRcdFx0fVxyXG5cdFx0XHR9XHJcblx0XHR9O1xyXG5cdH1cclxufSApO1xyXG5cclxuXHJcblxyXG5cclxuLy8gUHJldmVudCBhdXRvLWV4ZWN1dGlvbiBvZiBzY3JpcHRzIHdoZW4gbm8gZXhwbGljaXQgZGF0YVR5cGUgd2FzIHByb3ZpZGVkIChTZWUgZ2gtMjQzMilcclxualF1ZXJ5LmFqYXhQcmVmaWx0ZXIoIGZ1bmN0aW9uKCBzICkge1xyXG5cdGlmICggcy5jcm9zc0RvbWFpbiApIHtcclxuXHRcdHMuY29udGVudHMuc2NyaXB0ID0gZmFsc2U7XHJcblx0fVxyXG59ICk7XHJcblxyXG4vLyBJbnN0YWxsIHNjcmlwdCBkYXRhVHlwZVxyXG5qUXVlcnkuYWpheFNldHVwKCB7XHJcblx0YWNjZXB0czoge1xyXG5cdFx0c2NyaXB0OiBcInRleHQvamF2YXNjcmlwdCwgYXBwbGljYXRpb24vamF2YXNjcmlwdCwgXCIgK1xyXG5cdFx0XHRcImFwcGxpY2F0aW9uL2VjbWFzY3JpcHQsIGFwcGxpY2F0aW9uL3gtZWNtYXNjcmlwdFwiXHJcblx0fSxcclxuXHRjb250ZW50czoge1xyXG5cdFx0c2NyaXB0OiAvXFxiKD86amF2YXxlY21hKXNjcmlwdFxcYi9cclxuXHR9LFxyXG5cdGNvbnZlcnRlcnM6IHtcclxuXHRcdFwidGV4dCBzY3JpcHRcIjogZnVuY3Rpb24oIHRleHQgKSB7XHJcblx0XHRcdGpRdWVyeS5nbG9iYWxFdmFsKCB0ZXh0ICk7XHJcblx0XHRcdHJldHVybiB0ZXh0O1xyXG5cdFx0fVxyXG5cdH1cclxufSApO1xyXG5cclxuLy8gSGFuZGxlIGNhY2hlJ3Mgc3BlY2lhbCBjYXNlIGFuZCBjcm9zc0RvbWFpblxyXG5qUXVlcnkuYWpheFByZWZpbHRlciggXCJzY3JpcHRcIiwgZnVuY3Rpb24oIHMgKSB7XHJcblx0aWYgKCBzLmNhY2hlID09PSB1bmRlZmluZWQgKSB7XHJcblx0XHRzLmNhY2hlID0gZmFsc2U7XHJcblx0fVxyXG5cdGlmICggcy5jcm9zc0RvbWFpbiApIHtcclxuXHRcdHMudHlwZSA9IFwiR0VUXCI7XHJcblx0fVxyXG59ICk7XHJcblxyXG4vLyBCaW5kIHNjcmlwdCB0YWcgaGFjayB0cmFuc3BvcnRcclxualF1ZXJ5LmFqYXhUcmFuc3BvcnQoIFwic2NyaXB0XCIsIGZ1bmN0aW9uKCBzICkge1xyXG5cclxuXHQvLyBUaGlzIHRyYW5zcG9ydCBvbmx5IGRlYWxzIHdpdGggY3Jvc3MgZG9tYWluIHJlcXVlc3RzXHJcblx0aWYgKCBzLmNyb3NzRG9tYWluICkge1xyXG5cdFx0dmFyIHNjcmlwdCwgY2FsbGJhY2s7XHJcblx0XHRyZXR1cm4ge1xyXG5cdFx0XHRzZW5kOiBmdW5jdGlvbiggXywgY29tcGxldGUgKSB7XHJcblx0XHRcdFx0c2NyaXB0ID0galF1ZXJ5KCBcIjxzY3JpcHQ+XCIgKS5wcm9wKCB7XHJcblx0XHRcdFx0XHRjaGFyc2V0OiBzLnNjcmlwdENoYXJzZXQsXHJcblx0XHRcdFx0XHRzcmM6IHMudXJsXHJcblx0XHRcdFx0fSApLm9uKFxyXG5cdFx0XHRcdFx0XCJsb2FkIGVycm9yXCIsXHJcblx0XHRcdFx0XHRjYWxsYmFjayA9IGZ1bmN0aW9uKCBldnQgKSB7XHJcblx0XHRcdFx0XHRcdHNjcmlwdC5yZW1vdmUoKTtcclxuXHRcdFx0XHRcdFx0Y2FsbGJhY2sgPSBudWxsO1xyXG5cdFx0XHRcdFx0XHRpZiAoIGV2dCApIHtcclxuXHRcdFx0XHRcdFx0XHRjb21wbGV0ZSggZXZ0LnR5cGUgPT09IFwiZXJyb3JcIiA/IDQwNCA6IDIwMCwgZXZ0LnR5cGUgKTtcclxuXHRcdFx0XHRcdFx0fVxyXG5cdFx0XHRcdFx0fVxyXG5cdFx0XHRcdCk7XHJcblxyXG5cdFx0XHRcdC8vIFVzZSBuYXRpdmUgRE9NIG1hbmlwdWxhdGlvbiB0byBhdm9pZCBvdXIgZG9tTWFuaXAgQUpBWCB0cmlja2VyeVxyXG5cdFx0XHRcdGRvY3VtZW50LmhlYWQuYXBwZW5kQ2hpbGQoIHNjcmlwdFsgMCBdICk7XHJcblx0XHRcdH0sXHJcblx0XHRcdGFib3J0OiBmdW5jdGlvbigpIHtcclxuXHRcdFx0XHRpZiAoIGNhbGxiYWNrICkge1xyXG5cdFx0XHRcdFx0Y2FsbGJhY2soKTtcclxuXHRcdFx0XHR9XHJcblx0XHRcdH1cclxuXHRcdH07XHJcblx0fVxyXG59ICk7XHJcblxyXG5cclxuXHJcblxyXG52YXIgb2xkQ2FsbGJhY2tzID0gW10sXHJcblx0cmpzb25wID0gLyg9KVxcPyg/PSZ8JCl8XFw/XFw/LztcclxuXHJcbi8vIERlZmF1bHQganNvbnAgc2V0dGluZ3NcclxualF1ZXJ5LmFqYXhTZXR1cCgge1xyXG5cdGpzb25wOiBcImNhbGxiYWNrXCIsXHJcblx0anNvbnBDYWxsYmFjazogZnVuY3Rpb24oKSB7XHJcblx0XHR2YXIgY2FsbGJhY2sgPSBvbGRDYWxsYmFja3MucG9wKCkgfHwgKCBqUXVlcnkuZXhwYW5kbyArIFwiX1wiICsgKCBub25jZSsrICkgKTtcclxuXHRcdHRoaXNbIGNhbGxiYWNrIF0gPSB0cnVlO1xyXG5cdFx0cmV0dXJuIGNhbGxiYWNrO1xyXG5cdH1cclxufSApO1xyXG5cclxuLy8gRGV0ZWN0LCBub3JtYWxpemUgb3B0aW9ucyBhbmQgaW5zdGFsbCBjYWxsYmFja3MgZm9yIGpzb25wIHJlcXVlc3RzXHJcbmpRdWVyeS5hamF4UHJlZmlsdGVyKCBcImpzb24ganNvbnBcIiwgZnVuY3Rpb24oIHMsIG9yaWdpbmFsU2V0dGluZ3MsIGpxWEhSICkge1xyXG5cclxuXHR2YXIgY2FsbGJhY2tOYW1lLCBvdmVyd3JpdHRlbiwgcmVzcG9uc2VDb250YWluZXIsXHJcblx0XHRqc29uUHJvcCA9IHMuanNvbnAgIT09IGZhbHNlICYmICggcmpzb25wLnRlc3QoIHMudXJsICkgP1xyXG5cdFx0XHRcInVybFwiIDpcclxuXHRcdFx0dHlwZW9mIHMuZGF0YSA9PT0gXCJzdHJpbmdcIiAmJlxyXG5cdFx0XHRcdCggcy5jb250ZW50VHlwZSB8fCBcIlwiIClcclxuXHRcdFx0XHRcdC5pbmRleE9mKCBcImFwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZFwiICkgPT09IDAgJiZcclxuXHRcdFx0XHRyanNvbnAudGVzdCggcy5kYXRhICkgJiYgXCJkYXRhXCJcclxuXHRcdCk7XHJcblxyXG5cdC8vIEhhbmRsZSBpZmYgdGhlIGV4cGVjdGVkIGRhdGEgdHlwZSBpcyBcImpzb25wXCIgb3Igd2UgaGF2ZSBhIHBhcmFtZXRlciB0byBzZXRcclxuXHRpZiAoIGpzb25Qcm9wIHx8IHMuZGF0YVR5cGVzWyAwIF0gPT09IFwianNvbnBcIiApIHtcclxuXHJcblx0XHQvLyBHZXQgY2FsbGJhY2sgbmFtZSwgcmVtZW1iZXJpbmcgcHJlZXhpc3RpbmcgdmFsdWUgYXNzb2NpYXRlZCB3aXRoIGl0XHJcblx0XHRjYWxsYmFja05hbWUgPSBzLmpzb25wQ2FsbGJhY2sgPSBpc0Z1bmN0aW9uKCBzLmpzb25wQ2FsbGJhY2sgKSA/XHJcblx0XHRcdHMuanNvbnBDYWxsYmFjaygpIDpcclxuXHRcdFx0cy5qc29ucENhbGxiYWNrO1xyXG5cclxuXHRcdC8vIEluc2VydCBjYWxsYmFjayBpbnRvIHVybCBvciBmb3JtIGRhdGFcclxuXHRcdGlmICgganNvblByb3AgKSB7XHJcblx0XHRcdHNbIGpzb25Qcm9wIF0gPSBzWyBqc29uUHJvcCBdLnJlcGxhY2UoIHJqc29ucCwgXCIkMVwiICsgY2FsbGJhY2tOYW1lICk7XHJcblx0XHR9IGVsc2UgaWYgKCBzLmpzb25wICE9PSBmYWxzZSApIHtcclxuXHRcdFx0cy51cmwgKz0gKCBycXVlcnkudGVzdCggcy51cmwgKSA/IFwiJlwiIDogXCI/XCIgKSArIHMuanNvbnAgKyBcIj1cIiArIGNhbGxiYWNrTmFtZTtcclxuXHRcdH1cclxuXHJcblx0XHQvLyBVc2UgZGF0YSBjb252ZXJ0ZXIgdG8gcmV0cmlldmUganNvbiBhZnRlciBzY3JpcHQgZXhlY3V0aW9uXHJcblx0XHRzLmNvbnZlcnRlcnNbIFwic2NyaXB0IGpzb25cIiBdID0gZnVuY3Rpb24oKSB7XHJcblx0XHRcdGlmICggIXJlc3BvbnNlQ29udGFpbmVyICkge1xyXG5cdFx0XHRcdGpRdWVyeS5lcnJvciggY2FsbGJhY2tOYW1lICsgXCIgd2FzIG5vdCBjYWxsZWRcIiApO1xyXG5cdFx0XHR9XHJcblx0XHRcdHJldHVybiByZXNwb25zZUNvbnRhaW5lclsgMCBdO1xyXG5cdFx0fTtcclxuXHJcblx0XHQvLyBGb3JjZSBqc29uIGRhdGFUeXBlXHJcblx0XHRzLmRhdGFUeXBlc1sgMCBdID0gXCJqc29uXCI7XHJcblxyXG5cdFx0Ly8gSW5zdGFsbCBjYWxsYmFja1xyXG5cdFx0b3ZlcndyaXR0ZW4gPSB3aW5kb3dbIGNhbGxiYWNrTmFtZSBdO1xyXG5cdFx0d2luZG93WyBjYWxsYmFja05hbWUgXSA9IGZ1bmN0aW9uKCkge1xyXG5cdFx0XHRyZXNwb25zZUNvbnRhaW5lciA9IGFyZ3VtZW50cztcclxuXHRcdH07XHJcblxyXG5cdFx0Ly8gQ2xlYW4tdXAgZnVuY3Rpb24gKGZpcmVzIGFmdGVyIGNvbnZlcnRlcnMpXHJcblx0XHRqcVhIUi5hbHdheXMoIGZ1bmN0aW9uKCkge1xyXG5cclxuXHRcdFx0Ly8gSWYgcHJldmlvdXMgdmFsdWUgZGlkbid0IGV4aXN0IC0gcmVtb3ZlIGl0XHJcblx0XHRcdGlmICggb3ZlcndyaXR0ZW4gPT09IHVuZGVmaW5lZCApIHtcclxuXHRcdFx0XHRqUXVlcnkoIHdpbmRvdyApLnJlbW92ZVByb3AoIGNhbGxiYWNrTmFtZSApO1xyXG5cclxuXHRcdFx0Ly8gT3RoZXJ3aXNlIHJlc3RvcmUgcHJlZXhpc3RpbmcgdmFsdWVcclxuXHRcdFx0fSBlbHNlIHtcclxuXHRcdFx0XHR3aW5kb3dbIGNhbGxiYWNrTmFtZSBdID0gb3ZlcndyaXR0ZW47XHJcblx0XHRcdH1cclxuXHJcblx0XHRcdC8vIFNhdmUgYmFjayBhcyBmcmVlXHJcblx0XHRcdGlmICggc1sgY2FsbGJhY2tOYW1lIF0gKSB7XHJcblxyXG5cdFx0XHRcdC8vIE1ha2Ugc3VyZSB0aGF0IHJlLXVzaW5nIHRoZSBvcHRpb25zIGRvZXNuJ3Qgc2NyZXcgdGhpbmdzIGFyb3VuZFxyXG5cdFx0XHRcdHMuanNvbnBDYWxsYmFjayA9IG9yaWdpbmFsU2V0dGluZ3MuanNvbnBDYWxsYmFjaztcclxuXHJcblx0XHRcdFx0Ly8gU2F2ZSB0aGUgY2FsbGJhY2sgbmFtZSBmb3IgZnV0dXJlIHVzZVxyXG5cdFx0XHRcdG9sZENhbGxiYWNrcy5wdXNoKCBjYWxsYmFja05hbWUgKTtcclxuXHRcdFx0fVxyXG5cclxuXHRcdFx0Ly8gQ2FsbCBpZiBpdCB3YXMgYSBmdW5jdGlvbiBhbmQgd2UgaGF2ZSBhIHJlc3BvbnNlXHJcblx0XHRcdGlmICggcmVzcG9uc2VDb250YWluZXIgJiYgaXNGdW5jdGlvbiggb3ZlcndyaXR0ZW4gKSApIHtcclxuXHRcdFx0XHRvdmVyd3JpdHRlbiggcmVzcG9uc2VDb250YWluZXJbIDAgXSApO1xyXG5cdFx0XHR9XHJcblxyXG5cdFx0XHRyZXNwb25zZUNvbnRhaW5lciA9IG92ZXJ3cml0dGVuID0gdW5kZWZpbmVkO1xyXG5cdFx0fSApO1xyXG5cclxuXHRcdC8vIERlbGVnYXRlIHRvIHNjcmlwdFxyXG5cdFx0cmV0dXJuIFwic2NyaXB0XCI7XHJcblx0fVxyXG59ICk7XHJcblxyXG5cclxuXHJcblxyXG4vLyBTdXBwb3J0OiBTYWZhcmkgOCBvbmx5XHJcbi8vIEluIFNhZmFyaSA4IGRvY3VtZW50cyBjcmVhdGVkIHZpYSBkb2N1bWVudC5pbXBsZW1lbnRhdGlvbi5jcmVhdGVIVE1MRG9jdW1lbnRcclxuLy8gY29sbGFwc2Ugc2libGluZyBmb3JtczogdGhlIHNlY29uZCBvbmUgYmVjb21lcyBhIGNoaWxkIG9mIHRoZSBmaXJzdCBvbmUuXHJcbi8vIEJlY2F1c2Ugb2YgdGhhdCwgdGhpcyBzZWN1cml0eSBtZWFzdXJlIGhhcyB0byBiZSBkaXNhYmxlZCBpbiBTYWZhcmkgOC5cclxuLy8gaHR0cHM6Ly9idWdzLndlYmtpdC5vcmcvc2hvd19idWcuY2dpP2lkPTEzNzMzN1xyXG5zdXBwb3J0LmNyZWF0ZUhUTUxEb2N1bWVudCA9ICggZnVuY3Rpb24oKSB7XHJcblx0dmFyIGJvZHkgPSBkb2N1bWVudC5pbXBsZW1lbnRhdGlvbi5jcmVhdGVIVE1MRG9jdW1lbnQoIFwiXCIgKS5ib2R5O1xyXG5cdGJvZHkuaW5uZXJIVE1MID0gXCI8Zm9ybT48L2Zvcm0+PGZvcm0+PC9mb3JtPlwiO1xyXG5cdHJldHVybiBib2R5LmNoaWxkTm9kZXMubGVuZ3RoID09PSAyO1xyXG59ICkoKTtcclxuXHJcblxyXG4vLyBBcmd1bWVudCBcImRhdGFcIiBzaG91bGQgYmUgc3RyaW5nIG9mIGh0bWxcclxuLy8gY29udGV4dCAob3B0aW9uYWwpOiBJZiBzcGVjaWZpZWQsIHRoZSBmcmFnbWVudCB3aWxsIGJlIGNyZWF0ZWQgaW4gdGhpcyBjb250ZXh0LFxyXG4vLyBkZWZhdWx0cyB0byBkb2N1bWVudFxyXG4vLyBrZWVwU2NyaXB0cyAob3B0aW9uYWwpOiBJZiB0cnVlLCB3aWxsIGluY2x1ZGUgc2NyaXB0cyBwYXNzZWQgaW4gdGhlIGh0bWwgc3RyaW5nXHJcbmpRdWVyeS5wYXJzZUhUTUwgPSBmdW5jdGlvbiggZGF0YSwgY29udGV4dCwga2VlcFNjcmlwdHMgKSB7XHJcblx0aWYgKCB0eXBlb2YgZGF0YSAhPT0gXCJzdHJpbmdcIiApIHtcclxuXHRcdHJldHVybiBbXTtcclxuXHR9XHJcblx0aWYgKCB0eXBlb2YgY29udGV4dCA9PT0gXCJib29sZWFuXCIgKSB7XHJcblx0XHRrZWVwU2NyaXB0cyA9IGNvbnRleHQ7XHJcblx0XHRjb250ZXh0ID0gZmFsc2U7XHJcblx0fVxyXG5cclxuXHR2YXIgYmFzZSwgcGFyc2VkLCBzY3JpcHRzO1xyXG5cclxuXHRpZiAoICFjb250ZXh0ICkge1xyXG5cclxuXHRcdC8vIFN0b3Agc2NyaXB0cyBvciBpbmxpbmUgZXZlbnQgaGFuZGxlcnMgZnJvbSBiZWluZyBleGVjdXRlZCBpbW1lZGlhdGVseVxyXG5cdFx0Ly8gYnkgdXNpbmcgZG9jdW1lbnQuaW1wbGVtZW50YXRpb25cclxuXHRcdGlmICggc3VwcG9ydC5jcmVhdGVIVE1MRG9jdW1lbnQgKSB7XHJcblx0XHRcdGNvbnRleHQgPSBkb2N1bWVudC5pbXBsZW1lbnRhdGlvbi5jcmVhdGVIVE1MRG9jdW1lbnQoIFwiXCIgKTtcclxuXHJcblx0XHRcdC8vIFNldCB0aGUgYmFzZSBocmVmIGZvciB0aGUgY3JlYXRlZCBkb2N1bWVudFxyXG5cdFx0XHQvLyBzbyBhbnkgcGFyc2VkIGVsZW1lbnRzIHdpdGggVVJMc1xyXG5cdFx0XHQvLyBhcmUgYmFzZWQgb24gdGhlIGRvY3VtZW50J3MgVVJMIChnaC0yOTY1KVxyXG5cdFx0XHRiYXNlID0gY29udGV4dC5jcmVhdGVFbGVtZW50KCBcImJhc2VcIiApO1xyXG5cdFx0XHRiYXNlLmhyZWYgPSBkb2N1bWVudC5sb2NhdGlvbi5ocmVmO1xyXG5cdFx0XHRjb250ZXh0LmhlYWQuYXBwZW5kQ2hpbGQoIGJhc2UgKTtcclxuXHRcdH0gZWxzZSB7XHJcblx0XHRcdGNvbnRleHQgPSBkb2N1bWVudDtcclxuXHRcdH1cclxuXHR9XHJcblxyXG5cdHBhcnNlZCA9IHJzaW5nbGVUYWcuZXhlYyggZGF0YSApO1xyXG5cdHNjcmlwdHMgPSAha2VlcFNjcmlwdHMgJiYgW107XHJcblxyXG5cdC8vIFNpbmdsZSB0YWdcclxuXHRpZiAoIHBhcnNlZCApIHtcclxuXHRcdHJldHVybiBbIGNvbnRleHQuY3JlYXRlRWxlbWVudCggcGFyc2VkWyAxIF0gKSBdO1xyXG5cdH1cclxuXHJcblx0cGFyc2VkID0gYnVpbGRGcmFnbWVudCggWyBkYXRhIF0sIGNvbnRleHQsIHNjcmlwdHMgKTtcclxuXHJcblx0aWYgKCBzY3JpcHRzICYmIHNjcmlwdHMubGVuZ3RoICkge1xyXG5cdFx0alF1ZXJ5KCBzY3JpcHRzICkucmVtb3ZlKCk7XHJcblx0fVxyXG5cclxuXHRyZXR1cm4galF1ZXJ5Lm1lcmdlKCBbXSwgcGFyc2VkLmNoaWxkTm9kZXMgKTtcclxufTtcclxuXHJcblxyXG4vKipcclxuICogTG9hZCBhIHVybCBpbnRvIGEgcGFnZVxyXG4gKi9cclxualF1ZXJ5LmZuLmxvYWQgPSBmdW5jdGlvbiggdXJsLCBwYXJhbXMsIGNhbGxiYWNrICkge1xyXG5cdHZhciBzZWxlY3RvciwgdHlwZSwgcmVzcG9uc2UsXHJcblx0XHRzZWxmID0gdGhpcyxcclxuXHRcdG9mZiA9IHVybC5pbmRleE9mKCBcIiBcIiApO1xyXG5cclxuXHRpZiAoIG9mZiA+IC0xICkge1xyXG5cdFx0c2VsZWN0b3IgPSBzdHJpcEFuZENvbGxhcHNlKCB1cmwuc2xpY2UoIG9mZiApICk7XHJcblx0XHR1cmwgPSB1cmwuc2xpY2UoIDAsIG9mZiApO1xyXG5cdH1cclxuXHJcblx0Ly8gSWYgaXQncyBhIGZ1bmN0aW9uXHJcblx0aWYgKCBpc0Z1bmN0aW9uKCBwYXJhbXMgKSApIHtcclxuXHJcblx0XHQvLyBXZSBhc3N1bWUgdGhhdCBpdCdzIHRoZSBjYWxsYmFja1xyXG5cdFx0Y2FsbGJhY2sgPSBwYXJhbXM7XHJcblx0XHRwYXJhbXMgPSB1bmRlZmluZWQ7XHJcblxyXG5cdC8vIE90aGVyd2lzZSwgYnVpbGQgYSBwYXJhbSBzdHJpbmdcclxuXHR9IGVsc2UgaWYgKCBwYXJhbXMgJiYgdHlwZW9mIHBhcmFtcyA9PT0gXCJvYmplY3RcIiApIHtcclxuXHRcdHR5cGUgPSBcIlBPU1RcIjtcclxuXHR9XHJcblxyXG5cdC8vIElmIHdlIGhhdmUgZWxlbWVudHMgdG8gbW9kaWZ5LCBtYWtlIHRoZSByZXF1ZXN0XHJcblx0aWYgKCBzZWxmLmxlbmd0aCA+IDAgKSB7XHJcblx0XHRqUXVlcnkuYWpheCgge1xyXG5cdFx0XHR1cmw6IHVybCxcclxuXHJcblx0XHRcdC8vIElmIFwidHlwZVwiIHZhcmlhYmxlIGlzIHVuZGVmaW5lZCwgdGhlbiBcIkdFVFwiIG1ldGhvZCB3aWxsIGJlIHVzZWQuXHJcblx0XHRcdC8vIE1ha2UgdmFsdWUgb2YgdGhpcyBmaWVsZCBleHBsaWNpdCBzaW5jZVxyXG5cdFx0XHQvLyB1c2VyIGNhbiBvdmVycmlkZSBpdCB0aHJvdWdoIGFqYXhTZXR1cCBtZXRob2RcclxuXHRcdFx0dHlwZTogdHlwZSB8fCBcIkdFVFwiLFxyXG5cdFx0XHRkYXRhVHlwZTogXCJodG1sXCIsXHJcblx0XHRcdGRhdGE6IHBhcmFtc1xyXG5cdFx0fSApLmRvbmUoIGZ1bmN0aW9uKCByZXNwb25zZVRleHQgKSB7XHJcblxyXG5cdFx0XHQvLyBTYXZlIHJlc3BvbnNlIGZvciB1c2UgaW4gY29tcGxldGUgY2FsbGJhY2tcclxuXHRcdFx0cmVzcG9uc2UgPSBhcmd1bWVudHM7XHJcblxyXG5cdFx0XHRzZWxmLmh0bWwoIHNlbGVjdG9yID9cclxuXHJcblx0XHRcdFx0Ly8gSWYgYSBzZWxlY3RvciB3YXMgc3BlY2lmaWVkLCBsb2NhdGUgdGhlIHJpZ2h0IGVsZW1lbnRzIGluIGEgZHVtbXkgZGl2XHJcblx0XHRcdFx0Ly8gRXhjbHVkZSBzY3JpcHRzIHRvIGF2b2lkIElFICdQZXJtaXNzaW9uIERlbmllZCcgZXJyb3JzXHJcblx0XHRcdFx0alF1ZXJ5KCBcIjxkaXY+XCIgKS5hcHBlbmQoIGpRdWVyeS5wYXJzZUhUTUwoIHJlc3BvbnNlVGV4dCApICkuZmluZCggc2VsZWN0b3IgKSA6XHJcblxyXG5cdFx0XHRcdC8vIE90aGVyd2lzZSB1c2UgdGhlIGZ1bGwgcmVzdWx0XHJcblx0XHRcdFx0cmVzcG9uc2VUZXh0ICk7XHJcblxyXG5cdFx0Ly8gSWYgdGhlIHJlcXVlc3Qgc3VjY2VlZHMsIHRoaXMgZnVuY3Rpb24gZ2V0cyBcImRhdGFcIiwgXCJzdGF0dXNcIiwgXCJqcVhIUlwiXHJcblx0XHQvLyBidXQgdGhleSBhcmUgaWdub3JlZCBiZWNhdXNlIHJlc3BvbnNlIHdhcyBzZXQgYWJvdmUuXHJcblx0XHQvLyBJZiBpdCBmYWlscywgdGhpcyBmdW5jdGlvbiBnZXRzIFwianFYSFJcIiwgXCJzdGF0dXNcIiwgXCJlcnJvclwiXHJcblx0XHR9ICkuYWx3YXlzKCBjYWxsYmFjayAmJiBmdW5jdGlvbigganFYSFIsIHN0YXR1cyApIHtcclxuXHRcdFx0c2VsZi5lYWNoKCBmdW5jdGlvbigpIHtcclxuXHRcdFx0XHRjYWxsYmFjay5hcHBseSggdGhpcywgcmVzcG9uc2UgfHwgWyBqcVhIUi5yZXNwb25zZVRleHQsIHN0YXR1cywganFYSFIgXSApO1xyXG5cdFx0XHR9ICk7XHJcblx0XHR9ICk7XHJcblx0fVxyXG5cclxuXHRyZXR1cm4gdGhpcztcclxufTtcclxuXHJcblxyXG5cclxuXHJcbi8vIEF0dGFjaCBhIGJ1bmNoIG9mIGZ1bmN0aW9ucyBmb3IgaGFuZGxpbmcgY29tbW9uIEFKQVggZXZlbnRzXHJcbmpRdWVyeS5lYWNoKCBbXHJcblx0XCJhamF4U3RhcnRcIixcclxuXHRcImFqYXhTdG9wXCIsXHJcblx0XCJhamF4Q29tcGxldGVcIixcclxuXHRcImFqYXhFcnJvclwiLFxyXG5cdFwiYWpheFN1Y2Nlc3NcIixcclxuXHRcImFqYXhTZW5kXCJcclxuXSwgZnVuY3Rpb24oIGksIHR5cGUgKSB7XHJcblx0alF1ZXJ5LmZuWyB0eXBlIF0gPSBmdW5jdGlvbiggZm4gKSB7XHJcblx0XHRyZXR1cm4gdGhpcy5vbiggdHlwZSwgZm4gKTtcclxuXHR9O1xyXG59ICk7XHJcblxyXG5cclxuXHJcblxyXG5qUXVlcnkuZXhwci5wc2V1ZG9zLmFuaW1hdGVkID0gZnVuY3Rpb24oIGVsZW0gKSB7XHJcblx0cmV0dXJuIGpRdWVyeS5ncmVwKCBqUXVlcnkudGltZXJzLCBmdW5jdGlvbiggZm4gKSB7XHJcblx0XHRyZXR1cm4gZWxlbSA9PT0gZm4uZWxlbTtcclxuXHR9ICkubGVuZ3RoO1xyXG59O1xyXG5cclxuXHJcblxyXG5cclxualF1ZXJ5Lm9mZnNldCA9IHtcclxuXHRzZXRPZmZzZXQ6IGZ1bmN0aW9uKCBlbGVtLCBvcHRpb25zLCBpICkge1xyXG5cdFx0dmFyIGN1clBvc2l0aW9uLCBjdXJMZWZ0LCBjdXJDU1NUb3AsIGN1clRvcCwgY3VyT2Zmc2V0LCBjdXJDU1NMZWZ0LCBjYWxjdWxhdGVQb3NpdGlvbixcclxuXHRcdFx0cG9zaXRpb24gPSBqUXVlcnkuY3NzKCBlbGVtLCBcInBvc2l0aW9uXCIgKSxcclxuXHRcdFx0Y3VyRWxlbSA9IGpRdWVyeSggZWxlbSApLFxyXG5cdFx0XHRwcm9wcyA9IHt9O1xyXG5cclxuXHRcdC8vIFNldCBwb3NpdGlvbiBmaXJzdCwgaW4tY2FzZSB0b3AvbGVmdCBhcmUgc2V0IGV2ZW4gb24gc3RhdGljIGVsZW1cclxuXHRcdGlmICggcG9zaXRpb24gPT09IFwic3RhdGljXCIgKSB7XHJcblx0XHRcdGVsZW0uc3R5bGUucG9zaXRpb24gPSBcInJlbGF0aXZlXCI7XHJcblx0XHR9XHJcblxyXG5cdFx0Y3VyT2Zmc2V0ID0gY3VyRWxlbS5vZmZzZXQoKTtcclxuXHRcdGN1ckNTU1RvcCA9IGpRdWVyeS5jc3MoIGVsZW0sIFwidG9wXCIgKTtcclxuXHRcdGN1ckNTU0xlZnQgPSBqUXVlcnkuY3NzKCBlbGVtLCBcImxlZnRcIiApO1xyXG5cdFx0Y2FsY3VsYXRlUG9zaXRpb24gPSAoIHBvc2l0aW9uID09PSBcImFic29sdXRlXCIgfHwgcG9zaXRpb24gPT09IFwiZml4ZWRcIiApICYmXHJcblx0XHRcdCggY3VyQ1NTVG9wICsgY3VyQ1NTTGVmdCApLmluZGV4T2YoIFwiYXV0b1wiICkgPiAtMTtcclxuXHJcblx0XHQvLyBOZWVkIHRvIGJlIGFibGUgdG8gY2FsY3VsYXRlIHBvc2l0aW9uIGlmIGVpdGhlclxyXG5cdFx0Ly8gdG9wIG9yIGxlZnQgaXMgYXV0byBhbmQgcG9zaXRpb24gaXMgZWl0aGVyIGFic29sdXRlIG9yIGZpeGVkXHJcblx0XHRpZiAoIGNhbGN1bGF0ZVBvc2l0aW9uICkge1xyXG5cdFx0XHRjdXJQb3NpdGlvbiA9IGN1ckVsZW0ucG9zaXRpb24oKTtcclxuXHRcdFx0Y3VyVG9wID0gY3VyUG9zaXRpb24udG9wO1xyXG5cdFx0XHRjdXJMZWZ0ID0gY3VyUG9zaXRpb24ubGVmdDtcclxuXHJcblx0XHR9IGVsc2Uge1xyXG5cdFx0XHRjdXJUb3AgPSBwYXJzZUZsb2F0KCBjdXJDU1NUb3AgKSB8fCAwO1xyXG5cdFx0XHRjdXJMZWZ0ID0gcGFyc2VGbG9hdCggY3VyQ1NTTGVmdCApIHx8IDA7XHJcblx0XHR9XHJcblxyXG5cdFx0aWYgKCBpc0Z1bmN0aW9uKCBvcHRpb25zICkgKSB7XHJcblxyXG5cdFx0XHQvLyBVc2UgalF1ZXJ5LmV4dGVuZCBoZXJlIHRvIGFsbG93IG1vZGlmaWNhdGlvbiBvZiBjb29yZGluYXRlcyBhcmd1bWVudCAoZ2gtMTg0OClcclxuXHRcdFx0b3B0aW9ucyA9IG9wdGlvbnMuY2FsbCggZWxlbSwgaSwgalF1ZXJ5LmV4dGVuZCgge30sIGN1ck9mZnNldCApICk7XHJcblx0XHR9XHJcblxyXG5cdFx0aWYgKCBvcHRpb25zLnRvcCAhPSBudWxsICkge1xyXG5cdFx0XHRwcm9wcy50b3AgPSAoIG9wdGlvbnMudG9wIC0gY3VyT2Zmc2V0LnRvcCApICsgY3VyVG9wO1xyXG5cdFx0fVxyXG5cdFx0aWYgKCBvcHRpb25zLmxlZnQgIT0gbnVsbCApIHtcclxuXHRcdFx0cHJvcHMubGVmdCA9ICggb3B0aW9ucy5sZWZ0IC0gY3VyT2Zmc2V0LmxlZnQgKSArIGN1ckxlZnQ7XHJcblx0XHR9XHJcblxyXG5cdFx0aWYgKCBcInVzaW5nXCIgaW4gb3B0aW9ucyApIHtcclxuXHRcdFx0b3B0aW9ucy51c2luZy5jYWxsKCBlbGVtLCBwcm9wcyApO1xyXG5cclxuXHRcdH0gZWxzZSB7XHJcblx0XHRcdGN1ckVsZW0uY3NzKCBwcm9wcyApO1xyXG5cdFx0fVxyXG5cdH1cclxufTtcclxuXHJcbmpRdWVyeS5mbi5leHRlbmQoIHtcclxuXHJcblx0Ly8gb2Zmc2V0KCkgcmVsYXRlcyBhbiBlbGVtZW50J3MgYm9yZGVyIGJveCB0byB0aGUgZG9jdW1lbnQgb3JpZ2luXHJcblx0b2Zmc2V0OiBmdW5jdGlvbiggb3B0aW9ucyApIHtcclxuXHJcblx0XHQvLyBQcmVzZXJ2ZSBjaGFpbmluZyBmb3Igc2V0dGVyXHJcblx0XHRpZiAoIGFyZ3VtZW50cy5sZW5ndGggKSB7XHJcblx0XHRcdHJldHVybiBvcHRpb25zID09PSB1bmRlZmluZWQgP1xyXG5cdFx0XHRcdHRoaXMgOlxyXG5cdFx0XHRcdHRoaXMuZWFjaCggZnVuY3Rpb24oIGkgKSB7XHJcblx0XHRcdFx0XHRqUXVlcnkub2Zmc2V0LnNldE9mZnNldCggdGhpcywgb3B0aW9ucywgaSApO1xyXG5cdFx0XHRcdH0gKTtcclxuXHRcdH1cclxuXHJcblx0XHR2YXIgcmVjdCwgd2luLFxyXG5cdFx0XHRlbGVtID0gdGhpc1sgMCBdO1xyXG5cclxuXHRcdGlmICggIWVsZW0gKSB7XHJcblx0XHRcdHJldHVybjtcclxuXHRcdH1cclxuXHJcblx0XHQvLyBSZXR1cm4gemVyb3MgZm9yIGRpc2Nvbm5lY3RlZCBhbmQgaGlkZGVuIChkaXNwbGF5OiBub25lKSBlbGVtZW50cyAoZ2gtMjMxMClcclxuXHRcdC8vIFN1cHBvcnQ6IElFIDw9MTEgb25seVxyXG5cdFx0Ly8gUnVubmluZyBnZXRCb3VuZGluZ0NsaWVudFJlY3Qgb24gYVxyXG5cdFx0Ly8gZGlzY29ubmVjdGVkIG5vZGUgaW4gSUUgdGhyb3dzIGFuIGVycm9yXHJcblx0XHRpZiAoICFlbGVtLmdldENsaWVudFJlY3RzKCkubGVuZ3RoICkge1xyXG5cdFx0XHRyZXR1cm4geyB0b3A6IDAsIGxlZnQ6IDAgfTtcclxuXHRcdH1cclxuXHJcblx0XHQvLyBHZXQgZG9jdW1lbnQtcmVsYXRpdmUgcG9zaXRpb24gYnkgYWRkaW5nIHZpZXdwb3J0IHNjcm9sbCB0byB2aWV3cG9ydC1yZWxhdGl2ZSBnQkNSXHJcblx0XHRyZWN0ID0gZWxlbS5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTtcclxuXHRcdHdpbiA9IGVsZW0ub3duZXJEb2N1bWVudC5kZWZhdWx0VmlldztcclxuXHRcdHJldHVybiB7XHJcblx0XHRcdHRvcDogcmVjdC50b3AgKyB3aW4ucGFnZVlPZmZzZXQsXHJcblx0XHRcdGxlZnQ6IHJlY3QubGVmdCArIHdpbi5wYWdlWE9mZnNldFxyXG5cdFx0fTtcclxuXHR9LFxyXG5cclxuXHQvLyBwb3NpdGlvbigpIHJlbGF0ZXMgYW4gZWxlbWVudCdzIG1hcmdpbiBib3ggdG8gaXRzIG9mZnNldCBwYXJlbnQncyBwYWRkaW5nIGJveFxyXG5cdC8vIFRoaXMgY29ycmVzcG9uZHMgdG8gdGhlIGJlaGF2aW9yIG9mIENTUyBhYnNvbHV0ZSBwb3NpdGlvbmluZ1xyXG5cdHBvc2l0aW9uOiBmdW5jdGlvbigpIHtcclxuXHRcdGlmICggIXRoaXNbIDAgXSApIHtcclxuXHRcdFx0cmV0dXJuO1xyXG5cdFx0fVxyXG5cclxuXHRcdHZhciBvZmZzZXRQYXJlbnQsIG9mZnNldCwgZG9jLFxyXG5cdFx0XHRlbGVtID0gdGhpc1sgMCBdLFxyXG5cdFx0XHRwYXJlbnRPZmZzZXQgPSB7IHRvcDogMCwgbGVmdDogMCB9O1xyXG5cclxuXHRcdC8vIHBvc2l0aW9uOmZpeGVkIGVsZW1lbnRzIGFyZSBvZmZzZXQgZnJvbSB0aGUgdmlld3BvcnQsIHdoaWNoIGl0c2VsZiBhbHdheXMgaGFzIHplcm8gb2Zmc2V0XHJcblx0XHRpZiAoIGpRdWVyeS5jc3MoIGVsZW0sIFwicG9zaXRpb25cIiApID09PSBcImZpeGVkXCIgKSB7XHJcblxyXG5cdFx0XHQvLyBBc3N1bWUgcG9zaXRpb246Zml4ZWQgaW1wbGllcyBhdmFpbGFiaWxpdHkgb2YgZ2V0Qm91bmRpbmdDbGllbnRSZWN0XHJcblx0XHRcdG9mZnNldCA9IGVsZW0uZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7XHJcblxyXG5cdFx0fSBlbHNlIHtcclxuXHRcdFx0b2Zmc2V0ID0gdGhpcy5vZmZzZXQoKTtcclxuXHJcblx0XHRcdC8vIEFjY291bnQgZm9yIHRoZSAqcmVhbCogb2Zmc2V0IHBhcmVudCwgd2hpY2ggY2FuIGJlIHRoZSBkb2N1bWVudCBvciBpdHMgcm9vdCBlbGVtZW50XHJcblx0XHRcdC8vIHdoZW4gYSBzdGF0aWNhbGx5IHBvc2l0aW9uZWQgZWxlbWVudCBpcyBpZGVudGlmaWVkXHJcblx0XHRcdGRvYyA9IGVsZW0ub3duZXJEb2N1bWVudDtcclxuXHRcdFx0b2Zmc2V0UGFyZW50ID0gZWxlbS5vZmZzZXRQYXJlbnQgfHwgZG9jLmRvY3VtZW50RWxlbWVudDtcclxuXHRcdFx0d2hpbGUgKCBvZmZzZXRQYXJlbnQgJiZcclxuXHRcdFx0XHQoIG9mZnNldFBhcmVudCA9PT0gZG9jLmJvZHkgfHwgb2Zmc2V0UGFyZW50ID09PSBkb2MuZG9jdW1lbnRFbGVtZW50ICkgJiZcclxuXHRcdFx0XHRqUXVlcnkuY3NzKCBvZmZzZXRQYXJlbnQsIFwicG9zaXRpb25cIiApID09PSBcInN0YXRpY1wiICkge1xyXG5cclxuXHRcdFx0XHRvZmZzZXRQYXJlbnQgPSBvZmZzZXRQYXJlbnQucGFyZW50Tm9kZTtcclxuXHRcdFx0fVxyXG5cdFx0XHRpZiAoIG9mZnNldFBhcmVudCAmJiBvZmZzZXRQYXJlbnQgIT09IGVsZW0gJiYgb2Zmc2V0UGFyZW50Lm5vZGVUeXBlID09PSAxICkge1xyXG5cclxuXHRcdFx0XHQvLyBJbmNvcnBvcmF0ZSBib3JkZXJzIGludG8gaXRzIG9mZnNldCwgc2luY2UgdGhleSBhcmUgb3V0c2lkZSBpdHMgY29udGVudCBvcmlnaW5cclxuXHRcdFx0XHRwYXJlbnRPZmZzZXQgPSBqUXVlcnkoIG9mZnNldFBhcmVudCApLm9mZnNldCgpO1xyXG5cdFx0XHRcdHBhcmVudE9mZnNldC50b3AgKz0galF1ZXJ5LmNzcyggb2Zmc2V0UGFyZW50LCBcImJvcmRlclRvcFdpZHRoXCIsIHRydWUgKTtcclxuXHRcdFx0XHRwYXJlbnRPZmZzZXQubGVmdCArPSBqUXVlcnkuY3NzKCBvZmZzZXRQYXJlbnQsIFwiYm9yZGVyTGVmdFdpZHRoXCIsIHRydWUgKTtcclxuXHRcdFx0fVxyXG5cdFx0fVxyXG5cclxuXHRcdC8vIFN1YnRyYWN0IHBhcmVudCBvZmZzZXRzIGFuZCBlbGVtZW50IG1hcmdpbnNcclxuXHRcdHJldHVybiB7XHJcblx0XHRcdHRvcDogb2Zmc2V0LnRvcCAtIHBhcmVudE9mZnNldC50b3AgLSBqUXVlcnkuY3NzKCBlbGVtLCBcIm1hcmdpblRvcFwiLCB0cnVlICksXHJcblx0XHRcdGxlZnQ6IG9mZnNldC5sZWZ0IC0gcGFyZW50T2Zmc2V0LmxlZnQgLSBqUXVlcnkuY3NzKCBlbGVtLCBcIm1hcmdpbkxlZnRcIiwgdHJ1ZSApXHJcblx0XHR9O1xyXG5cdH0sXHJcblxyXG5cdC8vIFRoaXMgbWV0aG9kIHdpbGwgcmV0dXJuIGRvY3VtZW50RWxlbWVudCBpbiB0aGUgZm9sbG93aW5nIGNhc2VzOlxyXG5cdC8vIDEpIEZvciB0aGUgZWxlbWVudCBpbnNpZGUgdGhlIGlmcmFtZSB3aXRob3V0IG9mZnNldFBhcmVudCwgdGhpcyBtZXRob2Qgd2lsbCByZXR1cm5cclxuXHQvLyAgICBkb2N1bWVudEVsZW1lbnQgb2YgdGhlIHBhcmVudCB3aW5kb3dcclxuXHQvLyAyKSBGb3IgdGhlIGhpZGRlbiBvciBkZXRhY2hlZCBlbGVtZW50XHJcblx0Ly8gMykgRm9yIGJvZHkgb3IgaHRtbCBlbGVtZW50LCBpLmUuIGluIGNhc2Ugb2YgdGhlIGh0bWwgbm9kZSAtIGl0IHdpbGwgcmV0dXJuIGl0c2VsZlxyXG5cdC8vXHJcblx0Ly8gYnV0IHRob3NlIGV4Y2VwdGlvbnMgd2VyZSBuZXZlciBwcmVzZW50ZWQgYXMgYSByZWFsIGxpZmUgdXNlLWNhc2VzXHJcblx0Ly8gYW5kIG1pZ2h0IGJlIGNvbnNpZGVyZWQgYXMgbW9yZSBwcmVmZXJhYmxlIHJlc3VsdHMuXHJcblx0Ly9cclxuXHQvLyBUaGlzIGxvZ2ljLCBob3dldmVyLCBpcyBub3QgZ3VhcmFudGVlZCBhbmQgY2FuIGNoYW5nZSBhdCBhbnkgcG9pbnQgaW4gdGhlIGZ1dHVyZVxyXG5cdG9mZnNldFBhcmVudDogZnVuY3Rpb24oKSB7XHJcblx0XHRyZXR1cm4gdGhpcy5tYXAoIGZ1bmN0aW9uKCkge1xyXG5cdFx0XHR2YXIgb2Zmc2V0UGFyZW50ID0gdGhpcy5vZmZzZXRQYXJlbnQ7XHJcblxyXG5cdFx0XHR3aGlsZSAoIG9mZnNldFBhcmVudCAmJiBqUXVlcnkuY3NzKCBvZmZzZXRQYXJlbnQsIFwicG9zaXRpb25cIiApID09PSBcInN0YXRpY1wiICkge1xyXG5cdFx0XHRcdG9mZnNldFBhcmVudCA9IG9mZnNldFBhcmVudC5vZmZzZXRQYXJlbnQ7XHJcblx0XHRcdH1cclxuXHJcblx0XHRcdHJldHVybiBvZmZzZXRQYXJlbnQgfHwgZG9jdW1lbnRFbGVtZW50O1xyXG5cdFx0fSApO1xyXG5cdH1cclxufSApO1xyXG5cclxuLy8gQ3JlYXRlIHNjcm9sbExlZnQgYW5kIHNjcm9sbFRvcCBtZXRob2RzXHJcbmpRdWVyeS5lYWNoKCB7IHNjcm9sbExlZnQ6IFwicGFnZVhPZmZzZXRcIiwgc2Nyb2xsVG9wOiBcInBhZ2VZT2Zmc2V0XCIgfSwgZnVuY3Rpb24oIG1ldGhvZCwgcHJvcCApIHtcclxuXHR2YXIgdG9wID0gXCJwYWdlWU9mZnNldFwiID09PSBwcm9wO1xyXG5cclxuXHRqUXVlcnkuZm5bIG1ldGhvZCBdID0gZnVuY3Rpb24oIHZhbCApIHtcclxuXHRcdHJldHVybiBhY2Nlc3MoIHRoaXMsIGZ1bmN0aW9uKCBlbGVtLCBtZXRob2QsIHZhbCApIHtcclxuXHJcblx0XHRcdC8vIENvYWxlc2NlIGRvY3VtZW50cyBhbmQgd2luZG93c1xyXG5cdFx0XHR2YXIgd2luO1xyXG5cdFx0XHRpZiAoIGlzV2luZG93KCBlbGVtICkgKSB7XHJcblx0XHRcdFx0d2luID0gZWxlbTtcclxuXHRcdFx0fSBlbHNlIGlmICggZWxlbS5ub2RlVHlwZSA9PT0gOSApIHtcclxuXHRcdFx0XHR3aW4gPSBlbGVtLmRlZmF1bHRWaWV3O1xyXG5cdFx0XHR9XHJcblxyXG5cdFx0XHRpZiAoIHZhbCA9PT0gdW5kZWZpbmVkICkge1xyXG5cdFx0XHRcdHJldHVybiB3aW4gPyB3aW5bIHByb3AgXSA6IGVsZW1bIG1ldGhvZCBdO1xyXG5cdFx0XHR9XHJcblxyXG5cdFx0XHRpZiAoIHdpbiApIHtcclxuXHRcdFx0XHR3aW4uc2Nyb2xsVG8oXHJcblx0XHRcdFx0XHQhdG9wID8gdmFsIDogd2luLnBhZ2VYT2Zmc2V0LFxyXG5cdFx0XHRcdFx0dG9wID8gdmFsIDogd2luLnBhZ2VZT2Zmc2V0XHJcblx0XHRcdFx0KTtcclxuXHJcblx0XHRcdH0gZWxzZSB7XHJcblx0XHRcdFx0ZWxlbVsgbWV0aG9kIF0gPSB2YWw7XHJcblx0XHRcdH1cclxuXHRcdH0sIG1ldGhvZCwgdmFsLCBhcmd1bWVudHMubGVuZ3RoICk7XHJcblx0fTtcclxufSApO1xyXG5cclxuLy8gU3VwcG9ydDogU2FmYXJpIDw9NyAtIDkuMSwgQ2hyb21lIDw9MzcgLSA0OVxyXG4vLyBBZGQgdGhlIHRvcC9sZWZ0IGNzc0hvb2tzIHVzaW5nIGpRdWVyeS5mbi5wb3NpdGlvblxyXG4vLyBXZWJraXQgYnVnOiBodHRwczovL2J1Z3Mud2Via2l0Lm9yZy9zaG93X2J1Zy5jZ2k/aWQ9MjkwODRcclxuLy8gQmxpbmsgYnVnOiBodHRwczovL2J1Z3MuY2hyb21pdW0ub3JnL3AvY2hyb21pdW0vaXNzdWVzL2RldGFpbD9pZD01ODkzNDdcclxuLy8gZ2V0Q29tcHV0ZWRTdHlsZSByZXR1cm5zIHBlcmNlbnQgd2hlbiBzcGVjaWZpZWQgZm9yIHRvcC9sZWZ0L2JvdHRvbS9yaWdodDtcclxuLy8gcmF0aGVyIHRoYW4gbWFrZSB0aGUgY3NzIG1vZHVsZSBkZXBlbmQgb24gdGhlIG9mZnNldCBtb2R1bGUsIGp1c3QgY2hlY2sgZm9yIGl0IGhlcmVcclxualF1ZXJ5LmVhY2goIFsgXCJ0b3BcIiwgXCJsZWZ0XCIgXSwgZnVuY3Rpb24oIGksIHByb3AgKSB7XHJcblx0alF1ZXJ5LmNzc0hvb2tzWyBwcm9wIF0gPSBhZGRHZXRIb29rSWYoIHN1cHBvcnQucGl4ZWxQb3NpdGlvbixcclxuXHRcdGZ1bmN0aW9uKCBlbGVtLCBjb21wdXRlZCApIHtcclxuXHRcdFx0aWYgKCBjb21wdXRlZCApIHtcclxuXHRcdFx0XHRjb21wdXRlZCA9IGN1ckNTUyggZWxlbSwgcHJvcCApO1xyXG5cclxuXHRcdFx0XHQvLyBJZiBjdXJDU1MgcmV0dXJucyBwZXJjZW50YWdlLCBmYWxsYmFjayB0byBvZmZzZXRcclxuXHRcdFx0XHRyZXR1cm4gcm51bW5vbnB4LnRlc3QoIGNvbXB1dGVkICkgP1xyXG5cdFx0XHRcdFx0alF1ZXJ5KCBlbGVtICkucG9zaXRpb24oKVsgcHJvcCBdICsgXCJweFwiIDpcclxuXHRcdFx0XHRcdGNvbXB1dGVkO1xyXG5cdFx0XHR9XHJcblx0XHR9XHJcblx0KTtcclxufSApO1xyXG5cclxuXHJcbi8vIENyZWF0ZSBpbm5lckhlaWdodCwgaW5uZXJXaWR0aCwgaGVpZ2h0LCB3aWR0aCwgb3V0ZXJIZWlnaHQgYW5kIG91dGVyV2lkdGggbWV0aG9kc1xyXG5qUXVlcnkuZWFjaCggeyBIZWlnaHQ6IFwiaGVpZ2h0XCIsIFdpZHRoOiBcIndpZHRoXCIgfSwgZnVuY3Rpb24oIG5hbWUsIHR5cGUgKSB7XHJcblx0alF1ZXJ5LmVhY2goIHsgcGFkZGluZzogXCJpbm5lclwiICsgbmFtZSwgY29udGVudDogdHlwZSwgXCJcIjogXCJvdXRlclwiICsgbmFtZSB9LFxyXG5cdFx0ZnVuY3Rpb24oIGRlZmF1bHRFeHRyYSwgZnVuY05hbWUgKSB7XHJcblxyXG5cdFx0Ly8gTWFyZ2luIGlzIG9ubHkgZm9yIG91dGVySGVpZ2h0LCBvdXRlcldpZHRoXHJcblx0XHRqUXVlcnkuZm5bIGZ1bmNOYW1lIF0gPSBmdW5jdGlvbiggbWFyZ2luLCB2YWx1ZSApIHtcclxuXHRcdFx0dmFyIGNoYWluYWJsZSA9IGFyZ3VtZW50cy5sZW5ndGggJiYgKCBkZWZhdWx0RXh0cmEgfHwgdHlwZW9mIG1hcmdpbiAhPT0gXCJib29sZWFuXCIgKSxcclxuXHRcdFx0XHRleHRyYSA9IGRlZmF1bHRFeHRyYSB8fCAoIG1hcmdpbiA9PT0gdHJ1ZSB8fCB2YWx1ZSA9PT0gdHJ1ZSA/IFwibWFyZ2luXCIgOiBcImJvcmRlclwiICk7XHJcblxyXG5cdFx0XHRyZXR1cm4gYWNjZXNzKCB0aGlzLCBmdW5jdGlvbiggZWxlbSwgdHlwZSwgdmFsdWUgKSB7XHJcblx0XHRcdFx0dmFyIGRvYztcclxuXHJcblx0XHRcdFx0aWYgKCBpc1dpbmRvdyggZWxlbSApICkge1xyXG5cclxuXHRcdFx0XHRcdC8vICQoIHdpbmRvdyApLm91dGVyV2lkdGgvSGVpZ2h0IHJldHVybiB3L2ggaW5jbHVkaW5nIHNjcm9sbGJhcnMgKGdoLTE3MjkpXHJcblx0XHRcdFx0XHRyZXR1cm4gZnVuY05hbWUuaW5kZXhPZiggXCJvdXRlclwiICkgPT09IDAgP1xyXG5cdFx0XHRcdFx0XHRlbGVtWyBcImlubmVyXCIgKyBuYW1lIF0gOlxyXG5cdFx0XHRcdFx0XHRlbGVtLmRvY3VtZW50LmRvY3VtZW50RWxlbWVudFsgXCJjbGllbnRcIiArIG5hbWUgXTtcclxuXHRcdFx0XHR9XHJcblxyXG5cdFx0XHRcdC8vIEdldCBkb2N1bWVudCB3aWR0aCBvciBoZWlnaHRcclxuXHRcdFx0XHRpZiAoIGVsZW0ubm9kZVR5cGUgPT09IDkgKSB7XHJcblx0XHRcdFx0XHRkb2MgPSBlbGVtLmRvY3VtZW50RWxlbWVudDtcclxuXHJcblx0XHRcdFx0XHQvLyBFaXRoZXIgc2Nyb2xsW1dpZHRoL0hlaWdodF0gb3Igb2Zmc2V0W1dpZHRoL0hlaWdodF0gb3IgY2xpZW50W1dpZHRoL0hlaWdodF0sXHJcblx0XHRcdFx0XHQvLyB3aGljaGV2ZXIgaXMgZ3JlYXRlc3RcclxuXHRcdFx0XHRcdHJldHVybiBNYXRoLm1heChcclxuXHRcdFx0XHRcdFx0ZWxlbS5ib2R5WyBcInNjcm9sbFwiICsgbmFtZSBdLCBkb2NbIFwic2Nyb2xsXCIgKyBuYW1lIF0sXHJcblx0XHRcdFx0XHRcdGVsZW0uYm9keVsgXCJvZmZzZXRcIiArIG5hbWUgXSwgZG9jWyBcIm9mZnNldFwiICsgbmFtZSBdLFxyXG5cdFx0XHRcdFx0XHRkb2NbIFwiY2xpZW50XCIgKyBuYW1lIF1cclxuXHRcdFx0XHRcdCk7XHJcblx0XHRcdFx0fVxyXG5cclxuXHRcdFx0XHRyZXR1cm4gdmFsdWUgPT09IHVuZGVmaW5lZCA/XHJcblxyXG5cdFx0XHRcdFx0Ly8gR2V0IHdpZHRoIG9yIGhlaWdodCBvbiB0aGUgZWxlbWVudCwgcmVxdWVzdGluZyBidXQgbm90IGZvcmNpbmcgcGFyc2VGbG9hdFxyXG5cdFx0XHRcdFx0alF1ZXJ5LmNzcyggZWxlbSwgdHlwZSwgZXh0cmEgKSA6XHJcblxyXG5cdFx0XHRcdFx0Ly8gU2V0IHdpZHRoIG9yIGhlaWdodCBvbiB0aGUgZWxlbWVudFxyXG5cdFx0XHRcdFx0alF1ZXJ5LnN0eWxlKCBlbGVtLCB0eXBlLCB2YWx1ZSwgZXh0cmEgKTtcclxuXHRcdFx0fSwgdHlwZSwgY2hhaW5hYmxlID8gbWFyZ2luIDogdW5kZWZpbmVkLCBjaGFpbmFibGUgKTtcclxuXHRcdH07XHJcblx0fSApO1xyXG59ICk7XHJcblxyXG5cclxualF1ZXJ5LmVhY2goICggXCJibHVyIGZvY3VzIGZvY3VzaW4gZm9jdXNvdXQgcmVzaXplIHNjcm9sbCBjbGljayBkYmxjbGljayBcIiArXHJcblx0XCJtb3VzZWRvd24gbW91c2V1cCBtb3VzZW1vdmUgbW91c2VvdmVyIG1vdXNlb3V0IG1vdXNlZW50ZXIgbW91c2VsZWF2ZSBcIiArXHJcblx0XCJjaGFuZ2Ugc2VsZWN0IHN1Ym1pdCBrZXlkb3duIGtleXByZXNzIGtleXVwIGNvbnRleHRtZW51XCIgKS5zcGxpdCggXCIgXCIgKSxcclxuXHRmdW5jdGlvbiggaSwgbmFtZSApIHtcclxuXHJcblx0Ly8gSGFuZGxlIGV2ZW50IGJpbmRpbmdcclxuXHRqUXVlcnkuZm5bIG5hbWUgXSA9IGZ1bmN0aW9uKCBkYXRhLCBmbiApIHtcclxuXHRcdHJldHVybiBhcmd1bWVudHMubGVuZ3RoID4gMCA/XHJcblx0XHRcdHRoaXMub24oIG5hbWUsIG51bGwsIGRhdGEsIGZuICkgOlxyXG5cdFx0XHR0aGlzLnRyaWdnZXIoIG5hbWUgKTtcclxuXHR9O1xyXG59ICk7XHJcblxyXG5qUXVlcnkuZm4uZXh0ZW5kKCB7XHJcblx0aG92ZXI6IGZ1bmN0aW9uKCBmbk92ZXIsIGZuT3V0ICkge1xyXG5cdFx0cmV0dXJuIHRoaXMubW91c2VlbnRlciggZm5PdmVyICkubW91c2VsZWF2ZSggZm5PdXQgfHwgZm5PdmVyICk7XHJcblx0fVxyXG59ICk7XHJcblxyXG5cclxuXHJcblxyXG5qUXVlcnkuZm4uZXh0ZW5kKCB7XHJcblxyXG5cdGJpbmQ6IGZ1bmN0aW9uKCB0eXBlcywgZGF0YSwgZm4gKSB7XHJcblx0XHRyZXR1cm4gdGhpcy5vbiggdHlwZXMsIG51bGwsIGRhdGEsIGZuICk7XHJcblx0fSxcclxuXHR1bmJpbmQ6IGZ1bmN0aW9uKCB0eXBlcywgZm4gKSB7XHJcblx0XHRyZXR1cm4gdGhpcy5vZmYoIHR5cGVzLCBudWxsLCBmbiApO1xyXG5cdH0sXHJcblxyXG5cdGRlbGVnYXRlOiBmdW5jdGlvbiggc2VsZWN0b3IsIHR5cGVzLCBkYXRhLCBmbiApIHtcclxuXHRcdHJldHVybiB0aGlzLm9uKCB0eXBlcywgc2VsZWN0b3IsIGRhdGEsIGZuICk7XHJcblx0fSxcclxuXHR1bmRlbGVnYXRlOiBmdW5jdGlvbiggc2VsZWN0b3IsIHR5cGVzLCBmbiApIHtcclxuXHJcblx0XHQvLyAoIG5hbWVzcGFjZSApIG9yICggc2VsZWN0b3IsIHR5cGVzIFssIGZuXSApXHJcblx0XHRyZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA9PT0gMSA/XHJcblx0XHRcdHRoaXMub2ZmKCBzZWxlY3RvciwgXCIqKlwiICkgOlxyXG5cdFx0XHR0aGlzLm9mZiggdHlwZXMsIHNlbGVjdG9yIHx8IFwiKipcIiwgZm4gKTtcclxuXHR9XHJcbn0gKTtcclxuXHJcbi8vIEJpbmQgYSBmdW5jdGlvbiB0byBhIGNvbnRleHQsIG9wdGlvbmFsbHkgcGFydGlhbGx5IGFwcGx5aW5nIGFueVxyXG4vLyBhcmd1bWVudHMuXHJcbi8vIGpRdWVyeS5wcm94eSBpcyBkZXByZWNhdGVkIHRvIHByb21vdGUgc3RhbmRhcmRzIChzcGVjaWZpY2FsbHkgRnVuY3Rpb24jYmluZClcclxuLy8gSG93ZXZlciwgaXQgaXMgbm90IHNsYXRlZCBmb3IgcmVtb3ZhbCBhbnkgdGltZSBzb29uXHJcbmpRdWVyeS5wcm94eSA9IGZ1bmN0aW9uKCBmbiwgY29udGV4dCApIHtcclxuXHR2YXIgdG1wLCBhcmdzLCBwcm94eTtcclxuXHJcblx0aWYgKCB0eXBlb2YgY29udGV4dCA9PT0gXCJzdHJpbmdcIiApIHtcclxuXHRcdHRtcCA9IGZuWyBjb250ZXh0IF07XHJcblx0XHRjb250ZXh0ID0gZm47XHJcblx0XHRmbiA9IHRtcDtcclxuXHR9XHJcblxyXG5cdC8vIFF1aWNrIGNoZWNrIHRvIGRldGVybWluZSBpZiB0YXJnZXQgaXMgY2FsbGFibGUsIGluIHRoZSBzcGVjXHJcblx0Ly8gdGhpcyB0aHJvd3MgYSBUeXBlRXJyb3IsIGJ1dCB3ZSB3aWxsIGp1c3QgcmV0dXJuIHVuZGVmaW5lZC5cclxuXHRpZiAoICFpc0Z1bmN0aW9uKCBmbiApICkge1xyXG5cdFx0cmV0dXJuIHVuZGVmaW5lZDtcclxuXHR9XHJcblxyXG5cdC8vIFNpbXVsYXRlZCBiaW5kXHJcblx0YXJncyA9IHNsaWNlLmNhbGwoIGFyZ3VtZW50cywgMiApO1xyXG5cdHByb3h5ID0gZnVuY3Rpb24oKSB7XHJcblx0XHRyZXR1cm4gZm4uYXBwbHkoIGNvbnRleHQgfHwgdGhpcywgYXJncy5jb25jYXQoIHNsaWNlLmNhbGwoIGFyZ3VtZW50cyApICkgKTtcclxuXHR9O1xyXG5cclxuXHQvLyBTZXQgdGhlIGd1aWQgb2YgdW5pcXVlIGhhbmRsZXIgdG8gdGhlIHNhbWUgb2Ygb3JpZ2luYWwgaGFuZGxlciwgc28gaXQgY2FuIGJlIHJlbW92ZWRcclxuXHRwcm94eS5ndWlkID0gZm4uZ3VpZCA9IGZuLmd1aWQgfHwgalF1ZXJ5Lmd1aWQrKztcclxuXHJcblx0cmV0dXJuIHByb3h5O1xyXG59O1xyXG5cclxualF1ZXJ5LmhvbGRSZWFkeSA9IGZ1bmN0aW9uKCBob2xkICkge1xyXG5cdGlmICggaG9sZCApIHtcclxuXHRcdGpRdWVyeS5yZWFkeVdhaXQrKztcclxuXHR9IGVsc2Uge1xyXG5cdFx0alF1ZXJ5LnJlYWR5KCB0cnVlICk7XHJcblx0fVxyXG59O1xyXG5qUXVlcnkuaXNBcnJheSA9IEFycmF5LmlzQXJyYXk7XHJcbmpRdWVyeS5wYXJzZUpTT04gPSBKU09OLnBhcnNlO1xyXG5qUXVlcnkubm9kZU5hbWUgPSBub2RlTmFtZTtcclxualF1ZXJ5LmlzRnVuY3Rpb24gPSBpc0Z1bmN0aW9uO1xyXG5qUXVlcnkuaXNXaW5kb3cgPSBpc1dpbmRvdztcclxualF1ZXJ5LmNhbWVsQ2FzZSA9IGNhbWVsQ2FzZTtcclxualF1ZXJ5LnR5cGUgPSB0b1R5cGU7XHJcblxyXG5qUXVlcnkubm93ID0gRGF0ZS5ub3c7XHJcblxyXG5qUXVlcnkuaXNOdW1lcmljID0gZnVuY3Rpb24oIG9iaiApIHtcclxuXHJcblx0Ly8gQXMgb2YgalF1ZXJ5IDMuMCwgaXNOdW1lcmljIGlzIGxpbWl0ZWQgdG9cclxuXHQvLyBzdHJpbmdzIGFuZCBudW1iZXJzIChwcmltaXRpdmVzIG9yIG9iamVjdHMpXHJcblx0Ly8gdGhhdCBjYW4gYmUgY29lcmNlZCB0byBmaW5pdGUgbnVtYmVycyAoZ2gtMjY2MilcclxuXHR2YXIgdHlwZSA9IGpRdWVyeS50eXBlKCBvYmogKTtcclxuXHRyZXR1cm4gKCB0eXBlID09PSBcIm51bWJlclwiIHx8IHR5cGUgPT09IFwic3RyaW5nXCIgKSAmJlxyXG5cclxuXHRcdC8vIHBhcnNlRmxvYXQgTmFOcyBudW1lcmljLWNhc3QgZmFsc2UgcG9zaXRpdmVzIChcIlwiKVxyXG5cdFx0Ly8gLi4uYnV0IG1pc2ludGVycHJldHMgbGVhZGluZy1udW1iZXIgc3RyaW5ncywgcGFydGljdWxhcmx5IGhleCBsaXRlcmFscyAoXCIweC4uLlwiKVxyXG5cdFx0Ly8gc3VidHJhY3Rpb24gZm9yY2VzIGluZmluaXRpZXMgdG8gTmFOXHJcblx0XHQhaXNOYU4oIG9iaiAtIHBhcnNlRmxvYXQoIG9iaiApICk7XHJcbn07XHJcblxyXG5cclxuXHJcblxyXG4vLyBSZWdpc3RlciBhcyBhIG5hbWVkIEFNRCBtb2R1bGUsIHNpbmNlIGpRdWVyeSBjYW4gYmUgY29uY2F0ZW5hdGVkIHdpdGggb3RoZXJcclxuLy8gZmlsZXMgdGhhdCBtYXkgdXNlIGRlZmluZSwgYnV0IG5vdCB2aWEgYSBwcm9wZXIgY29uY2F0ZW5hdGlvbiBzY3JpcHQgdGhhdFxyXG4vLyB1bmRlcnN0YW5kcyBhbm9ueW1vdXMgQU1EIG1vZHVsZXMuIEEgbmFtZWQgQU1EIGlzIHNhZmVzdCBhbmQgbW9zdCByb2J1c3RcclxuLy8gd2F5IHRvIHJlZ2lzdGVyLiBMb3dlcmNhc2UganF1ZXJ5IGlzIHVzZWQgYmVjYXVzZSBBTUQgbW9kdWxlIG5hbWVzIGFyZVxyXG4vLyBkZXJpdmVkIGZyb20gZmlsZSBuYW1lcywgYW5kIGpRdWVyeSBpcyBub3JtYWxseSBkZWxpdmVyZWQgaW4gYSBsb3dlcmNhc2VcclxuLy8gZmlsZSBuYW1lLiBEbyB0aGlzIGFmdGVyIGNyZWF0aW5nIHRoZSBnbG9iYWwgc28gdGhhdCBpZiBhbiBBTUQgbW9kdWxlIHdhbnRzXHJcbi8vIHRvIGNhbGwgbm9Db25mbGljdCB0byBoaWRlIHRoaXMgdmVyc2lvbiBvZiBqUXVlcnksIGl0IHdpbGwgd29yay5cclxuXHJcbi8vIE5vdGUgdGhhdCBmb3IgbWF4aW11bSBwb3J0YWJpbGl0eSwgbGlicmFyaWVzIHRoYXQgYXJlIG5vdCBqUXVlcnkgc2hvdWxkXHJcbi8vIGRlY2xhcmUgdGhlbXNlbHZlcyBhcyBhbm9ueW1vdXMgbW9kdWxlcywgYW5kIGF2b2lkIHNldHRpbmcgYSBnbG9iYWwgaWYgYW5cclxuLy8gQU1EIGxvYWRlciBpcyBwcmVzZW50LiBqUXVlcnkgaXMgYSBzcGVjaWFsIGNhc2UuIEZvciBtb3JlIGluZm9ybWF0aW9uLCBzZWVcclxuLy8gaHR0cHM6Ly9naXRodWIuY29tL2pyYnVya2UvcmVxdWlyZWpzL3dpa2kvVXBkYXRpbmctZXhpc3RpbmctbGlicmFyaWVzI3dpa2ktYW5vblxyXG5cclxuaWYgKCB0eXBlb2YgZGVmaW5lID09PSBcImZ1bmN0aW9uXCIgJiYgZGVmaW5lLmFtZCApIHtcclxuXHRkZWZpbmUoIFwianF1ZXJ5XCIsIFtdLCBmdW5jdGlvbigpIHtcclxuXHRcdHJldHVybiBqUXVlcnk7XHJcblx0fSApO1xyXG59XHJcblxyXG5cclxuXHJcblxyXG52YXJcclxuXHJcblx0Ly8gTWFwIG92ZXIgalF1ZXJ5IGluIGNhc2Ugb2Ygb3ZlcndyaXRlXHJcblx0X2pRdWVyeSA9IHdpbmRvdy5qUXVlcnksXHJcblxyXG5cdC8vIE1hcCBvdmVyIHRoZSAkIGluIGNhc2Ugb2Ygb3ZlcndyaXRlXHJcblx0XyQgPSB3aW5kb3cuJDtcclxuXHJcbmpRdWVyeS5ub0NvbmZsaWN0ID0gZnVuY3Rpb24oIGRlZXAgKSB7XHJcblx0aWYgKCB3aW5kb3cuJCA9PT0galF1ZXJ5ICkge1xyXG5cdFx0d2luZG93LiQgPSBfJDtcclxuXHR9XHJcblxyXG5cdGlmICggZGVlcCAmJiB3aW5kb3cualF1ZXJ5ID09PSBqUXVlcnkgKSB7XHJcblx0XHR3aW5kb3cualF1ZXJ5ID0gX2pRdWVyeTtcclxuXHR9XHJcblxyXG5cdHJldHVybiBqUXVlcnk7XHJcbn07XHJcblxyXG4vLyBFeHBvc2UgalF1ZXJ5IGFuZCAkIGlkZW50aWZpZXJzLCBldmVuIGluIEFNRFxyXG4vLyAoIzcxMDIjY29tbWVudDoxMCwgaHR0cHM6Ly9naXRodWIuY29tL2pxdWVyeS9qcXVlcnkvcHVsbC81NTcpXHJcbi8vIGFuZCBDb21tb25KUyBmb3IgYnJvd3NlciBlbXVsYXRvcnMgKCMxMzU2NilcclxuaWYgKCAhbm9HbG9iYWwgKSB7XHJcblx0d2luZG93LmpRdWVyeSA9IHdpbmRvdy4kID0galF1ZXJ5O1xyXG59XHJcblxyXG5cclxuXHJcblxyXG5yZXR1cm4galF1ZXJ5O1xyXG59ICk7XHJcbi8qIVxyXG4gICogQm9vdHN0cmFwIHY0LjEuMyAoaHR0cHM6Ly9nZXRib290c3RyYXAuY29tLylcclxuICAqIENvcHlyaWdodCAyMDExLTIwMTggVGhlIEJvb3RzdHJhcCBBdXRob3JzIChodHRwczovL2dpdGh1Yi5jb20vdHdicy9ib290c3RyYXAvZ3JhcGhzL2NvbnRyaWJ1dG9ycylcclxuICAqIExpY2Vuc2VkIHVuZGVyIE1JVCAoaHR0cHM6Ly9naXRodWIuY29tL3R3YnMvYm9vdHN0cmFwL2Jsb2IvbWFzdGVyL0xJQ0VOU0UpXHJcbiAgKi9cclxuIWZ1bmN0aW9uKHQsZSl7XCJvYmplY3RcIj09dHlwZW9mIGV4cG9ydHMmJlwidW5kZWZpbmVkXCIhPXR5cGVvZiBtb2R1bGU/ZShleHBvcnRzLHJlcXVpcmUoXCJqcXVlcnlcIikscmVxdWlyZShcInBvcHBlci5qc1wiKSk6XCJmdW5jdGlvblwiPT10eXBlb2YgZGVmaW5lJiZkZWZpbmUuYW1kP2RlZmluZShbXCJleHBvcnRzXCIsXCJqcXVlcnlcIixcInBvcHBlci5qc1wiXSxlKTplKHQuYm9vdHN0cmFwPXt9LHQualF1ZXJ5LHQuUG9wcGVyKX0odGhpcyxmdW5jdGlvbih0LGUsaCl7XCJ1c2Ugc3RyaWN0XCI7ZnVuY3Rpb24gaSh0LGUpe2Zvcih2YXIgbj0wO248ZS5sZW5ndGg7bisrKXt2YXIgaT1lW25dO2kuZW51bWVyYWJsZT1pLmVudW1lcmFibGV8fCExLGkuY29uZmlndXJhYmxlPSEwLFwidmFsdWVcImluIGkmJihpLndyaXRhYmxlPSEwKSxPYmplY3QuZGVmaW5lUHJvcGVydHkodCxpLmtleSxpKX19ZnVuY3Rpb24gcyh0LGUsbil7cmV0dXJuIGUmJmkodC5wcm90b3R5cGUsZSksbiYmaSh0LG4pLHR9ZnVuY3Rpb24gbChyKXtmb3IodmFyIHQ9MTt0PGFyZ3VtZW50cy5sZW5ndGg7dCsrKXt2YXIgbz1udWxsIT1hcmd1bWVudHNbdF0/YXJndW1lbnRzW3RdOnt9LGU9T2JqZWN0LmtleXMobyk7XCJmdW5jdGlvblwiPT10eXBlb2YgT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyYmKGU9ZS5jb25jYXQoT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyhvKS5maWx0ZXIoZnVuY3Rpb24odCl7cmV0dXJuIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Iobyx0KS5lbnVtZXJhYmxlfSkpKSxlLmZvckVhY2goZnVuY3Rpb24odCl7dmFyIGUsbixpO2U9cixpPW9bbj10XSxuIGluIGU/T2JqZWN0LmRlZmluZVByb3BlcnR5KGUsbix7dmFsdWU6aSxlbnVtZXJhYmxlOiEwLGNvbmZpZ3VyYWJsZTohMCx3cml0YWJsZTohMH0pOmVbbl09aX0pfXJldHVybiByfWU9ZSYmZS5oYXNPd25Qcm9wZXJ0eShcImRlZmF1bHRcIik/ZS5kZWZhdWx0OmUsaD1oJiZoLmhhc093blByb3BlcnR5KFwiZGVmYXVsdFwiKT9oLmRlZmF1bHQ6aDt2YXIgcixuLG8sYSxjLHUsZixkLGcsXyxtLHAsdix5LEUsQyxULGIsUyxJLEEsRCx3LE4sTyxrLFAsaixILEwsUix4LFcsVSxxLEYsSyxNLFEsQixWLFkseixKLFosRywkLFgsdHQsZXQsbnQsaXQscnQsb3Qsc3QsYXQsbHQsY3QsaHQsdXQsZnQsZHQsZ3QsX3QsbXQscHQsdnQseXQsRXQsQ3QsVHQsYnQsU3QsSXQsQXQsRHQsd3QsTnQsT3Qsa3QsUHQsanQsSHQsTHQsUnQseHQsV3QsVXQscXQsRnQsS3QsTXQsUXQsQnQsVnQsWXQsenQsSnQsWnQsR3QsJHQsWHQsdGUsZWUsbmUsaWUscmUsb2Usc2UsYWUsbGUsY2UsaGUsdWUsZmUsZGUsZ2UsX2UsbWUscGUsdmUseWUsRWUsQ2UsVGUsYmUsU2UsSWUsQWUsRGUsd2UsTmUsT2Usa2UsUGUsamUsSGUsTGUsUmUseGUsV2UsVWUscWUsRmUsS2UsTWUsUWUsQmUsVmUsWWUsemUsSmUsWmUsR2UsJGUsWGUsdG4sZW4sbm4scm4sb24sc24sYW4sbG4sY24saG4sdW4sZm4sZG4sZ24sX24sbW4scG4sdm4seW4sRW4sQ24sVG4sYm4sU24sSW4sQW4sRG4sd24sTm4sT24sa24sUG4sam4sSG4sTG4sUm4seG4sV24sVW4scW4sRm49ZnVuY3Rpb24oaSl7dmFyIGU9XCJ0cmFuc2l0aW9uZW5kXCI7ZnVuY3Rpb24gdCh0KXt2YXIgZT10aGlzLG49ITE7cmV0dXJuIGkodGhpcykub25lKGwuVFJBTlNJVElPTl9FTkQsZnVuY3Rpb24oKXtuPSEwfSksc2V0VGltZW91dChmdW5jdGlvbigpe258fGwudHJpZ2dlclRyYW5zaXRpb25FbmQoZSl9LHQpLHRoaXN9dmFyIGw9e1RSQU5TSVRJT05fRU5EOlwiYnNUcmFuc2l0aW9uRW5kXCIsZ2V0VUlEOmZ1bmN0aW9uKHQpe2Zvcig7dCs9fn4oMWU2Kk1hdGgucmFuZG9tKCkpLGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKHQpOyk7cmV0dXJuIHR9LGdldFNlbGVjdG9yRnJvbUVsZW1lbnQ6ZnVuY3Rpb24odCl7dmFyIGU9dC5nZXRBdHRyaWJ1dGUoXCJkYXRhLXRhcmdldFwiKTtlJiZcIiNcIiE9PWV8fChlPXQuZ2V0QXR0cmlidXRlKFwiaHJlZlwiKXx8XCJcIik7dHJ5e3JldHVybiBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGUpP2U6bnVsbH1jYXRjaCh0KXtyZXR1cm4gbnVsbH19LGdldFRyYW5zaXRpb25EdXJhdGlvbkZyb21FbGVtZW50OmZ1bmN0aW9uKHQpe2lmKCF0KXJldHVybiAwO3ZhciBlPWkodCkuY3NzKFwidHJhbnNpdGlvbi1kdXJhdGlvblwiKTtyZXR1cm4gcGFyc2VGbG9hdChlKT8oZT1lLnNwbGl0KFwiLFwiKVswXSwxZTMqcGFyc2VGbG9hdChlKSk6MH0scmVmbG93OmZ1bmN0aW9uKHQpe3JldHVybiB0Lm9mZnNldEhlaWdodH0sdHJpZ2dlclRyYW5zaXRpb25FbmQ6ZnVuY3Rpb24odCl7aSh0KS50cmlnZ2VyKGUpfSxzdXBwb3J0c1RyYW5zaXRpb25FbmQ6ZnVuY3Rpb24oKXtyZXR1cm4gQm9vbGVhbihlKX0saXNFbGVtZW50OmZ1bmN0aW9uKHQpe3JldHVybih0WzBdfHx0KS5ub2RlVHlwZX0sdHlwZUNoZWNrQ29uZmlnOmZ1bmN0aW9uKHQsZSxuKXtmb3IodmFyIGkgaW4gbilpZihPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwobixpKSl7dmFyIHI9bltpXSxvPWVbaV0scz1vJiZsLmlzRWxlbWVudChvKT9cImVsZW1lbnRcIjooYT1vLHt9LnRvU3RyaW5nLmNhbGwoYSkubWF0Y2goL1xccyhbYS16XSspL2kpWzFdLnRvTG93ZXJDYXNlKCkpO2lmKCFuZXcgUmVnRXhwKHIpLnRlc3QocykpdGhyb3cgbmV3IEVycm9yKHQudG9VcHBlckNhc2UoKSsnOiBPcHRpb24gXCInK2krJ1wiIHByb3ZpZGVkIHR5cGUgXCInK3MrJ1wiIGJ1dCBleHBlY3RlZCB0eXBlIFwiJytyKydcIi4nKX12YXIgYX19O3JldHVybiBpLmZuLmVtdWxhdGVUcmFuc2l0aW9uRW5kPXQsaS5ldmVudC5zcGVjaWFsW2wuVFJBTlNJVElPTl9FTkRdPXtiaW5kVHlwZTplLGRlbGVnYXRlVHlwZTplLGhhbmRsZTpmdW5jdGlvbih0KXtpZihpKHQudGFyZ2V0KS5pcyh0aGlzKSlyZXR1cm4gdC5oYW5kbGVPYmouaGFuZGxlci5hcHBseSh0aGlzLGFyZ3VtZW50cyl9fSxsfShlKSxLbj0obj1cImFsZXJ0XCIsYT1cIi5cIisobz1cImJzLmFsZXJ0XCIpLGM9KHI9ZSkuZm5bbl0sdT17Q0xPU0U6XCJjbG9zZVwiK2EsQ0xPU0VEOlwiY2xvc2VkXCIrYSxDTElDS19EQVRBX0FQSTpcImNsaWNrXCIrYStcIi5kYXRhLWFwaVwifSxmPVwiYWxlcnRcIixkPVwiZmFkZVwiLGc9XCJzaG93XCIsXz1mdW5jdGlvbigpe2Z1bmN0aW9uIGkodCl7dGhpcy5fZWxlbWVudD10fXZhciB0PWkucHJvdG90eXBlO3JldHVybiB0LmNsb3NlPWZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMuX2VsZW1lbnQ7dCYmKGU9dGhpcy5fZ2V0Um9vdEVsZW1lbnQodCkpLHRoaXMuX3RyaWdnZXJDbG9zZUV2ZW50KGUpLmlzRGVmYXVsdFByZXZlbnRlZCgpfHx0aGlzLl9yZW1vdmVFbGVtZW50KGUpfSx0LmRpc3Bvc2U9ZnVuY3Rpb24oKXtyLnJlbW92ZURhdGEodGhpcy5fZWxlbWVudCxvKSx0aGlzLl9lbGVtZW50PW51bGx9LHQuX2dldFJvb3RFbGVtZW50PWZ1bmN0aW9uKHQpe3ZhciBlPUZuLmdldFNlbGVjdG9yRnJvbUVsZW1lbnQodCksbj0hMTtyZXR1cm4gZSYmKG49ZG9jdW1lbnQucXVlcnlTZWxlY3RvcihlKSksbnx8KG49cih0KS5jbG9zZXN0KFwiLlwiK2YpWzBdKSxufSx0Ll90cmlnZ2VyQ2xvc2VFdmVudD1mdW5jdGlvbih0KXt2YXIgZT1yLkV2ZW50KHUuQ0xPU0UpO3JldHVybiByKHQpLnRyaWdnZXIoZSksZX0sdC5fcmVtb3ZlRWxlbWVudD1mdW5jdGlvbihlKXt2YXIgbj10aGlzO2lmKHIoZSkucmVtb3ZlQ2xhc3MoZykscihlKS5oYXNDbGFzcyhkKSl7dmFyIHQ9Rm4uZ2V0VHJhbnNpdGlvbkR1cmF0aW9uRnJvbUVsZW1lbnQoZSk7cihlKS5vbmUoRm4uVFJBTlNJVElPTl9FTkQsZnVuY3Rpb24odCl7cmV0dXJuIG4uX2Rlc3Ryb3lFbGVtZW50KGUsdCl9KS5lbXVsYXRlVHJhbnNpdGlvbkVuZCh0KX1lbHNlIHRoaXMuX2Rlc3Ryb3lFbGVtZW50KGUpfSx0Ll9kZXN0cm95RWxlbWVudD1mdW5jdGlvbih0KXtyKHQpLmRldGFjaCgpLnRyaWdnZXIodS5DTE9TRUQpLnJlbW92ZSgpfSxpLl9qUXVlcnlJbnRlcmZhY2U9ZnVuY3Rpb24obil7cmV0dXJuIHRoaXMuZWFjaChmdW5jdGlvbigpe3ZhciB0PXIodGhpcyksZT10LmRhdGEobyk7ZXx8KGU9bmV3IGkodGhpcyksdC5kYXRhKG8sZSkpLFwiY2xvc2VcIj09PW4mJmVbbl0odGhpcyl9KX0saS5faGFuZGxlRGlzbWlzcz1mdW5jdGlvbihlKXtyZXR1cm4gZnVuY3Rpb24odCl7dCYmdC5wcmV2ZW50RGVmYXVsdCgpLGUuY2xvc2UodGhpcyl9fSxzKGksbnVsbCxbe2tleTpcIlZFUlNJT05cIixnZXQ6ZnVuY3Rpb24oKXtyZXR1cm5cIjQuMS4zXCJ9fV0pLGl9KCkscihkb2N1bWVudCkub24odS5DTElDS19EQVRBX0FQSSwnW2RhdGEtZGlzbWlzcz1cImFsZXJ0XCJdJyxfLl9oYW5kbGVEaXNtaXNzKG5ldyBfKSksci5mbltuXT1fLl9qUXVlcnlJbnRlcmZhY2Usci5mbltuXS5Db25zdHJ1Y3Rvcj1fLHIuZm5bbl0ubm9Db25mbGljdD1mdW5jdGlvbigpe3JldHVybiByLmZuW25dPWMsXy5falF1ZXJ5SW50ZXJmYWNlfSxfKSxNbj0ocD1cImJ1dHRvblwiLHk9XCIuXCIrKHY9XCJicy5idXR0b25cIiksRT1cIi5kYXRhLWFwaVwiLEM9KG09ZSkuZm5bcF0sVD1cImFjdGl2ZVwiLGI9XCJidG5cIixJPSdbZGF0YS10b2dnbGVePVwiYnV0dG9uXCJdJyxBPSdbZGF0YS10b2dnbGU9XCJidXR0b25zXCJdJyxEPVwiaW5wdXRcIix3PVwiLmFjdGl2ZVwiLE49XCIuYnRuXCIsTz17Q0xJQ0tfREFUQV9BUEk6XCJjbGlja1wiK3krRSxGT0NVU19CTFVSX0RBVEFfQVBJOihTPVwiZm9jdXNcIikreStFK1wiIGJsdXJcIit5K0V9LGs9ZnVuY3Rpb24oKXtmdW5jdGlvbiBuKHQpe3RoaXMuX2VsZW1lbnQ9dH12YXIgdD1uLnByb3RvdHlwZTtyZXR1cm4gdC50b2dnbGU9ZnVuY3Rpb24oKXt2YXIgdD0hMCxlPSEwLG49bSh0aGlzLl9lbGVtZW50KS5jbG9zZXN0KEEpWzBdO2lmKG4pe3ZhciBpPXRoaXMuX2VsZW1lbnQucXVlcnlTZWxlY3RvcihEKTtpZihpKXtpZihcInJhZGlvXCI9PT1pLnR5cGUpaWYoaS5jaGVja2VkJiZ0aGlzLl9lbGVtZW50LmNsYXNzTGlzdC5jb250YWlucyhUKSl0PSExO2Vsc2V7dmFyIHI9bi5xdWVyeVNlbGVjdG9yKHcpO3ImJm0ocikucmVtb3ZlQ2xhc3MoVCl9aWYodCl7aWYoaS5oYXNBdHRyaWJ1dGUoXCJkaXNhYmxlZFwiKXx8bi5oYXNBdHRyaWJ1dGUoXCJkaXNhYmxlZFwiKXx8aS5jbGFzc0xpc3QuY29udGFpbnMoXCJkaXNhYmxlZFwiKXx8bi5jbGFzc0xpc3QuY29udGFpbnMoXCJkaXNhYmxlZFwiKSlyZXR1cm47aS5jaGVja2VkPSF0aGlzLl9lbGVtZW50LmNsYXNzTGlzdC5jb250YWlucyhUKSxtKGkpLnRyaWdnZXIoXCJjaGFuZ2VcIil9aS5mb2N1cygpLGU9ITF9fWUmJnRoaXMuX2VsZW1lbnQuc2V0QXR0cmlidXRlKFwiYXJpYS1wcmVzc2VkXCIsIXRoaXMuX2VsZW1lbnQuY2xhc3NMaXN0LmNvbnRhaW5zKFQpKSx0JiZtKHRoaXMuX2VsZW1lbnQpLnRvZ2dsZUNsYXNzKFQpfSx0LmRpc3Bvc2U9ZnVuY3Rpb24oKXttLnJlbW92ZURhdGEodGhpcy5fZWxlbWVudCx2KSx0aGlzLl9lbGVtZW50PW51bGx9LG4uX2pRdWVyeUludGVyZmFjZT1mdW5jdGlvbihlKXtyZXR1cm4gdGhpcy5lYWNoKGZ1bmN0aW9uKCl7dmFyIHQ9bSh0aGlzKS5kYXRhKHYpO3R8fCh0PW5ldyBuKHRoaXMpLG0odGhpcykuZGF0YSh2LHQpKSxcInRvZ2dsZVwiPT09ZSYmdFtlXSgpfSl9LHMobixudWxsLFt7a2V5OlwiVkVSU0lPTlwiLGdldDpmdW5jdGlvbigpe3JldHVyblwiNC4xLjNcIn19XSksbn0oKSxtKGRvY3VtZW50KS5vbihPLkNMSUNLX0RBVEFfQVBJLEksZnVuY3Rpb24odCl7dC5wcmV2ZW50RGVmYXVsdCgpO3ZhciBlPXQudGFyZ2V0O20oZSkuaGFzQ2xhc3MoYil8fChlPW0oZSkuY2xvc2VzdChOKSksay5falF1ZXJ5SW50ZXJmYWNlLmNhbGwobShlKSxcInRvZ2dsZVwiKX0pLm9uKE8uRk9DVVNfQkxVUl9EQVRBX0FQSSxJLGZ1bmN0aW9uKHQpe3ZhciBlPW0odC50YXJnZXQpLmNsb3Nlc3QoTilbMF07bShlKS50b2dnbGVDbGFzcyhTLC9eZm9jdXMoaW4pPyQvLnRlc3QodC50eXBlKSl9KSxtLmZuW3BdPWsuX2pRdWVyeUludGVyZmFjZSxtLmZuW3BdLkNvbnN0cnVjdG9yPWssbS5mbltwXS5ub0NvbmZsaWN0PWZ1bmN0aW9uKCl7cmV0dXJuIG0uZm5bcF09QyxrLl9qUXVlcnlJbnRlcmZhY2V9LGspLFFuPShqPVwiY2Fyb3VzZWxcIixMPVwiLlwiKyhIPVwiYnMuY2Fyb3VzZWxcIiksUj1cIi5kYXRhLWFwaVwiLHg9KFA9ZSkuZm5bal0sVz17aW50ZXJ2YWw6NWUzLGtleWJvYXJkOiEwLHNsaWRlOiExLHBhdXNlOlwiaG92ZXJcIix3cmFwOiEwfSxVPXtpbnRlcnZhbDpcIihudW1iZXJ8Ym9vbGVhbilcIixrZXlib2FyZDpcImJvb2xlYW5cIixzbGlkZTpcIihib29sZWFufHN0cmluZylcIixwYXVzZTpcIihzdHJpbmd8Ym9vbGVhbilcIix3cmFwOlwiYm9vbGVhblwifSxxPVwibmV4dFwiLEY9XCJwcmV2XCIsSz1cImxlZnRcIixNPVwicmlnaHRcIixRPXtTTElERTpcInNsaWRlXCIrTCxTTElEOlwic2xpZFwiK0wsS0VZRE9XTjpcImtleWRvd25cIitMLE1PVVNFRU5URVI6XCJtb3VzZWVudGVyXCIrTCxNT1VTRUxFQVZFOlwibW91c2VsZWF2ZVwiK0wsVE9VQ0hFTkQ6XCJ0b3VjaGVuZFwiK0wsTE9BRF9EQVRBX0FQSTpcImxvYWRcIitMK1IsQ0xJQ0tfREFUQV9BUEk6XCJjbGlja1wiK0wrUn0sQj1cImNhcm91c2VsXCIsVj1cImFjdGl2ZVwiLFk9XCJzbGlkZVwiLHo9XCJjYXJvdXNlbC1pdGVtLXJpZ2h0XCIsSj1cImNhcm91c2VsLWl0ZW0tbGVmdFwiLFo9XCJjYXJvdXNlbC1pdGVtLW5leHRcIixHPVwiY2Fyb3VzZWwtaXRlbS1wcmV2XCIsJD1cIi5hY3RpdmVcIixYPVwiLmFjdGl2ZS5jYXJvdXNlbC1pdGVtXCIsdHQ9XCIuY2Fyb3VzZWwtaXRlbVwiLGV0PVwiLmNhcm91c2VsLWl0ZW0tbmV4dCwgLmNhcm91c2VsLWl0ZW0tcHJldlwiLG50PVwiLmNhcm91c2VsLWluZGljYXRvcnNcIixpdD1cIltkYXRhLXNsaWRlXSwgW2RhdGEtc2xpZGUtdG9dXCIscnQ9J1tkYXRhLXJpZGU9XCJjYXJvdXNlbFwiXScsb3Q9ZnVuY3Rpb24oKXtmdW5jdGlvbiBvKHQsZSl7dGhpcy5faXRlbXM9bnVsbCx0aGlzLl9pbnRlcnZhbD1udWxsLHRoaXMuX2FjdGl2ZUVsZW1lbnQ9bnVsbCx0aGlzLl9pc1BhdXNlZD0hMSx0aGlzLl9pc1NsaWRpbmc9ITEsdGhpcy50b3VjaFRpbWVvdXQ9bnVsbCx0aGlzLl9jb25maWc9dGhpcy5fZ2V0Q29uZmlnKGUpLHRoaXMuX2VsZW1lbnQ9UCh0KVswXSx0aGlzLl9pbmRpY2F0b3JzRWxlbWVudD10aGlzLl9lbGVtZW50LnF1ZXJ5U2VsZWN0b3IobnQpLHRoaXMuX2FkZEV2ZW50TGlzdGVuZXJzKCl9dmFyIHQ9by5wcm90b3R5cGU7cmV0dXJuIHQubmV4dD1mdW5jdGlvbigpe3RoaXMuX2lzU2xpZGluZ3x8dGhpcy5fc2xpZGUocSl9LHQubmV4dFdoZW5WaXNpYmxlPWZ1bmN0aW9uKCl7IWRvY3VtZW50LmhpZGRlbiYmUCh0aGlzLl9lbGVtZW50KS5pcyhcIjp2aXNpYmxlXCIpJiZcImhpZGRlblwiIT09UCh0aGlzLl9lbGVtZW50KS5jc3MoXCJ2aXNpYmlsaXR5XCIpJiZ0aGlzLm5leHQoKX0sdC5wcmV2PWZ1bmN0aW9uKCl7dGhpcy5faXNTbGlkaW5nfHx0aGlzLl9zbGlkZShGKX0sdC5wYXVzZT1mdW5jdGlvbih0KXt0fHwodGhpcy5faXNQYXVzZWQ9ITApLHRoaXMuX2VsZW1lbnQucXVlcnlTZWxlY3RvcihldCkmJihGbi50cmlnZ2VyVHJhbnNpdGlvbkVuZCh0aGlzLl9lbGVtZW50KSx0aGlzLmN5Y2xlKCEwKSksY2xlYXJJbnRlcnZhbCh0aGlzLl9pbnRlcnZhbCksdGhpcy5faW50ZXJ2YWw9bnVsbH0sdC5jeWNsZT1mdW5jdGlvbih0KXt0fHwodGhpcy5faXNQYXVzZWQ9ITEpLHRoaXMuX2ludGVydmFsJiYoY2xlYXJJbnRlcnZhbCh0aGlzLl9pbnRlcnZhbCksdGhpcy5faW50ZXJ2YWw9bnVsbCksdGhpcy5fY29uZmlnLmludGVydmFsJiYhdGhpcy5faXNQYXVzZWQmJih0aGlzLl9pbnRlcnZhbD1zZXRJbnRlcnZhbCgoZG9jdW1lbnQudmlzaWJpbGl0eVN0YXRlP3RoaXMubmV4dFdoZW5WaXNpYmxlOnRoaXMubmV4dCkuYmluZCh0aGlzKSx0aGlzLl9jb25maWcuaW50ZXJ2YWwpKX0sdC50bz1mdW5jdGlvbih0KXt2YXIgZT10aGlzO3RoaXMuX2FjdGl2ZUVsZW1lbnQ9dGhpcy5fZWxlbWVudC5xdWVyeVNlbGVjdG9yKFgpO3ZhciBuPXRoaXMuX2dldEl0ZW1JbmRleCh0aGlzLl9hY3RpdmVFbGVtZW50KTtpZighKHQ+dGhpcy5faXRlbXMubGVuZ3RoLTF8fHQ8MCkpaWYodGhpcy5faXNTbGlkaW5nKVAodGhpcy5fZWxlbWVudCkub25lKFEuU0xJRCxmdW5jdGlvbigpe3JldHVybiBlLnRvKHQpfSk7ZWxzZXtpZihuPT09dClyZXR1cm4gdGhpcy5wYXVzZSgpLHZvaWQgdGhpcy5jeWNsZSgpO3ZhciBpPW48dD9xOkY7dGhpcy5fc2xpZGUoaSx0aGlzLl9pdGVtc1t0XSl9fSx0LmRpc3Bvc2U9ZnVuY3Rpb24oKXtQKHRoaXMuX2VsZW1lbnQpLm9mZihMKSxQLnJlbW92ZURhdGEodGhpcy5fZWxlbWVudCxIKSx0aGlzLl9pdGVtcz1udWxsLHRoaXMuX2NvbmZpZz1udWxsLHRoaXMuX2VsZW1lbnQ9bnVsbCx0aGlzLl9pbnRlcnZhbD1udWxsLHRoaXMuX2lzUGF1c2VkPW51bGwsdGhpcy5faXNTbGlkaW5nPW51bGwsdGhpcy5fYWN0aXZlRWxlbWVudD1udWxsLHRoaXMuX2luZGljYXRvcnNFbGVtZW50PW51bGx9LHQuX2dldENvbmZpZz1mdW5jdGlvbih0KXtyZXR1cm4gdD1sKHt9LFcsdCksRm4udHlwZUNoZWNrQ29uZmlnKGosdCxVKSx0fSx0Ll9hZGRFdmVudExpc3RlbmVycz1mdW5jdGlvbigpe3ZhciBlPXRoaXM7dGhpcy5fY29uZmlnLmtleWJvYXJkJiZQKHRoaXMuX2VsZW1lbnQpLm9uKFEuS0VZRE9XTixmdW5jdGlvbih0KXtyZXR1cm4gZS5fa2V5ZG93bih0KX0pLFwiaG92ZXJcIj09PXRoaXMuX2NvbmZpZy5wYXVzZSYmKFAodGhpcy5fZWxlbWVudCkub24oUS5NT1VTRUVOVEVSLGZ1bmN0aW9uKHQpe3JldHVybiBlLnBhdXNlKHQpfSkub24oUS5NT1VTRUxFQVZFLGZ1bmN0aW9uKHQpe3JldHVybiBlLmN5Y2xlKHQpfSksXCJvbnRvdWNoc3RhcnRcImluIGRvY3VtZW50LmRvY3VtZW50RWxlbWVudCYmUCh0aGlzLl9lbGVtZW50KS5vbihRLlRPVUNIRU5ELGZ1bmN0aW9uKCl7ZS5wYXVzZSgpLGUudG91Y2hUaW1lb3V0JiZjbGVhclRpbWVvdXQoZS50b3VjaFRpbWVvdXQpLGUudG91Y2hUaW1lb3V0PXNldFRpbWVvdXQoZnVuY3Rpb24odCl7cmV0dXJuIGUuY3ljbGUodCl9LDUwMCtlLl9jb25maWcuaW50ZXJ2YWwpfSkpfSx0Ll9rZXlkb3duPWZ1bmN0aW9uKHQpe2lmKCEvaW5wdXR8dGV4dGFyZWEvaS50ZXN0KHQudGFyZ2V0LnRhZ05hbWUpKXN3aXRjaCh0LndoaWNoKXtjYXNlIDM3OnQucHJldmVudERlZmF1bHQoKSx0aGlzLnByZXYoKTticmVhaztjYXNlIDM5OnQucHJldmVudERlZmF1bHQoKSx0aGlzLm5leHQoKX19LHQuX2dldEl0ZW1JbmRleD1mdW5jdGlvbih0KXtyZXR1cm4gdGhpcy5faXRlbXM9dCYmdC5wYXJlbnROb2RlP1tdLnNsaWNlLmNhbGwodC5wYXJlbnROb2RlLnF1ZXJ5U2VsZWN0b3JBbGwodHQpKTpbXSx0aGlzLl9pdGVtcy5pbmRleE9mKHQpfSx0Ll9nZXRJdGVtQnlEaXJlY3Rpb249ZnVuY3Rpb24odCxlKXt2YXIgbj10PT09cSxpPXQ9PT1GLHI9dGhpcy5fZ2V0SXRlbUluZGV4KGUpLG89dGhpcy5faXRlbXMubGVuZ3RoLTE7aWYoKGkmJjA9PT1yfHxuJiZyPT09bykmJiF0aGlzLl9jb25maWcud3JhcClyZXR1cm4gZTt2YXIgcz0ocisodD09PUY/LTE6MSkpJXRoaXMuX2l0ZW1zLmxlbmd0aDtyZXR1cm4tMT09PXM/dGhpcy5faXRlbXNbdGhpcy5faXRlbXMubGVuZ3RoLTFdOnRoaXMuX2l0ZW1zW3NdfSx0Ll90cmlnZ2VyU2xpZGVFdmVudD1mdW5jdGlvbih0LGUpe3ZhciBuPXRoaXMuX2dldEl0ZW1JbmRleCh0KSxpPXRoaXMuX2dldEl0ZW1JbmRleCh0aGlzLl9lbGVtZW50LnF1ZXJ5U2VsZWN0b3IoWCkpLHI9UC5FdmVudChRLlNMSURFLHtyZWxhdGVkVGFyZ2V0OnQsZGlyZWN0aW9uOmUsZnJvbTppLHRvOm59KTtyZXR1cm4gUCh0aGlzLl9lbGVtZW50KS50cmlnZ2VyKHIpLHJ9LHQuX3NldEFjdGl2ZUluZGljYXRvckVsZW1lbnQ9ZnVuY3Rpb24odCl7aWYodGhpcy5faW5kaWNhdG9yc0VsZW1lbnQpe3ZhciBlPVtdLnNsaWNlLmNhbGwodGhpcy5faW5kaWNhdG9yc0VsZW1lbnQucXVlcnlTZWxlY3RvckFsbCgkKSk7UChlKS5yZW1vdmVDbGFzcyhWKTt2YXIgbj10aGlzLl9pbmRpY2F0b3JzRWxlbWVudC5jaGlsZHJlblt0aGlzLl9nZXRJdGVtSW5kZXgodCldO24mJlAobikuYWRkQ2xhc3MoVil9fSx0Ll9zbGlkZT1mdW5jdGlvbih0LGUpe3ZhciBuLGkscixvPXRoaXMscz10aGlzLl9lbGVtZW50LnF1ZXJ5U2VsZWN0b3IoWCksYT10aGlzLl9nZXRJdGVtSW5kZXgocyksbD1lfHxzJiZ0aGlzLl9nZXRJdGVtQnlEaXJlY3Rpb24odCxzKSxjPXRoaXMuX2dldEl0ZW1JbmRleChsKSxoPUJvb2xlYW4odGhpcy5faW50ZXJ2YWwpO2lmKHQ9PT1xPyhuPUosaT1aLHI9Syk6KG49eixpPUcscj1NKSxsJiZQKGwpLmhhc0NsYXNzKFYpKXRoaXMuX2lzU2xpZGluZz0hMTtlbHNlIGlmKCF0aGlzLl90cmlnZ2VyU2xpZGVFdmVudChsLHIpLmlzRGVmYXVsdFByZXZlbnRlZCgpJiZzJiZsKXt0aGlzLl9pc1NsaWRpbmc9ITAsaCYmdGhpcy5wYXVzZSgpLHRoaXMuX3NldEFjdGl2ZUluZGljYXRvckVsZW1lbnQobCk7dmFyIHU9UC5FdmVudChRLlNMSUQse3JlbGF0ZWRUYXJnZXQ6bCxkaXJlY3Rpb246cixmcm9tOmEsdG86Y30pO2lmKFAodGhpcy5fZWxlbWVudCkuaGFzQ2xhc3MoWSkpe1AobCkuYWRkQ2xhc3MoaSksRm4ucmVmbG93KGwpLFAocykuYWRkQ2xhc3MobiksUChsKS5hZGRDbGFzcyhuKTt2YXIgZj1Gbi5nZXRUcmFuc2l0aW9uRHVyYXRpb25Gcm9tRWxlbWVudChzKTtQKHMpLm9uZShGbi5UUkFOU0lUSU9OX0VORCxmdW5jdGlvbigpe1AobCkucmVtb3ZlQ2xhc3MobitcIiBcIitpKS5hZGRDbGFzcyhWKSxQKHMpLnJlbW92ZUNsYXNzKFYrXCIgXCIraStcIiBcIituKSxvLl9pc1NsaWRpbmc9ITEsc2V0VGltZW91dChmdW5jdGlvbigpe3JldHVybiBQKG8uX2VsZW1lbnQpLnRyaWdnZXIodSl9LDApfSkuZW11bGF0ZVRyYW5zaXRpb25FbmQoZil9ZWxzZSBQKHMpLnJlbW92ZUNsYXNzKFYpLFAobCkuYWRkQ2xhc3MoViksdGhpcy5faXNTbGlkaW5nPSExLFAodGhpcy5fZWxlbWVudCkudHJpZ2dlcih1KTtoJiZ0aGlzLmN5Y2xlKCl9fSxvLl9qUXVlcnlJbnRlcmZhY2U9ZnVuY3Rpb24oaSl7cmV0dXJuIHRoaXMuZWFjaChmdW5jdGlvbigpe3ZhciB0PVAodGhpcykuZGF0YShIKSxlPWwoe30sVyxQKHRoaXMpLmRhdGEoKSk7XCJvYmplY3RcIj09dHlwZW9mIGkmJihlPWwoe30sZSxpKSk7dmFyIG49XCJzdHJpbmdcIj09dHlwZW9mIGk/aTplLnNsaWRlO2lmKHR8fCh0PW5ldyBvKHRoaXMsZSksUCh0aGlzKS5kYXRhKEgsdCkpLFwibnVtYmVyXCI9PXR5cGVvZiBpKXQudG8oaSk7ZWxzZSBpZihcInN0cmluZ1wiPT10eXBlb2Ygbil7aWYoXCJ1bmRlZmluZWRcIj09dHlwZW9mIHRbbl0pdGhyb3cgbmV3IFR5cGVFcnJvcignTm8gbWV0aG9kIG5hbWVkIFwiJytuKydcIicpO3Rbbl0oKX1lbHNlIGUuaW50ZXJ2YWwmJih0LnBhdXNlKCksdC5jeWNsZSgpKX0pfSxvLl9kYXRhQXBpQ2xpY2tIYW5kbGVyPWZ1bmN0aW9uKHQpe3ZhciBlPUZuLmdldFNlbGVjdG9yRnJvbUVsZW1lbnQodGhpcyk7aWYoZSl7dmFyIG49UChlKVswXTtpZihuJiZQKG4pLmhhc0NsYXNzKEIpKXt2YXIgaT1sKHt9LFAobikuZGF0YSgpLFAodGhpcykuZGF0YSgpKSxyPXRoaXMuZ2V0QXR0cmlidXRlKFwiZGF0YS1zbGlkZS10b1wiKTtyJiYoaS5pbnRlcnZhbD0hMSksby5falF1ZXJ5SW50ZXJmYWNlLmNhbGwoUChuKSxpKSxyJiZQKG4pLmRhdGEoSCkudG8ociksdC5wcmV2ZW50RGVmYXVsdCgpfX19LHMobyxudWxsLFt7a2V5OlwiVkVSU0lPTlwiLGdldDpmdW5jdGlvbigpe3JldHVyblwiNC4xLjNcIn19LHtrZXk6XCJEZWZhdWx0XCIsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIFd9fV0pLG99KCksUChkb2N1bWVudCkub24oUS5DTElDS19EQVRBX0FQSSxpdCxvdC5fZGF0YUFwaUNsaWNrSGFuZGxlciksUCh3aW5kb3cpLm9uKFEuTE9BRF9EQVRBX0FQSSxmdW5jdGlvbigpe2Zvcih2YXIgdD1bXS5zbGljZS5jYWxsKGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwocnQpKSxlPTAsbj10Lmxlbmd0aDtlPG47ZSsrKXt2YXIgaT1QKHRbZV0pO290Ll9qUXVlcnlJbnRlcmZhY2UuY2FsbChpLGkuZGF0YSgpKX19KSxQLmZuW2pdPW90Ll9qUXVlcnlJbnRlcmZhY2UsUC5mbltqXS5Db25zdHJ1Y3Rvcj1vdCxQLmZuW2pdLm5vQ29uZmxpY3Q9ZnVuY3Rpb24oKXtyZXR1cm4gUC5mbltqXT14LG90Ll9qUXVlcnlJbnRlcmZhY2V9LG90KSxCbj0oYXQ9XCJjb2xsYXBzZVwiLGN0PVwiLlwiKyhsdD1cImJzLmNvbGxhcHNlXCIpLGh0PShzdD1lKS5mblthdF0sdXQ9e3RvZ2dsZTohMCxwYXJlbnQ6XCJcIn0sZnQ9e3RvZ2dsZTpcImJvb2xlYW5cIixwYXJlbnQ6XCIoc3RyaW5nfGVsZW1lbnQpXCJ9LGR0PXtTSE9XOlwic2hvd1wiK2N0LFNIT1dOOlwic2hvd25cIitjdCxISURFOlwiaGlkZVwiK2N0LEhJRERFTjpcImhpZGRlblwiK2N0LENMSUNLX0RBVEFfQVBJOlwiY2xpY2tcIitjdCtcIi5kYXRhLWFwaVwifSxndD1cInNob3dcIixfdD1cImNvbGxhcHNlXCIsbXQ9XCJjb2xsYXBzaW5nXCIscHQ9XCJjb2xsYXBzZWRcIix2dD1cIndpZHRoXCIseXQ9XCJoZWlnaHRcIixFdD1cIi5zaG93LCAuY29sbGFwc2luZ1wiLEN0PSdbZGF0YS10b2dnbGU9XCJjb2xsYXBzZVwiXScsVHQ9ZnVuY3Rpb24oKXtmdW5jdGlvbiBhKGUsdCl7dGhpcy5faXNUcmFuc2l0aW9uaW5nPSExLHRoaXMuX2VsZW1lbnQ9ZSx0aGlzLl9jb25maWc9dGhpcy5fZ2V0Q29uZmlnKHQpLHRoaXMuX3RyaWdnZXJBcnJheT1zdC5tYWtlQXJyYXkoZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnW2RhdGEtdG9nZ2xlPVwiY29sbGFwc2VcIl1baHJlZj1cIiMnK2UuaWQrJ1wiXSxbZGF0YS10b2dnbGU9XCJjb2xsYXBzZVwiXVtkYXRhLXRhcmdldD1cIiMnK2UuaWQrJ1wiXScpKTtmb3IodmFyIG49W10uc2xpY2UuY2FsbChkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKEN0KSksaT0wLHI9bi5sZW5ndGg7aTxyO2krKyl7dmFyIG89bltpXSxzPUZuLmdldFNlbGVjdG9yRnJvbUVsZW1lbnQobyksYT1bXS5zbGljZS5jYWxsKGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwocykpLmZpbHRlcihmdW5jdGlvbih0KXtyZXR1cm4gdD09PWV9KTtudWxsIT09cyYmMDxhLmxlbmd0aCYmKHRoaXMuX3NlbGVjdG9yPXMsdGhpcy5fdHJpZ2dlckFycmF5LnB1c2gobykpfXRoaXMuX3BhcmVudD10aGlzLl9jb25maWcucGFyZW50P3RoaXMuX2dldFBhcmVudCgpOm51bGwsdGhpcy5fY29uZmlnLnBhcmVudHx8dGhpcy5fYWRkQXJpYUFuZENvbGxhcHNlZENsYXNzKHRoaXMuX2VsZW1lbnQsdGhpcy5fdHJpZ2dlckFycmF5KSx0aGlzLl9jb25maWcudG9nZ2xlJiZ0aGlzLnRvZ2dsZSgpfXZhciB0PWEucHJvdG90eXBlO3JldHVybiB0LnRvZ2dsZT1mdW5jdGlvbigpe3N0KHRoaXMuX2VsZW1lbnQpLmhhc0NsYXNzKGd0KT90aGlzLmhpZGUoKTp0aGlzLnNob3coKX0sdC5zaG93PWZ1bmN0aW9uKCl7dmFyIHQsZSxuPXRoaXM7aWYoIXRoaXMuX2lzVHJhbnNpdGlvbmluZyYmIXN0KHRoaXMuX2VsZW1lbnQpLmhhc0NsYXNzKGd0KSYmKHRoaXMuX3BhcmVudCYmMD09PSh0PVtdLnNsaWNlLmNhbGwodGhpcy5fcGFyZW50LnF1ZXJ5U2VsZWN0b3JBbGwoRXQpKS5maWx0ZXIoZnVuY3Rpb24odCl7cmV0dXJuIHQuZ2V0QXR0cmlidXRlKFwiZGF0YS1wYXJlbnRcIik9PT1uLl9jb25maWcucGFyZW50fSkpLmxlbmd0aCYmKHQ9bnVsbCksISh0JiYoZT1zdCh0KS5ub3QodGhpcy5fc2VsZWN0b3IpLmRhdGEobHQpKSYmZS5faXNUcmFuc2l0aW9uaW5nKSkpe3ZhciBpPXN0LkV2ZW50KGR0LlNIT1cpO2lmKHN0KHRoaXMuX2VsZW1lbnQpLnRyaWdnZXIoaSksIWkuaXNEZWZhdWx0UHJldmVudGVkKCkpe3QmJihhLl9qUXVlcnlJbnRlcmZhY2UuY2FsbChzdCh0KS5ub3QodGhpcy5fc2VsZWN0b3IpLFwiaGlkZVwiKSxlfHxzdCh0KS5kYXRhKGx0LG51bGwpKTt2YXIgcj10aGlzLl9nZXREaW1lbnNpb24oKTtzdCh0aGlzLl9lbGVtZW50KS5yZW1vdmVDbGFzcyhfdCkuYWRkQ2xhc3MobXQpLHRoaXMuX2VsZW1lbnQuc3R5bGVbcl09MCx0aGlzLl90cmlnZ2VyQXJyYXkubGVuZ3RoJiZzdCh0aGlzLl90cmlnZ2VyQXJyYXkpLnJlbW92ZUNsYXNzKHB0KS5hdHRyKFwiYXJpYS1leHBhbmRlZFwiLCEwKSx0aGlzLnNldFRyYW5zaXRpb25pbmcoITApO3ZhciBvPVwic2Nyb2xsXCIrKHJbMF0udG9VcHBlckNhc2UoKStyLnNsaWNlKDEpKSxzPUZuLmdldFRyYW5zaXRpb25EdXJhdGlvbkZyb21FbGVtZW50KHRoaXMuX2VsZW1lbnQpO3N0KHRoaXMuX2VsZW1lbnQpLm9uZShGbi5UUkFOU0lUSU9OX0VORCxmdW5jdGlvbigpe3N0KG4uX2VsZW1lbnQpLnJlbW92ZUNsYXNzKG10KS5hZGRDbGFzcyhfdCkuYWRkQ2xhc3MoZ3QpLG4uX2VsZW1lbnQuc3R5bGVbcl09XCJcIixuLnNldFRyYW5zaXRpb25pbmcoITEpLHN0KG4uX2VsZW1lbnQpLnRyaWdnZXIoZHQuU0hPV04pfSkuZW11bGF0ZVRyYW5zaXRpb25FbmQocyksdGhpcy5fZWxlbWVudC5zdHlsZVtyXT10aGlzLl9lbGVtZW50W29dK1wicHhcIn19fSx0LmhpZGU9ZnVuY3Rpb24oKXt2YXIgdD10aGlzO2lmKCF0aGlzLl9pc1RyYW5zaXRpb25pbmcmJnN0KHRoaXMuX2VsZW1lbnQpLmhhc0NsYXNzKGd0KSl7dmFyIGU9c3QuRXZlbnQoZHQuSElERSk7aWYoc3QodGhpcy5fZWxlbWVudCkudHJpZ2dlcihlKSwhZS5pc0RlZmF1bHRQcmV2ZW50ZWQoKSl7dmFyIG49dGhpcy5fZ2V0RGltZW5zaW9uKCk7dGhpcy5fZWxlbWVudC5zdHlsZVtuXT10aGlzLl9lbGVtZW50LmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpW25dK1wicHhcIixGbi5yZWZsb3codGhpcy5fZWxlbWVudCksc3QodGhpcy5fZWxlbWVudCkuYWRkQ2xhc3MobXQpLnJlbW92ZUNsYXNzKF90KS5yZW1vdmVDbGFzcyhndCk7dmFyIGk9dGhpcy5fdHJpZ2dlckFycmF5Lmxlbmd0aDtpZigwPGkpZm9yKHZhciByPTA7cjxpO3IrKyl7dmFyIG89dGhpcy5fdHJpZ2dlckFycmF5W3JdLHM9Rm4uZ2V0U2VsZWN0b3JGcm9tRWxlbWVudChvKTtpZihudWxsIT09cylzdChbXS5zbGljZS5jYWxsKGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwocykpKS5oYXNDbGFzcyhndCl8fHN0KG8pLmFkZENsYXNzKHB0KS5hdHRyKFwiYXJpYS1leHBhbmRlZFwiLCExKX10aGlzLnNldFRyYW5zaXRpb25pbmcoITApO3RoaXMuX2VsZW1lbnQuc3R5bGVbbl09XCJcIjt2YXIgYT1Gbi5nZXRUcmFuc2l0aW9uRHVyYXRpb25Gcm9tRWxlbWVudCh0aGlzLl9lbGVtZW50KTtzdCh0aGlzLl9lbGVtZW50KS5vbmUoRm4uVFJBTlNJVElPTl9FTkQsZnVuY3Rpb24oKXt0LnNldFRyYW5zaXRpb25pbmcoITEpLHN0KHQuX2VsZW1lbnQpLnJlbW92ZUNsYXNzKG10KS5hZGRDbGFzcyhfdCkudHJpZ2dlcihkdC5ISURERU4pfSkuZW11bGF0ZVRyYW5zaXRpb25FbmQoYSl9fX0sdC5zZXRUcmFuc2l0aW9uaW5nPWZ1bmN0aW9uKHQpe3RoaXMuX2lzVHJhbnNpdGlvbmluZz10fSx0LmRpc3Bvc2U9ZnVuY3Rpb24oKXtzdC5yZW1vdmVEYXRhKHRoaXMuX2VsZW1lbnQsbHQpLHRoaXMuX2NvbmZpZz1udWxsLHRoaXMuX3BhcmVudD1udWxsLHRoaXMuX2VsZW1lbnQ9bnVsbCx0aGlzLl90cmlnZ2VyQXJyYXk9bnVsbCx0aGlzLl9pc1RyYW5zaXRpb25pbmc9bnVsbH0sdC5fZ2V0Q29uZmlnPWZ1bmN0aW9uKHQpe3JldHVybih0PWwoe30sdXQsdCkpLnRvZ2dsZT1Cb29sZWFuKHQudG9nZ2xlKSxGbi50eXBlQ2hlY2tDb25maWcoYXQsdCxmdCksdH0sdC5fZ2V0RGltZW5zaW9uPWZ1bmN0aW9uKCl7cmV0dXJuIHN0KHRoaXMuX2VsZW1lbnQpLmhhc0NsYXNzKHZ0KT92dDp5dH0sdC5fZ2V0UGFyZW50PWZ1bmN0aW9uKCl7dmFyIG49dGhpcyx0PW51bGw7Rm4uaXNFbGVtZW50KHRoaXMuX2NvbmZpZy5wYXJlbnQpPyh0PXRoaXMuX2NvbmZpZy5wYXJlbnQsXCJ1bmRlZmluZWRcIiE9dHlwZW9mIHRoaXMuX2NvbmZpZy5wYXJlbnQuanF1ZXJ5JiYodD10aGlzLl9jb25maWcucGFyZW50WzBdKSk6dD1kb2N1bWVudC5xdWVyeVNlbGVjdG9yKHRoaXMuX2NvbmZpZy5wYXJlbnQpO3ZhciBlPSdbZGF0YS10b2dnbGU9XCJjb2xsYXBzZVwiXVtkYXRhLXBhcmVudD1cIicrdGhpcy5fY29uZmlnLnBhcmVudCsnXCJdJyxpPVtdLnNsaWNlLmNhbGwodC5xdWVyeVNlbGVjdG9yQWxsKGUpKTtyZXR1cm4gc3QoaSkuZWFjaChmdW5jdGlvbih0LGUpe24uX2FkZEFyaWFBbmRDb2xsYXBzZWRDbGFzcyhhLl9nZXRUYXJnZXRGcm9tRWxlbWVudChlKSxbZV0pfSksdH0sdC5fYWRkQXJpYUFuZENvbGxhcHNlZENsYXNzPWZ1bmN0aW9uKHQsZSl7aWYodCl7dmFyIG49c3QodCkuaGFzQ2xhc3MoZ3QpO2UubGVuZ3RoJiZzdChlKS50b2dnbGVDbGFzcyhwdCwhbikuYXR0cihcImFyaWEtZXhwYW5kZWRcIixuKX19LGEuX2dldFRhcmdldEZyb21FbGVtZW50PWZ1bmN0aW9uKHQpe3ZhciBlPUZuLmdldFNlbGVjdG9yRnJvbUVsZW1lbnQodCk7cmV0dXJuIGU/ZG9jdW1lbnQucXVlcnlTZWxlY3RvcihlKTpudWxsfSxhLl9qUXVlcnlJbnRlcmZhY2U9ZnVuY3Rpb24oaSl7cmV0dXJuIHRoaXMuZWFjaChmdW5jdGlvbigpe3ZhciB0PXN0KHRoaXMpLGU9dC5kYXRhKGx0KSxuPWwoe30sdXQsdC5kYXRhKCksXCJvYmplY3RcIj09dHlwZW9mIGkmJmk/aTp7fSk7aWYoIWUmJm4udG9nZ2xlJiYvc2hvd3xoaWRlLy50ZXN0KGkpJiYobi50b2dnbGU9ITEpLGV8fChlPW5ldyBhKHRoaXMsbiksdC5kYXRhKGx0LGUpKSxcInN0cmluZ1wiPT10eXBlb2YgaSl7aWYoXCJ1bmRlZmluZWRcIj09dHlwZW9mIGVbaV0pdGhyb3cgbmV3IFR5cGVFcnJvcignTm8gbWV0aG9kIG5hbWVkIFwiJytpKydcIicpO2VbaV0oKX19KX0scyhhLG51bGwsW3trZXk6XCJWRVJTSU9OXCIsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuXCI0LjEuM1wifX0se2tleTpcIkRlZmF1bHRcIixnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdXR9fV0pLGF9KCksc3QoZG9jdW1lbnQpLm9uKGR0LkNMSUNLX0RBVEFfQVBJLEN0LGZ1bmN0aW9uKHQpe1wiQVwiPT09dC5jdXJyZW50VGFyZ2V0LnRhZ05hbWUmJnQucHJldmVudERlZmF1bHQoKTt2YXIgbj1zdCh0aGlzKSxlPUZuLmdldFNlbGVjdG9yRnJvbUVsZW1lbnQodGhpcyksaT1bXS5zbGljZS5jYWxsKGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoZSkpO3N0KGkpLmVhY2goZnVuY3Rpb24oKXt2YXIgdD1zdCh0aGlzKSxlPXQuZGF0YShsdCk/XCJ0b2dnbGVcIjpuLmRhdGEoKTtUdC5falF1ZXJ5SW50ZXJmYWNlLmNhbGwodCxlKX0pfSksc3QuZm5bYXRdPVR0Ll9qUXVlcnlJbnRlcmZhY2Usc3QuZm5bYXRdLkNvbnN0cnVjdG9yPVR0LHN0LmZuW2F0XS5ub0NvbmZsaWN0PWZ1bmN0aW9uKCl7cmV0dXJuIHN0LmZuW2F0XT1odCxUdC5falF1ZXJ5SW50ZXJmYWNlfSxUdCksVm49KFN0PVwiZHJvcGRvd25cIixBdD1cIi5cIisoSXQ9XCJicy5kcm9wZG93blwiKSxEdD1cIi5kYXRhLWFwaVwiLHd0PShidD1lKS5mbltTdF0sTnQ9bmV3IFJlZ0V4cChcIjM4fDQwfDI3XCIpLE90PXtISURFOlwiaGlkZVwiK0F0LEhJRERFTjpcImhpZGRlblwiK0F0LFNIT1c6XCJzaG93XCIrQXQsU0hPV046XCJzaG93blwiK0F0LENMSUNLOlwiY2xpY2tcIitBdCxDTElDS19EQVRBX0FQSTpcImNsaWNrXCIrQXQrRHQsS0VZRE9XTl9EQVRBX0FQSTpcImtleWRvd25cIitBdCtEdCxLRVlVUF9EQVRBX0FQSTpcImtleXVwXCIrQXQrRHR9LGt0PVwiZGlzYWJsZWRcIixQdD1cInNob3dcIixqdD1cImRyb3B1cFwiLEh0PVwiZHJvcHJpZ2h0XCIsTHQ9XCJkcm9wbGVmdFwiLFJ0PVwiZHJvcGRvd24tbWVudS1yaWdodFwiLHh0PVwicG9zaXRpb24tc3RhdGljXCIsV3Q9J1tkYXRhLXRvZ2dsZT1cImRyb3Bkb3duXCJdJyxVdD1cIi5kcm9wZG93biBmb3JtXCIscXQ9XCIuZHJvcGRvd24tbWVudVwiLEZ0PVwiLm5hdmJhci1uYXZcIixLdD1cIi5kcm9wZG93bi1tZW51IC5kcm9wZG93bi1pdGVtOm5vdCguZGlzYWJsZWQpOm5vdCg6ZGlzYWJsZWQpXCIsTXQ9XCJ0b3Atc3RhcnRcIixRdD1cInRvcC1lbmRcIixCdD1cImJvdHRvbS1zdGFydFwiLFZ0PVwiYm90dG9tLWVuZFwiLFl0PVwicmlnaHQtc3RhcnRcIix6dD1cImxlZnQtc3RhcnRcIixKdD17b2Zmc2V0OjAsZmxpcDohMCxib3VuZGFyeTpcInNjcm9sbFBhcmVudFwiLHJlZmVyZW5jZTpcInRvZ2dsZVwiLGRpc3BsYXk6XCJkeW5hbWljXCJ9LFp0PXtvZmZzZXQ6XCIobnVtYmVyfHN0cmluZ3xmdW5jdGlvbilcIixmbGlwOlwiYm9vbGVhblwiLGJvdW5kYXJ5OlwiKHN0cmluZ3xlbGVtZW50KVwiLHJlZmVyZW5jZTpcIihzdHJpbmd8ZWxlbWVudClcIixkaXNwbGF5Olwic3RyaW5nXCJ9LEd0PWZ1bmN0aW9uKCl7ZnVuY3Rpb24gYyh0LGUpe3RoaXMuX2VsZW1lbnQ9dCx0aGlzLl9wb3BwZXI9bnVsbCx0aGlzLl9jb25maWc9dGhpcy5fZ2V0Q29uZmlnKGUpLHRoaXMuX21lbnU9dGhpcy5fZ2V0TWVudUVsZW1lbnQoKSx0aGlzLl9pbk5hdmJhcj10aGlzLl9kZXRlY3ROYXZiYXIoKSx0aGlzLl9hZGRFdmVudExpc3RlbmVycygpfXZhciB0PWMucHJvdG90eXBlO3JldHVybiB0LnRvZ2dsZT1mdW5jdGlvbigpe2lmKCF0aGlzLl9lbGVtZW50LmRpc2FibGVkJiYhYnQodGhpcy5fZWxlbWVudCkuaGFzQ2xhc3Moa3QpKXt2YXIgdD1jLl9nZXRQYXJlbnRGcm9tRWxlbWVudCh0aGlzLl9lbGVtZW50KSxlPWJ0KHRoaXMuX21lbnUpLmhhc0NsYXNzKFB0KTtpZihjLl9jbGVhck1lbnVzKCksIWUpe3ZhciBuPXtyZWxhdGVkVGFyZ2V0OnRoaXMuX2VsZW1lbnR9LGk9YnQuRXZlbnQoT3QuU0hPVyxuKTtpZihidCh0KS50cmlnZ2VyKGkpLCFpLmlzRGVmYXVsdFByZXZlbnRlZCgpKXtpZighdGhpcy5faW5OYXZiYXIpe2lmKFwidW5kZWZpbmVkXCI9PXR5cGVvZiBoKXRocm93IG5ldyBUeXBlRXJyb3IoXCJCb290c3RyYXAgZHJvcGRvd24gcmVxdWlyZSBQb3BwZXIuanMgKGh0dHBzOi8vcG9wcGVyLmpzLm9yZylcIik7dmFyIHI9dGhpcy5fZWxlbWVudDtcInBhcmVudFwiPT09dGhpcy5fY29uZmlnLnJlZmVyZW5jZT9yPXQ6Rm4uaXNFbGVtZW50KHRoaXMuX2NvbmZpZy5yZWZlcmVuY2UpJiYocj10aGlzLl9jb25maWcucmVmZXJlbmNlLFwidW5kZWZpbmVkXCIhPXR5cGVvZiB0aGlzLl9jb25maWcucmVmZXJlbmNlLmpxdWVyeSYmKHI9dGhpcy5fY29uZmlnLnJlZmVyZW5jZVswXSkpLFwic2Nyb2xsUGFyZW50XCIhPT10aGlzLl9jb25maWcuYm91bmRhcnkmJmJ0KHQpLmFkZENsYXNzKHh0KSx0aGlzLl9wb3BwZXI9bmV3IGgocix0aGlzLl9tZW51LHRoaXMuX2dldFBvcHBlckNvbmZpZygpKX1cIm9udG91Y2hzdGFydFwiaW4gZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50JiYwPT09YnQodCkuY2xvc2VzdChGdCkubGVuZ3RoJiZidChkb2N1bWVudC5ib2R5KS5jaGlsZHJlbigpLm9uKFwibW91c2VvdmVyXCIsbnVsbCxidC5ub29wKSx0aGlzLl9lbGVtZW50LmZvY3VzKCksdGhpcy5fZWxlbWVudC5zZXRBdHRyaWJ1dGUoXCJhcmlhLWV4cGFuZGVkXCIsITApLGJ0KHRoaXMuX21lbnUpLnRvZ2dsZUNsYXNzKFB0KSxidCh0KS50b2dnbGVDbGFzcyhQdCkudHJpZ2dlcihidC5FdmVudChPdC5TSE9XTixuKSl9fX19LHQuZGlzcG9zZT1mdW5jdGlvbigpe2J0LnJlbW92ZURhdGEodGhpcy5fZWxlbWVudCxJdCksYnQodGhpcy5fZWxlbWVudCkub2ZmKEF0KSx0aGlzLl9lbGVtZW50PW51bGwsKHRoaXMuX21lbnU9bnVsbCkhPT10aGlzLl9wb3BwZXImJih0aGlzLl9wb3BwZXIuZGVzdHJveSgpLHRoaXMuX3BvcHBlcj1udWxsKX0sdC51cGRhdGU9ZnVuY3Rpb24oKXt0aGlzLl9pbk5hdmJhcj10aGlzLl9kZXRlY3ROYXZiYXIoKSxudWxsIT09dGhpcy5fcG9wcGVyJiZ0aGlzLl9wb3BwZXIuc2NoZWR1bGVVcGRhdGUoKX0sdC5fYWRkRXZlbnRMaXN0ZW5lcnM9ZnVuY3Rpb24oKXt2YXIgZT10aGlzO2J0KHRoaXMuX2VsZW1lbnQpLm9uKE90LkNMSUNLLGZ1bmN0aW9uKHQpe3QucHJldmVudERlZmF1bHQoKSx0LnN0b3BQcm9wYWdhdGlvbigpLGUudG9nZ2xlKCl9KX0sdC5fZ2V0Q29uZmlnPWZ1bmN0aW9uKHQpe3JldHVybiB0PWwoe30sdGhpcy5jb25zdHJ1Y3Rvci5EZWZhdWx0LGJ0KHRoaXMuX2VsZW1lbnQpLmRhdGEoKSx0KSxGbi50eXBlQ2hlY2tDb25maWcoU3QsdCx0aGlzLmNvbnN0cnVjdG9yLkRlZmF1bHRUeXBlKSx0fSx0Ll9nZXRNZW51RWxlbWVudD1mdW5jdGlvbigpe2lmKCF0aGlzLl9tZW51KXt2YXIgdD1jLl9nZXRQYXJlbnRGcm9tRWxlbWVudCh0aGlzLl9lbGVtZW50KTt0JiYodGhpcy5fbWVudT10LnF1ZXJ5U2VsZWN0b3IocXQpKX1yZXR1cm4gdGhpcy5fbWVudX0sdC5fZ2V0UGxhY2VtZW50PWZ1bmN0aW9uKCl7dmFyIHQ9YnQodGhpcy5fZWxlbWVudC5wYXJlbnROb2RlKSxlPUJ0O3JldHVybiB0Lmhhc0NsYXNzKGp0KT8oZT1NdCxidCh0aGlzLl9tZW51KS5oYXNDbGFzcyhSdCkmJihlPVF0KSk6dC5oYXNDbGFzcyhIdCk/ZT1ZdDp0Lmhhc0NsYXNzKEx0KT9lPXp0OmJ0KHRoaXMuX21lbnUpLmhhc0NsYXNzKFJ0KSYmKGU9VnQpLGV9LHQuX2RldGVjdE5hdmJhcj1mdW5jdGlvbigpe3JldHVybiAwPGJ0KHRoaXMuX2VsZW1lbnQpLmNsb3Nlc3QoXCIubmF2YmFyXCIpLmxlbmd0aH0sdC5fZ2V0UG9wcGVyQ29uZmlnPWZ1bmN0aW9uKCl7dmFyIGU9dGhpcyx0PXt9O1wiZnVuY3Rpb25cIj09dHlwZW9mIHRoaXMuX2NvbmZpZy5vZmZzZXQ/dC5mbj1mdW5jdGlvbih0KXtyZXR1cm4gdC5vZmZzZXRzPWwoe30sdC5vZmZzZXRzLGUuX2NvbmZpZy5vZmZzZXQodC5vZmZzZXRzKXx8e30pLHR9OnQub2Zmc2V0PXRoaXMuX2NvbmZpZy5vZmZzZXQ7dmFyIG49e3BsYWNlbWVudDp0aGlzLl9nZXRQbGFjZW1lbnQoKSxtb2RpZmllcnM6e29mZnNldDp0LGZsaXA6e2VuYWJsZWQ6dGhpcy5fY29uZmlnLmZsaXB9LHByZXZlbnRPdmVyZmxvdzp7Ym91bmRhcmllc0VsZW1lbnQ6dGhpcy5fY29uZmlnLmJvdW5kYXJ5fX19O3JldHVyblwic3RhdGljXCI9PT10aGlzLl9jb25maWcuZGlzcGxheSYmKG4ubW9kaWZpZXJzLmFwcGx5U3R5bGU9e2VuYWJsZWQ6ITF9KSxufSxjLl9qUXVlcnlJbnRlcmZhY2U9ZnVuY3Rpb24oZSl7cmV0dXJuIHRoaXMuZWFjaChmdW5jdGlvbigpe3ZhciB0PWJ0KHRoaXMpLmRhdGEoSXQpO2lmKHR8fCh0PW5ldyBjKHRoaXMsXCJvYmplY3RcIj09dHlwZW9mIGU/ZTpudWxsKSxidCh0aGlzKS5kYXRhKEl0LHQpKSxcInN0cmluZ1wiPT10eXBlb2YgZSl7aWYoXCJ1bmRlZmluZWRcIj09dHlwZW9mIHRbZV0pdGhyb3cgbmV3IFR5cGVFcnJvcignTm8gbWV0aG9kIG5hbWVkIFwiJytlKydcIicpO3RbZV0oKX19KX0sYy5fY2xlYXJNZW51cz1mdW5jdGlvbih0KXtpZighdHx8MyE9PXQud2hpY2gmJihcImtleXVwXCIhPT10LnR5cGV8fDk9PT10LndoaWNoKSlmb3IodmFyIGU9W10uc2xpY2UuY2FsbChkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKFd0KSksbj0wLGk9ZS5sZW5ndGg7bjxpO24rKyl7dmFyIHI9Yy5fZ2V0UGFyZW50RnJvbUVsZW1lbnQoZVtuXSksbz1idChlW25dKS5kYXRhKEl0KSxzPXtyZWxhdGVkVGFyZ2V0OmVbbl19O2lmKHQmJlwiY2xpY2tcIj09PXQudHlwZSYmKHMuY2xpY2tFdmVudD10KSxvKXt2YXIgYT1vLl9tZW51O2lmKGJ0KHIpLmhhc0NsYXNzKFB0KSYmISh0JiYoXCJjbGlja1wiPT09dC50eXBlJiYvaW5wdXR8dGV4dGFyZWEvaS50ZXN0KHQudGFyZ2V0LnRhZ05hbWUpfHxcImtleXVwXCI9PT10LnR5cGUmJjk9PT10LndoaWNoKSYmYnQuY29udGFpbnMocix0LnRhcmdldCkpKXt2YXIgbD1idC5FdmVudChPdC5ISURFLHMpO2J0KHIpLnRyaWdnZXIobCksbC5pc0RlZmF1bHRQcmV2ZW50ZWQoKXx8KFwib250b3VjaHN0YXJ0XCJpbiBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQmJmJ0KGRvY3VtZW50LmJvZHkpLmNoaWxkcmVuKCkub2ZmKFwibW91c2VvdmVyXCIsbnVsbCxidC5ub29wKSxlW25dLnNldEF0dHJpYnV0ZShcImFyaWEtZXhwYW5kZWRcIixcImZhbHNlXCIpLGJ0KGEpLnJlbW92ZUNsYXNzKFB0KSxidChyKS5yZW1vdmVDbGFzcyhQdCkudHJpZ2dlcihidC5FdmVudChPdC5ISURERU4scykpKX19fX0sYy5fZ2V0UGFyZW50RnJvbUVsZW1lbnQ9ZnVuY3Rpb24odCl7dmFyIGUsbj1Gbi5nZXRTZWxlY3RvckZyb21FbGVtZW50KHQpO3JldHVybiBuJiYoZT1kb2N1bWVudC5xdWVyeVNlbGVjdG9yKG4pKSxlfHx0LnBhcmVudE5vZGV9LGMuX2RhdGFBcGlLZXlkb3duSGFuZGxlcj1mdW5jdGlvbih0KXtpZigoL2lucHV0fHRleHRhcmVhL2kudGVzdCh0LnRhcmdldC50YWdOYW1lKT8hKDMyPT09dC53aGljaHx8MjchPT10LndoaWNoJiYoNDAhPT10LndoaWNoJiYzOCE9PXQud2hpY2h8fGJ0KHQudGFyZ2V0KS5jbG9zZXN0KHF0KS5sZW5ndGgpKTpOdC50ZXN0KHQud2hpY2gpKSYmKHQucHJldmVudERlZmF1bHQoKSx0LnN0b3BQcm9wYWdhdGlvbigpLCF0aGlzLmRpc2FibGVkJiYhYnQodGhpcykuaGFzQ2xhc3Moa3QpKSl7dmFyIGU9Yy5fZ2V0UGFyZW50RnJvbUVsZW1lbnQodGhpcyksbj1idChlKS5oYXNDbGFzcyhQdCk7aWYoKG58fDI3PT09dC53aGljaCYmMzI9PT10LndoaWNoKSYmKCFufHwyNyE9PXQud2hpY2gmJjMyIT09dC53aGljaCkpe3ZhciBpPVtdLnNsaWNlLmNhbGwoZS5xdWVyeVNlbGVjdG9yQWxsKEt0KSk7aWYoMCE9PWkubGVuZ3RoKXt2YXIgcj1pLmluZGV4T2YodC50YXJnZXQpOzM4PT09dC53aGljaCYmMDxyJiZyLS0sNDA9PT10LndoaWNoJiZyPGkubGVuZ3RoLTEmJnIrKyxyPDAmJihyPTApLGlbcl0uZm9jdXMoKX19ZWxzZXtpZigyNz09PXQud2hpY2gpe3ZhciBvPWUucXVlcnlTZWxlY3RvcihXdCk7YnQobykudHJpZ2dlcihcImZvY3VzXCIpfWJ0KHRoaXMpLnRyaWdnZXIoXCJjbGlja1wiKX19fSxzKGMsbnVsbCxbe2tleTpcIlZFUlNJT05cIixnZXQ6ZnVuY3Rpb24oKXtyZXR1cm5cIjQuMS4zXCJ9fSx7a2V5OlwiRGVmYXVsdFwiLGdldDpmdW5jdGlvbigpe3JldHVybiBKdH19LHtrZXk6XCJEZWZhdWx0VHlwZVwiLGdldDpmdW5jdGlvbigpe3JldHVybiBadH19XSksY30oKSxidChkb2N1bWVudCkub24oT3QuS0VZRE9XTl9EQVRBX0FQSSxXdCxHdC5fZGF0YUFwaUtleWRvd25IYW5kbGVyKS5vbihPdC5LRVlET1dOX0RBVEFfQVBJLHF0LEd0Ll9kYXRhQXBpS2V5ZG93bkhhbmRsZXIpLm9uKE90LkNMSUNLX0RBVEFfQVBJK1wiIFwiK090LktFWVVQX0RBVEFfQVBJLEd0Ll9jbGVhck1lbnVzKS5vbihPdC5DTElDS19EQVRBX0FQSSxXdCxmdW5jdGlvbih0KXt0LnByZXZlbnREZWZhdWx0KCksdC5zdG9wUHJvcGFnYXRpb24oKSxHdC5falF1ZXJ5SW50ZXJmYWNlLmNhbGwoYnQodGhpcyksXCJ0b2dnbGVcIil9KS5vbihPdC5DTElDS19EQVRBX0FQSSxVdCxmdW5jdGlvbih0KXt0LnN0b3BQcm9wYWdhdGlvbigpfSksYnQuZm5bU3RdPUd0Ll9qUXVlcnlJbnRlcmZhY2UsYnQuZm5bU3RdLkNvbnN0cnVjdG9yPUd0LGJ0LmZuW1N0XS5ub0NvbmZsaWN0PWZ1bmN0aW9uKCl7cmV0dXJuIGJ0LmZuW1N0XT13dCxHdC5falF1ZXJ5SW50ZXJmYWNlfSxHdCksWW49KFh0PVwibW9kYWxcIixlZT1cIi5cIisodGU9XCJicy5tb2RhbFwiKSxuZT0oJHQ9ZSkuZm5bWHRdLGllPXtiYWNrZHJvcDohMCxrZXlib2FyZDohMCxmb2N1czohMCxzaG93OiEwfSxyZT17YmFja2Ryb3A6XCIoYm9vbGVhbnxzdHJpbmcpXCIsa2V5Ym9hcmQ6XCJib29sZWFuXCIsZm9jdXM6XCJib29sZWFuXCIsc2hvdzpcImJvb2xlYW5cIn0sb2U9e0hJREU6XCJoaWRlXCIrZWUsSElEREVOOlwiaGlkZGVuXCIrZWUsU0hPVzpcInNob3dcIitlZSxTSE9XTjpcInNob3duXCIrZWUsRk9DVVNJTjpcImZvY3VzaW5cIitlZSxSRVNJWkU6XCJyZXNpemVcIitlZSxDTElDS19ESVNNSVNTOlwiY2xpY2suZGlzbWlzc1wiK2VlLEtFWURPV05fRElTTUlTUzpcImtleWRvd24uZGlzbWlzc1wiK2VlLE1PVVNFVVBfRElTTUlTUzpcIm1vdXNldXAuZGlzbWlzc1wiK2VlLE1PVVNFRE9XTl9ESVNNSVNTOlwibW91c2Vkb3duLmRpc21pc3NcIitlZSxDTElDS19EQVRBX0FQSTpcImNsaWNrXCIrZWUrXCIuZGF0YS1hcGlcIn0sc2U9XCJtb2RhbC1zY3JvbGxiYXItbWVhc3VyZVwiLGFlPVwibW9kYWwtYmFja2Ryb3BcIixsZT1cIm1vZGFsLW9wZW5cIixjZT1cImZhZGVcIixoZT1cInNob3dcIix1ZT1cIi5tb2RhbC1kaWFsb2dcIixmZT0nW2RhdGEtdG9nZ2xlPVwibW9kYWxcIl0nLGRlPSdbZGF0YS1kaXNtaXNzPVwibW9kYWxcIl0nLGdlPVwiLmZpeGVkLXRvcCwgLmZpeGVkLWJvdHRvbSwgLmlzLWZpeGVkLCAuc3RpY2t5LXRvcFwiLF9lPVwiLnN0aWNreS10b3BcIixtZT1mdW5jdGlvbigpe2Z1bmN0aW9uIHIodCxlKXt0aGlzLl9jb25maWc9dGhpcy5fZ2V0Q29uZmlnKGUpLHRoaXMuX2VsZW1lbnQ9dCx0aGlzLl9kaWFsb2c9dC5xdWVyeVNlbGVjdG9yKHVlKSx0aGlzLl9iYWNrZHJvcD1udWxsLHRoaXMuX2lzU2hvd249ITEsdGhpcy5faXNCb2R5T3ZlcmZsb3dpbmc9ITEsdGhpcy5faWdub3JlQmFja2Ryb3BDbGljaz0hMSx0aGlzLl9zY3JvbGxiYXJXaWR0aD0wfXZhciB0PXIucHJvdG90eXBlO3JldHVybiB0LnRvZ2dsZT1mdW5jdGlvbih0KXtyZXR1cm4gdGhpcy5faXNTaG93bj90aGlzLmhpZGUoKTp0aGlzLnNob3codCl9LHQuc2hvdz1mdW5jdGlvbih0KXt2YXIgZT10aGlzO2lmKCF0aGlzLl9pc1RyYW5zaXRpb25pbmcmJiF0aGlzLl9pc1Nob3duKXskdCh0aGlzLl9lbGVtZW50KS5oYXNDbGFzcyhjZSkmJih0aGlzLl9pc1RyYW5zaXRpb25pbmc9ITApO3ZhciBuPSR0LkV2ZW50KG9lLlNIT1cse3JlbGF0ZWRUYXJnZXQ6dH0pOyR0KHRoaXMuX2VsZW1lbnQpLnRyaWdnZXIobiksdGhpcy5faXNTaG93bnx8bi5pc0RlZmF1bHRQcmV2ZW50ZWQoKXx8KHRoaXMuX2lzU2hvd249ITAsdGhpcy5fY2hlY2tTY3JvbGxiYXIoKSx0aGlzLl9zZXRTY3JvbGxiYXIoKSx0aGlzLl9hZGp1c3REaWFsb2coKSwkdChkb2N1bWVudC5ib2R5KS5hZGRDbGFzcyhsZSksdGhpcy5fc2V0RXNjYXBlRXZlbnQoKSx0aGlzLl9zZXRSZXNpemVFdmVudCgpLCR0KHRoaXMuX2VsZW1lbnQpLm9uKG9lLkNMSUNLX0RJU01JU1MsZGUsZnVuY3Rpb24odCl7cmV0dXJuIGUuaGlkZSh0KX0pLCR0KHRoaXMuX2RpYWxvZykub24ob2UuTU9VU0VET1dOX0RJU01JU1MsZnVuY3Rpb24oKXskdChlLl9lbGVtZW50KS5vbmUob2UuTU9VU0VVUF9ESVNNSVNTLGZ1bmN0aW9uKHQpeyR0KHQudGFyZ2V0KS5pcyhlLl9lbGVtZW50KSYmKGUuX2lnbm9yZUJhY2tkcm9wQ2xpY2s9ITApfSl9KSx0aGlzLl9zaG93QmFja2Ryb3AoZnVuY3Rpb24oKXtyZXR1cm4gZS5fc2hvd0VsZW1lbnQodCl9KSl9fSx0LmhpZGU9ZnVuY3Rpb24odCl7dmFyIGU9dGhpcztpZih0JiZ0LnByZXZlbnREZWZhdWx0KCksIXRoaXMuX2lzVHJhbnNpdGlvbmluZyYmdGhpcy5faXNTaG93bil7dmFyIG49JHQuRXZlbnQob2UuSElERSk7aWYoJHQodGhpcy5fZWxlbWVudCkudHJpZ2dlcihuKSx0aGlzLl9pc1Nob3duJiYhbi5pc0RlZmF1bHRQcmV2ZW50ZWQoKSl7dGhpcy5faXNTaG93bj0hMTt2YXIgaT0kdCh0aGlzLl9lbGVtZW50KS5oYXNDbGFzcyhjZSk7aWYoaSYmKHRoaXMuX2lzVHJhbnNpdGlvbmluZz0hMCksdGhpcy5fc2V0RXNjYXBlRXZlbnQoKSx0aGlzLl9zZXRSZXNpemVFdmVudCgpLCR0KGRvY3VtZW50KS5vZmYob2UuRk9DVVNJTiksJHQodGhpcy5fZWxlbWVudCkucmVtb3ZlQ2xhc3MoaGUpLCR0KHRoaXMuX2VsZW1lbnQpLm9mZihvZS5DTElDS19ESVNNSVNTKSwkdCh0aGlzLl9kaWFsb2cpLm9mZihvZS5NT1VTRURPV05fRElTTUlTUyksaSl7dmFyIHI9Rm4uZ2V0VHJhbnNpdGlvbkR1cmF0aW9uRnJvbUVsZW1lbnQodGhpcy5fZWxlbWVudCk7JHQodGhpcy5fZWxlbWVudCkub25lKEZuLlRSQU5TSVRJT05fRU5ELGZ1bmN0aW9uKHQpe3JldHVybiBlLl9oaWRlTW9kYWwodCl9KS5lbXVsYXRlVHJhbnNpdGlvbkVuZChyKX1lbHNlIHRoaXMuX2hpZGVNb2RhbCgpfX19LHQuZGlzcG9zZT1mdW5jdGlvbigpeyR0LnJlbW92ZURhdGEodGhpcy5fZWxlbWVudCx0ZSksJHQod2luZG93LGRvY3VtZW50LHRoaXMuX2VsZW1lbnQsdGhpcy5fYmFja2Ryb3ApLm9mZihlZSksdGhpcy5fY29uZmlnPW51bGwsdGhpcy5fZWxlbWVudD1udWxsLHRoaXMuX2RpYWxvZz1udWxsLHRoaXMuX2JhY2tkcm9wPW51bGwsdGhpcy5faXNTaG93bj1udWxsLHRoaXMuX2lzQm9keU92ZXJmbG93aW5nPW51bGwsdGhpcy5faWdub3JlQmFja2Ryb3BDbGljaz1udWxsLHRoaXMuX3Njcm9sbGJhcldpZHRoPW51bGx9LHQuaGFuZGxlVXBkYXRlPWZ1bmN0aW9uKCl7dGhpcy5fYWRqdXN0RGlhbG9nKCl9LHQuX2dldENvbmZpZz1mdW5jdGlvbih0KXtyZXR1cm4gdD1sKHt9LGllLHQpLEZuLnR5cGVDaGVja0NvbmZpZyhYdCx0LHJlKSx0fSx0Ll9zaG93RWxlbWVudD1mdW5jdGlvbih0KXt2YXIgZT10aGlzLG49JHQodGhpcy5fZWxlbWVudCkuaGFzQ2xhc3MoY2UpO3RoaXMuX2VsZW1lbnQucGFyZW50Tm9kZSYmdGhpcy5fZWxlbWVudC5wYXJlbnROb2RlLm5vZGVUeXBlPT09Tm9kZS5FTEVNRU5UX05PREV8fGRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQodGhpcy5fZWxlbWVudCksdGhpcy5fZWxlbWVudC5zdHlsZS5kaXNwbGF5PVwiYmxvY2tcIix0aGlzLl9lbGVtZW50LnJlbW92ZUF0dHJpYnV0ZShcImFyaWEtaGlkZGVuXCIpLHRoaXMuX2VsZW1lbnQuc2Nyb2xsVG9wPTAsbiYmRm4ucmVmbG93KHRoaXMuX2VsZW1lbnQpLCR0KHRoaXMuX2VsZW1lbnQpLmFkZENsYXNzKGhlKSx0aGlzLl9jb25maWcuZm9jdXMmJnRoaXMuX2VuZm9yY2VGb2N1cygpO3ZhciBpPSR0LkV2ZW50KG9lLlNIT1dOLHtyZWxhdGVkVGFyZ2V0OnR9KSxyPWZ1bmN0aW9uKCl7ZS5fY29uZmlnLmZvY3VzJiZlLl9lbGVtZW50LmZvY3VzKCksZS5faXNUcmFuc2l0aW9uaW5nPSExLCR0KGUuX2VsZW1lbnQpLnRyaWdnZXIoaSl9O2lmKG4pe3ZhciBvPUZuLmdldFRyYW5zaXRpb25EdXJhdGlvbkZyb21FbGVtZW50KHRoaXMuX2VsZW1lbnQpOyR0KHRoaXMuX2RpYWxvZykub25lKEZuLlRSQU5TSVRJT05fRU5ELHIpLmVtdWxhdGVUcmFuc2l0aW9uRW5kKG8pfWVsc2UgcigpfSx0Ll9lbmZvcmNlRm9jdXM9ZnVuY3Rpb24oKXt2YXIgZT10aGlzOyR0KGRvY3VtZW50KS5vZmYob2UuRk9DVVNJTikub24ob2UuRk9DVVNJTixmdW5jdGlvbih0KXtkb2N1bWVudCE9PXQudGFyZ2V0JiZlLl9lbGVtZW50IT09dC50YXJnZXQmJjA9PT0kdChlLl9lbGVtZW50KS5oYXModC50YXJnZXQpLmxlbmd0aCYmZS5fZWxlbWVudC5mb2N1cygpfSl9LHQuX3NldEVzY2FwZUV2ZW50PWZ1bmN0aW9uKCl7dmFyIGU9dGhpczt0aGlzLl9pc1Nob3duJiZ0aGlzLl9jb25maWcua2V5Ym9hcmQ/JHQodGhpcy5fZWxlbWVudCkub24ob2UuS0VZRE9XTl9ESVNNSVNTLGZ1bmN0aW9uKHQpezI3PT09dC53aGljaCYmKHQucHJldmVudERlZmF1bHQoKSxlLmhpZGUoKSl9KTp0aGlzLl9pc1Nob3dufHwkdCh0aGlzLl9lbGVtZW50KS5vZmYob2UuS0VZRE9XTl9ESVNNSVNTKX0sdC5fc2V0UmVzaXplRXZlbnQ9ZnVuY3Rpb24oKXt2YXIgZT10aGlzO3RoaXMuX2lzU2hvd24/JHQod2luZG93KS5vbihvZS5SRVNJWkUsZnVuY3Rpb24odCl7cmV0dXJuIGUuaGFuZGxlVXBkYXRlKHQpfSk6JHQod2luZG93KS5vZmYob2UuUkVTSVpFKX0sdC5faGlkZU1vZGFsPWZ1bmN0aW9uKCl7dmFyIHQ9dGhpczt0aGlzLl9lbGVtZW50LnN0eWxlLmRpc3BsYXk9XCJub25lXCIsdGhpcy5fZWxlbWVudC5zZXRBdHRyaWJ1dGUoXCJhcmlhLWhpZGRlblwiLCEwKSx0aGlzLl9pc1RyYW5zaXRpb25pbmc9ITEsdGhpcy5fc2hvd0JhY2tkcm9wKGZ1bmN0aW9uKCl7JHQoZG9jdW1lbnQuYm9keSkucmVtb3ZlQ2xhc3MobGUpLHQuX3Jlc2V0QWRqdXN0bWVudHMoKSx0Ll9yZXNldFNjcm9sbGJhcigpLCR0KHQuX2VsZW1lbnQpLnRyaWdnZXIob2UuSElEREVOKX0pfSx0Ll9yZW1vdmVCYWNrZHJvcD1mdW5jdGlvbigpe3RoaXMuX2JhY2tkcm9wJiYoJHQodGhpcy5fYmFja2Ryb3ApLnJlbW92ZSgpLHRoaXMuX2JhY2tkcm9wPW51bGwpfSx0Ll9zaG93QmFja2Ryb3A9ZnVuY3Rpb24odCl7dmFyIGU9dGhpcyxuPSR0KHRoaXMuX2VsZW1lbnQpLmhhc0NsYXNzKGNlKT9jZTpcIlwiO2lmKHRoaXMuX2lzU2hvd24mJnRoaXMuX2NvbmZpZy5iYWNrZHJvcCl7aWYodGhpcy5fYmFja2Ryb3A9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKSx0aGlzLl9iYWNrZHJvcC5jbGFzc05hbWU9YWUsbiYmdGhpcy5fYmFja2Ryb3AuY2xhc3NMaXN0LmFkZChuKSwkdCh0aGlzLl9iYWNrZHJvcCkuYXBwZW5kVG8oZG9jdW1lbnQuYm9keSksJHQodGhpcy5fZWxlbWVudCkub24ob2UuQ0xJQ0tfRElTTUlTUyxmdW5jdGlvbih0KXtlLl9pZ25vcmVCYWNrZHJvcENsaWNrP2UuX2lnbm9yZUJhY2tkcm9wQ2xpY2s9ITE6dC50YXJnZXQ9PT10LmN1cnJlbnRUYXJnZXQmJihcInN0YXRpY1wiPT09ZS5fY29uZmlnLmJhY2tkcm9wP2UuX2VsZW1lbnQuZm9jdXMoKTplLmhpZGUoKSl9KSxuJiZGbi5yZWZsb3codGhpcy5fYmFja2Ryb3ApLCR0KHRoaXMuX2JhY2tkcm9wKS5hZGRDbGFzcyhoZSksIXQpcmV0dXJuO2lmKCFuKXJldHVybiB2b2lkIHQoKTt2YXIgaT1Gbi5nZXRUcmFuc2l0aW9uRHVyYXRpb25Gcm9tRWxlbWVudCh0aGlzLl9iYWNrZHJvcCk7JHQodGhpcy5fYmFja2Ryb3ApLm9uZShGbi5UUkFOU0lUSU9OX0VORCx0KS5lbXVsYXRlVHJhbnNpdGlvbkVuZChpKX1lbHNlIGlmKCF0aGlzLl9pc1Nob3duJiZ0aGlzLl9iYWNrZHJvcCl7JHQodGhpcy5fYmFja2Ryb3ApLnJlbW92ZUNsYXNzKGhlKTt2YXIgcj1mdW5jdGlvbigpe2UuX3JlbW92ZUJhY2tkcm9wKCksdCYmdCgpfTtpZigkdCh0aGlzLl9lbGVtZW50KS5oYXNDbGFzcyhjZSkpe3ZhciBvPUZuLmdldFRyYW5zaXRpb25EdXJhdGlvbkZyb21FbGVtZW50KHRoaXMuX2JhY2tkcm9wKTskdCh0aGlzLl9iYWNrZHJvcCkub25lKEZuLlRSQU5TSVRJT05fRU5ELHIpLmVtdWxhdGVUcmFuc2l0aW9uRW5kKG8pfWVsc2UgcigpfWVsc2UgdCYmdCgpfSx0Ll9hZGp1c3REaWFsb2c9ZnVuY3Rpb24oKXt2YXIgdD10aGlzLl9lbGVtZW50LnNjcm9sbEhlaWdodD5kb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuY2xpZW50SGVpZ2h0OyF0aGlzLl9pc0JvZHlPdmVyZmxvd2luZyYmdCYmKHRoaXMuX2VsZW1lbnQuc3R5bGUucGFkZGluZ0xlZnQ9dGhpcy5fc2Nyb2xsYmFyV2lkdGgrXCJweFwiKSx0aGlzLl9pc0JvZHlPdmVyZmxvd2luZyYmIXQmJih0aGlzLl9lbGVtZW50LnN0eWxlLnBhZGRpbmdSaWdodD10aGlzLl9zY3JvbGxiYXJXaWR0aCtcInB4XCIpfSx0Ll9yZXNldEFkanVzdG1lbnRzPWZ1bmN0aW9uKCl7dGhpcy5fZWxlbWVudC5zdHlsZS5wYWRkaW5nTGVmdD1cIlwiLHRoaXMuX2VsZW1lbnQuc3R5bGUucGFkZGluZ1JpZ2h0PVwiXCJ9LHQuX2NoZWNrU2Nyb2xsYmFyPWZ1bmN0aW9uKCl7dmFyIHQ9ZG9jdW1lbnQuYm9keS5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTt0aGlzLl9pc0JvZHlPdmVyZmxvd2luZz10LmxlZnQrdC5yaWdodDx3aW5kb3cuaW5uZXJXaWR0aCx0aGlzLl9zY3JvbGxiYXJXaWR0aD10aGlzLl9nZXRTY3JvbGxiYXJXaWR0aCgpfSx0Ll9zZXRTY3JvbGxiYXI9ZnVuY3Rpb24oKXt2YXIgcj10aGlzO2lmKHRoaXMuX2lzQm9keU92ZXJmbG93aW5nKXt2YXIgdD1bXS5zbGljZS5jYWxsKGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoZ2UpKSxlPVtdLnNsaWNlLmNhbGwoZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbChfZSkpOyR0KHQpLmVhY2goZnVuY3Rpb24odCxlKXt2YXIgbj1lLnN0eWxlLnBhZGRpbmdSaWdodCxpPSR0KGUpLmNzcyhcInBhZGRpbmctcmlnaHRcIik7JHQoZSkuZGF0YShcInBhZGRpbmctcmlnaHRcIixuKS5jc3MoXCJwYWRkaW5nLXJpZ2h0XCIscGFyc2VGbG9hdChpKStyLl9zY3JvbGxiYXJXaWR0aCtcInB4XCIpfSksJHQoZSkuZWFjaChmdW5jdGlvbih0LGUpe3ZhciBuPWUuc3R5bGUubWFyZ2luUmlnaHQsaT0kdChlKS5jc3MoXCJtYXJnaW4tcmlnaHRcIik7JHQoZSkuZGF0YShcIm1hcmdpbi1yaWdodFwiLG4pLmNzcyhcIm1hcmdpbi1yaWdodFwiLHBhcnNlRmxvYXQoaSktci5fc2Nyb2xsYmFyV2lkdGgrXCJweFwiKX0pO3ZhciBuPWRvY3VtZW50LmJvZHkuc3R5bGUucGFkZGluZ1JpZ2h0LGk9JHQoZG9jdW1lbnQuYm9keSkuY3NzKFwicGFkZGluZy1yaWdodFwiKTskdChkb2N1bWVudC5ib2R5KS5kYXRhKFwicGFkZGluZy1yaWdodFwiLG4pLmNzcyhcInBhZGRpbmctcmlnaHRcIixwYXJzZUZsb2F0KGkpK3RoaXMuX3Njcm9sbGJhcldpZHRoK1wicHhcIil9fSx0Ll9yZXNldFNjcm9sbGJhcj1mdW5jdGlvbigpe3ZhciB0PVtdLnNsaWNlLmNhbGwoZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbChnZSkpOyR0KHQpLmVhY2goZnVuY3Rpb24odCxlKXt2YXIgbj0kdChlKS5kYXRhKFwicGFkZGluZy1yaWdodFwiKTskdChlKS5yZW1vdmVEYXRhKFwicGFkZGluZy1yaWdodFwiKSxlLnN0eWxlLnBhZGRpbmdSaWdodD1ufHxcIlwifSk7dmFyIGU9W10uc2xpY2UuY2FsbChkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKFwiXCIrX2UpKTskdChlKS5lYWNoKGZ1bmN0aW9uKHQsZSl7dmFyIG49JHQoZSkuZGF0YShcIm1hcmdpbi1yaWdodFwiKTtcInVuZGVmaW5lZFwiIT10eXBlb2YgbiYmJHQoZSkuY3NzKFwibWFyZ2luLXJpZ2h0XCIsbikucmVtb3ZlRGF0YShcIm1hcmdpbi1yaWdodFwiKX0pO3ZhciBuPSR0KGRvY3VtZW50LmJvZHkpLmRhdGEoXCJwYWRkaW5nLXJpZ2h0XCIpOyR0KGRvY3VtZW50LmJvZHkpLnJlbW92ZURhdGEoXCJwYWRkaW5nLXJpZ2h0XCIpLGRvY3VtZW50LmJvZHkuc3R5bGUucGFkZGluZ1JpZ2h0PW58fFwiXCJ9LHQuX2dldFNjcm9sbGJhcldpZHRoPWZ1bmN0aW9uKCl7dmFyIHQ9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTt0LmNsYXNzTmFtZT1zZSxkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKHQpO3ZhciBlPXQuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCkud2lkdGgtdC5jbGllbnRXaWR0aDtyZXR1cm4gZG9jdW1lbnQuYm9keS5yZW1vdmVDaGlsZCh0KSxlfSxyLl9qUXVlcnlJbnRlcmZhY2U9ZnVuY3Rpb24obixpKXtyZXR1cm4gdGhpcy5lYWNoKGZ1bmN0aW9uKCl7dmFyIHQ9JHQodGhpcykuZGF0YSh0ZSksZT1sKHt9LGllLCR0KHRoaXMpLmRhdGEoKSxcIm9iamVjdFwiPT10eXBlb2YgbiYmbj9uOnt9KTtpZih0fHwodD1uZXcgcih0aGlzLGUpLCR0KHRoaXMpLmRhdGEodGUsdCkpLFwic3RyaW5nXCI9PXR5cGVvZiBuKXtpZihcInVuZGVmaW5lZFwiPT10eXBlb2YgdFtuXSl0aHJvdyBuZXcgVHlwZUVycm9yKCdObyBtZXRob2QgbmFtZWQgXCInK24rJ1wiJyk7dFtuXShpKX1lbHNlIGUuc2hvdyYmdC5zaG93KGkpfSl9LHMocixudWxsLFt7a2V5OlwiVkVSU0lPTlwiLGdldDpmdW5jdGlvbigpe3JldHVyblwiNC4xLjNcIn19LHtrZXk6XCJEZWZhdWx0XCIsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIGllfX1dKSxyfSgpLCR0KGRvY3VtZW50KS5vbihvZS5DTElDS19EQVRBX0FQSSxmZSxmdW5jdGlvbih0KXt2YXIgZSxuPXRoaXMsaT1Gbi5nZXRTZWxlY3RvckZyb21FbGVtZW50KHRoaXMpO2kmJihlPWRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoaSkpO3ZhciByPSR0KGUpLmRhdGEodGUpP1widG9nZ2xlXCI6bCh7fSwkdChlKS5kYXRhKCksJHQodGhpcykuZGF0YSgpKTtcIkFcIiE9PXRoaXMudGFnTmFtZSYmXCJBUkVBXCIhPT10aGlzLnRhZ05hbWV8fHQucHJldmVudERlZmF1bHQoKTt2YXIgbz0kdChlKS5vbmUob2UuU0hPVyxmdW5jdGlvbih0KXt0LmlzRGVmYXVsdFByZXZlbnRlZCgpfHxvLm9uZShvZS5ISURERU4sZnVuY3Rpb24oKXskdChuKS5pcyhcIjp2aXNpYmxlXCIpJiZuLmZvY3VzKCl9KX0pO21lLl9qUXVlcnlJbnRlcmZhY2UuY2FsbCgkdChlKSxyLHRoaXMpfSksJHQuZm5bWHRdPW1lLl9qUXVlcnlJbnRlcmZhY2UsJHQuZm5bWHRdLkNvbnN0cnVjdG9yPW1lLCR0LmZuW1h0XS5ub0NvbmZsaWN0PWZ1bmN0aW9uKCl7cmV0dXJuICR0LmZuW1h0XT1uZSxtZS5falF1ZXJ5SW50ZXJmYWNlfSxtZSksem49KHZlPVwidG9vbHRpcFwiLEVlPVwiLlwiKyh5ZT1cImJzLnRvb2x0aXBcIiksQ2U9KHBlPWUpLmZuW3ZlXSxUZT1cImJzLXRvb2x0aXBcIixiZT1uZXcgUmVnRXhwKFwiKF58XFxcXHMpXCIrVGUrXCJcXFxcUytcIixcImdcIiksQWU9e2FuaW1hdGlvbjohMCx0ZW1wbGF0ZTonPGRpdiBjbGFzcz1cInRvb2x0aXBcIiByb2xlPVwidG9vbHRpcFwiPjxkaXYgY2xhc3M9XCJhcnJvd1wiPjwvZGl2PjxkaXYgY2xhc3M9XCJ0b29sdGlwLWlubmVyXCI+PC9kaXY+PC9kaXY+Jyx0cmlnZ2VyOlwiaG92ZXIgZm9jdXNcIix0aXRsZTpcIlwiLGRlbGF5OjAsaHRtbDohKEllPXtBVVRPOlwiYXV0b1wiLFRPUDpcInRvcFwiLFJJR0hUOlwicmlnaHRcIixCT1RUT006XCJib3R0b21cIixMRUZUOlwibGVmdFwifSksc2VsZWN0b3I6IShTZT17YW5pbWF0aW9uOlwiYm9vbGVhblwiLHRlbXBsYXRlOlwic3RyaW5nXCIsdGl0bGU6XCIoc3RyaW5nfGVsZW1lbnR8ZnVuY3Rpb24pXCIsdHJpZ2dlcjpcInN0cmluZ1wiLGRlbGF5OlwiKG51bWJlcnxvYmplY3QpXCIsaHRtbDpcImJvb2xlYW5cIixzZWxlY3RvcjpcIihzdHJpbmd8Ym9vbGVhbilcIixwbGFjZW1lbnQ6XCIoc3RyaW5nfGZ1bmN0aW9uKVwiLG9mZnNldDpcIihudW1iZXJ8c3RyaW5nKVwiLGNvbnRhaW5lcjpcIihzdHJpbmd8ZWxlbWVudHxib29sZWFuKVwiLGZhbGxiYWNrUGxhY2VtZW50OlwiKHN0cmluZ3xhcnJheSlcIixib3VuZGFyeTpcIihzdHJpbmd8ZWxlbWVudClcIn0pLHBsYWNlbWVudDpcInRvcFwiLG9mZnNldDowLGNvbnRhaW5lcjohMSxmYWxsYmFja1BsYWNlbWVudDpcImZsaXBcIixib3VuZGFyeTpcInNjcm9sbFBhcmVudFwifSx3ZT1cIm91dFwiLE5lPXtISURFOlwiaGlkZVwiK0VlLEhJRERFTjpcImhpZGRlblwiK0VlLFNIT1c6KERlPVwic2hvd1wiKStFZSxTSE9XTjpcInNob3duXCIrRWUsSU5TRVJURUQ6XCJpbnNlcnRlZFwiK0VlLENMSUNLOlwiY2xpY2tcIitFZSxGT0NVU0lOOlwiZm9jdXNpblwiK0VlLEZPQ1VTT1VUOlwiZm9jdXNvdXRcIitFZSxNT1VTRUVOVEVSOlwibW91c2VlbnRlclwiK0VlLE1PVVNFTEVBVkU6XCJtb3VzZWxlYXZlXCIrRWV9LE9lPVwiZmFkZVwiLGtlPVwic2hvd1wiLFBlPVwiLnRvb2x0aXAtaW5uZXJcIixqZT1cIi5hcnJvd1wiLEhlPVwiaG92ZXJcIixMZT1cImZvY3VzXCIsUmU9XCJjbGlja1wiLHhlPVwibWFudWFsXCIsV2U9ZnVuY3Rpb24oKXtmdW5jdGlvbiBpKHQsZSl7aWYoXCJ1bmRlZmluZWRcIj09dHlwZW9mIGgpdGhyb3cgbmV3IFR5cGVFcnJvcihcIkJvb3RzdHJhcCB0b29sdGlwcyByZXF1aXJlIFBvcHBlci5qcyAoaHR0cHM6Ly9wb3BwZXIuanMub3JnKVwiKTt0aGlzLl9pc0VuYWJsZWQ9ITAsdGhpcy5fdGltZW91dD0wLHRoaXMuX2hvdmVyU3RhdGU9XCJcIix0aGlzLl9hY3RpdmVUcmlnZ2VyPXt9LHRoaXMuX3BvcHBlcj1udWxsLHRoaXMuZWxlbWVudD10LHRoaXMuY29uZmlnPXRoaXMuX2dldENvbmZpZyhlKSx0aGlzLnRpcD1udWxsLHRoaXMuX3NldExpc3RlbmVycygpfXZhciB0PWkucHJvdG90eXBlO3JldHVybiB0LmVuYWJsZT1mdW5jdGlvbigpe3RoaXMuX2lzRW5hYmxlZD0hMH0sdC5kaXNhYmxlPWZ1bmN0aW9uKCl7dGhpcy5faXNFbmFibGVkPSExfSx0LnRvZ2dsZUVuYWJsZWQ9ZnVuY3Rpb24oKXt0aGlzLl9pc0VuYWJsZWQ9IXRoaXMuX2lzRW5hYmxlZH0sdC50b2dnbGU9ZnVuY3Rpb24odCl7aWYodGhpcy5faXNFbmFibGVkKWlmKHQpe3ZhciBlPXRoaXMuY29uc3RydWN0b3IuREFUQV9LRVksbj1wZSh0LmN1cnJlbnRUYXJnZXQpLmRhdGEoZSk7bnx8KG49bmV3IHRoaXMuY29uc3RydWN0b3IodC5jdXJyZW50VGFyZ2V0LHRoaXMuX2dldERlbGVnYXRlQ29uZmlnKCkpLHBlKHQuY3VycmVudFRhcmdldCkuZGF0YShlLG4pKSxuLl9hY3RpdmVUcmlnZ2VyLmNsaWNrPSFuLl9hY3RpdmVUcmlnZ2VyLmNsaWNrLG4uX2lzV2l0aEFjdGl2ZVRyaWdnZXIoKT9uLl9lbnRlcihudWxsLG4pOm4uX2xlYXZlKG51bGwsbil9ZWxzZXtpZihwZSh0aGlzLmdldFRpcEVsZW1lbnQoKSkuaGFzQ2xhc3Moa2UpKXJldHVybiB2b2lkIHRoaXMuX2xlYXZlKG51bGwsdGhpcyk7dGhpcy5fZW50ZXIobnVsbCx0aGlzKX19LHQuZGlzcG9zZT1mdW5jdGlvbigpe2NsZWFyVGltZW91dCh0aGlzLl90aW1lb3V0KSxwZS5yZW1vdmVEYXRhKHRoaXMuZWxlbWVudCx0aGlzLmNvbnN0cnVjdG9yLkRBVEFfS0VZKSxwZSh0aGlzLmVsZW1lbnQpLm9mZih0aGlzLmNvbnN0cnVjdG9yLkVWRU5UX0tFWSkscGUodGhpcy5lbGVtZW50KS5jbG9zZXN0KFwiLm1vZGFsXCIpLm9mZihcImhpZGUuYnMubW9kYWxcIiksdGhpcy50aXAmJnBlKHRoaXMudGlwKS5yZW1vdmUoKSx0aGlzLl9pc0VuYWJsZWQ9bnVsbCx0aGlzLl90aW1lb3V0PW51bGwsdGhpcy5faG92ZXJTdGF0ZT1udWxsLCh0aGlzLl9hY3RpdmVUcmlnZ2VyPW51bGwpIT09dGhpcy5fcG9wcGVyJiZ0aGlzLl9wb3BwZXIuZGVzdHJveSgpLHRoaXMuX3BvcHBlcj1udWxsLHRoaXMuZWxlbWVudD1udWxsLHRoaXMuY29uZmlnPW51bGwsdGhpcy50aXA9bnVsbH0sdC5zaG93PWZ1bmN0aW9uKCl7dmFyIGU9dGhpcztpZihcIm5vbmVcIj09PXBlKHRoaXMuZWxlbWVudCkuY3NzKFwiZGlzcGxheVwiKSl0aHJvdyBuZXcgRXJyb3IoXCJQbGVhc2UgdXNlIHNob3cgb24gdmlzaWJsZSBlbGVtZW50c1wiKTt2YXIgdD1wZS5FdmVudCh0aGlzLmNvbnN0cnVjdG9yLkV2ZW50LlNIT1cpO2lmKHRoaXMuaXNXaXRoQ29udGVudCgpJiZ0aGlzLl9pc0VuYWJsZWQpe3BlKHRoaXMuZWxlbWVudCkudHJpZ2dlcih0KTt2YXIgbj1wZS5jb250YWlucyh0aGlzLmVsZW1lbnQub3duZXJEb2N1bWVudC5kb2N1bWVudEVsZW1lbnQsdGhpcy5lbGVtZW50KTtpZih0LmlzRGVmYXVsdFByZXZlbnRlZCgpfHwhbilyZXR1cm47dmFyIGk9dGhpcy5nZXRUaXBFbGVtZW50KCkscj1Gbi5nZXRVSUQodGhpcy5jb25zdHJ1Y3Rvci5OQU1FKTtpLnNldEF0dHJpYnV0ZShcImlkXCIsciksdGhpcy5lbGVtZW50LnNldEF0dHJpYnV0ZShcImFyaWEtZGVzY3JpYmVkYnlcIixyKSx0aGlzLnNldENvbnRlbnQoKSx0aGlzLmNvbmZpZy5hbmltYXRpb24mJnBlKGkpLmFkZENsYXNzKE9lKTt2YXIgbz1cImZ1bmN0aW9uXCI9PXR5cGVvZiB0aGlzLmNvbmZpZy5wbGFjZW1lbnQ/dGhpcy5jb25maWcucGxhY2VtZW50LmNhbGwodGhpcyxpLHRoaXMuZWxlbWVudCk6dGhpcy5jb25maWcucGxhY2VtZW50LHM9dGhpcy5fZ2V0QXR0YWNobWVudChvKTt0aGlzLmFkZEF0dGFjaG1lbnRDbGFzcyhzKTt2YXIgYT0hMT09PXRoaXMuY29uZmlnLmNvbnRhaW5lcj9kb2N1bWVudC5ib2R5OnBlKGRvY3VtZW50KS5maW5kKHRoaXMuY29uZmlnLmNvbnRhaW5lcik7cGUoaSkuZGF0YSh0aGlzLmNvbnN0cnVjdG9yLkRBVEFfS0VZLHRoaXMpLHBlLmNvbnRhaW5zKHRoaXMuZWxlbWVudC5vd25lckRvY3VtZW50LmRvY3VtZW50RWxlbWVudCx0aGlzLnRpcCl8fHBlKGkpLmFwcGVuZFRvKGEpLHBlKHRoaXMuZWxlbWVudCkudHJpZ2dlcih0aGlzLmNvbnN0cnVjdG9yLkV2ZW50LklOU0VSVEVEKSx0aGlzLl9wb3BwZXI9bmV3IGgodGhpcy5lbGVtZW50LGkse3BsYWNlbWVudDpzLG1vZGlmaWVyczp7b2Zmc2V0OntvZmZzZXQ6dGhpcy5jb25maWcub2Zmc2V0fSxmbGlwOntiZWhhdmlvcjp0aGlzLmNvbmZpZy5mYWxsYmFja1BsYWNlbWVudH0sYXJyb3c6e2VsZW1lbnQ6amV9LHByZXZlbnRPdmVyZmxvdzp7Ym91bmRhcmllc0VsZW1lbnQ6dGhpcy5jb25maWcuYm91bmRhcnl9fSxvbkNyZWF0ZTpmdW5jdGlvbih0KXt0Lm9yaWdpbmFsUGxhY2VtZW50IT09dC5wbGFjZW1lbnQmJmUuX2hhbmRsZVBvcHBlclBsYWNlbWVudENoYW5nZSh0KX0sb25VcGRhdGU6ZnVuY3Rpb24odCl7ZS5faGFuZGxlUG9wcGVyUGxhY2VtZW50Q2hhbmdlKHQpfX0pLHBlKGkpLmFkZENsYXNzKGtlKSxcIm9udG91Y2hzdGFydFwiaW4gZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50JiZwZShkb2N1bWVudC5ib2R5KS5jaGlsZHJlbigpLm9uKFwibW91c2VvdmVyXCIsbnVsbCxwZS5ub29wKTt2YXIgbD1mdW5jdGlvbigpe2UuY29uZmlnLmFuaW1hdGlvbiYmZS5fZml4VHJhbnNpdGlvbigpO3ZhciB0PWUuX2hvdmVyU3RhdGU7ZS5faG92ZXJTdGF0ZT1udWxsLHBlKGUuZWxlbWVudCkudHJpZ2dlcihlLmNvbnN0cnVjdG9yLkV2ZW50LlNIT1dOKSx0PT09d2UmJmUuX2xlYXZlKG51bGwsZSl9O2lmKHBlKHRoaXMudGlwKS5oYXNDbGFzcyhPZSkpe3ZhciBjPUZuLmdldFRyYW5zaXRpb25EdXJhdGlvbkZyb21FbGVtZW50KHRoaXMudGlwKTtwZSh0aGlzLnRpcCkub25lKEZuLlRSQU5TSVRJT05fRU5ELGwpLmVtdWxhdGVUcmFuc2l0aW9uRW5kKGMpfWVsc2UgbCgpfX0sdC5oaWRlPWZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMsbj10aGlzLmdldFRpcEVsZW1lbnQoKSxpPXBlLkV2ZW50KHRoaXMuY29uc3RydWN0b3IuRXZlbnQuSElERSkscj1mdW5jdGlvbigpe2UuX2hvdmVyU3RhdGUhPT1EZSYmbi5wYXJlbnROb2RlJiZuLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQobiksZS5fY2xlYW5UaXBDbGFzcygpLGUuZWxlbWVudC5yZW1vdmVBdHRyaWJ1dGUoXCJhcmlhLWRlc2NyaWJlZGJ5XCIpLHBlKGUuZWxlbWVudCkudHJpZ2dlcihlLmNvbnN0cnVjdG9yLkV2ZW50LkhJRERFTiksbnVsbCE9PWUuX3BvcHBlciYmZS5fcG9wcGVyLmRlc3Ryb3koKSx0JiZ0KCl9O2lmKHBlKHRoaXMuZWxlbWVudCkudHJpZ2dlcihpKSwhaS5pc0RlZmF1bHRQcmV2ZW50ZWQoKSl7aWYocGUobikucmVtb3ZlQ2xhc3Moa2UpLFwib250b3VjaHN0YXJ0XCJpbiBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQmJnBlKGRvY3VtZW50LmJvZHkpLmNoaWxkcmVuKCkub2ZmKFwibW91c2VvdmVyXCIsbnVsbCxwZS5ub29wKSx0aGlzLl9hY3RpdmVUcmlnZ2VyW1JlXT0hMSx0aGlzLl9hY3RpdmVUcmlnZ2VyW0xlXT0hMSx0aGlzLl9hY3RpdmVUcmlnZ2VyW0hlXT0hMSxwZSh0aGlzLnRpcCkuaGFzQ2xhc3MoT2UpKXt2YXIgbz1Gbi5nZXRUcmFuc2l0aW9uRHVyYXRpb25Gcm9tRWxlbWVudChuKTtwZShuKS5vbmUoRm4uVFJBTlNJVElPTl9FTkQscikuZW11bGF0ZVRyYW5zaXRpb25FbmQobyl9ZWxzZSByKCk7dGhpcy5faG92ZXJTdGF0ZT1cIlwifX0sdC51cGRhdGU9ZnVuY3Rpb24oKXtudWxsIT09dGhpcy5fcG9wcGVyJiZ0aGlzLl9wb3BwZXIuc2NoZWR1bGVVcGRhdGUoKX0sdC5pc1dpdGhDb250ZW50PWZ1bmN0aW9uKCl7cmV0dXJuIEJvb2xlYW4odGhpcy5nZXRUaXRsZSgpKX0sdC5hZGRBdHRhY2htZW50Q2xhc3M9ZnVuY3Rpb24odCl7cGUodGhpcy5nZXRUaXBFbGVtZW50KCkpLmFkZENsYXNzKFRlK1wiLVwiK3QpfSx0LmdldFRpcEVsZW1lbnQ9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy50aXA9dGhpcy50aXB8fHBlKHRoaXMuY29uZmlnLnRlbXBsYXRlKVswXSx0aGlzLnRpcH0sdC5zZXRDb250ZW50PWZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy5nZXRUaXBFbGVtZW50KCk7dGhpcy5zZXRFbGVtZW50Q29udGVudChwZSh0LnF1ZXJ5U2VsZWN0b3JBbGwoUGUpKSx0aGlzLmdldFRpdGxlKCkpLHBlKHQpLnJlbW92ZUNsYXNzKE9lK1wiIFwiK2tlKX0sdC5zZXRFbGVtZW50Q29udGVudD1mdW5jdGlvbih0LGUpe3ZhciBuPXRoaXMuY29uZmlnLmh0bWw7XCJvYmplY3RcIj09dHlwZW9mIGUmJihlLm5vZGVUeXBlfHxlLmpxdWVyeSk/bj9wZShlKS5wYXJlbnQoKS5pcyh0KXx8dC5lbXB0eSgpLmFwcGVuZChlKTp0LnRleHQocGUoZSkudGV4dCgpKTp0W24/XCJodG1sXCI6XCJ0ZXh0XCJdKGUpfSx0LmdldFRpdGxlPWZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy5lbGVtZW50LmdldEF0dHJpYnV0ZShcImRhdGEtb3JpZ2luYWwtdGl0bGVcIik7cmV0dXJuIHR8fCh0PVwiZnVuY3Rpb25cIj09dHlwZW9mIHRoaXMuY29uZmlnLnRpdGxlP3RoaXMuY29uZmlnLnRpdGxlLmNhbGwodGhpcy5lbGVtZW50KTp0aGlzLmNvbmZpZy50aXRsZSksdH0sdC5fZ2V0QXR0YWNobWVudD1mdW5jdGlvbih0KXtyZXR1cm4gSWVbdC50b1VwcGVyQ2FzZSgpXX0sdC5fc2V0TGlzdGVuZXJzPWZ1bmN0aW9uKCl7dmFyIGk9dGhpczt0aGlzLmNvbmZpZy50cmlnZ2VyLnNwbGl0KFwiIFwiKS5mb3JFYWNoKGZ1bmN0aW9uKHQpe2lmKFwiY2xpY2tcIj09PXQpcGUoaS5lbGVtZW50KS5vbihpLmNvbnN0cnVjdG9yLkV2ZW50LkNMSUNLLGkuY29uZmlnLnNlbGVjdG9yLGZ1bmN0aW9uKHQpe3JldHVybiBpLnRvZ2dsZSh0KX0pO2Vsc2UgaWYodCE9PXhlKXt2YXIgZT10PT09SGU/aS5jb25zdHJ1Y3Rvci5FdmVudC5NT1VTRUVOVEVSOmkuY29uc3RydWN0b3IuRXZlbnQuRk9DVVNJTixuPXQ9PT1IZT9pLmNvbnN0cnVjdG9yLkV2ZW50Lk1PVVNFTEVBVkU6aS5jb25zdHJ1Y3Rvci5FdmVudC5GT0NVU09VVDtwZShpLmVsZW1lbnQpLm9uKGUsaS5jb25maWcuc2VsZWN0b3IsZnVuY3Rpb24odCl7cmV0dXJuIGkuX2VudGVyKHQpfSkub24obixpLmNvbmZpZy5zZWxlY3RvcixmdW5jdGlvbih0KXtyZXR1cm4gaS5fbGVhdmUodCl9KX1wZShpLmVsZW1lbnQpLmNsb3Nlc3QoXCIubW9kYWxcIikub24oXCJoaWRlLmJzLm1vZGFsXCIsZnVuY3Rpb24oKXtyZXR1cm4gaS5oaWRlKCl9KX0pLHRoaXMuY29uZmlnLnNlbGVjdG9yP3RoaXMuY29uZmlnPWwoe30sdGhpcy5jb25maWcse3RyaWdnZXI6XCJtYW51YWxcIixzZWxlY3RvcjpcIlwifSk6dGhpcy5fZml4VGl0bGUoKX0sdC5fZml4VGl0bGU9ZnVuY3Rpb24oKXt2YXIgdD10eXBlb2YgdGhpcy5lbGVtZW50LmdldEF0dHJpYnV0ZShcImRhdGEtb3JpZ2luYWwtdGl0bGVcIik7KHRoaXMuZWxlbWVudC5nZXRBdHRyaWJ1dGUoXCJ0aXRsZVwiKXx8XCJzdHJpbmdcIiE9PXQpJiYodGhpcy5lbGVtZW50LnNldEF0dHJpYnV0ZShcImRhdGEtb3JpZ2luYWwtdGl0bGVcIix0aGlzLmVsZW1lbnQuZ2V0QXR0cmlidXRlKFwidGl0bGVcIil8fFwiXCIpLHRoaXMuZWxlbWVudC5zZXRBdHRyaWJ1dGUoXCJ0aXRsZVwiLFwiXCIpKX0sdC5fZW50ZXI9ZnVuY3Rpb24odCxlKXt2YXIgbj10aGlzLmNvbnN0cnVjdG9yLkRBVEFfS0VZOyhlPWV8fHBlKHQuY3VycmVudFRhcmdldCkuZGF0YShuKSl8fChlPW5ldyB0aGlzLmNvbnN0cnVjdG9yKHQuY3VycmVudFRhcmdldCx0aGlzLl9nZXREZWxlZ2F0ZUNvbmZpZygpKSxwZSh0LmN1cnJlbnRUYXJnZXQpLmRhdGEobixlKSksdCYmKGUuX2FjdGl2ZVRyaWdnZXJbXCJmb2N1c2luXCI9PT10LnR5cGU/TGU6SGVdPSEwKSxwZShlLmdldFRpcEVsZW1lbnQoKSkuaGFzQ2xhc3Moa2UpfHxlLl9ob3ZlclN0YXRlPT09RGU/ZS5faG92ZXJTdGF0ZT1EZTooY2xlYXJUaW1lb3V0KGUuX3RpbWVvdXQpLGUuX2hvdmVyU3RhdGU9RGUsZS5jb25maWcuZGVsYXkmJmUuY29uZmlnLmRlbGF5LnNob3c/ZS5fdGltZW91dD1zZXRUaW1lb3V0KGZ1bmN0aW9uKCl7ZS5faG92ZXJTdGF0ZT09PURlJiZlLnNob3coKX0sZS5jb25maWcuZGVsYXkuc2hvdyk6ZS5zaG93KCkpfSx0Ll9sZWF2ZT1mdW5jdGlvbih0LGUpe3ZhciBuPXRoaXMuY29uc3RydWN0b3IuREFUQV9LRVk7KGU9ZXx8cGUodC5jdXJyZW50VGFyZ2V0KS5kYXRhKG4pKXx8KGU9bmV3IHRoaXMuY29uc3RydWN0b3IodC5jdXJyZW50VGFyZ2V0LHRoaXMuX2dldERlbGVnYXRlQ29uZmlnKCkpLHBlKHQuY3VycmVudFRhcmdldCkuZGF0YShuLGUpKSx0JiYoZS5fYWN0aXZlVHJpZ2dlcltcImZvY3Vzb3V0XCI9PT10LnR5cGU/TGU6SGVdPSExKSxlLl9pc1dpdGhBY3RpdmVUcmlnZ2VyKCl8fChjbGVhclRpbWVvdXQoZS5fdGltZW91dCksZS5faG92ZXJTdGF0ZT13ZSxlLmNvbmZpZy5kZWxheSYmZS5jb25maWcuZGVsYXkuaGlkZT9lLl90aW1lb3V0PXNldFRpbWVvdXQoZnVuY3Rpb24oKXtlLl9ob3ZlclN0YXRlPT09d2UmJmUuaGlkZSgpfSxlLmNvbmZpZy5kZWxheS5oaWRlKTplLmhpZGUoKSl9LHQuX2lzV2l0aEFjdGl2ZVRyaWdnZXI9ZnVuY3Rpb24oKXtmb3IodmFyIHQgaW4gdGhpcy5fYWN0aXZlVHJpZ2dlcilpZih0aGlzLl9hY3RpdmVUcmlnZ2VyW3RdKXJldHVybiEwO3JldHVybiExfSx0Ll9nZXRDb25maWc9ZnVuY3Rpb24odCl7cmV0dXJuXCJudW1iZXJcIj09dHlwZW9mKHQ9bCh7fSx0aGlzLmNvbnN0cnVjdG9yLkRlZmF1bHQscGUodGhpcy5lbGVtZW50KS5kYXRhKCksXCJvYmplY3RcIj09dHlwZW9mIHQmJnQ/dDp7fSkpLmRlbGF5JiYodC5kZWxheT17c2hvdzp0LmRlbGF5LGhpZGU6dC5kZWxheX0pLFwibnVtYmVyXCI9PXR5cGVvZiB0LnRpdGxlJiYodC50aXRsZT10LnRpdGxlLnRvU3RyaW5nKCkpLFwibnVtYmVyXCI9PXR5cGVvZiB0LmNvbnRlbnQmJih0LmNvbnRlbnQ9dC5jb250ZW50LnRvU3RyaW5nKCkpLEZuLnR5cGVDaGVja0NvbmZpZyh2ZSx0LHRoaXMuY29uc3RydWN0b3IuRGVmYXVsdFR5cGUpLHR9LHQuX2dldERlbGVnYXRlQ29uZmlnPWZ1bmN0aW9uKCl7dmFyIHQ9e307aWYodGhpcy5jb25maWcpZm9yKHZhciBlIGluIHRoaXMuY29uZmlnKXRoaXMuY29uc3RydWN0b3IuRGVmYXVsdFtlXSE9PXRoaXMuY29uZmlnW2VdJiYodFtlXT10aGlzLmNvbmZpZ1tlXSk7cmV0dXJuIHR9LHQuX2NsZWFuVGlwQ2xhc3M9ZnVuY3Rpb24oKXt2YXIgdD1wZSh0aGlzLmdldFRpcEVsZW1lbnQoKSksZT10LmF0dHIoXCJjbGFzc1wiKS5tYXRjaChiZSk7bnVsbCE9PWUmJmUubGVuZ3RoJiZ0LnJlbW92ZUNsYXNzKGUuam9pbihcIlwiKSl9LHQuX2hhbmRsZVBvcHBlclBsYWNlbWVudENoYW5nZT1mdW5jdGlvbih0KXt2YXIgZT10Lmluc3RhbmNlO3RoaXMudGlwPWUucG9wcGVyLHRoaXMuX2NsZWFuVGlwQ2xhc3MoKSx0aGlzLmFkZEF0dGFjaG1lbnRDbGFzcyh0aGlzLl9nZXRBdHRhY2htZW50KHQucGxhY2VtZW50KSl9LHQuX2ZpeFRyYW5zaXRpb249ZnVuY3Rpb24oKXt2YXIgdD10aGlzLmdldFRpcEVsZW1lbnQoKSxlPXRoaXMuY29uZmlnLmFuaW1hdGlvbjtudWxsPT09dC5nZXRBdHRyaWJ1dGUoXCJ4LXBsYWNlbWVudFwiKSYmKHBlKHQpLnJlbW92ZUNsYXNzKE9lKSx0aGlzLmNvbmZpZy5hbmltYXRpb249ITEsdGhpcy5oaWRlKCksdGhpcy5zaG93KCksdGhpcy5jb25maWcuYW5pbWF0aW9uPWUpfSxpLl9qUXVlcnlJbnRlcmZhY2U9ZnVuY3Rpb24obil7cmV0dXJuIHRoaXMuZWFjaChmdW5jdGlvbigpe3ZhciB0PXBlKHRoaXMpLmRhdGEoeWUpLGU9XCJvYmplY3RcIj09dHlwZW9mIG4mJm47aWYoKHR8fCEvZGlzcG9zZXxoaWRlLy50ZXN0KG4pKSYmKHR8fCh0PW5ldyBpKHRoaXMsZSkscGUodGhpcykuZGF0YSh5ZSx0KSksXCJzdHJpbmdcIj09dHlwZW9mIG4pKXtpZihcInVuZGVmaW5lZFwiPT10eXBlb2YgdFtuXSl0aHJvdyBuZXcgVHlwZUVycm9yKCdObyBtZXRob2QgbmFtZWQgXCInK24rJ1wiJyk7dFtuXSgpfX0pfSxzKGksbnVsbCxbe2tleTpcIlZFUlNJT05cIixnZXQ6ZnVuY3Rpb24oKXtyZXR1cm5cIjQuMS4zXCJ9fSx7a2V5OlwiRGVmYXVsdFwiLGdldDpmdW5jdGlvbigpe3JldHVybiBBZX19LHtrZXk6XCJOQU1FXCIsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHZlfX0se2tleTpcIkRBVEFfS0VZXCIsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHllfX0se2tleTpcIkV2ZW50XCIsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIE5lfX0se2tleTpcIkVWRU5UX0tFWVwiLGdldDpmdW5jdGlvbigpe3JldHVybiBFZX19LHtrZXk6XCJEZWZhdWx0VHlwZVwiLGdldDpmdW5jdGlvbigpe3JldHVybiBTZX19XSksaX0oKSxwZS5mblt2ZV09V2UuX2pRdWVyeUludGVyZmFjZSxwZS5mblt2ZV0uQ29uc3RydWN0b3I9V2UscGUuZm5bdmVdLm5vQ29uZmxpY3Q9ZnVuY3Rpb24oKXtyZXR1cm4gcGUuZm5bdmVdPUNlLFdlLl9qUXVlcnlJbnRlcmZhY2V9LFdlKSxKbj0ocWU9XCJwb3BvdmVyXCIsS2U9XCIuXCIrKEZlPVwiYnMucG9wb3ZlclwiKSxNZT0oVWU9ZSkuZm5bcWVdLFFlPVwiYnMtcG9wb3ZlclwiLEJlPW5ldyBSZWdFeHAoXCIoXnxcXFxccylcIitRZStcIlxcXFxTK1wiLFwiZ1wiKSxWZT1sKHt9LHpuLkRlZmF1bHQse3BsYWNlbWVudDpcInJpZ2h0XCIsdHJpZ2dlcjpcImNsaWNrXCIsY29udGVudDpcIlwiLHRlbXBsYXRlOic8ZGl2IGNsYXNzPVwicG9wb3ZlclwiIHJvbGU9XCJ0b29sdGlwXCI+PGRpdiBjbGFzcz1cImFycm93XCI+PC9kaXY+PGgzIGNsYXNzPVwicG9wb3Zlci1oZWFkZXJcIj48L2gzPjxkaXYgY2xhc3M9XCJwb3BvdmVyLWJvZHlcIj48L2Rpdj48L2Rpdj4nfSksWWU9bCh7fSx6bi5EZWZhdWx0VHlwZSx7Y29udGVudDpcIihzdHJpbmd8ZWxlbWVudHxmdW5jdGlvbilcIn0pLHplPVwiZmFkZVwiLFplPVwiLnBvcG92ZXItaGVhZGVyXCIsR2U9XCIucG9wb3Zlci1ib2R5XCIsJGU9e0hJREU6XCJoaWRlXCIrS2UsSElEREVOOlwiaGlkZGVuXCIrS2UsU0hPVzooSmU9XCJzaG93XCIpK0tlLFNIT1dOOlwic2hvd25cIitLZSxJTlNFUlRFRDpcImluc2VydGVkXCIrS2UsQ0xJQ0s6XCJjbGlja1wiK0tlLEZPQ1VTSU46XCJmb2N1c2luXCIrS2UsRk9DVVNPVVQ6XCJmb2N1c291dFwiK0tlLE1PVVNFRU5URVI6XCJtb3VzZWVudGVyXCIrS2UsTU9VU0VMRUFWRTpcIm1vdXNlbGVhdmVcIitLZX0sWGU9ZnVuY3Rpb24odCl7dmFyIGUsbjtmdW5jdGlvbiBpKCl7cmV0dXJuIHQuYXBwbHkodGhpcyxhcmd1bWVudHMpfHx0aGlzfW49dCwoZT1pKS5wcm90b3R5cGU9T2JqZWN0LmNyZWF0ZShuLnByb3RvdHlwZSksKGUucHJvdG90eXBlLmNvbnN0cnVjdG9yPWUpLl9fcHJvdG9fXz1uO3ZhciByPWkucHJvdG90eXBlO3JldHVybiByLmlzV2l0aENvbnRlbnQ9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5nZXRUaXRsZSgpfHx0aGlzLl9nZXRDb250ZW50KCl9LHIuYWRkQXR0YWNobWVudENsYXNzPWZ1bmN0aW9uKHQpe1VlKHRoaXMuZ2V0VGlwRWxlbWVudCgpKS5hZGRDbGFzcyhRZStcIi1cIit0KX0sci5nZXRUaXBFbGVtZW50PWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMudGlwPXRoaXMudGlwfHxVZSh0aGlzLmNvbmZpZy50ZW1wbGF0ZSlbMF0sdGhpcy50aXB9LHIuc2V0Q29udGVudD1mdW5jdGlvbigpe3ZhciB0PVVlKHRoaXMuZ2V0VGlwRWxlbWVudCgpKTt0aGlzLnNldEVsZW1lbnRDb250ZW50KHQuZmluZChaZSksdGhpcy5nZXRUaXRsZSgpKTt2YXIgZT10aGlzLl9nZXRDb250ZW50KCk7XCJmdW5jdGlvblwiPT10eXBlb2YgZSYmKGU9ZS5jYWxsKHRoaXMuZWxlbWVudCkpLHRoaXMuc2V0RWxlbWVudENvbnRlbnQodC5maW5kKEdlKSxlKSx0LnJlbW92ZUNsYXNzKHplK1wiIFwiK0plKX0sci5fZ2V0Q29udGVudD1mdW5jdGlvbigpe3JldHVybiB0aGlzLmVsZW1lbnQuZ2V0QXR0cmlidXRlKFwiZGF0YS1jb250ZW50XCIpfHx0aGlzLmNvbmZpZy5jb250ZW50fSxyLl9jbGVhblRpcENsYXNzPWZ1bmN0aW9uKCl7dmFyIHQ9VWUodGhpcy5nZXRUaXBFbGVtZW50KCkpLGU9dC5hdHRyKFwiY2xhc3NcIikubWF0Y2goQmUpO251bGwhPT1lJiYwPGUubGVuZ3RoJiZ0LnJlbW92ZUNsYXNzKGUuam9pbihcIlwiKSl9LGkuX2pRdWVyeUludGVyZmFjZT1mdW5jdGlvbihuKXtyZXR1cm4gdGhpcy5lYWNoKGZ1bmN0aW9uKCl7dmFyIHQ9VWUodGhpcykuZGF0YShGZSksZT1cIm9iamVjdFwiPT10eXBlb2Ygbj9uOm51bGw7aWYoKHR8fCEvZGVzdHJveXxoaWRlLy50ZXN0KG4pKSYmKHR8fCh0PW5ldyBpKHRoaXMsZSksVWUodGhpcykuZGF0YShGZSx0KSksXCJzdHJpbmdcIj09dHlwZW9mIG4pKXtpZihcInVuZGVmaW5lZFwiPT10eXBlb2YgdFtuXSl0aHJvdyBuZXcgVHlwZUVycm9yKCdObyBtZXRob2QgbmFtZWQgXCInK24rJ1wiJyk7dFtuXSgpfX0pfSxzKGksbnVsbCxbe2tleTpcIlZFUlNJT05cIixnZXQ6ZnVuY3Rpb24oKXtyZXR1cm5cIjQuMS4zXCJ9fSx7a2V5OlwiRGVmYXVsdFwiLGdldDpmdW5jdGlvbigpe3JldHVybiBWZX19LHtrZXk6XCJOQU1FXCIsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHFlfX0se2tleTpcIkRBVEFfS0VZXCIsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIEZlfX0se2tleTpcIkV2ZW50XCIsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuICRlfX0se2tleTpcIkVWRU5UX0tFWVwiLGdldDpmdW5jdGlvbigpe3JldHVybiBLZX19LHtrZXk6XCJEZWZhdWx0VHlwZVwiLGdldDpmdW5jdGlvbigpe3JldHVybiBZZX19XSksaX0oem4pLFVlLmZuW3FlXT1YZS5falF1ZXJ5SW50ZXJmYWNlLFVlLmZuW3FlXS5Db25zdHJ1Y3Rvcj1YZSxVZS5mbltxZV0ubm9Db25mbGljdD1mdW5jdGlvbigpe3JldHVybiBVZS5mbltxZV09TWUsWGUuX2pRdWVyeUludGVyZmFjZX0sWGUpLFpuPShlbj1cInNjcm9sbHNweVwiLHJuPVwiLlwiKyhubj1cImJzLnNjcm9sbHNweVwiKSxvbj0odG49ZSkuZm5bZW5dLHNuPXtvZmZzZXQ6MTAsbWV0aG9kOlwiYXV0b1wiLHRhcmdldDpcIlwifSxhbj17b2Zmc2V0OlwibnVtYmVyXCIsbWV0aG9kOlwic3RyaW5nXCIsdGFyZ2V0OlwiKHN0cmluZ3xlbGVtZW50KVwifSxsbj17QUNUSVZBVEU6XCJhY3RpdmF0ZVwiK3JuLFNDUk9MTDpcInNjcm9sbFwiK3JuLExPQURfREFUQV9BUEk6XCJsb2FkXCIrcm4rXCIuZGF0YS1hcGlcIn0sY249XCJkcm9wZG93bi1pdGVtXCIsaG49XCJhY3RpdmVcIix1bj0nW2RhdGEtc3B5PVwic2Nyb2xsXCJdJyxmbj1cIi5hY3RpdmVcIixkbj1cIi5uYXYsIC5saXN0LWdyb3VwXCIsZ249XCIubmF2LWxpbmtcIixfbj1cIi5uYXYtaXRlbVwiLG1uPVwiLmxpc3QtZ3JvdXAtaXRlbVwiLHBuPVwiLmRyb3Bkb3duXCIsdm49XCIuZHJvcGRvd24taXRlbVwiLHluPVwiLmRyb3Bkb3duLXRvZ2dsZVwiLEVuPVwib2Zmc2V0XCIsQ249XCJwb3NpdGlvblwiLFRuPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gbih0LGUpe3ZhciBuPXRoaXM7dGhpcy5fZWxlbWVudD10LHRoaXMuX3Njcm9sbEVsZW1lbnQ9XCJCT0RZXCI9PT10LnRhZ05hbWU/d2luZG93OnQsdGhpcy5fY29uZmlnPXRoaXMuX2dldENvbmZpZyhlKSx0aGlzLl9zZWxlY3Rvcj10aGlzLl9jb25maWcudGFyZ2V0K1wiIFwiK2duK1wiLFwiK3RoaXMuX2NvbmZpZy50YXJnZXQrXCIgXCIrbW4rXCIsXCIrdGhpcy5fY29uZmlnLnRhcmdldCtcIiBcIit2bix0aGlzLl9vZmZzZXRzPVtdLHRoaXMuX3RhcmdldHM9W10sdGhpcy5fYWN0aXZlVGFyZ2V0PW51bGwsdGhpcy5fc2Nyb2xsSGVpZ2h0PTAsdG4odGhpcy5fc2Nyb2xsRWxlbWVudCkub24obG4uU0NST0xMLGZ1bmN0aW9uKHQpe3JldHVybiBuLl9wcm9jZXNzKHQpfSksdGhpcy5yZWZyZXNoKCksdGhpcy5fcHJvY2VzcygpfXZhciB0PW4ucHJvdG90eXBlO3JldHVybiB0LnJlZnJlc2g9ZnVuY3Rpb24oKXt2YXIgZT10aGlzLHQ9dGhpcy5fc2Nyb2xsRWxlbWVudD09PXRoaXMuX3Njcm9sbEVsZW1lbnQud2luZG93P0VuOkNuLHI9XCJhdXRvXCI9PT10aGlzLl9jb25maWcubWV0aG9kP3Q6dGhpcy5fY29uZmlnLm1ldGhvZCxvPXI9PT1Dbj90aGlzLl9nZXRTY3JvbGxUb3AoKTowO3RoaXMuX29mZnNldHM9W10sdGhpcy5fdGFyZ2V0cz1bXSx0aGlzLl9zY3JvbGxIZWlnaHQ9dGhpcy5fZ2V0U2Nyb2xsSGVpZ2h0KCksW10uc2xpY2UuY2FsbChkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKHRoaXMuX3NlbGVjdG9yKSkubWFwKGZ1bmN0aW9uKHQpe3ZhciBlLG49Rm4uZ2V0U2VsZWN0b3JGcm9tRWxlbWVudCh0KTtpZihuJiYoZT1kb2N1bWVudC5xdWVyeVNlbGVjdG9yKG4pKSxlKXt2YXIgaT1lLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpO2lmKGkud2lkdGh8fGkuaGVpZ2h0KXJldHVyblt0bihlKVtyXSgpLnRvcCtvLG5dfXJldHVybiBudWxsfSkuZmlsdGVyKGZ1bmN0aW9uKHQpe3JldHVybiB0fSkuc29ydChmdW5jdGlvbih0LGUpe3JldHVybiB0WzBdLWVbMF19KS5mb3JFYWNoKGZ1bmN0aW9uKHQpe2UuX29mZnNldHMucHVzaCh0WzBdKSxlLl90YXJnZXRzLnB1c2godFsxXSl9KX0sdC5kaXNwb3NlPWZ1bmN0aW9uKCl7dG4ucmVtb3ZlRGF0YSh0aGlzLl9lbGVtZW50LG5uKSx0bih0aGlzLl9zY3JvbGxFbGVtZW50KS5vZmYocm4pLHRoaXMuX2VsZW1lbnQ9bnVsbCx0aGlzLl9zY3JvbGxFbGVtZW50PW51bGwsdGhpcy5fY29uZmlnPW51bGwsdGhpcy5fc2VsZWN0b3I9bnVsbCx0aGlzLl9vZmZzZXRzPW51bGwsdGhpcy5fdGFyZ2V0cz1udWxsLHRoaXMuX2FjdGl2ZVRhcmdldD1udWxsLHRoaXMuX3Njcm9sbEhlaWdodD1udWxsfSx0Ll9nZXRDb25maWc9ZnVuY3Rpb24odCl7aWYoXCJzdHJpbmdcIiE9dHlwZW9mKHQ9bCh7fSxzbixcIm9iamVjdFwiPT10eXBlb2YgdCYmdD90Ont9KSkudGFyZ2V0KXt2YXIgZT10bih0LnRhcmdldCkuYXR0cihcImlkXCIpO2V8fChlPUZuLmdldFVJRChlbiksdG4odC50YXJnZXQpLmF0dHIoXCJpZFwiLGUpKSx0LnRhcmdldD1cIiNcIitlfXJldHVybiBGbi50eXBlQ2hlY2tDb25maWcoZW4sdCxhbiksdH0sdC5fZ2V0U2Nyb2xsVG9wPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3Njcm9sbEVsZW1lbnQ9PT13aW5kb3c/dGhpcy5fc2Nyb2xsRWxlbWVudC5wYWdlWU9mZnNldDp0aGlzLl9zY3JvbGxFbGVtZW50LnNjcm9sbFRvcH0sdC5fZ2V0U2Nyb2xsSGVpZ2h0PWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3Njcm9sbEVsZW1lbnQuc2Nyb2xsSGVpZ2h0fHxNYXRoLm1heChkb2N1bWVudC5ib2R5LnNjcm9sbEhlaWdodCxkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuc2Nyb2xsSGVpZ2h0KX0sdC5fZ2V0T2Zmc2V0SGVpZ2h0PWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3Njcm9sbEVsZW1lbnQ9PT13aW5kb3c/d2luZG93LmlubmVySGVpZ2h0OnRoaXMuX3Njcm9sbEVsZW1lbnQuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCkuaGVpZ2h0fSx0Ll9wcm9jZXNzPWZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy5fZ2V0U2Nyb2xsVG9wKCkrdGhpcy5fY29uZmlnLm9mZnNldCxlPXRoaXMuX2dldFNjcm9sbEhlaWdodCgpLG49dGhpcy5fY29uZmlnLm9mZnNldCtlLXRoaXMuX2dldE9mZnNldEhlaWdodCgpO2lmKHRoaXMuX3Njcm9sbEhlaWdodCE9PWUmJnRoaXMucmVmcmVzaCgpLG48PXQpe3ZhciBpPXRoaXMuX3RhcmdldHNbdGhpcy5fdGFyZ2V0cy5sZW5ndGgtMV07dGhpcy5fYWN0aXZlVGFyZ2V0IT09aSYmdGhpcy5fYWN0aXZhdGUoaSl9ZWxzZXtpZih0aGlzLl9hY3RpdmVUYXJnZXQmJnQ8dGhpcy5fb2Zmc2V0c1swXSYmMDx0aGlzLl9vZmZzZXRzWzBdKXJldHVybiB0aGlzLl9hY3RpdmVUYXJnZXQ9bnVsbCx2b2lkIHRoaXMuX2NsZWFyKCk7Zm9yKHZhciByPXRoaXMuX29mZnNldHMubGVuZ3RoO3ItLTspe3RoaXMuX2FjdGl2ZVRhcmdldCE9PXRoaXMuX3RhcmdldHNbcl0mJnQ+PXRoaXMuX29mZnNldHNbcl0mJihcInVuZGVmaW5lZFwiPT10eXBlb2YgdGhpcy5fb2Zmc2V0c1tyKzFdfHx0PHRoaXMuX29mZnNldHNbcisxXSkmJnRoaXMuX2FjdGl2YXRlKHRoaXMuX3RhcmdldHNbcl0pfX19LHQuX2FjdGl2YXRlPWZ1bmN0aW9uKGUpe3RoaXMuX2FjdGl2ZVRhcmdldD1lLHRoaXMuX2NsZWFyKCk7dmFyIHQ9dGhpcy5fc2VsZWN0b3Iuc3BsaXQoXCIsXCIpO3Q9dC5tYXAoZnVuY3Rpb24odCl7cmV0dXJuIHQrJ1tkYXRhLXRhcmdldD1cIicrZSsnXCJdLCcrdCsnW2hyZWY9XCInK2UrJ1wiXSd9KTt2YXIgbj10bihbXS5zbGljZS5jYWxsKGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwodC5qb2luKFwiLFwiKSkpKTtuLmhhc0NsYXNzKGNuKT8obi5jbG9zZXN0KHBuKS5maW5kKHluKS5hZGRDbGFzcyhobiksbi5hZGRDbGFzcyhobikpOihuLmFkZENsYXNzKGhuKSxuLnBhcmVudHMoZG4pLnByZXYoZ24rXCIsIFwiK21uKS5hZGRDbGFzcyhobiksbi5wYXJlbnRzKGRuKS5wcmV2KF9uKS5jaGlsZHJlbihnbikuYWRkQ2xhc3MoaG4pKSx0bih0aGlzLl9zY3JvbGxFbGVtZW50KS50cmlnZ2VyKGxuLkFDVElWQVRFLHtyZWxhdGVkVGFyZ2V0OmV9KX0sdC5fY2xlYXI9ZnVuY3Rpb24oKXt2YXIgdD1bXS5zbGljZS5jYWxsKGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwodGhpcy5fc2VsZWN0b3IpKTt0bih0KS5maWx0ZXIoZm4pLnJlbW92ZUNsYXNzKGhuKX0sbi5falF1ZXJ5SW50ZXJmYWNlPWZ1bmN0aW9uKGUpe3JldHVybiB0aGlzLmVhY2goZnVuY3Rpb24oKXt2YXIgdD10bih0aGlzKS5kYXRhKG5uKTtpZih0fHwodD1uZXcgbih0aGlzLFwib2JqZWN0XCI9PXR5cGVvZiBlJiZlKSx0bih0aGlzKS5kYXRhKG5uLHQpKSxcInN0cmluZ1wiPT10eXBlb2YgZSl7aWYoXCJ1bmRlZmluZWRcIj09dHlwZW9mIHRbZV0pdGhyb3cgbmV3IFR5cGVFcnJvcignTm8gbWV0aG9kIG5hbWVkIFwiJytlKydcIicpO3RbZV0oKX19KX0scyhuLG51bGwsW3trZXk6XCJWRVJTSU9OXCIsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuXCI0LjEuM1wifX0se2tleTpcIkRlZmF1bHRcIixnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gc259fV0pLG59KCksdG4od2luZG93KS5vbihsbi5MT0FEX0RBVEFfQVBJLGZ1bmN0aW9uKCl7Zm9yKHZhciB0PVtdLnNsaWNlLmNhbGwoZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCh1bikpLGU9dC5sZW5ndGg7ZS0tOyl7dmFyIG49dG4odFtlXSk7VG4uX2pRdWVyeUludGVyZmFjZS5jYWxsKG4sbi5kYXRhKCkpfX0pLHRuLmZuW2VuXT1Ubi5falF1ZXJ5SW50ZXJmYWNlLHRuLmZuW2VuXS5Db25zdHJ1Y3Rvcj1Ubix0bi5mbltlbl0ubm9Db25mbGljdD1mdW5jdGlvbigpe3JldHVybiB0bi5mbltlbl09b24sVG4uX2pRdWVyeUludGVyZmFjZX0sVG4pLEduPShJbj1cIi5cIisoU249XCJicy50YWJcIiksQW49KGJuPWUpLmZuLnRhYixEbj17SElERTpcImhpZGVcIitJbixISURERU46XCJoaWRkZW5cIitJbixTSE9XOlwic2hvd1wiK0luLFNIT1dOOlwic2hvd25cIitJbixDTElDS19EQVRBX0FQSTpcImNsaWNrXCIrSW4rXCIuZGF0YS1hcGlcIn0sd249XCJkcm9wZG93bi1tZW51XCIsTm49XCJhY3RpdmVcIixPbj1cImRpc2FibGVkXCIsa249XCJmYWRlXCIsUG49XCJzaG93XCIsam49XCIuZHJvcGRvd25cIixIbj1cIi5uYXYsIC5saXN0LWdyb3VwXCIsTG49XCIuYWN0aXZlXCIsUm49XCI+IGxpID4gLmFjdGl2ZVwiLHhuPSdbZGF0YS10b2dnbGU9XCJ0YWJcIl0sIFtkYXRhLXRvZ2dsZT1cInBpbGxcIl0sIFtkYXRhLXRvZ2dsZT1cImxpc3RcIl0nLFduPVwiLmRyb3Bkb3duLXRvZ2dsZVwiLFVuPVwiPiAuZHJvcGRvd24tbWVudSAuYWN0aXZlXCIscW49ZnVuY3Rpb24oKXtmdW5jdGlvbiBpKHQpe3RoaXMuX2VsZW1lbnQ9dH12YXIgdD1pLnByb3RvdHlwZTtyZXR1cm4gdC5zaG93PWZ1bmN0aW9uKCl7dmFyIG49dGhpcztpZighKHRoaXMuX2VsZW1lbnQucGFyZW50Tm9kZSYmdGhpcy5fZWxlbWVudC5wYXJlbnROb2RlLm5vZGVUeXBlPT09Tm9kZS5FTEVNRU5UX05PREUmJmJuKHRoaXMuX2VsZW1lbnQpLmhhc0NsYXNzKE5uKXx8Ym4odGhpcy5fZWxlbWVudCkuaGFzQ2xhc3MoT24pKSl7dmFyIHQsaSxlPWJuKHRoaXMuX2VsZW1lbnQpLmNsb3Nlc3QoSG4pWzBdLHI9Rm4uZ2V0U2VsZWN0b3JGcm9tRWxlbWVudCh0aGlzLl9lbGVtZW50KTtpZihlKXt2YXIgbz1cIlVMXCI9PT1lLm5vZGVOYW1lP1JuOkxuO2k9KGk9Ym4ubWFrZUFycmF5KGJuKGUpLmZpbmQobykpKVtpLmxlbmd0aC0xXX12YXIgcz1ibi5FdmVudChEbi5ISURFLHtyZWxhdGVkVGFyZ2V0OnRoaXMuX2VsZW1lbnR9KSxhPWJuLkV2ZW50KERuLlNIT1cse3JlbGF0ZWRUYXJnZXQ6aX0pO2lmKGkmJmJuKGkpLnRyaWdnZXIocyksYm4odGhpcy5fZWxlbWVudCkudHJpZ2dlcihhKSwhYS5pc0RlZmF1bHRQcmV2ZW50ZWQoKSYmIXMuaXNEZWZhdWx0UHJldmVudGVkKCkpe3ImJih0PWRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IocikpLHRoaXMuX2FjdGl2YXRlKHRoaXMuX2VsZW1lbnQsZSk7dmFyIGw9ZnVuY3Rpb24oKXt2YXIgdD1ibi5FdmVudChEbi5ISURERU4se3JlbGF0ZWRUYXJnZXQ6bi5fZWxlbWVudH0pLGU9Ym4uRXZlbnQoRG4uU0hPV04se3JlbGF0ZWRUYXJnZXQ6aX0pO2JuKGkpLnRyaWdnZXIodCksYm4obi5fZWxlbWVudCkudHJpZ2dlcihlKX07dD90aGlzLl9hY3RpdmF0ZSh0LHQucGFyZW50Tm9kZSxsKTpsKCl9fX0sdC5kaXNwb3NlPWZ1bmN0aW9uKCl7Ym4ucmVtb3ZlRGF0YSh0aGlzLl9lbGVtZW50LFNuKSx0aGlzLl9lbGVtZW50PW51bGx9LHQuX2FjdGl2YXRlPWZ1bmN0aW9uKHQsZSxuKXt2YXIgaT10aGlzLHI9KFwiVUxcIj09PWUubm9kZU5hbWU/Ym4oZSkuZmluZChSbik6Ym4oZSkuY2hpbGRyZW4oTG4pKVswXSxvPW4mJnImJmJuKHIpLmhhc0NsYXNzKGtuKSxzPWZ1bmN0aW9uKCl7cmV0dXJuIGkuX3RyYW5zaXRpb25Db21wbGV0ZSh0LHIsbil9O2lmKHImJm8pe3ZhciBhPUZuLmdldFRyYW5zaXRpb25EdXJhdGlvbkZyb21FbGVtZW50KHIpO2JuKHIpLm9uZShGbi5UUkFOU0lUSU9OX0VORCxzKS5lbXVsYXRlVHJhbnNpdGlvbkVuZChhKX1lbHNlIHMoKX0sdC5fdHJhbnNpdGlvbkNvbXBsZXRlPWZ1bmN0aW9uKHQsZSxuKXtpZihlKXtibihlKS5yZW1vdmVDbGFzcyhQbitcIiBcIitObik7dmFyIGk9Ym4oZS5wYXJlbnROb2RlKS5maW5kKFVuKVswXTtpJiZibihpKS5yZW1vdmVDbGFzcyhObiksXCJ0YWJcIj09PWUuZ2V0QXR0cmlidXRlKFwicm9sZVwiKSYmZS5zZXRBdHRyaWJ1dGUoXCJhcmlhLXNlbGVjdGVkXCIsITEpfWlmKGJuKHQpLmFkZENsYXNzKE5uKSxcInRhYlwiPT09dC5nZXRBdHRyaWJ1dGUoXCJyb2xlXCIpJiZ0LnNldEF0dHJpYnV0ZShcImFyaWEtc2VsZWN0ZWRcIiwhMCksRm4ucmVmbG93KHQpLGJuKHQpLmFkZENsYXNzKFBuKSx0LnBhcmVudE5vZGUmJmJuKHQucGFyZW50Tm9kZSkuaGFzQ2xhc3Mod24pKXt2YXIgcj1ibih0KS5jbG9zZXN0KGpuKVswXTtpZihyKXt2YXIgbz1bXS5zbGljZS5jYWxsKHIucXVlcnlTZWxlY3RvckFsbChXbikpO2JuKG8pLmFkZENsYXNzKE5uKX10LnNldEF0dHJpYnV0ZShcImFyaWEtZXhwYW5kZWRcIiwhMCl9biYmbigpfSxpLl9qUXVlcnlJbnRlcmZhY2U9ZnVuY3Rpb24obil7cmV0dXJuIHRoaXMuZWFjaChmdW5jdGlvbigpe3ZhciB0PWJuKHRoaXMpLGU9dC5kYXRhKFNuKTtpZihlfHwoZT1uZXcgaSh0aGlzKSx0LmRhdGEoU24sZSkpLFwic3RyaW5nXCI9PXR5cGVvZiBuKXtpZihcInVuZGVmaW5lZFwiPT10eXBlb2YgZVtuXSl0aHJvdyBuZXcgVHlwZUVycm9yKCdObyBtZXRob2QgbmFtZWQgXCInK24rJ1wiJyk7ZVtuXSgpfX0pfSxzKGksbnVsbCxbe2tleTpcIlZFUlNJT05cIixnZXQ6ZnVuY3Rpb24oKXtyZXR1cm5cIjQuMS4zXCJ9fV0pLGl9KCksYm4oZG9jdW1lbnQpLm9uKERuLkNMSUNLX0RBVEFfQVBJLHhuLGZ1bmN0aW9uKHQpe3QucHJldmVudERlZmF1bHQoKSxxbi5falF1ZXJ5SW50ZXJmYWNlLmNhbGwoYm4odGhpcyksXCJzaG93XCIpfSksYm4uZm4udGFiPXFuLl9qUXVlcnlJbnRlcmZhY2UsYm4uZm4udGFiLkNvbnN0cnVjdG9yPXFuLGJuLmZuLnRhYi5ub0NvbmZsaWN0PWZ1bmN0aW9uKCl7cmV0dXJuIGJuLmZuLnRhYj1Bbixxbi5falF1ZXJ5SW50ZXJmYWNlfSxxbik7IWZ1bmN0aW9uKHQpe2lmKFwidW5kZWZpbmVkXCI9PXR5cGVvZiB0KXRocm93IG5ldyBUeXBlRXJyb3IoXCJCb290c3RyYXAncyBKYXZhU2NyaXB0IHJlcXVpcmVzIGpRdWVyeS4galF1ZXJ5IG11c3QgYmUgaW5jbHVkZWQgYmVmb3JlIEJvb3RzdHJhcCdzIEphdmFTY3JpcHQuXCIpO3ZhciBlPXQuZm4uanF1ZXJ5LnNwbGl0KFwiIFwiKVswXS5zcGxpdChcIi5cIik7aWYoZVswXTwyJiZlWzFdPDl8fDE9PT1lWzBdJiY5PT09ZVsxXSYmZVsyXTwxfHw0PD1lWzBdKXRocm93IG5ldyBFcnJvcihcIkJvb3RzdHJhcCdzIEphdmFTY3JpcHQgcmVxdWlyZXMgYXQgbGVhc3QgalF1ZXJ5IHYxLjkuMSBidXQgbGVzcyB0aGFuIHY0LjAuMFwiKX0oZSksdC5VdGlsPUZuLHQuQWxlcnQ9S24sdC5CdXR0b249TW4sdC5DYXJvdXNlbD1Rbix0LkNvbGxhcHNlPUJuLHQuRHJvcGRvd249Vm4sdC5Nb2RhbD1Zbix0LlBvcG92ZXI9Sm4sdC5TY3JvbGxzcHk9Wm4sdC5UYWI9R24sdC5Ub29sdGlwPXpuLE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pfSk7XHJcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWJvb3RzdHJhcC5taW4uanMubWFwXHJcbi8qKlxyXG4gKiBPd2wgQ2Fyb3VzZWwgdjIuMy40XHJcbiAqIENvcHlyaWdodCAyMDEzLTIwMTggRGF2aWQgRGV1dHNjaFxyXG4gKiBMaWNlbnNlZCB1bmRlcjogU0VFIExJQ0VOU0UgSU4gaHR0cHM6Ly9naXRodWIuY29tL093bENhcm91c2VsMi9Pd2xDYXJvdXNlbDIvYmxvYi9tYXN0ZXIvTElDRU5TRVxyXG4gKi9cclxuIWZ1bmN0aW9uKGEsYixjLGQpe2Z1bmN0aW9uIGUoYixjKXt0aGlzLnNldHRpbmdzPW51bGwsdGhpcy5vcHRpb25zPWEuZXh0ZW5kKHt9LGUuRGVmYXVsdHMsYyksdGhpcy4kZWxlbWVudD1hKGIpLHRoaXMuX2hhbmRsZXJzPXt9LHRoaXMuX3BsdWdpbnM9e30sdGhpcy5fc3VwcmVzcz17fSx0aGlzLl9jdXJyZW50PW51bGwsdGhpcy5fc3BlZWQ9bnVsbCx0aGlzLl9jb29yZGluYXRlcz1bXSx0aGlzLl9icmVha3BvaW50PW51bGwsdGhpcy5fd2lkdGg9bnVsbCx0aGlzLl9pdGVtcz1bXSx0aGlzLl9jbG9uZXM9W10sdGhpcy5fbWVyZ2Vycz1bXSx0aGlzLl93aWR0aHM9W10sdGhpcy5faW52YWxpZGF0ZWQ9e30sdGhpcy5fcGlwZT1bXSx0aGlzLl9kcmFnPXt0aW1lOm51bGwsdGFyZ2V0Om51bGwscG9pbnRlcjpudWxsLHN0YWdlOntzdGFydDpudWxsLGN1cnJlbnQ6bnVsbH0sZGlyZWN0aW9uOm51bGx9LHRoaXMuX3N0YXRlcz17Y3VycmVudDp7fSx0YWdzOntpbml0aWFsaXppbmc6W1wiYnVzeVwiXSxhbmltYXRpbmc6W1wiYnVzeVwiXSxkcmFnZ2luZzpbXCJpbnRlcmFjdGluZ1wiXX19LGEuZWFjaChbXCJvblJlc2l6ZVwiLFwib25UaHJvdHRsZWRSZXNpemVcIl0sYS5wcm94eShmdW5jdGlvbihiLGMpe3RoaXMuX2hhbmRsZXJzW2NdPWEucHJveHkodGhpc1tjXSx0aGlzKX0sdGhpcykpLGEuZWFjaChlLlBsdWdpbnMsYS5wcm94eShmdW5jdGlvbihhLGIpe3RoaXMuX3BsdWdpbnNbYS5jaGFyQXQoMCkudG9Mb3dlckNhc2UoKSthLnNsaWNlKDEpXT1uZXcgYih0aGlzKX0sdGhpcykpLGEuZWFjaChlLldvcmtlcnMsYS5wcm94eShmdW5jdGlvbihiLGMpe3RoaXMuX3BpcGUucHVzaCh7ZmlsdGVyOmMuZmlsdGVyLHJ1bjphLnByb3h5KGMucnVuLHRoaXMpfSl9LHRoaXMpKSx0aGlzLnNldHVwKCksdGhpcy5pbml0aWFsaXplKCl9ZS5EZWZhdWx0cz17aXRlbXM6Myxsb29wOiExLGNlbnRlcjohMSxyZXdpbmQ6ITEsY2hlY2tWaXNpYmlsaXR5OiEwLG1vdXNlRHJhZzohMCx0b3VjaERyYWc6ITAscHVsbERyYWc6ITAsZnJlZURyYWc6ITEsbWFyZ2luOjAsc3RhZ2VQYWRkaW5nOjAsbWVyZ2U6ITEsbWVyZ2VGaXQ6ITAsYXV0b1dpZHRoOiExLHN0YXJ0UG9zaXRpb246MCxydGw6ITEsc21hcnRTcGVlZDoyNTAsZmx1aWRTcGVlZDohMSxkcmFnRW5kU3BlZWQ6ITEscmVzcG9uc2l2ZTp7fSxyZXNwb25zaXZlUmVmcmVzaFJhdGU6MjAwLHJlc3BvbnNpdmVCYXNlRWxlbWVudDpiLGZhbGxiYWNrRWFzaW5nOlwic3dpbmdcIixzbGlkZVRyYW5zaXRpb246XCJcIixpbmZvOiExLG5lc3RlZEl0ZW1TZWxlY3RvcjohMSxpdGVtRWxlbWVudDpcImRpdlwiLHN0YWdlRWxlbWVudDpcImRpdlwiLHJlZnJlc2hDbGFzczpcIm93bC1yZWZyZXNoXCIsbG9hZGVkQ2xhc3M6XCJvd2wtbG9hZGVkXCIsbG9hZGluZ0NsYXNzOlwib3dsLWxvYWRpbmdcIixydGxDbGFzczpcIm93bC1ydGxcIixyZXNwb25zaXZlQ2xhc3M6XCJvd2wtcmVzcG9uc2l2ZVwiLGRyYWdDbGFzczpcIm93bC1kcmFnXCIsaXRlbUNsYXNzOlwib3dsLWl0ZW1cIixzdGFnZUNsYXNzOlwib3dsLXN0YWdlXCIsc3RhZ2VPdXRlckNsYXNzOlwib3dsLXN0YWdlLW91dGVyXCIsZ3JhYkNsYXNzOlwib3dsLWdyYWJcIn0sZS5XaWR0aD17RGVmYXVsdDpcImRlZmF1bHRcIixJbm5lcjpcImlubmVyXCIsT3V0ZXI6XCJvdXRlclwifSxlLlR5cGU9e0V2ZW50OlwiZXZlbnRcIixTdGF0ZTpcInN0YXRlXCJ9LGUuUGx1Z2lucz17fSxlLldvcmtlcnM9W3tmaWx0ZXI6W1wid2lkdGhcIixcInNldHRpbmdzXCJdLHJ1bjpmdW5jdGlvbigpe3RoaXMuX3dpZHRoPXRoaXMuJGVsZW1lbnQud2lkdGgoKX19LHtmaWx0ZXI6W1wid2lkdGhcIixcIml0ZW1zXCIsXCJzZXR0aW5nc1wiXSxydW46ZnVuY3Rpb24oYSl7YS5jdXJyZW50PXRoaXMuX2l0ZW1zJiZ0aGlzLl9pdGVtc1t0aGlzLnJlbGF0aXZlKHRoaXMuX2N1cnJlbnQpXX19LHtmaWx0ZXI6W1wiaXRlbXNcIixcInNldHRpbmdzXCJdLHJ1bjpmdW5jdGlvbigpe3RoaXMuJHN0YWdlLmNoaWxkcmVuKFwiLmNsb25lZFwiKS5yZW1vdmUoKX19LHtmaWx0ZXI6W1wid2lkdGhcIixcIml0ZW1zXCIsXCJzZXR0aW5nc1wiXSxydW46ZnVuY3Rpb24oYSl7dmFyIGI9dGhpcy5zZXR0aW5ncy5tYXJnaW58fFwiXCIsYz0hdGhpcy5zZXR0aW5ncy5hdXRvV2lkdGgsZD10aGlzLnNldHRpbmdzLnJ0bCxlPXt3aWR0aDpcImF1dG9cIixcIm1hcmdpbi1sZWZ0XCI6ZD9iOlwiXCIsXCJtYXJnaW4tcmlnaHRcIjpkP1wiXCI6Yn07IWMmJnRoaXMuJHN0YWdlLmNoaWxkcmVuKCkuY3NzKGUpLGEuY3NzPWV9fSx7ZmlsdGVyOltcIndpZHRoXCIsXCJpdGVtc1wiLFwic2V0dGluZ3NcIl0scnVuOmZ1bmN0aW9uKGEpe3ZhciBiPSh0aGlzLndpZHRoKCkvdGhpcy5zZXR0aW5ncy5pdGVtcykudG9GaXhlZCgzKS10aGlzLnNldHRpbmdzLm1hcmdpbixjPW51bGwsZD10aGlzLl9pdGVtcy5sZW5ndGgsZT0hdGhpcy5zZXR0aW5ncy5hdXRvV2lkdGgsZj1bXTtmb3IoYS5pdGVtcz17bWVyZ2U6ITEsd2lkdGg6Yn07ZC0tOyljPXRoaXMuX21lcmdlcnNbZF0sYz10aGlzLnNldHRpbmdzLm1lcmdlRml0JiZNYXRoLm1pbihjLHRoaXMuc2V0dGluZ3MuaXRlbXMpfHxjLGEuaXRlbXMubWVyZ2U9Yz4xfHxhLml0ZW1zLm1lcmdlLGZbZF09ZT9iKmM6dGhpcy5faXRlbXNbZF0ud2lkdGgoKTt0aGlzLl93aWR0aHM9Zn19LHtmaWx0ZXI6W1wiaXRlbXNcIixcInNldHRpbmdzXCJdLHJ1bjpmdW5jdGlvbigpe3ZhciBiPVtdLGM9dGhpcy5faXRlbXMsZD10aGlzLnNldHRpbmdzLGU9TWF0aC5tYXgoMipkLml0ZW1zLDQpLGY9MipNYXRoLmNlaWwoYy5sZW5ndGgvMiksZz1kLmxvb3AmJmMubGVuZ3RoP2QucmV3aW5kP2U6TWF0aC5tYXgoZSxmKTowLGg9XCJcIixpPVwiXCI7Zm9yKGcvPTI7Zz4wOyliLnB1c2godGhpcy5ub3JtYWxpemUoYi5sZW5ndGgvMiwhMCkpLGgrPWNbYltiLmxlbmd0aC0xXV1bMF0ub3V0ZXJIVE1MLGIucHVzaCh0aGlzLm5vcm1hbGl6ZShjLmxlbmd0aC0xLShiLmxlbmd0aC0xKS8yLCEwKSksaT1jW2JbYi5sZW5ndGgtMV1dWzBdLm91dGVySFRNTCtpLGctPTE7dGhpcy5fY2xvbmVzPWIsYShoKS5hZGRDbGFzcyhcImNsb25lZFwiKS5hcHBlbmRUbyh0aGlzLiRzdGFnZSksYShpKS5hZGRDbGFzcyhcImNsb25lZFwiKS5wcmVwZW5kVG8odGhpcy4kc3RhZ2UpfX0se2ZpbHRlcjpbXCJ3aWR0aFwiLFwiaXRlbXNcIixcInNldHRpbmdzXCJdLHJ1bjpmdW5jdGlvbigpe2Zvcih2YXIgYT10aGlzLnNldHRpbmdzLnJ0bD8xOi0xLGI9dGhpcy5fY2xvbmVzLmxlbmd0aCt0aGlzLl9pdGVtcy5sZW5ndGgsYz0tMSxkPTAsZT0wLGY9W107KytjPGI7KWQ9ZltjLTFdfHwwLGU9dGhpcy5fd2lkdGhzW3RoaXMucmVsYXRpdmUoYyldK3RoaXMuc2V0dGluZ3MubWFyZ2luLGYucHVzaChkK2UqYSk7dGhpcy5fY29vcmRpbmF0ZXM9Zn19LHtmaWx0ZXI6W1wid2lkdGhcIixcIml0ZW1zXCIsXCJzZXR0aW5nc1wiXSxydW46ZnVuY3Rpb24oKXt2YXIgYT10aGlzLnNldHRpbmdzLnN0YWdlUGFkZGluZyxiPXRoaXMuX2Nvb3JkaW5hdGVzLGM9e3dpZHRoOk1hdGguY2VpbChNYXRoLmFicyhiW2IubGVuZ3RoLTFdKSkrMiphLFwicGFkZGluZy1sZWZ0XCI6YXx8XCJcIixcInBhZGRpbmctcmlnaHRcIjphfHxcIlwifTt0aGlzLiRzdGFnZS5jc3MoYyl9fSx7ZmlsdGVyOltcIndpZHRoXCIsXCJpdGVtc1wiLFwic2V0dGluZ3NcIl0scnVuOmZ1bmN0aW9uKGEpe3ZhciBiPXRoaXMuX2Nvb3JkaW5hdGVzLmxlbmd0aCxjPSF0aGlzLnNldHRpbmdzLmF1dG9XaWR0aCxkPXRoaXMuJHN0YWdlLmNoaWxkcmVuKCk7aWYoYyYmYS5pdGVtcy5tZXJnZSlmb3IoO2ItLTspYS5jc3Mud2lkdGg9dGhpcy5fd2lkdGhzW3RoaXMucmVsYXRpdmUoYildLGQuZXEoYikuY3NzKGEuY3NzKTtlbHNlIGMmJihhLmNzcy53aWR0aD1hLml0ZW1zLndpZHRoLGQuY3NzKGEuY3NzKSl9fSx7ZmlsdGVyOltcIml0ZW1zXCJdLHJ1bjpmdW5jdGlvbigpe3RoaXMuX2Nvb3JkaW5hdGVzLmxlbmd0aDwxJiZ0aGlzLiRzdGFnZS5yZW1vdmVBdHRyKFwic3R5bGVcIil9fSx7ZmlsdGVyOltcIndpZHRoXCIsXCJpdGVtc1wiLFwic2V0dGluZ3NcIl0scnVuOmZ1bmN0aW9uKGEpe2EuY3VycmVudD1hLmN1cnJlbnQ/dGhpcy4kc3RhZ2UuY2hpbGRyZW4oKS5pbmRleChhLmN1cnJlbnQpOjAsYS5jdXJyZW50PU1hdGgubWF4KHRoaXMubWluaW11bSgpLE1hdGgubWluKHRoaXMubWF4aW11bSgpLGEuY3VycmVudCkpLHRoaXMucmVzZXQoYS5jdXJyZW50KX19LHtmaWx0ZXI6W1wicG9zaXRpb25cIl0scnVuOmZ1bmN0aW9uKCl7dGhpcy5hbmltYXRlKHRoaXMuY29vcmRpbmF0ZXModGhpcy5fY3VycmVudCkpfX0se2ZpbHRlcjpbXCJ3aWR0aFwiLFwicG9zaXRpb25cIixcIml0ZW1zXCIsXCJzZXR0aW5nc1wiXSxydW46ZnVuY3Rpb24oKXt2YXIgYSxiLGMsZCxlPXRoaXMuc2V0dGluZ3MucnRsPzE6LTEsZj0yKnRoaXMuc2V0dGluZ3Muc3RhZ2VQYWRkaW5nLGc9dGhpcy5jb29yZGluYXRlcyh0aGlzLmN1cnJlbnQoKSkrZixoPWcrdGhpcy53aWR0aCgpKmUsaT1bXTtmb3IoYz0wLGQ9dGhpcy5fY29vcmRpbmF0ZXMubGVuZ3RoO2M8ZDtjKyspYT10aGlzLl9jb29yZGluYXRlc1tjLTFdfHwwLGI9TWF0aC5hYnModGhpcy5fY29vcmRpbmF0ZXNbY10pK2YqZSwodGhpcy5vcChhLFwiPD1cIixnKSYmdGhpcy5vcChhLFwiPlwiLGgpfHx0aGlzLm9wKGIsXCI8XCIsZykmJnRoaXMub3AoYixcIj5cIixoKSkmJmkucHVzaChjKTt0aGlzLiRzdGFnZS5jaGlsZHJlbihcIi5hY3RpdmVcIikucmVtb3ZlQ2xhc3MoXCJhY3RpdmVcIiksdGhpcy4kc3RhZ2UuY2hpbGRyZW4oXCI6ZXEoXCIraS5qb2luKFwiKSwgOmVxKFwiKStcIilcIikuYWRkQ2xhc3MoXCJhY3RpdmVcIiksdGhpcy4kc3RhZ2UuY2hpbGRyZW4oXCIuY2VudGVyXCIpLnJlbW92ZUNsYXNzKFwiY2VudGVyXCIpLHRoaXMuc2V0dGluZ3MuY2VudGVyJiZ0aGlzLiRzdGFnZS5jaGlsZHJlbigpLmVxKHRoaXMuY3VycmVudCgpKS5hZGRDbGFzcyhcImNlbnRlclwiKX19XSxlLnByb3RvdHlwZS5pbml0aWFsaXplU3RhZ2U9ZnVuY3Rpb24oKXt0aGlzLiRzdGFnZT10aGlzLiRlbGVtZW50LmZpbmQoXCIuXCIrdGhpcy5zZXR0aW5ncy5zdGFnZUNsYXNzKSx0aGlzLiRzdGFnZS5sZW5ndGh8fCh0aGlzLiRlbGVtZW50LmFkZENsYXNzKHRoaXMub3B0aW9ucy5sb2FkaW5nQ2xhc3MpLHRoaXMuJHN0YWdlPWEoXCI8XCIrdGhpcy5zZXR0aW5ncy5zdGFnZUVsZW1lbnQrXCI+XCIse2NsYXNzOnRoaXMuc2V0dGluZ3Muc3RhZ2VDbGFzc30pLndyYXAoYShcIjxkaXYvPlwiLHtjbGFzczp0aGlzLnNldHRpbmdzLnN0YWdlT3V0ZXJDbGFzc30pKSx0aGlzLiRlbGVtZW50LmFwcGVuZCh0aGlzLiRzdGFnZS5wYXJlbnQoKSkpfSxlLnByb3RvdHlwZS5pbml0aWFsaXplSXRlbXM9ZnVuY3Rpb24oKXt2YXIgYj10aGlzLiRlbGVtZW50LmZpbmQoXCIub3dsLWl0ZW1cIik7aWYoYi5sZW5ndGgpcmV0dXJuIHRoaXMuX2l0ZW1zPWIuZ2V0KCkubWFwKGZ1bmN0aW9uKGIpe3JldHVybiBhKGIpfSksdGhpcy5fbWVyZ2Vycz10aGlzLl9pdGVtcy5tYXAoZnVuY3Rpb24oKXtyZXR1cm4gMX0pLHZvaWQgdGhpcy5yZWZyZXNoKCk7dGhpcy5yZXBsYWNlKHRoaXMuJGVsZW1lbnQuY2hpbGRyZW4oKS5ub3QodGhpcy4kc3RhZ2UucGFyZW50KCkpKSx0aGlzLmlzVmlzaWJsZSgpP3RoaXMucmVmcmVzaCgpOnRoaXMuaW52YWxpZGF0ZShcIndpZHRoXCIpLHRoaXMuJGVsZW1lbnQucmVtb3ZlQ2xhc3ModGhpcy5vcHRpb25zLmxvYWRpbmdDbGFzcykuYWRkQ2xhc3ModGhpcy5vcHRpb25zLmxvYWRlZENsYXNzKX0sZS5wcm90b3R5cGUuaW5pdGlhbGl6ZT1mdW5jdGlvbigpe2lmKHRoaXMuZW50ZXIoXCJpbml0aWFsaXppbmdcIiksdGhpcy50cmlnZ2VyKFwiaW5pdGlhbGl6ZVwiKSx0aGlzLiRlbGVtZW50LnRvZ2dsZUNsYXNzKHRoaXMuc2V0dGluZ3MucnRsQ2xhc3MsdGhpcy5zZXR0aW5ncy5ydGwpLHRoaXMuc2V0dGluZ3MuYXV0b1dpZHRoJiYhdGhpcy5pcyhcInByZS1sb2FkaW5nXCIpKXt2YXIgYSxiLGM7YT10aGlzLiRlbGVtZW50LmZpbmQoXCJpbWdcIiksYj10aGlzLnNldHRpbmdzLm5lc3RlZEl0ZW1TZWxlY3Rvcj9cIi5cIit0aGlzLnNldHRpbmdzLm5lc3RlZEl0ZW1TZWxlY3RvcjpkLGM9dGhpcy4kZWxlbWVudC5jaGlsZHJlbihiKS53aWR0aCgpLGEubGVuZ3RoJiZjPD0wJiZ0aGlzLnByZWxvYWRBdXRvV2lkdGhJbWFnZXMoYSl9dGhpcy5pbml0aWFsaXplU3RhZ2UoKSx0aGlzLmluaXRpYWxpemVJdGVtcygpLHRoaXMucmVnaXN0ZXJFdmVudEhhbmRsZXJzKCksdGhpcy5sZWF2ZShcImluaXRpYWxpemluZ1wiKSx0aGlzLnRyaWdnZXIoXCJpbml0aWFsaXplZFwiKX0sZS5wcm90b3R5cGUuaXNWaXNpYmxlPWZ1bmN0aW9uKCl7cmV0dXJuIXRoaXMuc2V0dGluZ3MuY2hlY2tWaXNpYmlsaXR5fHx0aGlzLiRlbGVtZW50LmlzKFwiOnZpc2libGVcIil9LGUucHJvdG90eXBlLnNldHVwPWZ1bmN0aW9uKCl7dmFyIGI9dGhpcy52aWV3cG9ydCgpLGM9dGhpcy5vcHRpb25zLnJlc3BvbnNpdmUsZD0tMSxlPW51bGw7Yz8oYS5lYWNoKGMsZnVuY3Rpb24oYSl7YTw9YiYmYT5kJiYoZD1OdW1iZXIoYSkpfSksZT1hLmV4dGVuZCh7fSx0aGlzLm9wdGlvbnMsY1tkXSksXCJmdW5jdGlvblwiPT10eXBlb2YgZS5zdGFnZVBhZGRpbmcmJihlLnN0YWdlUGFkZGluZz1lLnN0YWdlUGFkZGluZygpKSxkZWxldGUgZS5yZXNwb25zaXZlLGUucmVzcG9uc2l2ZUNsYXNzJiZ0aGlzLiRlbGVtZW50LmF0dHIoXCJjbGFzc1wiLHRoaXMuJGVsZW1lbnQuYXR0cihcImNsYXNzXCIpLnJlcGxhY2UobmV3IFJlZ0V4cChcIihcIit0aGlzLm9wdGlvbnMucmVzcG9uc2l2ZUNsYXNzK1wiLSlcXFxcUytcXFxcc1wiLFwiZ1wiKSxcIiQxXCIrZCkpKTplPWEuZXh0ZW5kKHt9LHRoaXMub3B0aW9ucyksdGhpcy50cmlnZ2VyKFwiY2hhbmdlXCIse3Byb3BlcnR5OntuYW1lOlwic2V0dGluZ3NcIix2YWx1ZTplfX0pLHRoaXMuX2JyZWFrcG9pbnQ9ZCx0aGlzLnNldHRpbmdzPWUsdGhpcy5pbnZhbGlkYXRlKFwic2V0dGluZ3NcIiksdGhpcy50cmlnZ2VyKFwiY2hhbmdlZFwiLHtwcm9wZXJ0eTp7bmFtZTpcInNldHRpbmdzXCIsdmFsdWU6dGhpcy5zZXR0aW5nc319KX0sZS5wcm90b3R5cGUub3B0aW9uc0xvZ2ljPWZ1bmN0aW9uKCl7dGhpcy5zZXR0aW5ncy5hdXRvV2lkdGgmJih0aGlzLnNldHRpbmdzLnN0YWdlUGFkZGluZz0hMSx0aGlzLnNldHRpbmdzLm1lcmdlPSExKX0sZS5wcm90b3R5cGUucHJlcGFyZT1mdW5jdGlvbihiKXt2YXIgYz10aGlzLnRyaWdnZXIoXCJwcmVwYXJlXCIse2NvbnRlbnQ6Yn0pO3JldHVybiBjLmRhdGF8fChjLmRhdGE9YShcIjxcIit0aGlzLnNldHRpbmdzLml0ZW1FbGVtZW50K1wiLz5cIikuYWRkQ2xhc3ModGhpcy5vcHRpb25zLml0ZW1DbGFzcykuYXBwZW5kKGIpKSx0aGlzLnRyaWdnZXIoXCJwcmVwYXJlZFwiLHtjb250ZW50OmMuZGF0YX0pLGMuZGF0YX0sZS5wcm90b3R5cGUudXBkYXRlPWZ1bmN0aW9uKCl7Zm9yKHZhciBiPTAsYz10aGlzLl9waXBlLmxlbmd0aCxkPWEucHJveHkoZnVuY3Rpb24oYSl7cmV0dXJuIHRoaXNbYV19LHRoaXMuX2ludmFsaWRhdGVkKSxlPXt9O2I8YzspKHRoaXMuX2ludmFsaWRhdGVkLmFsbHx8YS5ncmVwKHRoaXMuX3BpcGVbYl0uZmlsdGVyLGQpLmxlbmd0aD4wKSYmdGhpcy5fcGlwZVtiXS5ydW4oZSksYisrO3RoaXMuX2ludmFsaWRhdGVkPXt9LCF0aGlzLmlzKFwidmFsaWRcIikmJnRoaXMuZW50ZXIoXCJ2YWxpZFwiKX0sZS5wcm90b3R5cGUud2lkdGg9ZnVuY3Rpb24oYSl7c3dpdGNoKGE9YXx8ZS5XaWR0aC5EZWZhdWx0KXtjYXNlIGUuV2lkdGguSW5uZXI6Y2FzZSBlLldpZHRoLk91dGVyOnJldHVybiB0aGlzLl93aWR0aDtkZWZhdWx0OnJldHVybiB0aGlzLl93aWR0aC0yKnRoaXMuc2V0dGluZ3Muc3RhZ2VQYWRkaW5nK3RoaXMuc2V0dGluZ3MubWFyZ2lufX0sZS5wcm90b3R5cGUucmVmcmVzaD1mdW5jdGlvbigpe3RoaXMuZW50ZXIoXCJyZWZyZXNoaW5nXCIpLHRoaXMudHJpZ2dlcihcInJlZnJlc2hcIiksdGhpcy5zZXR1cCgpLHRoaXMub3B0aW9uc0xvZ2ljKCksdGhpcy4kZWxlbWVudC5hZGRDbGFzcyh0aGlzLm9wdGlvbnMucmVmcmVzaENsYXNzKSx0aGlzLnVwZGF0ZSgpLHRoaXMuJGVsZW1lbnQucmVtb3ZlQ2xhc3ModGhpcy5vcHRpb25zLnJlZnJlc2hDbGFzcyksdGhpcy5sZWF2ZShcInJlZnJlc2hpbmdcIiksdGhpcy50cmlnZ2VyKFwicmVmcmVzaGVkXCIpfSxlLnByb3RvdHlwZS5vblRocm90dGxlZFJlc2l6ZT1mdW5jdGlvbigpe2IuY2xlYXJUaW1lb3V0KHRoaXMucmVzaXplVGltZXIpLHRoaXMucmVzaXplVGltZXI9Yi5zZXRUaW1lb3V0KHRoaXMuX2hhbmRsZXJzLm9uUmVzaXplLHRoaXMuc2V0dGluZ3MucmVzcG9uc2l2ZVJlZnJlc2hSYXRlKX0sZS5wcm90b3R5cGUub25SZXNpemU9ZnVuY3Rpb24oKXtyZXR1cm4hIXRoaXMuX2l0ZW1zLmxlbmd0aCYmKHRoaXMuX3dpZHRoIT09dGhpcy4kZWxlbWVudC53aWR0aCgpJiYoISF0aGlzLmlzVmlzaWJsZSgpJiYodGhpcy5lbnRlcihcInJlc2l6aW5nXCIpLHRoaXMudHJpZ2dlcihcInJlc2l6ZVwiKS5pc0RlZmF1bHRQcmV2ZW50ZWQoKT8odGhpcy5sZWF2ZShcInJlc2l6aW5nXCIpLCExKToodGhpcy5pbnZhbGlkYXRlKFwid2lkdGhcIiksdGhpcy5yZWZyZXNoKCksdGhpcy5sZWF2ZShcInJlc2l6aW5nXCIpLHZvaWQgdGhpcy50cmlnZ2VyKFwicmVzaXplZFwiKSkpKSl9LGUucHJvdG90eXBlLnJlZ2lzdGVyRXZlbnRIYW5kbGVycz1mdW5jdGlvbigpe2Euc3VwcG9ydC50cmFuc2l0aW9uJiZ0aGlzLiRzdGFnZS5vbihhLnN1cHBvcnQudHJhbnNpdGlvbi5lbmQrXCIub3dsLmNvcmVcIixhLnByb3h5KHRoaXMub25UcmFuc2l0aW9uRW5kLHRoaXMpKSwhMSE9PXRoaXMuc2V0dGluZ3MucmVzcG9uc2l2ZSYmdGhpcy5vbihiLFwicmVzaXplXCIsdGhpcy5faGFuZGxlcnMub25UaHJvdHRsZWRSZXNpemUpLHRoaXMuc2V0dGluZ3MubW91c2VEcmFnJiYodGhpcy4kZWxlbWVudC5hZGRDbGFzcyh0aGlzLm9wdGlvbnMuZHJhZ0NsYXNzKSx0aGlzLiRzdGFnZS5vbihcIm1vdXNlZG93bi5vd2wuY29yZVwiLGEucHJveHkodGhpcy5vbkRyYWdTdGFydCx0aGlzKSksdGhpcy4kc3RhZ2Uub24oXCJkcmFnc3RhcnQub3dsLmNvcmUgc2VsZWN0c3RhcnQub3dsLmNvcmVcIixmdW5jdGlvbigpe3JldHVybiExfSkpLHRoaXMuc2V0dGluZ3MudG91Y2hEcmFnJiYodGhpcy4kc3RhZ2Uub24oXCJ0b3VjaHN0YXJ0Lm93bC5jb3JlXCIsYS5wcm94eSh0aGlzLm9uRHJhZ1N0YXJ0LHRoaXMpKSx0aGlzLiRzdGFnZS5vbihcInRvdWNoY2FuY2VsLm93bC5jb3JlXCIsYS5wcm94eSh0aGlzLm9uRHJhZ0VuZCx0aGlzKSkpfSxlLnByb3RvdHlwZS5vbkRyYWdTdGFydD1mdW5jdGlvbihiKXt2YXIgZD1udWxsOzMhPT1iLndoaWNoJiYoYS5zdXBwb3J0LnRyYW5zZm9ybT8oZD10aGlzLiRzdGFnZS5jc3MoXCJ0cmFuc2Zvcm1cIikucmVwbGFjZSgvLipcXCh8XFwpfCAvZyxcIlwiKS5zcGxpdChcIixcIiksZD17eDpkWzE2PT09ZC5sZW5ndGg/MTI6NF0seTpkWzE2PT09ZC5sZW5ndGg/MTM6NV19KTooZD10aGlzLiRzdGFnZS5wb3NpdGlvbigpLGQ9e3g6dGhpcy5zZXR0aW5ncy5ydGw/ZC5sZWZ0K3RoaXMuJHN0YWdlLndpZHRoKCktdGhpcy53aWR0aCgpK3RoaXMuc2V0dGluZ3MubWFyZ2luOmQubGVmdCx5OmQudG9wfSksdGhpcy5pcyhcImFuaW1hdGluZ1wiKSYmKGEuc3VwcG9ydC50cmFuc2Zvcm0/dGhpcy5hbmltYXRlKGQueCk6dGhpcy4kc3RhZ2Uuc3RvcCgpLHRoaXMuaW52YWxpZGF0ZShcInBvc2l0aW9uXCIpKSx0aGlzLiRlbGVtZW50LnRvZ2dsZUNsYXNzKHRoaXMub3B0aW9ucy5ncmFiQ2xhc3MsXCJtb3VzZWRvd25cIj09PWIudHlwZSksdGhpcy5zcGVlZCgwKSx0aGlzLl9kcmFnLnRpbWU9KG5ldyBEYXRlKS5nZXRUaW1lKCksdGhpcy5fZHJhZy50YXJnZXQ9YShiLnRhcmdldCksdGhpcy5fZHJhZy5zdGFnZS5zdGFydD1kLHRoaXMuX2RyYWcuc3RhZ2UuY3VycmVudD1kLHRoaXMuX2RyYWcucG9pbnRlcj10aGlzLnBvaW50ZXIoYiksYShjKS5vbihcIm1vdXNldXAub3dsLmNvcmUgdG91Y2hlbmQub3dsLmNvcmVcIixhLnByb3h5KHRoaXMub25EcmFnRW5kLHRoaXMpKSxhKGMpLm9uZShcIm1vdXNlbW92ZS5vd2wuY29yZSB0b3VjaG1vdmUub3dsLmNvcmVcIixhLnByb3h5KGZ1bmN0aW9uKGIpe3ZhciBkPXRoaXMuZGlmZmVyZW5jZSh0aGlzLl9kcmFnLnBvaW50ZXIsdGhpcy5wb2ludGVyKGIpKTthKGMpLm9uKFwibW91c2Vtb3ZlLm93bC5jb3JlIHRvdWNobW92ZS5vd2wuY29yZVwiLGEucHJveHkodGhpcy5vbkRyYWdNb3ZlLHRoaXMpKSxNYXRoLmFicyhkLngpPE1hdGguYWJzKGQueSkmJnRoaXMuaXMoXCJ2YWxpZFwiKXx8KGIucHJldmVudERlZmF1bHQoKSx0aGlzLmVudGVyKFwiZHJhZ2dpbmdcIiksdGhpcy50cmlnZ2VyKFwiZHJhZ1wiKSl9LHRoaXMpKSl9LGUucHJvdG90eXBlLm9uRHJhZ01vdmU9ZnVuY3Rpb24oYSl7dmFyIGI9bnVsbCxjPW51bGwsZD1udWxsLGU9dGhpcy5kaWZmZXJlbmNlKHRoaXMuX2RyYWcucG9pbnRlcix0aGlzLnBvaW50ZXIoYSkpLGY9dGhpcy5kaWZmZXJlbmNlKHRoaXMuX2RyYWcuc3RhZ2Uuc3RhcnQsZSk7dGhpcy5pcyhcImRyYWdnaW5nXCIpJiYoYS5wcmV2ZW50RGVmYXVsdCgpLHRoaXMuc2V0dGluZ3MubG9vcD8oYj10aGlzLmNvb3JkaW5hdGVzKHRoaXMubWluaW11bSgpKSxjPXRoaXMuY29vcmRpbmF0ZXModGhpcy5tYXhpbXVtKCkrMSktYixmLng9KChmLngtYiklYytjKSVjK2IpOihiPXRoaXMuc2V0dGluZ3MucnRsP3RoaXMuY29vcmRpbmF0ZXModGhpcy5tYXhpbXVtKCkpOnRoaXMuY29vcmRpbmF0ZXModGhpcy5taW5pbXVtKCkpLGM9dGhpcy5zZXR0aW5ncy5ydGw/dGhpcy5jb29yZGluYXRlcyh0aGlzLm1pbmltdW0oKSk6dGhpcy5jb29yZGluYXRlcyh0aGlzLm1heGltdW0oKSksZD10aGlzLnNldHRpbmdzLnB1bGxEcmFnPy0xKmUueC81OjAsZi54PU1hdGgubWF4KE1hdGgubWluKGYueCxiK2QpLGMrZCkpLHRoaXMuX2RyYWcuc3RhZ2UuY3VycmVudD1mLHRoaXMuYW5pbWF0ZShmLngpKX0sZS5wcm90b3R5cGUub25EcmFnRW5kPWZ1bmN0aW9uKGIpe3ZhciBkPXRoaXMuZGlmZmVyZW5jZSh0aGlzLl9kcmFnLnBvaW50ZXIsdGhpcy5wb2ludGVyKGIpKSxlPXRoaXMuX2RyYWcuc3RhZ2UuY3VycmVudCxmPWQueD4wXnRoaXMuc2V0dGluZ3MucnRsP1wibGVmdFwiOlwicmlnaHRcIjthKGMpLm9mZihcIi5vd2wuY29yZVwiKSx0aGlzLiRlbGVtZW50LnJlbW92ZUNsYXNzKHRoaXMub3B0aW9ucy5ncmFiQ2xhc3MpLCgwIT09ZC54JiZ0aGlzLmlzKFwiZHJhZ2dpbmdcIil8fCF0aGlzLmlzKFwidmFsaWRcIikpJiYodGhpcy5zcGVlZCh0aGlzLnNldHRpbmdzLmRyYWdFbmRTcGVlZHx8dGhpcy5zZXR0aW5ncy5zbWFydFNwZWVkKSx0aGlzLmN1cnJlbnQodGhpcy5jbG9zZXN0KGUueCwwIT09ZC54P2Y6dGhpcy5fZHJhZy5kaXJlY3Rpb24pKSx0aGlzLmludmFsaWRhdGUoXCJwb3NpdGlvblwiKSx0aGlzLnVwZGF0ZSgpLHRoaXMuX2RyYWcuZGlyZWN0aW9uPWYsKE1hdGguYWJzKGQueCk+M3x8KG5ldyBEYXRlKS5nZXRUaW1lKCktdGhpcy5fZHJhZy50aW1lPjMwMCkmJnRoaXMuX2RyYWcudGFyZ2V0Lm9uZShcImNsaWNrLm93bC5jb3JlXCIsZnVuY3Rpb24oKXtyZXR1cm4hMX0pKSx0aGlzLmlzKFwiZHJhZ2dpbmdcIikmJih0aGlzLmxlYXZlKFwiZHJhZ2dpbmdcIiksdGhpcy50cmlnZ2VyKFwiZHJhZ2dlZFwiKSl9LGUucHJvdG90eXBlLmNsb3Nlc3Q9ZnVuY3Rpb24oYixjKXt2YXIgZT0tMSxmPTMwLGc9dGhpcy53aWR0aCgpLGg9dGhpcy5jb29yZGluYXRlcygpO3JldHVybiB0aGlzLnNldHRpbmdzLmZyZWVEcmFnfHxhLmVhY2goaCxhLnByb3h5KGZ1bmN0aW9uKGEsaSl7cmV0dXJuXCJsZWZ0XCI9PT1jJiZiPmktZiYmYjxpK2Y/ZT1hOlwicmlnaHRcIj09PWMmJmI+aS1nLWYmJmI8aS1nK2Y/ZT1hKzE6dGhpcy5vcChiLFwiPFwiLGkpJiZ0aGlzLm9wKGIsXCI+XCIsaFthKzFdIT09ZD9oW2ErMV06aS1nKSYmKGU9XCJsZWZ0XCI9PT1jP2ErMTphKSwtMT09PWV9LHRoaXMpKSx0aGlzLnNldHRpbmdzLmxvb3B8fCh0aGlzLm9wKGIsXCI+XCIsaFt0aGlzLm1pbmltdW0oKV0pP2U9Yj10aGlzLm1pbmltdW0oKTp0aGlzLm9wKGIsXCI8XCIsaFt0aGlzLm1heGltdW0oKV0pJiYoZT1iPXRoaXMubWF4aW11bSgpKSksZX0sZS5wcm90b3R5cGUuYW5pbWF0ZT1mdW5jdGlvbihiKXt2YXIgYz10aGlzLnNwZWVkKCk+MDt0aGlzLmlzKFwiYW5pbWF0aW5nXCIpJiZ0aGlzLm9uVHJhbnNpdGlvbkVuZCgpLGMmJih0aGlzLmVudGVyKFwiYW5pbWF0aW5nXCIpLHRoaXMudHJpZ2dlcihcInRyYW5zbGF0ZVwiKSksYS5zdXBwb3J0LnRyYW5zZm9ybTNkJiZhLnN1cHBvcnQudHJhbnNpdGlvbj90aGlzLiRzdGFnZS5jc3Moe3RyYW5zZm9ybTpcInRyYW5zbGF0ZTNkKFwiK2IrXCJweCwwcHgsMHB4KVwiLHRyYW5zaXRpb246dGhpcy5zcGVlZCgpLzFlMytcInNcIisodGhpcy5zZXR0aW5ncy5zbGlkZVRyYW5zaXRpb24/XCIgXCIrdGhpcy5zZXR0aW5ncy5zbGlkZVRyYW5zaXRpb246XCJcIil9KTpjP3RoaXMuJHN0YWdlLmFuaW1hdGUoe2xlZnQ6YitcInB4XCJ9LHRoaXMuc3BlZWQoKSx0aGlzLnNldHRpbmdzLmZhbGxiYWNrRWFzaW5nLGEucHJveHkodGhpcy5vblRyYW5zaXRpb25FbmQsdGhpcykpOnRoaXMuJHN0YWdlLmNzcyh7bGVmdDpiK1wicHhcIn0pfSxlLnByb3RvdHlwZS5pcz1mdW5jdGlvbihhKXtyZXR1cm4gdGhpcy5fc3RhdGVzLmN1cnJlbnRbYV0mJnRoaXMuX3N0YXRlcy5jdXJyZW50W2FdPjB9LGUucHJvdG90eXBlLmN1cnJlbnQ9ZnVuY3Rpb24oYSl7aWYoYT09PWQpcmV0dXJuIHRoaXMuX2N1cnJlbnQ7aWYoMD09PXRoaXMuX2l0ZW1zLmxlbmd0aClyZXR1cm4gZDtpZihhPXRoaXMubm9ybWFsaXplKGEpLHRoaXMuX2N1cnJlbnQhPT1hKXt2YXIgYj10aGlzLnRyaWdnZXIoXCJjaGFuZ2VcIix7cHJvcGVydHk6e25hbWU6XCJwb3NpdGlvblwiLHZhbHVlOmF9fSk7Yi5kYXRhIT09ZCYmKGE9dGhpcy5ub3JtYWxpemUoYi5kYXRhKSksdGhpcy5fY3VycmVudD1hLHRoaXMuaW52YWxpZGF0ZShcInBvc2l0aW9uXCIpLHRoaXMudHJpZ2dlcihcImNoYW5nZWRcIix7cHJvcGVydHk6e25hbWU6XCJwb3NpdGlvblwiLHZhbHVlOnRoaXMuX2N1cnJlbnR9fSl9cmV0dXJuIHRoaXMuX2N1cnJlbnR9LGUucHJvdG90eXBlLmludmFsaWRhdGU9ZnVuY3Rpb24oYil7cmV0dXJuXCJzdHJpbmdcIj09PWEudHlwZShiKSYmKHRoaXMuX2ludmFsaWRhdGVkW2JdPSEwLHRoaXMuaXMoXCJ2YWxpZFwiKSYmdGhpcy5sZWF2ZShcInZhbGlkXCIpKSxhLm1hcCh0aGlzLl9pbnZhbGlkYXRlZCxmdW5jdGlvbihhLGIpe3JldHVybiBifSl9LGUucHJvdG90eXBlLnJlc2V0PWZ1bmN0aW9uKGEpeyhhPXRoaXMubm9ybWFsaXplKGEpKSE9PWQmJih0aGlzLl9zcGVlZD0wLHRoaXMuX2N1cnJlbnQ9YSx0aGlzLnN1cHByZXNzKFtcInRyYW5zbGF0ZVwiLFwidHJhbnNsYXRlZFwiXSksdGhpcy5hbmltYXRlKHRoaXMuY29vcmRpbmF0ZXMoYSkpLHRoaXMucmVsZWFzZShbXCJ0cmFuc2xhdGVcIixcInRyYW5zbGF0ZWRcIl0pKX0sZS5wcm90b3R5cGUubm9ybWFsaXplPWZ1bmN0aW9uKGEsYil7dmFyIGM9dGhpcy5faXRlbXMubGVuZ3RoLGU9Yj8wOnRoaXMuX2Nsb25lcy5sZW5ndGg7cmV0dXJuIXRoaXMuaXNOdW1lcmljKGEpfHxjPDE/YT1kOihhPDB8fGE+PWMrZSkmJihhPSgoYS1lLzIpJWMrYyklYytlLzIpLGF9LGUucHJvdG90eXBlLnJlbGF0aXZlPWZ1bmN0aW9uKGEpe3JldHVybiBhLT10aGlzLl9jbG9uZXMubGVuZ3RoLzIsdGhpcy5ub3JtYWxpemUoYSwhMCl9LGUucHJvdG90eXBlLm1heGltdW09ZnVuY3Rpb24oYSl7dmFyIGIsYyxkLGU9dGhpcy5zZXR0aW5ncyxmPXRoaXMuX2Nvb3JkaW5hdGVzLmxlbmd0aDtpZihlLmxvb3ApZj10aGlzLl9jbG9uZXMubGVuZ3RoLzIrdGhpcy5faXRlbXMubGVuZ3RoLTE7ZWxzZSBpZihlLmF1dG9XaWR0aHx8ZS5tZXJnZSl7aWYoYj10aGlzLl9pdGVtcy5sZW5ndGgpZm9yKGM9dGhpcy5faXRlbXNbLS1iXS53aWR0aCgpLGQ9dGhpcy4kZWxlbWVudC53aWR0aCgpO2ItLSYmISgoYys9dGhpcy5faXRlbXNbYl0ud2lkdGgoKSt0aGlzLnNldHRpbmdzLm1hcmdpbik+ZCk7KTtmPWIrMX1lbHNlIGY9ZS5jZW50ZXI/dGhpcy5faXRlbXMubGVuZ3RoLTE6dGhpcy5faXRlbXMubGVuZ3RoLWUuaXRlbXM7cmV0dXJuIGEmJihmLT10aGlzLl9jbG9uZXMubGVuZ3RoLzIpLE1hdGgubWF4KGYsMCl9LGUucHJvdG90eXBlLm1pbmltdW09ZnVuY3Rpb24oYSl7cmV0dXJuIGE/MDp0aGlzLl9jbG9uZXMubGVuZ3RoLzJ9LGUucHJvdG90eXBlLml0ZW1zPWZ1bmN0aW9uKGEpe3JldHVybiBhPT09ZD90aGlzLl9pdGVtcy5zbGljZSgpOihhPXRoaXMubm9ybWFsaXplKGEsITApLHRoaXMuX2l0ZW1zW2FdKX0sZS5wcm90b3R5cGUubWVyZ2Vycz1mdW5jdGlvbihhKXtyZXR1cm4gYT09PWQ/dGhpcy5fbWVyZ2Vycy5zbGljZSgpOihhPXRoaXMubm9ybWFsaXplKGEsITApLHRoaXMuX21lcmdlcnNbYV0pfSxlLnByb3RvdHlwZS5jbG9uZXM9ZnVuY3Rpb24oYil7dmFyIGM9dGhpcy5fY2xvbmVzLmxlbmd0aC8yLGU9Yyt0aGlzLl9pdGVtcy5sZW5ndGgsZj1mdW5jdGlvbihhKXtyZXR1cm4gYSUyPT0wP2UrYS8yOmMtKGErMSkvMn07cmV0dXJuIGI9PT1kP2EubWFwKHRoaXMuX2Nsb25lcyxmdW5jdGlvbihhLGIpe3JldHVybiBmKGIpfSk6YS5tYXAodGhpcy5fY2xvbmVzLGZ1bmN0aW9uKGEsYyl7cmV0dXJuIGE9PT1iP2YoYyk6bnVsbH0pfSxlLnByb3RvdHlwZS5zcGVlZD1mdW5jdGlvbihhKXtyZXR1cm4gYSE9PWQmJih0aGlzLl9zcGVlZD1hKSx0aGlzLl9zcGVlZH0sZS5wcm90b3R5cGUuY29vcmRpbmF0ZXM9ZnVuY3Rpb24oYil7dmFyIGMsZT0xLGY9Yi0xO3JldHVybiBiPT09ZD9hLm1hcCh0aGlzLl9jb29yZGluYXRlcyxhLnByb3h5KGZ1bmN0aW9uKGEsYil7cmV0dXJuIHRoaXMuY29vcmRpbmF0ZXMoYil9LHRoaXMpKToodGhpcy5zZXR0aW5ncy5jZW50ZXI/KHRoaXMuc2V0dGluZ3MucnRsJiYoZT0tMSxmPWIrMSksYz10aGlzLl9jb29yZGluYXRlc1tiXSxjKz0odGhpcy53aWR0aCgpLWMrKHRoaXMuX2Nvb3JkaW5hdGVzW2ZdfHwwKSkvMiplKTpjPXRoaXMuX2Nvb3JkaW5hdGVzW2ZdfHwwLGM9TWF0aC5jZWlsKGMpKX0sZS5wcm90b3R5cGUuZHVyYXRpb249ZnVuY3Rpb24oYSxiLGMpe3JldHVybiAwPT09Yz8wOk1hdGgubWluKE1hdGgubWF4KE1hdGguYWJzKGItYSksMSksNikqTWF0aC5hYnMoY3x8dGhpcy5zZXR0aW5ncy5zbWFydFNwZWVkKX0sZS5wcm90b3R5cGUudG89ZnVuY3Rpb24oYSxiKXt2YXIgYz10aGlzLmN1cnJlbnQoKSxkPW51bGwsZT1hLXRoaXMucmVsYXRpdmUoYyksZj0oZT4wKS0oZTwwKSxnPXRoaXMuX2l0ZW1zLmxlbmd0aCxoPXRoaXMubWluaW11bSgpLGk9dGhpcy5tYXhpbXVtKCk7dGhpcy5zZXR0aW5ncy5sb29wPyghdGhpcy5zZXR0aW5ncy5yZXdpbmQmJk1hdGguYWJzKGUpPmcvMiYmKGUrPS0xKmYqZyksYT1jK2UsKGQ9KChhLWgpJWcrZyklZytoKSE9PWEmJmQtZTw9aSYmZC1lPjAmJihjPWQtZSxhPWQsdGhpcy5yZXNldChjKSkpOnRoaXMuc2V0dGluZ3MucmV3aW5kPyhpKz0xLGE9KGElaStpKSVpKTphPU1hdGgubWF4KGgsTWF0aC5taW4oaSxhKSksdGhpcy5zcGVlZCh0aGlzLmR1cmF0aW9uKGMsYSxiKSksdGhpcy5jdXJyZW50KGEpLHRoaXMuaXNWaXNpYmxlKCkmJnRoaXMudXBkYXRlKCl9LGUucHJvdG90eXBlLm5leHQ9ZnVuY3Rpb24oYSl7YT1hfHwhMSx0aGlzLnRvKHRoaXMucmVsYXRpdmUodGhpcy5jdXJyZW50KCkpKzEsYSl9LGUucHJvdG90eXBlLnByZXY9ZnVuY3Rpb24oYSl7YT1hfHwhMSx0aGlzLnRvKHRoaXMucmVsYXRpdmUodGhpcy5jdXJyZW50KCkpLTEsYSl9LGUucHJvdG90eXBlLm9uVHJhbnNpdGlvbkVuZD1mdW5jdGlvbihhKXtpZihhIT09ZCYmKGEuc3RvcFByb3BhZ2F0aW9uKCksKGEudGFyZ2V0fHxhLnNyY0VsZW1lbnR8fGEub3JpZ2luYWxUYXJnZXQpIT09dGhpcy4kc3RhZ2UuZ2V0KDApKSlyZXR1cm4hMTt0aGlzLmxlYXZlKFwiYW5pbWF0aW5nXCIpLHRoaXMudHJpZ2dlcihcInRyYW5zbGF0ZWRcIil9LGUucHJvdG90eXBlLnZpZXdwb3J0PWZ1bmN0aW9uKCl7dmFyIGQ7cmV0dXJuIHRoaXMub3B0aW9ucy5yZXNwb25zaXZlQmFzZUVsZW1lbnQhPT1iP2Q9YSh0aGlzLm9wdGlvbnMucmVzcG9uc2l2ZUJhc2VFbGVtZW50KS53aWR0aCgpOmIuaW5uZXJXaWR0aD9kPWIuaW5uZXJXaWR0aDpjLmRvY3VtZW50RWxlbWVudCYmYy5kb2N1bWVudEVsZW1lbnQuY2xpZW50V2lkdGg/ZD1jLmRvY3VtZW50RWxlbWVudC5jbGllbnRXaWR0aDpjb25zb2xlLndhcm4oXCJDYW4gbm90IGRldGVjdCB2aWV3cG9ydCB3aWR0aC5cIiksZH0sZS5wcm90b3R5cGUucmVwbGFjZT1mdW5jdGlvbihiKXt0aGlzLiRzdGFnZS5lbXB0eSgpLHRoaXMuX2l0ZW1zPVtdLGImJihiPWIgaW5zdGFuY2VvZiBqUXVlcnk/YjphKGIpKSx0aGlzLnNldHRpbmdzLm5lc3RlZEl0ZW1TZWxlY3RvciYmKGI9Yi5maW5kKFwiLlwiK3RoaXMuc2V0dGluZ3MubmVzdGVkSXRlbVNlbGVjdG9yKSksYi5maWx0ZXIoZnVuY3Rpb24oKXtyZXR1cm4gMT09PXRoaXMubm9kZVR5cGV9KS5lYWNoKGEucHJveHkoZnVuY3Rpb24oYSxiKXtiPXRoaXMucHJlcGFyZShiKSx0aGlzLiRzdGFnZS5hcHBlbmQoYiksdGhpcy5faXRlbXMucHVzaChiKSx0aGlzLl9tZXJnZXJzLnB1c2goMSpiLmZpbmQoXCJbZGF0YS1tZXJnZV1cIikuYWRkQmFjayhcIltkYXRhLW1lcmdlXVwiKS5hdHRyKFwiZGF0YS1tZXJnZVwiKXx8MSl9LHRoaXMpKSx0aGlzLnJlc2V0KHRoaXMuaXNOdW1lcmljKHRoaXMuc2V0dGluZ3Muc3RhcnRQb3NpdGlvbik/dGhpcy5zZXR0aW5ncy5zdGFydFBvc2l0aW9uOjApLHRoaXMuaW52YWxpZGF0ZShcIml0ZW1zXCIpfSxlLnByb3RvdHlwZS5hZGQ9ZnVuY3Rpb24oYixjKXt2YXIgZT10aGlzLnJlbGF0aXZlKHRoaXMuX2N1cnJlbnQpO2M9Yz09PWQ/dGhpcy5faXRlbXMubGVuZ3RoOnRoaXMubm9ybWFsaXplKGMsITApLGI9YiBpbnN0YW5jZW9mIGpRdWVyeT9iOmEoYiksdGhpcy50cmlnZ2VyKFwiYWRkXCIse2NvbnRlbnQ6Yixwb3NpdGlvbjpjfSksYj10aGlzLnByZXBhcmUoYiksMD09PXRoaXMuX2l0ZW1zLmxlbmd0aHx8Yz09PXRoaXMuX2l0ZW1zLmxlbmd0aD8oMD09PXRoaXMuX2l0ZW1zLmxlbmd0aCYmdGhpcy4kc3RhZ2UuYXBwZW5kKGIpLDAhPT10aGlzLl9pdGVtcy5sZW5ndGgmJnRoaXMuX2l0ZW1zW2MtMV0uYWZ0ZXIoYiksdGhpcy5faXRlbXMucHVzaChiKSx0aGlzLl9tZXJnZXJzLnB1c2goMSpiLmZpbmQoXCJbZGF0YS1tZXJnZV1cIikuYWRkQmFjayhcIltkYXRhLW1lcmdlXVwiKS5hdHRyKFwiZGF0YS1tZXJnZVwiKXx8MSkpOih0aGlzLl9pdGVtc1tjXS5iZWZvcmUoYiksdGhpcy5faXRlbXMuc3BsaWNlKGMsMCxiKSx0aGlzLl9tZXJnZXJzLnNwbGljZShjLDAsMSpiLmZpbmQoXCJbZGF0YS1tZXJnZV1cIikuYWRkQmFjayhcIltkYXRhLW1lcmdlXVwiKS5hdHRyKFwiZGF0YS1tZXJnZVwiKXx8MSkpLHRoaXMuX2l0ZW1zW2VdJiZ0aGlzLnJlc2V0KHRoaXMuX2l0ZW1zW2VdLmluZGV4KCkpLHRoaXMuaW52YWxpZGF0ZShcIml0ZW1zXCIpLHRoaXMudHJpZ2dlcihcImFkZGVkXCIse2NvbnRlbnQ6Yixwb3NpdGlvbjpjfSl9LGUucHJvdG90eXBlLnJlbW92ZT1mdW5jdGlvbihhKXsoYT10aGlzLm5vcm1hbGl6ZShhLCEwKSkhPT1kJiYodGhpcy50cmlnZ2VyKFwicmVtb3ZlXCIse2NvbnRlbnQ6dGhpcy5faXRlbXNbYV0scG9zaXRpb246YX0pLHRoaXMuX2l0ZW1zW2FdLnJlbW92ZSgpLHRoaXMuX2l0ZW1zLnNwbGljZShhLDEpLHRoaXMuX21lcmdlcnMuc3BsaWNlKGEsMSksdGhpcy5pbnZhbGlkYXRlKFwiaXRlbXNcIiksdGhpcy50cmlnZ2VyKFwicmVtb3ZlZFwiLHtjb250ZW50Om51bGwscG9zaXRpb246YX0pKX0sZS5wcm90b3R5cGUucHJlbG9hZEF1dG9XaWR0aEltYWdlcz1mdW5jdGlvbihiKXtiLmVhY2goYS5wcm94eShmdW5jdGlvbihiLGMpe3RoaXMuZW50ZXIoXCJwcmUtbG9hZGluZ1wiKSxjPWEoYyksYShuZXcgSW1hZ2UpLm9uZShcImxvYWRcIixhLnByb3h5KGZ1bmN0aW9uKGEpe2MuYXR0cihcInNyY1wiLGEudGFyZ2V0LnNyYyksYy5jc3MoXCJvcGFjaXR5XCIsMSksdGhpcy5sZWF2ZShcInByZS1sb2FkaW5nXCIpLCF0aGlzLmlzKFwicHJlLWxvYWRpbmdcIikmJiF0aGlzLmlzKFwiaW5pdGlhbGl6aW5nXCIpJiZ0aGlzLnJlZnJlc2goKX0sdGhpcykpLmF0dHIoXCJzcmNcIixjLmF0dHIoXCJzcmNcIil8fGMuYXR0cihcImRhdGEtc3JjXCIpfHxjLmF0dHIoXCJkYXRhLXNyYy1yZXRpbmFcIikpfSx0aGlzKSl9LGUucHJvdG90eXBlLmRlc3Ryb3k9ZnVuY3Rpb24oKXt0aGlzLiRlbGVtZW50Lm9mZihcIi5vd2wuY29yZVwiKSx0aGlzLiRzdGFnZS5vZmYoXCIub3dsLmNvcmVcIiksYShjKS5vZmYoXCIub3dsLmNvcmVcIiksITEhPT10aGlzLnNldHRpbmdzLnJlc3BvbnNpdmUmJihiLmNsZWFyVGltZW91dCh0aGlzLnJlc2l6ZVRpbWVyKSx0aGlzLm9mZihiLFwicmVzaXplXCIsdGhpcy5faGFuZGxlcnMub25UaHJvdHRsZWRSZXNpemUpKTtmb3IodmFyIGQgaW4gdGhpcy5fcGx1Z2lucyl0aGlzLl9wbHVnaW5zW2RdLmRlc3Ryb3koKTt0aGlzLiRzdGFnZS5jaGlsZHJlbihcIi5jbG9uZWRcIikucmVtb3ZlKCksdGhpcy4kc3RhZ2UudW53cmFwKCksdGhpcy4kc3RhZ2UuY2hpbGRyZW4oKS5jb250ZW50cygpLnVud3JhcCgpLHRoaXMuJHN0YWdlLmNoaWxkcmVuKCkudW53cmFwKCksdGhpcy4kc3RhZ2UucmVtb3ZlKCksdGhpcy4kZWxlbWVudC5yZW1vdmVDbGFzcyh0aGlzLm9wdGlvbnMucmVmcmVzaENsYXNzKS5yZW1vdmVDbGFzcyh0aGlzLm9wdGlvbnMubG9hZGluZ0NsYXNzKS5yZW1vdmVDbGFzcyh0aGlzLm9wdGlvbnMubG9hZGVkQ2xhc3MpLnJlbW92ZUNsYXNzKHRoaXMub3B0aW9ucy5ydGxDbGFzcykucmVtb3ZlQ2xhc3ModGhpcy5vcHRpb25zLmRyYWdDbGFzcykucmVtb3ZlQ2xhc3ModGhpcy5vcHRpb25zLmdyYWJDbGFzcykuYXR0cihcImNsYXNzXCIsdGhpcy4kZWxlbWVudC5hdHRyKFwiY2xhc3NcIikucmVwbGFjZShuZXcgUmVnRXhwKHRoaXMub3B0aW9ucy5yZXNwb25zaXZlQ2xhc3MrXCItXFxcXFMrXFxcXHNcIixcImdcIiksXCJcIikpLnJlbW92ZURhdGEoXCJvd2wuY2Fyb3VzZWxcIil9LGUucHJvdG90eXBlLm9wPWZ1bmN0aW9uKGEsYixjKXt2YXIgZD10aGlzLnNldHRpbmdzLnJ0bDtzd2l0Y2goYil7Y2FzZVwiPFwiOnJldHVybiBkP2E+YzphPGM7Y2FzZVwiPlwiOnJldHVybiBkP2E8YzphPmM7Y2FzZVwiPj1cIjpyZXR1cm4gZD9hPD1jOmE+PWM7Y2FzZVwiPD1cIjpyZXR1cm4gZD9hPj1jOmE8PWN9fSxlLnByb3RvdHlwZS5vbj1mdW5jdGlvbihhLGIsYyxkKXthLmFkZEV2ZW50TGlzdGVuZXI/YS5hZGRFdmVudExpc3RlbmVyKGIsYyxkKTphLmF0dGFjaEV2ZW50JiZhLmF0dGFjaEV2ZW50KFwib25cIitiLGMpfSxlLnByb3RvdHlwZS5vZmY9ZnVuY3Rpb24oYSxiLGMsZCl7YS5yZW1vdmVFdmVudExpc3RlbmVyP2EucmVtb3ZlRXZlbnRMaXN0ZW5lcihiLGMsZCk6YS5kZXRhY2hFdmVudCYmYS5kZXRhY2hFdmVudChcIm9uXCIrYixjKX0sZS5wcm90b3R5cGUudHJpZ2dlcj1mdW5jdGlvbihiLGMsZCxmLGcpe3ZhciBoPXtpdGVtOntjb3VudDp0aGlzLl9pdGVtcy5sZW5ndGgsaW5kZXg6dGhpcy5jdXJyZW50KCl9fSxpPWEuY2FtZWxDYXNlKGEuZ3JlcChbXCJvblwiLGIsZF0sZnVuY3Rpb24oYSl7cmV0dXJuIGF9KS5qb2luKFwiLVwiKS50b0xvd2VyQ2FzZSgpKSxqPWEuRXZlbnQoW2IsXCJvd2xcIixkfHxcImNhcm91c2VsXCJdLmpvaW4oXCIuXCIpLnRvTG93ZXJDYXNlKCksYS5leHRlbmQoe3JlbGF0ZWRUYXJnZXQ6dGhpc30saCxjKSk7cmV0dXJuIHRoaXMuX3N1cHJlc3NbYl18fChhLmVhY2godGhpcy5fcGx1Z2lucyxmdW5jdGlvbihhLGIpe2Iub25UcmlnZ2VyJiZiLm9uVHJpZ2dlcihqKX0pLHRoaXMucmVnaXN0ZXIoe3R5cGU6ZS5UeXBlLkV2ZW50LG5hbWU6Yn0pLHRoaXMuJGVsZW1lbnQudHJpZ2dlcihqKSx0aGlzLnNldHRpbmdzJiZcImZ1bmN0aW9uXCI9PXR5cGVvZiB0aGlzLnNldHRpbmdzW2ldJiZ0aGlzLnNldHRpbmdzW2ldLmNhbGwodGhpcyxqKSksan0sZS5wcm90b3R5cGUuZW50ZXI9ZnVuY3Rpb24oYil7YS5lYWNoKFtiXS5jb25jYXQodGhpcy5fc3RhdGVzLnRhZ3NbYl18fFtdKSxhLnByb3h5KGZ1bmN0aW9uKGEsYil7dGhpcy5fc3RhdGVzLmN1cnJlbnRbYl09PT1kJiYodGhpcy5fc3RhdGVzLmN1cnJlbnRbYl09MCksdGhpcy5fc3RhdGVzLmN1cnJlbnRbYl0rK30sdGhpcykpfSxlLnByb3RvdHlwZS5sZWF2ZT1mdW5jdGlvbihiKXthLmVhY2goW2JdLmNvbmNhdCh0aGlzLl9zdGF0ZXMudGFnc1tiXXx8W10pLGEucHJveHkoZnVuY3Rpb24oYSxiKXt0aGlzLl9zdGF0ZXMuY3VycmVudFtiXS0tfSx0aGlzKSl9LGUucHJvdG90eXBlLnJlZ2lzdGVyPWZ1bmN0aW9uKGIpe2lmKGIudHlwZT09PWUuVHlwZS5FdmVudCl7aWYoYS5ldmVudC5zcGVjaWFsW2IubmFtZV18fChhLmV2ZW50LnNwZWNpYWxbYi5uYW1lXT17fSksIWEuZXZlbnQuc3BlY2lhbFtiLm5hbWVdLm93bCl7dmFyIGM9YS5ldmVudC5zcGVjaWFsW2IubmFtZV0uX2RlZmF1bHQ7YS5ldmVudC5zcGVjaWFsW2IubmFtZV0uX2RlZmF1bHQ9ZnVuY3Rpb24oYSl7cmV0dXJuIWN8fCFjLmFwcGx5fHxhLm5hbWVzcGFjZSYmLTEhPT1hLm5hbWVzcGFjZS5pbmRleE9mKFwib3dsXCIpP2EubmFtZXNwYWNlJiZhLm5hbWVzcGFjZS5pbmRleE9mKFwib3dsXCIpPi0xOmMuYXBwbHkodGhpcyxhcmd1bWVudHMpfSxhLmV2ZW50LnNwZWNpYWxbYi5uYW1lXS5vd2w9ITB9fWVsc2UgYi50eXBlPT09ZS5UeXBlLlN0YXRlJiYodGhpcy5fc3RhdGVzLnRhZ3NbYi5uYW1lXT90aGlzLl9zdGF0ZXMudGFnc1tiLm5hbWVdPXRoaXMuX3N0YXRlcy50YWdzW2IubmFtZV0uY29uY2F0KGIudGFncyk6dGhpcy5fc3RhdGVzLnRhZ3NbYi5uYW1lXT1iLnRhZ3MsdGhpcy5fc3RhdGVzLnRhZ3NbYi5uYW1lXT1hLmdyZXAodGhpcy5fc3RhdGVzLnRhZ3NbYi5uYW1lXSxhLnByb3h5KGZ1bmN0aW9uKGMsZCl7cmV0dXJuIGEuaW5BcnJheShjLHRoaXMuX3N0YXRlcy50YWdzW2IubmFtZV0pPT09ZH0sdGhpcykpKX0sZS5wcm90b3R5cGUuc3VwcHJlc3M9ZnVuY3Rpb24oYil7YS5lYWNoKGIsYS5wcm94eShmdW5jdGlvbihhLGIpe3RoaXMuX3N1cHJlc3NbYl09ITB9LHRoaXMpKX0sZS5wcm90b3R5cGUucmVsZWFzZT1mdW5jdGlvbihiKXthLmVhY2goYixhLnByb3h5KGZ1bmN0aW9uKGEsYil7ZGVsZXRlIHRoaXMuX3N1cHJlc3NbYl19LHRoaXMpKX0sZS5wcm90b3R5cGUucG9pbnRlcj1mdW5jdGlvbihhKXt2YXIgYz17eDpudWxsLHk6bnVsbH07cmV0dXJuIGE9YS5vcmlnaW5hbEV2ZW50fHxhfHxiLmV2ZW50LGE9YS50b3VjaGVzJiZhLnRvdWNoZXMubGVuZ3RoP2EudG91Y2hlc1swXTphLmNoYW5nZWRUb3VjaGVzJiZhLmNoYW5nZWRUb3VjaGVzLmxlbmd0aD9hLmNoYW5nZWRUb3VjaGVzWzBdOmEsYS5wYWdlWD8oYy54PWEucGFnZVgsYy55PWEucGFnZVkpOihjLng9YS5jbGllbnRYLGMueT1hLmNsaWVudFkpLGN9LGUucHJvdG90eXBlLmlzTnVtZXJpYz1mdW5jdGlvbihhKXtyZXR1cm4haXNOYU4ocGFyc2VGbG9hdChhKSl9LGUucHJvdG90eXBlLmRpZmZlcmVuY2U9ZnVuY3Rpb24oYSxiKXtyZXR1cm57eDphLngtYi54LHk6YS55LWIueX19LGEuZm4ub3dsQ2Fyb3VzZWw9ZnVuY3Rpb24oYil7dmFyIGM9QXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoYXJndW1lbnRzLDEpO3JldHVybiB0aGlzLmVhY2goZnVuY3Rpb24oKXt2YXIgZD1hKHRoaXMpLGY9ZC5kYXRhKFwib3dsLmNhcm91c2VsXCIpO2Z8fChmPW5ldyBlKHRoaXMsXCJvYmplY3RcIj09dHlwZW9mIGImJmIpLGQuZGF0YShcIm93bC5jYXJvdXNlbFwiLGYpLGEuZWFjaChbXCJuZXh0XCIsXCJwcmV2XCIsXCJ0b1wiLFwiZGVzdHJveVwiLFwicmVmcmVzaFwiLFwicmVwbGFjZVwiLFwiYWRkXCIsXCJyZW1vdmVcIl0sZnVuY3Rpb24oYixjKXtmLnJlZ2lzdGVyKHt0eXBlOmUuVHlwZS5FdmVudCxuYW1lOmN9KSxmLiRlbGVtZW50Lm9uKGMrXCIub3dsLmNhcm91c2VsLmNvcmVcIixhLnByb3h5KGZ1bmN0aW9uKGEpe2EubmFtZXNwYWNlJiZhLnJlbGF0ZWRUYXJnZXQhPT10aGlzJiYodGhpcy5zdXBwcmVzcyhbY10pLGZbY10uYXBwbHkodGhpcyxbXS5zbGljZS5jYWxsKGFyZ3VtZW50cywxKSksdGhpcy5yZWxlYXNlKFtjXSkpfSxmKSl9KSksXCJzdHJpbmdcIj09dHlwZW9mIGImJlwiX1wiIT09Yi5jaGFyQXQoMCkmJmZbYl0uYXBwbHkoZixjKX0pfSxhLmZuLm93bENhcm91c2VsLkNvbnN0cnVjdG9yPWV9KHdpbmRvdy5aZXB0b3x8d2luZG93LmpRdWVyeSx3aW5kb3csZG9jdW1lbnQpLGZ1bmN0aW9uKGEsYixjLGQpe3ZhciBlPWZ1bmN0aW9uKGIpe3RoaXMuX2NvcmU9Yix0aGlzLl9pbnRlcnZhbD1udWxsLHRoaXMuX3Zpc2libGU9bnVsbCx0aGlzLl9oYW5kbGVycz17XCJpbml0aWFsaXplZC5vd2wuY2Fyb3VzZWxcIjphLnByb3h5KGZ1bmN0aW9uKGEpe2EubmFtZXNwYWNlJiZ0aGlzLl9jb3JlLnNldHRpbmdzLmF1dG9SZWZyZXNoJiZ0aGlzLndhdGNoKCl9LHRoaXMpfSx0aGlzLl9jb3JlLm9wdGlvbnM9YS5leHRlbmQoe30sZS5EZWZhdWx0cyx0aGlzLl9jb3JlLm9wdGlvbnMpLHRoaXMuX2NvcmUuJGVsZW1lbnQub24odGhpcy5faGFuZGxlcnMpfTtlLkRlZmF1bHRzPXthdXRvUmVmcmVzaDohMCxhdXRvUmVmcmVzaEludGVydmFsOjUwMH0sZS5wcm90b3R5cGUud2F0Y2g9ZnVuY3Rpb24oKXt0aGlzLl9pbnRlcnZhbHx8KHRoaXMuX3Zpc2libGU9dGhpcy5fY29yZS5pc1Zpc2libGUoKSx0aGlzLl9pbnRlcnZhbD1iLnNldEludGVydmFsKGEucHJveHkodGhpcy5yZWZyZXNoLHRoaXMpLHRoaXMuX2NvcmUuc2V0dGluZ3MuYXV0b1JlZnJlc2hJbnRlcnZhbCkpfSxlLnByb3RvdHlwZS5yZWZyZXNoPWZ1bmN0aW9uKCl7dGhpcy5fY29yZS5pc1Zpc2libGUoKSE9PXRoaXMuX3Zpc2libGUmJih0aGlzLl92aXNpYmxlPSF0aGlzLl92aXNpYmxlLHRoaXMuX2NvcmUuJGVsZW1lbnQudG9nZ2xlQ2xhc3MoXCJvd2wtaGlkZGVuXCIsIXRoaXMuX3Zpc2libGUpLHRoaXMuX3Zpc2libGUmJnRoaXMuX2NvcmUuaW52YWxpZGF0ZShcIndpZHRoXCIpJiZ0aGlzLl9jb3JlLnJlZnJlc2goKSl9LGUucHJvdG90eXBlLmRlc3Ryb3k9ZnVuY3Rpb24oKXt2YXIgYSxjO2IuY2xlYXJJbnRlcnZhbCh0aGlzLl9pbnRlcnZhbCk7Zm9yKGEgaW4gdGhpcy5faGFuZGxlcnMpdGhpcy5fY29yZS4kZWxlbWVudC5vZmYoYSx0aGlzLl9oYW5kbGVyc1thXSk7Zm9yKGMgaW4gT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXModGhpcykpXCJmdW5jdGlvblwiIT10eXBlb2YgdGhpc1tjXSYmKHRoaXNbY109bnVsbCl9LGEuZm4ub3dsQ2Fyb3VzZWwuQ29uc3RydWN0b3IuUGx1Z2lucy5BdXRvUmVmcmVzaD1lfSh3aW5kb3cuWmVwdG98fHdpbmRvdy5qUXVlcnksd2luZG93LGRvY3VtZW50KSxmdW5jdGlvbihhLGIsYyxkKXt2YXIgZT1mdW5jdGlvbihiKXt0aGlzLl9jb3JlPWIsdGhpcy5fbG9hZGVkPVtdLHRoaXMuX2hhbmRsZXJzPXtcImluaXRpYWxpemVkLm93bC5jYXJvdXNlbCBjaGFuZ2Uub3dsLmNhcm91c2VsIHJlc2l6ZWQub3dsLmNhcm91c2VsXCI6YS5wcm94eShmdW5jdGlvbihiKXtpZihiLm5hbWVzcGFjZSYmdGhpcy5fY29yZS5zZXR0aW5ncyYmdGhpcy5fY29yZS5zZXR0aW5ncy5sYXp5TG9hZCYmKGIucHJvcGVydHkmJlwicG9zaXRpb25cIj09Yi5wcm9wZXJ0eS5uYW1lfHxcImluaXRpYWxpemVkXCI9PWIudHlwZSkpe3ZhciBjPXRoaXMuX2NvcmUuc2V0dGluZ3MsZT1jLmNlbnRlciYmTWF0aC5jZWlsKGMuaXRlbXMvMil8fGMuaXRlbXMsZj1jLmNlbnRlciYmLTEqZXx8MCxnPShiLnByb3BlcnR5JiZiLnByb3BlcnR5LnZhbHVlIT09ZD9iLnByb3BlcnR5LnZhbHVlOnRoaXMuX2NvcmUuY3VycmVudCgpKStmLGg9dGhpcy5fY29yZS5jbG9uZXMoKS5sZW5ndGgsaT1hLnByb3h5KGZ1bmN0aW9uKGEsYil7dGhpcy5sb2FkKGIpfSx0aGlzKTtmb3IoYy5sYXp5TG9hZEVhZ2VyPjAmJihlKz1jLmxhenlMb2FkRWFnZXIsYy5sb29wJiYoZy09Yy5sYXp5TG9hZEVhZ2VyLGUrKykpO2YrKzxlOyl0aGlzLmxvYWQoaC8yK3RoaXMuX2NvcmUucmVsYXRpdmUoZykpLGgmJmEuZWFjaCh0aGlzLl9jb3JlLmNsb25lcyh0aGlzLl9jb3JlLnJlbGF0aXZlKGcpKSxpKSxnKyt9fSx0aGlzKX0sdGhpcy5fY29yZS5vcHRpb25zPWEuZXh0ZW5kKHt9LGUuRGVmYXVsdHMsdGhpcy5fY29yZS5vcHRpb25zKSx0aGlzLl9jb3JlLiRlbGVtZW50Lm9uKHRoaXMuX2hhbmRsZXJzKX07ZS5EZWZhdWx0cz17bGF6eUxvYWQ6ITEsbGF6eUxvYWRFYWdlcjowfSxlLnByb3RvdHlwZS5sb2FkPWZ1bmN0aW9uKGMpe3ZhciBkPXRoaXMuX2NvcmUuJHN0YWdlLmNoaWxkcmVuKCkuZXEoYyksZT1kJiZkLmZpbmQoXCIub3dsLWxhenlcIik7IWV8fGEuaW5BcnJheShkLmdldCgwKSx0aGlzLl9sb2FkZWQpPi0xfHwoZS5lYWNoKGEucHJveHkoZnVuY3Rpb24oYyxkKXt2YXIgZSxmPWEoZCksZz1iLmRldmljZVBpeGVsUmF0aW8+MSYmZi5hdHRyKFwiZGF0YS1zcmMtcmV0aW5hXCIpfHxmLmF0dHIoXCJkYXRhLXNyY1wiKXx8Zi5hdHRyKFwiZGF0YS1zcmNzZXRcIik7dGhpcy5fY29yZS50cmlnZ2VyKFwibG9hZFwiLHtlbGVtZW50OmYsdXJsOmd9LFwibGF6eVwiKSxmLmlzKFwiaW1nXCIpP2Yub25lKFwibG9hZC5vd2wubGF6eVwiLGEucHJveHkoZnVuY3Rpb24oKXtmLmNzcyhcIm9wYWNpdHlcIiwxKSx0aGlzLl9jb3JlLnRyaWdnZXIoXCJsb2FkZWRcIix7ZWxlbWVudDpmLHVybDpnfSxcImxhenlcIil9LHRoaXMpKS5hdHRyKFwic3JjXCIsZyk6Zi5pcyhcInNvdXJjZVwiKT9mLm9uZShcImxvYWQub3dsLmxhenlcIixhLnByb3h5KGZ1bmN0aW9uKCl7dGhpcy5fY29yZS50cmlnZ2VyKFwibG9hZGVkXCIse2VsZW1lbnQ6Zix1cmw6Z30sXCJsYXp5XCIpfSx0aGlzKSkuYXR0cihcInNyY3NldFwiLGcpOihlPW5ldyBJbWFnZSxlLm9ubG9hZD1hLnByb3h5KGZ1bmN0aW9uKCl7Zi5jc3Moe1wiYmFja2dyb3VuZC1pbWFnZVwiOid1cmwoXCInK2crJ1wiKScsb3BhY2l0eTpcIjFcIn0pLHRoaXMuX2NvcmUudHJpZ2dlcihcImxvYWRlZFwiLHtlbGVtZW50OmYsdXJsOmd9LFwibGF6eVwiKX0sdGhpcyksZS5zcmM9Zyl9LHRoaXMpKSx0aGlzLl9sb2FkZWQucHVzaChkLmdldCgwKSkpfSxlLnByb3RvdHlwZS5kZXN0cm95PWZ1bmN0aW9uKCl7dmFyIGEsYjtmb3IoYSBpbiB0aGlzLmhhbmRsZXJzKXRoaXMuX2NvcmUuJGVsZW1lbnQub2ZmKGEsdGhpcy5oYW5kbGVyc1thXSk7Zm9yKGIgaW4gT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXModGhpcykpXCJmdW5jdGlvblwiIT10eXBlb2YgdGhpc1tiXSYmKHRoaXNbYl09bnVsbCl9LGEuZm4ub3dsQ2Fyb3VzZWwuQ29uc3RydWN0b3IuUGx1Z2lucy5MYXp5PWV9KHdpbmRvdy5aZXB0b3x8d2luZG93LmpRdWVyeSx3aW5kb3csZG9jdW1lbnQpLGZ1bmN0aW9uKGEsYixjLGQpe3ZhciBlPWZ1bmN0aW9uKGMpe3RoaXMuX2NvcmU9Yyx0aGlzLl9wcmV2aW91c0hlaWdodD1udWxsLHRoaXMuX2hhbmRsZXJzPXtcImluaXRpYWxpemVkLm93bC5jYXJvdXNlbCByZWZyZXNoZWQub3dsLmNhcm91c2VsXCI6YS5wcm94eShmdW5jdGlvbihhKXthLm5hbWVzcGFjZSYmdGhpcy5fY29yZS5zZXR0aW5ncy5hdXRvSGVpZ2h0JiZ0aGlzLnVwZGF0ZSgpfSx0aGlzKSxcImNoYW5nZWQub3dsLmNhcm91c2VsXCI6YS5wcm94eShmdW5jdGlvbihhKXthLm5hbWVzcGFjZSYmdGhpcy5fY29yZS5zZXR0aW5ncy5hdXRvSGVpZ2h0JiZcInBvc2l0aW9uXCI9PT1hLnByb3BlcnR5Lm5hbWUmJnRoaXMudXBkYXRlKCl9LHRoaXMpLFwibG9hZGVkLm93bC5sYXp5XCI6YS5wcm94eShmdW5jdGlvbihhKXthLm5hbWVzcGFjZSYmdGhpcy5fY29yZS5zZXR0aW5ncy5hdXRvSGVpZ2h0JiZhLmVsZW1lbnQuY2xvc2VzdChcIi5cIit0aGlzLl9jb3JlLnNldHRpbmdzLml0ZW1DbGFzcykuaW5kZXgoKT09PXRoaXMuX2NvcmUuY3VycmVudCgpJiZ0aGlzLnVwZGF0ZSgpfSx0aGlzKX0sdGhpcy5fY29yZS5vcHRpb25zPWEuZXh0ZW5kKHt9LGUuRGVmYXVsdHMsdGhpcy5fY29yZS5vcHRpb25zKSx0aGlzLl9jb3JlLiRlbGVtZW50Lm9uKHRoaXMuX2hhbmRsZXJzKSx0aGlzLl9pbnRlcnZhbElkPW51bGw7dmFyIGQ9dGhpczthKGIpLm9uKFwibG9hZFwiLGZ1bmN0aW9uKCl7ZC5fY29yZS5zZXR0aW5ncy5hdXRvSGVpZ2h0JiZkLnVwZGF0ZSgpfSksYShiKS5yZXNpemUoZnVuY3Rpb24oKXtkLl9jb3JlLnNldHRpbmdzLmF1dG9IZWlnaHQmJihudWxsIT1kLl9pbnRlcnZhbElkJiZjbGVhclRpbWVvdXQoZC5faW50ZXJ2YWxJZCksZC5faW50ZXJ2YWxJZD1zZXRUaW1lb3V0KGZ1bmN0aW9uKCl7ZC51cGRhdGUoKX0sMjUwKSl9KX07ZS5EZWZhdWx0cz17YXV0b0hlaWdodDohMSxhdXRvSGVpZ2h0Q2xhc3M6XCJvd2wtaGVpZ2h0XCJ9LGUucHJvdG90eXBlLnVwZGF0ZT1mdW5jdGlvbigpe3ZhciBiPXRoaXMuX2NvcmUuX2N1cnJlbnQsYz1iK3RoaXMuX2NvcmUuc2V0dGluZ3MuaXRlbXMsZD10aGlzLl9jb3JlLnNldHRpbmdzLmxhenlMb2FkLGU9dGhpcy5fY29yZS4kc3RhZ2UuY2hpbGRyZW4oKS50b0FycmF5KCkuc2xpY2UoYixjKSxmPVtdLGc9MDthLmVhY2goZSxmdW5jdGlvbihiLGMpe2YucHVzaChhKGMpLmhlaWdodCgpKX0pLGc9TWF0aC5tYXguYXBwbHkobnVsbCxmKSxnPD0xJiZkJiZ0aGlzLl9wcmV2aW91c0hlaWdodCYmKGc9dGhpcy5fcHJldmlvdXNIZWlnaHQpLHRoaXMuX3ByZXZpb3VzSGVpZ2h0PWcsdGhpcy5fY29yZS4kc3RhZ2UucGFyZW50KCkuaGVpZ2h0KGcpLmFkZENsYXNzKHRoaXMuX2NvcmUuc2V0dGluZ3MuYXV0b0hlaWdodENsYXNzKX0sZS5wcm90b3R5cGUuZGVzdHJveT1mdW5jdGlvbigpe3ZhciBhLGI7Zm9yKGEgaW4gdGhpcy5faGFuZGxlcnMpdGhpcy5fY29yZS4kZWxlbWVudC5vZmYoYSx0aGlzLl9oYW5kbGVyc1thXSk7Zm9yKGIgaW4gT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXModGhpcykpXCJmdW5jdGlvblwiIT10eXBlb2YgdGhpc1tiXSYmKHRoaXNbYl09bnVsbCl9LGEuZm4ub3dsQ2Fyb3VzZWwuQ29uc3RydWN0b3IuUGx1Z2lucy5BdXRvSGVpZ2h0PWV9KHdpbmRvdy5aZXB0b3x8d2luZG93LmpRdWVyeSx3aW5kb3csZG9jdW1lbnQpLGZ1bmN0aW9uKGEsYixjLGQpe3ZhciBlPWZ1bmN0aW9uKGIpe3RoaXMuX2NvcmU9Yix0aGlzLl92aWRlb3M9e30sdGhpcy5fcGxheWluZz1udWxsLHRoaXMuX2hhbmRsZXJzPXtcImluaXRpYWxpemVkLm93bC5jYXJvdXNlbFwiOmEucHJveHkoZnVuY3Rpb24oYSl7YS5uYW1lc3BhY2UmJnRoaXMuX2NvcmUucmVnaXN0ZXIoe3R5cGU6XCJzdGF0ZVwiLG5hbWU6XCJwbGF5aW5nXCIsdGFnczpbXCJpbnRlcmFjdGluZ1wiXX0pfSx0aGlzKSxcInJlc2l6ZS5vd2wuY2Fyb3VzZWxcIjphLnByb3h5KGZ1bmN0aW9uKGEpe2EubmFtZXNwYWNlJiZ0aGlzLl9jb3JlLnNldHRpbmdzLnZpZGVvJiZ0aGlzLmlzSW5GdWxsU2NyZWVuKCkmJmEucHJldmVudERlZmF1bHQoKX0sdGhpcyksXCJyZWZyZXNoZWQub3dsLmNhcm91c2VsXCI6YS5wcm94eShmdW5jdGlvbihhKXthLm5hbWVzcGFjZSYmdGhpcy5fY29yZS5pcyhcInJlc2l6aW5nXCIpJiZ0aGlzLl9jb3JlLiRzdGFnZS5maW5kKFwiLmNsb25lZCAub3dsLXZpZGVvLWZyYW1lXCIpLnJlbW92ZSgpfSx0aGlzKSxcImNoYW5nZWQub3dsLmNhcm91c2VsXCI6YS5wcm94eShmdW5jdGlvbihhKXthLm5hbWVzcGFjZSYmXCJwb3NpdGlvblwiPT09YS5wcm9wZXJ0eS5uYW1lJiZ0aGlzLl9wbGF5aW5nJiZ0aGlzLnN0b3AoKX0sdGhpcyksXCJwcmVwYXJlZC5vd2wuY2Fyb3VzZWxcIjphLnByb3h5KGZ1bmN0aW9uKGIpe2lmKGIubmFtZXNwYWNlKXt2YXIgYz1hKGIuY29udGVudCkuZmluZChcIi5vd2wtdmlkZW9cIik7Yy5sZW5ndGgmJihjLmNzcyhcImRpc3BsYXlcIixcIm5vbmVcIiksdGhpcy5mZXRjaChjLGEoYi5jb250ZW50KSkpfX0sdGhpcyl9LHRoaXMuX2NvcmUub3B0aW9ucz1hLmV4dGVuZCh7fSxlLkRlZmF1bHRzLHRoaXMuX2NvcmUub3B0aW9ucyksdGhpcy5fY29yZS4kZWxlbWVudC5vbih0aGlzLl9oYW5kbGVycyksdGhpcy5fY29yZS4kZWxlbWVudC5vbihcImNsaWNrLm93bC52aWRlb1wiLFwiLm93bC12aWRlby1wbGF5LWljb25cIixhLnByb3h5KGZ1bmN0aW9uKGEpe3RoaXMucGxheShhKX0sdGhpcykpfTtlLkRlZmF1bHRzPXt2aWRlbzohMSx2aWRlb0hlaWdodDohMSx2aWRlb1dpZHRoOiExfSxlLnByb3RvdHlwZS5mZXRjaD1mdW5jdGlvbihhLGIpe3ZhciBjPWZ1bmN0aW9uKCl7cmV0dXJuIGEuYXR0cihcImRhdGEtdmltZW8taWRcIik/XCJ2aW1lb1wiOmEuYXR0cihcImRhdGEtdnphYXItaWRcIik/XCJ2emFhclwiOlwieW91dHViZVwifSgpLGQ9YS5hdHRyKFwiZGF0YS12aW1lby1pZFwiKXx8YS5hdHRyKFwiZGF0YS15b3V0dWJlLWlkXCIpfHxhLmF0dHIoXCJkYXRhLXZ6YWFyLWlkXCIpLGU9YS5hdHRyKFwiZGF0YS13aWR0aFwiKXx8dGhpcy5fY29yZS5zZXR0aW5ncy52aWRlb1dpZHRoLGY9YS5hdHRyKFwiZGF0YS1oZWlnaHRcIil8fHRoaXMuX2NvcmUuc2V0dGluZ3MudmlkZW9IZWlnaHQsZz1hLmF0dHIoXCJocmVmXCIpO2lmKCFnKXRocm93IG5ldyBFcnJvcihcIk1pc3NpbmcgdmlkZW8gVVJMLlwiKTtpZihkPWcubWF0Y2goLyhodHRwOnxodHRwczp8KVxcL1xcLyhwbGF5ZXIufHd3dy58YXBwLik/KHZpbWVvXFwuY29tfHlvdXR1KGJlXFwuY29tfFxcLmJlfGJlXFwuZ29vZ2xlYXBpc1xcLmNvbXxiZVxcLW5vY29va2llXFwuY29tKXx2emFhclxcLmNvbSlcXC8odmlkZW9cXC98dmlkZW9zXFwvfGVtYmVkXFwvfGNoYW5uZWxzXFwvLitcXC98Z3JvdXBzXFwvLitcXC98d2F0Y2hcXD92PXx2XFwvKT8oW0EtWmEtejAtOS5fJS1dKikoXFwmXFxTKyk/LyksZFszXS5pbmRleE9mKFwieW91dHVcIik+LTEpYz1cInlvdXR1YmVcIjtlbHNlIGlmKGRbM10uaW5kZXhPZihcInZpbWVvXCIpPi0xKWM9XCJ2aW1lb1wiO2Vsc2V7aWYoIShkWzNdLmluZGV4T2YoXCJ2emFhclwiKT4tMSkpdGhyb3cgbmV3IEVycm9yKFwiVmlkZW8gVVJMIG5vdCBzdXBwb3J0ZWQuXCIpO2M9XCJ2emFhclwifWQ9ZFs2XSx0aGlzLl92aWRlb3NbZ109e3R5cGU6YyxpZDpkLHdpZHRoOmUsaGVpZ2h0OmZ9LGIuYXR0cihcImRhdGEtdmlkZW9cIixnKSx0aGlzLnRodW1ibmFpbChhLHRoaXMuX3ZpZGVvc1tnXSl9LGUucHJvdG90eXBlLnRodW1ibmFpbD1mdW5jdGlvbihiLGMpe3ZhciBkLGUsZixnPWMud2lkdGgmJmMuaGVpZ2h0P1wid2lkdGg6XCIrYy53aWR0aCtcInB4O2hlaWdodDpcIitjLmhlaWdodCtcInB4O1wiOlwiXCIsaD1iLmZpbmQoXCJpbWdcIiksaT1cInNyY1wiLGo9XCJcIixrPXRoaXMuX2NvcmUuc2V0dGluZ3MsbD1mdW5jdGlvbihjKXtlPSc8ZGl2IGNsYXNzPVwib3dsLXZpZGVvLXBsYXktaWNvblwiPjwvZGl2PicsZD1rLmxhenlMb2FkP2EoXCI8ZGl2Lz5cIix7Y2xhc3M6XCJvd2wtdmlkZW8tdG4gXCIraixzcmNUeXBlOmN9KTphKFwiPGRpdi8+XCIse2NsYXNzOlwib3dsLXZpZGVvLXRuXCIsc3R5bGU6XCJvcGFjaXR5OjE7YmFja2dyb3VuZC1pbWFnZTp1cmwoXCIrYytcIilcIn0pLGIuYWZ0ZXIoZCksYi5hZnRlcihlKX07aWYoYi53cmFwKGEoXCI8ZGl2Lz5cIix7Y2xhc3M6XCJvd2wtdmlkZW8td3JhcHBlclwiLHN0eWxlOmd9KSksdGhpcy5fY29yZS5zZXR0aW5ncy5sYXp5TG9hZCYmKGk9XCJkYXRhLXNyY1wiLGo9XCJvd2wtbGF6eVwiKSxoLmxlbmd0aClyZXR1cm4gbChoLmF0dHIoaSkpLGgucmVtb3ZlKCksITE7XCJ5b3V0dWJlXCI9PT1jLnR5cGU/KGY9XCIvL2ltZy55b3V0dWJlLmNvbS92aS9cIitjLmlkK1wiL2hxZGVmYXVsdC5qcGdcIixsKGYpKTpcInZpbWVvXCI9PT1jLnR5cGU/YS5hamF4KHt0eXBlOlwiR0VUXCIsdXJsOlwiLy92aW1lby5jb20vYXBpL3YyL3ZpZGVvL1wiK2MuaWQrXCIuanNvblwiLGpzb25wOlwiY2FsbGJhY2tcIixkYXRhVHlwZTpcImpzb25wXCIsc3VjY2VzczpmdW5jdGlvbihhKXtmPWFbMF0udGh1bWJuYWlsX2xhcmdlLGwoZil9fSk6XCJ2emFhclwiPT09Yy50eXBlJiZhLmFqYXgoe3R5cGU6XCJHRVRcIix1cmw6XCIvL3Z6YWFyLmNvbS9hcGkvdmlkZW9zL1wiK2MuaWQrXCIuanNvblwiLGpzb25wOlwiY2FsbGJhY2tcIixkYXRhVHlwZTpcImpzb25wXCIsc3VjY2VzczpmdW5jdGlvbihhKXtmPWEuZnJhbWVncmFiX3VybCxsKGYpfX0pfSxlLnByb3RvdHlwZS5zdG9wPWZ1bmN0aW9uKCl7dGhpcy5fY29yZS50cmlnZ2VyKFwic3RvcFwiLG51bGwsXCJ2aWRlb1wiKSx0aGlzLl9wbGF5aW5nLmZpbmQoXCIub3dsLXZpZGVvLWZyYW1lXCIpLnJlbW92ZSgpLHRoaXMuX3BsYXlpbmcucmVtb3ZlQ2xhc3MoXCJvd2wtdmlkZW8tcGxheWluZ1wiKSx0aGlzLl9wbGF5aW5nPW51bGwsdGhpcy5fY29yZS5sZWF2ZShcInBsYXlpbmdcIiksdGhpcy5fY29yZS50cmlnZ2VyKFwic3RvcHBlZFwiLG51bGwsXCJ2aWRlb1wiKX0sZS5wcm90b3R5cGUucGxheT1mdW5jdGlvbihiKXt2YXIgYyxkPWEoYi50YXJnZXQpLGU9ZC5jbG9zZXN0KFwiLlwiK3RoaXMuX2NvcmUuc2V0dGluZ3MuaXRlbUNsYXNzKSxmPXRoaXMuX3ZpZGVvc1tlLmF0dHIoXCJkYXRhLXZpZGVvXCIpXSxnPWYud2lkdGh8fFwiMTAwJVwiLGg9Zi5oZWlnaHR8fHRoaXMuX2NvcmUuJHN0YWdlLmhlaWdodCgpO3RoaXMuX3BsYXlpbmd8fCh0aGlzLl9jb3JlLmVudGVyKFwicGxheWluZ1wiKSx0aGlzLl9jb3JlLnRyaWdnZXIoXCJwbGF5XCIsbnVsbCxcInZpZGVvXCIpLGU9dGhpcy5fY29yZS5pdGVtcyh0aGlzLl9jb3JlLnJlbGF0aXZlKGUuaW5kZXgoKSkpLHRoaXMuX2NvcmUucmVzZXQoZS5pbmRleCgpKSxjPWEoJzxpZnJhbWUgZnJhbWVib3JkZXI9XCIwXCIgYWxsb3dmdWxsc2NyZWVuIG1vemFsbG93ZnVsbHNjcmVlbiB3ZWJraXRBbGxvd0Z1bGxTY3JlZW4gPjwvaWZyYW1lPicpLGMuYXR0cihcImhlaWdodFwiLGgpLGMuYXR0cihcIndpZHRoXCIsZyksXCJ5b3V0dWJlXCI9PT1mLnR5cGU/Yy5hdHRyKFwic3JjXCIsXCIvL3d3dy55b3V0dWJlLmNvbS9lbWJlZC9cIitmLmlkK1wiP2F1dG9wbGF5PTEmcmVsPTAmdj1cIitmLmlkKTpcInZpbWVvXCI9PT1mLnR5cGU/Yy5hdHRyKFwic3JjXCIsXCIvL3BsYXllci52aW1lby5jb20vdmlkZW8vXCIrZi5pZCtcIj9hdXRvcGxheT0xXCIpOlwidnphYXJcIj09PWYudHlwZSYmYy5hdHRyKFwic3JjXCIsXCIvL3ZpZXcudnphYXIuY29tL1wiK2YuaWQrXCIvcGxheWVyP2F1dG9wbGF5PXRydWVcIiksYShjKS53cmFwKCc8ZGl2IGNsYXNzPVwib3dsLXZpZGVvLWZyYW1lXCIgLz4nKS5pbnNlcnRBZnRlcihlLmZpbmQoXCIub3dsLXZpZGVvXCIpKSx0aGlzLl9wbGF5aW5nPWUuYWRkQ2xhc3MoXCJvd2wtdmlkZW8tcGxheWluZ1wiKSl9LGUucHJvdG90eXBlLmlzSW5GdWxsU2NyZWVuPWZ1bmN0aW9uKCl7dmFyIGI9Yy5mdWxsc2NyZWVuRWxlbWVudHx8Yy5tb3pGdWxsU2NyZWVuRWxlbWVudHx8Yy53ZWJraXRGdWxsc2NyZWVuRWxlbWVudDtyZXR1cm4gYiYmYShiKS5wYXJlbnQoKS5oYXNDbGFzcyhcIm93bC12aWRlby1mcmFtZVwiKX0sZS5wcm90b3R5cGUuZGVzdHJveT1mdW5jdGlvbigpe3ZhciBhLGI7dGhpcy5fY29yZS4kZWxlbWVudC5vZmYoXCJjbGljay5vd2wudmlkZW9cIik7Zm9yKGEgaW4gdGhpcy5faGFuZGxlcnMpdGhpcy5fY29yZS4kZWxlbWVudC5vZmYoYSx0aGlzLl9oYW5kbGVyc1thXSk7Zm9yKGIgaW4gT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXModGhpcykpXCJmdW5jdGlvblwiIT10eXBlb2YgdGhpc1tiXSYmKHRoaXNbYl09bnVsbCl9LGEuZm4ub3dsQ2Fyb3VzZWwuQ29uc3RydWN0b3IuUGx1Z2lucy5WaWRlbz1lfSh3aW5kb3cuWmVwdG98fHdpbmRvdy5qUXVlcnksd2luZG93LGRvY3VtZW50KSxmdW5jdGlvbihhLGIsYyxkKXt2YXIgZT1mdW5jdGlvbihiKXt0aGlzLmNvcmU9Yix0aGlzLmNvcmUub3B0aW9ucz1hLmV4dGVuZCh7fSxlLkRlZmF1bHRzLHRoaXMuY29yZS5vcHRpb25zKSx0aGlzLnN3YXBwaW5nPSEwLHRoaXMucHJldmlvdXM9ZCx0aGlzLm5leHQ9ZCx0aGlzLmhhbmRsZXJzPXtcImNoYW5nZS5vd2wuY2Fyb3VzZWxcIjphLnByb3h5KGZ1bmN0aW9uKGEpe2EubmFtZXNwYWNlJiZcInBvc2l0aW9uXCI9PWEucHJvcGVydHkubmFtZSYmKHRoaXMucHJldmlvdXM9dGhpcy5jb3JlLmN1cnJlbnQoKSx0aGlzLm5leHQ9YS5wcm9wZXJ0eS52YWx1ZSl9LHRoaXMpLFwiZHJhZy5vd2wuY2Fyb3VzZWwgZHJhZ2dlZC5vd2wuY2Fyb3VzZWwgdHJhbnNsYXRlZC5vd2wuY2Fyb3VzZWxcIjphLnByb3h5KGZ1bmN0aW9uKGEpe2EubmFtZXNwYWNlJiYodGhpcy5zd2FwcGluZz1cInRyYW5zbGF0ZWRcIj09YS50eXBlKX0sdGhpcyksXCJ0cmFuc2xhdGUub3dsLmNhcm91c2VsXCI6YS5wcm94eShmdW5jdGlvbihhKXthLm5hbWVzcGFjZSYmdGhpcy5zd2FwcGluZyYmKHRoaXMuY29yZS5vcHRpb25zLmFuaW1hdGVPdXR8fHRoaXMuY29yZS5vcHRpb25zLmFuaW1hdGVJbikmJnRoaXMuc3dhcCgpfSx0aGlzKX0sdGhpcy5jb3JlLiRlbGVtZW50Lm9uKHRoaXMuaGFuZGxlcnMpfTtlLkRlZmF1bHRzPXthbmltYXRlT3V0OiExLFxyXG5hbmltYXRlSW46ITF9LGUucHJvdG90eXBlLnN3YXA9ZnVuY3Rpb24oKXtpZigxPT09dGhpcy5jb3JlLnNldHRpbmdzLml0ZW1zJiZhLnN1cHBvcnQuYW5pbWF0aW9uJiZhLnN1cHBvcnQudHJhbnNpdGlvbil7dGhpcy5jb3JlLnNwZWVkKDApO3ZhciBiLGM9YS5wcm94eSh0aGlzLmNsZWFyLHRoaXMpLGQ9dGhpcy5jb3JlLiRzdGFnZS5jaGlsZHJlbigpLmVxKHRoaXMucHJldmlvdXMpLGU9dGhpcy5jb3JlLiRzdGFnZS5jaGlsZHJlbigpLmVxKHRoaXMubmV4dCksZj10aGlzLmNvcmUuc2V0dGluZ3MuYW5pbWF0ZUluLGc9dGhpcy5jb3JlLnNldHRpbmdzLmFuaW1hdGVPdXQ7dGhpcy5jb3JlLmN1cnJlbnQoKSE9PXRoaXMucHJldmlvdXMmJihnJiYoYj10aGlzLmNvcmUuY29vcmRpbmF0ZXModGhpcy5wcmV2aW91cyktdGhpcy5jb3JlLmNvb3JkaW5hdGVzKHRoaXMubmV4dCksZC5vbmUoYS5zdXBwb3J0LmFuaW1hdGlvbi5lbmQsYykuY3NzKHtsZWZ0OmIrXCJweFwifSkuYWRkQ2xhc3MoXCJhbmltYXRlZCBvd2wtYW5pbWF0ZWQtb3V0XCIpLmFkZENsYXNzKGcpKSxmJiZlLm9uZShhLnN1cHBvcnQuYW5pbWF0aW9uLmVuZCxjKS5hZGRDbGFzcyhcImFuaW1hdGVkIG93bC1hbmltYXRlZC1pblwiKS5hZGRDbGFzcyhmKSl9fSxlLnByb3RvdHlwZS5jbGVhcj1mdW5jdGlvbihiKXthKGIudGFyZ2V0KS5jc3Moe2xlZnQ6XCJcIn0pLnJlbW92ZUNsYXNzKFwiYW5pbWF0ZWQgb3dsLWFuaW1hdGVkLW91dCBvd2wtYW5pbWF0ZWQtaW5cIikucmVtb3ZlQ2xhc3ModGhpcy5jb3JlLnNldHRpbmdzLmFuaW1hdGVJbikucmVtb3ZlQ2xhc3ModGhpcy5jb3JlLnNldHRpbmdzLmFuaW1hdGVPdXQpLHRoaXMuY29yZS5vblRyYW5zaXRpb25FbmQoKX0sZS5wcm90b3R5cGUuZGVzdHJveT1mdW5jdGlvbigpe3ZhciBhLGI7Zm9yKGEgaW4gdGhpcy5oYW5kbGVycyl0aGlzLmNvcmUuJGVsZW1lbnQub2ZmKGEsdGhpcy5oYW5kbGVyc1thXSk7Zm9yKGIgaW4gT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXModGhpcykpXCJmdW5jdGlvblwiIT10eXBlb2YgdGhpc1tiXSYmKHRoaXNbYl09bnVsbCl9LGEuZm4ub3dsQ2Fyb3VzZWwuQ29uc3RydWN0b3IuUGx1Z2lucy5BbmltYXRlPWV9KHdpbmRvdy5aZXB0b3x8d2luZG93LmpRdWVyeSx3aW5kb3csZG9jdW1lbnQpLGZ1bmN0aW9uKGEsYixjLGQpe3ZhciBlPWZ1bmN0aW9uKGIpe3RoaXMuX2NvcmU9Yix0aGlzLl9jYWxsPW51bGwsdGhpcy5fdGltZT0wLHRoaXMuX3RpbWVvdXQ9MCx0aGlzLl9wYXVzZWQ9ITAsdGhpcy5faGFuZGxlcnM9e1wiY2hhbmdlZC5vd2wuY2Fyb3VzZWxcIjphLnByb3h5KGZ1bmN0aW9uKGEpe2EubmFtZXNwYWNlJiZcInNldHRpbmdzXCI9PT1hLnByb3BlcnR5Lm5hbWU/dGhpcy5fY29yZS5zZXR0aW5ncy5hdXRvcGxheT90aGlzLnBsYXkoKTp0aGlzLnN0b3AoKTphLm5hbWVzcGFjZSYmXCJwb3NpdGlvblwiPT09YS5wcm9wZXJ0eS5uYW1lJiZ0aGlzLl9wYXVzZWQmJih0aGlzLl90aW1lPTApfSx0aGlzKSxcImluaXRpYWxpemVkLm93bC5jYXJvdXNlbFwiOmEucHJveHkoZnVuY3Rpb24oYSl7YS5uYW1lc3BhY2UmJnRoaXMuX2NvcmUuc2V0dGluZ3MuYXV0b3BsYXkmJnRoaXMucGxheSgpfSx0aGlzKSxcInBsYXkub3dsLmF1dG9wbGF5XCI6YS5wcm94eShmdW5jdGlvbihhLGIsYyl7YS5uYW1lc3BhY2UmJnRoaXMucGxheShiLGMpfSx0aGlzKSxcInN0b3Aub3dsLmF1dG9wbGF5XCI6YS5wcm94eShmdW5jdGlvbihhKXthLm5hbWVzcGFjZSYmdGhpcy5zdG9wKCl9LHRoaXMpLFwibW91c2VvdmVyLm93bC5hdXRvcGxheVwiOmEucHJveHkoZnVuY3Rpb24oKXt0aGlzLl9jb3JlLnNldHRpbmdzLmF1dG9wbGF5SG92ZXJQYXVzZSYmdGhpcy5fY29yZS5pcyhcInJvdGF0aW5nXCIpJiZ0aGlzLnBhdXNlKCl9LHRoaXMpLFwibW91c2VsZWF2ZS5vd2wuYXV0b3BsYXlcIjphLnByb3h5KGZ1bmN0aW9uKCl7dGhpcy5fY29yZS5zZXR0aW5ncy5hdXRvcGxheUhvdmVyUGF1c2UmJnRoaXMuX2NvcmUuaXMoXCJyb3RhdGluZ1wiKSYmdGhpcy5wbGF5KCl9LHRoaXMpLFwidG91Y2hzdGFydC5vd2wuY29yZVwiOmEucHJveHkoZnVuY3Rpb24oKXt0aGlzLl9jb3JlLnNldHRpbmdzLmF1dG9wbGF5SG92ZXJQYXVzZSYmdGhpcy5fY29yZS5pcyhcInJvdGF0aW5nXCIpJiZ0aGlzLnBhdXNlKCl9LHRoaXMpLFwidG91Y2hlbmQub3dsLmNvcmVcIjphLnByb3h5KGZ1bmN0aW9uKCl7dGhpcy5fY29yZS5zZXR0aW5ncy5hdXRvcGxheUhvdmVyUGF1c2UmJnRoaXMucGxheSgpfSx0aGlzKX0sdGhpcy5fY29yZS4kZWxlbWVudC5vbih0aGlzLl9oYW5kbGVycyksdGhpcy5fY29yZS5vcHRpb25zPWEuZXh0ZW5kKHt9LGUuRGVmYXVsdHMsdGhpcy5fY29yZS5vcHRpb25zKX07ZS5EZWZhdWx0cz17YXV0b3BsYXk6ITEsYXV0b3BsYXlUaW1lb3V0OjVlMyxhdXRvcGxheUhvdmVyUGF1c2U6ITEsYXV0b3BsYXlTcGVlZDohMX0sZS5wcm90b3R5cGUuX25leHQ9ZnVuY3Rpb24oZCl7dGhpcy5fY2FsbD1iLnNldFRpbWVvdXQoYS5wcm94eSh0aGlzLl9uZXh0LHRoaXMsZCksdGhpcy5fdGltZW91dCooTWF0aC5yb3VuZCh0aGlzLnJlYWQoKS90aGlzLl90aW1lb3V0KSsxKS10aGlzLnJlYWQoKSksdGhpcy5fY29yZS5pcyhcImludGVyYWN0aW5nXCIpfHxjLmhpZGRlbnx8dGhpcy5fY29yZS5uZXh0KGR8fHRoaXMuX2NvcmUuc2V0dGluZ3MuYXV0b3BsYXlTcGVlZCl9LGUucHJvdG90eXBlLnJlYWQ9ZnVuY3Rpb24oKXtyZXR1cm4obmV3IERhdGUpLmdldFRpbWUoKS10aGlzLl90aW1lfSxlLnByb3RvdHlwZS5wbGF5PWZ1bmN0aW9uKGMsZCl7dmFyIGU7dGhpcy5fY29yZS5pcyhcInJvdGF0aW5nXCIpfHx0aGlzLl9jb3JlLmVudGVyKFwicm90YXRpbmdcIiksYz1jfHx0aGlzLl9jb3JlLnNldHRpbmdzLmF1dG9wbGF5VGltZW91dCxlPU1hdGgubWluKHRoaXMuX3RpbWUlKHRoaXMuX3RpbWVvdXR8fGMpLGMpLHRoaXMuX3BhdXNlZD8odGhpcy5fdGltZT10aGlzLnJlYWQoKSx0aGlzLl9wYXVzZWQ9ITEpOmIuY2xlYXJUaW1lb3V0KHRoaXMuX2NhbGwpLHRoaXMuX3RpbWUrPXRoaXMucmVhZCgpJWMtZSx0aGlzLl90aW1lb3V0PWMsdGhpcy5fY2FsbD1iLnNldFRpbWVvdXQoYS5wcm94eSh0aGlzLl9uZXh0LHRoaXMsZCksYy1lKX0sZS5wcm90b3R5cGUuc3RvcD1mdW5jdGlvbigpe3RoaXMuX2NvcmUuaXMoXCJyb3RhdGluZ1wiKSYmKHRoaXMuX3RpbWU9MCx0aGlzLl9wYXVzZWQ9ITAsYi5jbGVhclRpbWVvdXQodGhpcy5fY2FsbCksdGhpcy5fY29yZS5sZWF2ZShcInJvdGF0aW5nXCIpKX0sZS5wcm90b3R5cGUucGF1c2U9ZnVuY3Rpb24oKXt0aGlzLl9jb3JlLmlzKFwicm90YXRpbmdcIikmJiF0aGlzLl9wYXVzZWQmJih0aGlzLl90aW1lPXRoaXMucmVhZCgpLHRoaXMuX3BhdXNlZD0hMCxiLmNsZWFyVGltZW91dCh0aGlzLl9jYWxsKSl9LGUucHJvdG90eXBlLmRlc3Ryb3k9ZnVuY3Rpb24oKXt2YXIgYSxiO3RoaXMuc3RvcCgpO2ZvcihhIGluIHRoaXMuX2hhbmRsZXJzKXRoaXMuX2NvcmUuJGVsZW1lbnQub2ZmKGEsdGhpcy5faGFuZGxlcnNbYV0pO2ZvcihiIGluIE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzKHRoaXMpKVwiZnVuY3Rpb25cIiE9dHlwZW9mIHRoaXNbYl0mJih0aGlzW2JdPW51bGwpfSxhLmZuLm93bENhcm91c2VsLkNvbnN0cnVjdG9yLlBsdWdpbnMuYXV0b3BsYXk9ZX0od2luZG93LlplcHRvfHx3aW5kb3cualF1ZXJ5LHdpbmRvdyxkb2N1bWVudCksZnVuY3Rpb24oYSxiLGMsZCl7XCJ1c2Ugc3RyaWN0XCI7dmFyIGU9ZnVuY3Rpb24oYil7dGhpcy5fY29yZT1iLHRoaXMuX2luaXRpYWxpemVkPSExLHRoaXMuX3BhZ2VzPVtdLHRoaXMuX2NvbnRyb2xzPXt9LHRoaXMuX3RlbXBsYXRlcz1bXSx0aGlzLiRlbGVtZW50PXRoaXMuX2NvcmUuJGVsZW1lbnQsdGhpcy5fb3ZlcnJpZGVzPXtuZXh0OnRoaXMuX2NvcmUubmV4dCxwcmV2OnRoaXMuX2NvcmUucHJldix0bzp0aGlzLl9jb3JlLnRvfSx0aGlzLl9oYW5kbGVycz17XCJwcmVwYXJlZC5vd2wuY2Fyb3VzZWxcIjphLnByb3h5KGZ1bmN0aW9uKGIpe2IubmFtZXNwYWNlJiZ0aGlzLl9jb3JlLnNldHRpbmdzLmRvdHNEYXRhJiZ0aGlzLl90ZW1wbGF0ZXMucHVzaCgnPGRpdiBjbGFzcz1cIicrdGhpcy5fY29yZS5zZXR0aW5ncy5kb3RDbGFzcysnXCI+JythKGIuY29udGVudCkuZmluZChcIltkYXRhLWRvdF1cIikuYWRkQmFjayhcIltkYXRhLWRvdF1cIikuYXR0cihcImRhdGEtZG90XCIpK1wiPC9kaXY+XCIpfSx0aGlzKSxcImFkZGVkLm93bC5jYXJvdXNlbFwiOmEucHJveHkoZnVuY3Rpb24oYSl7YS5uYW1lc3BhY2UmJnRoaXMuX2NvcmUuc2V0dGluZ3MuZG90c0RhdGEmJnRoaXMuX3RlbXBsYXRlcy5zcGxpY2UoYS5wb3NpdGlvbiwwLHRoaXMuX3RlbXBsYXRlcy5wb3AoKSl9LHRoaXMpLFwicmVtb3ZlLm93bC5jYXJvdXNlbFwiOmEucHJveHkoZnVuY3Rpb24oYSl7YS5uYW1lc3BhY2UmJnRoaXMuX2NvcmUuc2V0dGluZ3MuZG90c0RhdGEmJnRoaXMuX3RlbXBsYXRlcy5zcGxpY2UoYS5wb3NpdGlvbiwxKX0sdGhpcyksXCJjaGFuZ2VkLm93bC5jYXJvdXNlbFwiOmEucHJveHkoZnVuY3Rpb24oYSl7YS5uYW1lc3BhY2UmJlwicG9zaXRpb25cIj09YS5wcm9wZXJ0eS5uYW1lJiZ0aGlzLmRyYXcoKX0sdGhpcyksXCJpbml0aWFsaXplZC5vd2wuY2Fyb3VzZWxcIjphLnByb3h5KGZ1bmN0aW9uKGEpe2EubmFtZXNwYWNlJiYhdGhpcy5faW5pdGlhbGl6ZWQmJih0aGlzLl9jb3JlLnRyaWdnZXIoXCJpbml0aWFsaXplXCIsbnVsbCxcIm5hdmlnYXRpb25cIiksdGhpcy5pbml0aWFsaXplKCksdGhpcy51cGRhdGUoKSx0aGlzLmRyYXcoKSx0aGlzLl9pbml0aWFsaXplZD0hMCx0aGlzLl9jb3JlLnRyaWdnZXIoXCJpbml0aWFsaXplZFwiLG51bGwsXCJuYXZpZ2F0aW9uXCIpKX0sdGhpcyksXCJyZWZyZXNoZWQub3dsLmNhcm91c2VsXCI6YS5wcm94eShmdW5jdGlvbihhKXthLm5hbWVzcGFjZSYmdGhpcy5faW5pdGlhbGl6ZWQmJih0aGlzLl9jb3JlLnRyaWdnZXIoXCJyZWZyZXNoXCIsbnVsbCxcIm5hdmlnYXRpb25cIiksdGhpcy51cGRhdGUoKSx0aGlzLmRyYXcoKSx0aGlzLl9jb3JlLnRyaWdnZXIoXCJyZWZyZXNoZWRcIixudWxsLFwibmF2aWdhdGlvblwiKSl9LHRoaXMpfSx0aGlzLl9jb3JlLm9wdGlvbnM9YS5leHRlbmQoe30sZS5EZWZhdWx0cyx0aGlzLl9jb3JlLm9wdGlvbnMpLHRoaXMuJGVsZW1lbnQub24odGhpcy5faGFuZGxlcnMpfTtlLkRlZmF1bHRzPXtuYXY6ITEsbmF2VGV4dDpbJzxzcGFuIGFyaWEtbGFiZWw9XCJQcmV2aW91c1wiPiYjeDIwMzk7PC9zcGFuPicsJzxzcGFuIGFyaWEtbGFiZWw9XCJOZXh0XCI+JiN4MjAzYTs8L3NwYW4+J10sbmF2U3BlZWQ6ITEsbmF2RWxlbWVudDonYnV0dG9uIHR5cGU9XCJidXR0b25cIiByb2xlPVwicHJlc2VudGF0aW9uXCInLG5hdkNvbnRhaW5lcjohMSxuYXZDb250YWluZXJDbGFzczpcIm93bC1uYXZcIixuYXZDbGFzczpbXCJvd2wtcHJldlwiLFwib3dsLW5leHRcIl0sc2xpZGVCeToxLGRvdENsYXNzOlwib3dsLWRvdFwiLGRvdHNDbGFzczpcIm93bC1kb3RzXCIsZG90czohMCxkb3RzRWFjaDohMSxkb3RzRGF0YTohMSxkb3RzU3BlZWQ6ITEsZG90c0NvbnRhaW5lcjohMX0sZS5wcm90b3R5cGUuaW5pdGlhbGl6ZT1mdW5jdGlvbigpe3ZhciBiLGM9dGhpcy5fY29yZS5zZXR0aW5nczt0aGlzLl9jb250cm9scy4kcmVsYXRpdmU9KGMubmF2Q29udGFpbmVyP2EoYy5uYXZDb250YWluZXIpOmEoXCI8ZGl2PlwiKS5hZGRDbGFzcyhjLm5hdkNvbnRhaW5lckNsYXNzKS5hcHBlbmRUbyh0aGlzLiRlbGVtZW50KSkuYWRkQ2xhc3MoXCJkaXNhYmxlZFwiKSx0aGlzLl9jb250cm9scy4kcHJldmlvdXM9YShcIjxcIitjLm5hdkVsZW1lbnQrXCI+XCIpLmFkZENsYXNzKGMubmF2Q2xhc3NbMF0pLmh0bWwoYy5uYXZUZXh0WzBdKS5wcmVwZW5kVG8odGhpcy5fY29udHJvbHMuJHJlbGF0aXZlKS5vbihcImNsaWNrXCIsYS5wcm94eShmdW5jdGlvbihhKXt0aGlzLnByZXYoYy5uYXZTcGVlZCl9LHRoaXMpKSx0aGlzLl9jb250cm9scy4kbmV4dD1hKFwiPFwiK2MubmF2RWxlbWVudCtcIj5cIikuYWRkQ2xhc3MoYy5uYXZDbGFzc1sxXSkuaHRtbChjLm5hdlRleHRbMV0pLmFwcGVuZFRvKHRoaXMuX2NvbnRyb2xzLiRyZWxhdGl2ZSkub24oXCJjbGlja1wiLGEucHJveHkoZnVuY3Rpb24oYSl7dGhpcy5uZXh0KGMubmF2U3BlZWQpfSx0aGlzKSksYy5kb3RzRGF0YXx8KHRoaXMuX3RlbXBsYXRlcz1bYSgnPGJ1dHRvbiByb2xlPVwiYnV0dG9uXCI+JykuYWRkQ2xhc3MoYy5kb3RDbGFzcykuYXBwZW5kKGEoXCI8c3Bhbj5cIikpLnByb3AoXCJvdXRlckhUTUxcIildKSx0aGlzLl9jb250cm9scy4kYWJzb2x1dGU9KGMuZG90c0NvbnRhaW5lcj9hKGMuZG90c0NvbnRhaW5lcik6YShcIjxkaXY+XCIpLmFkZENsYXNzKGMuZG90c0NsYXNzKS5hcHBlbmRUbyh0aGlzLiRlbGVtZW50KSkuYWRkQ2xhc3MoXCJkaXNhYmxlZFwiKSx0aGlzLl9jb250cm9scy4kYWJzb2x1dGUub24oXCJjbGlja1wiLFwiYnV0dG9uXCIsYS5wcm94eShmdW5jdGlvbihiKXt2YXIgZD1hKGIudGFyZ2V0KS5wYXJlbnQoKS5pcyh0aGlzLl9jb250cm9scy4kYWJzb2x1dGUpP2EoYi50YXJnZXQpLmluZGV4KCk6YShiLnRhcmdldCkucGFyZW50KCkuaW5kZXgoKTtiLnByZXZlbnREZWZhdWx0KCksdGhpcy50byhkLGMuZG90c1NwZWVkKX0sdGhpcykpO2ZvcihiIGluIHRoaXMuX292ZXJyaWRlcyl0aGlzLl9jb3JlW2JdPWEucHJveHkodGhpc1tiXSx0aGlzKX0sZS5wcm90b3R5cGUuZGVzdHJveT1mdW5jdGlvbigpe3ZhciBhLGIsYyxkLGU7ZT10aGlzLl9jb3JlLnNldHRpbmdzO2ZvcihhIGluIHRoaXMuX2hhbmRsZXJzKXRoaXMuJGVsZW1lbnQub2ZmKGEsdGhpcy5faGFuZGxlcnNbYV0pO2ZvcihiIGluIHRoaXMuX2NvbnRyb2xzKVwiJHJlbGF0aXZlXCI9PT1iJiZlLm5hdkNvbnRhaW5lcj90aGlzLl9jb250cm9sc1tiXS5odG1sKFwiXCIpOnRoaXMuX2NvbnRyb2xzW2JdLnJlbW92ZSgpO2ZvcihkIGluIHRoaXMub3ZlcmlkZXMpdGhpcy5fY29yZVtkXT10aGlzLl9vdmVycmlkZXNbZF07Zm9yKGMgaW4gT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXModGhpcykpXCJmdW5jdGlvblwiIT10eXBlb2YgdGhpc1tjXSYmKHRoaXNbY109bnVsbCl9LGUucHJvdG90eXBlLnVwZGF0ZT1mdW5jdGlvbigpe3ZhciBhLGIsYyxkPXRoaXMuX2NvcmUuY2xvbmVzKCkubGVuZ3RoLzIsZT1kK3RoaXMuX2NvcmUuaXRlbXMoKS5sZW5ndGgsZj10aGlzLl9jb3JlLm1heGltdW0oITApLGc9dGhpcy5fY29yZS5zZXR0aW5ncyxoPWcuY2VudGVyfHxnLmF1dG9XaWR0aHx8Zy5kb3RzRGF0YT8xOmcuZG90c0VhY2h8fGcuaXRlbXM7aWYoXCJwYWdlXCIhPT1nLnNsaWRlQnkmJihnLnNsaWRlQnk9TWF0aC5taW4oZy5zbGlkZUJ5LGcuaXRlbXMpKSxnLmRvdHN8fFwicGFnZVwiPT1nLnNsaWRlQnkpZm9yKHRoaXMuX3BhZ2VzPVtdLGE9ZCxiPTAsYz0wO2E8ZTthKyspe2lmKGI+PWh8fDA9PT1iKXtpZih0aGlzLl9wYWdlcy5wdXNoKHtzdGFydDpNYXRoLm1pbihmLGEtZCksZW5kOmEtZCtoLTF9KSxNYXRoLm1pbihmLGEtZCk9PT1mKWJyZWFrO2I9MCwrK2N9Yis9dGhpcy5fY29yZS5tZXJnZXJzKHRoaXMuX2NvcmUucmVsYXRpdmUoYSkpfX0sZS5wcm90b3R5cGUuZHJhdz1mdW5jdGlvbigpe3ZhciBiLGM9dGhpcy5fY29yZS5zZXR0aW5ncyxkPXRoaXMuX2NvcmUuaXRlbXMoKS5sZW5ndGg8PWMuaXRlbXMsZT10aGlzLl9jb3JlLnJlbGF0aXZlKHRoaXMuX2NvcmUuY3VycmVudCgpKSxmPWMubG9vcHx8Yy5yZXdpbmQ7dGhpcy5fY29udHJvbHMuJHJlbGF0aXZlLnRvZ2dsZUNsYXNzKFwiZGlzYWJsZWRcIiwhYy5uYXZ8fGQpLGMubmF2JiYodGhpcy5fY29udHJvbHMuJHByZXZpb3VzLnRvZ2dsZUNsYXNzKFwiZGlzYWJsZWRcIiwhZiYmZTw9dGhpcy5fY29yZS5taW5pbXVtKCEwKSksdGhpcy5fY29udHJvbHMuJG5leHQudG9nZ2xlQ2xhc3MoXCJkaXNhYmxlZFwiLCFmJiZlPj10aGlzLl9jb3JlLm1heGltdW0oITApKSksdGhpcy5fY29udHJvbHMuJGFic29sdXRlLnRvZ2dsZUNsYXNzKFwiZGlzYWJsZWRcIiwhYy5kb3RzfHxkKSxjLmRvdHMmJihiPXRoaXMuX3BhZ2VzLmxlbmd0aC10aGlzLl9jb250cm9scy4kYWJzb2x1dGUuY2hpbGRyZW4oKS5sZW5ndGgsYy5kb3RzRGF0YSYmMCE9PWI/dGhpcy5fY29udHJvbHMuJGFic29sdXRlLmh0bWwodGhpcy5fdGVtcGxhdGVzLmpvaW4oXCJcIikpOmI+MD90aGlzLl9jb250cm9scy4kYWJzb2x1dGUuYXBwZW5kKG5ldyBBcnJheShiKzEpLmpvaW4odGhpcy5fdGVtcGxhdGVzWzBdKSk6YjwwJiZ0aGlzLl9jb250cm9scy4kYWJzb2x1dGUuY2hpbGRyZW4oKS5zbGljZShiKS5yZW1vdmUoKSx0aGlzLl9jb250cm9scy4kYWJzb2x1dGUuZmluZChcIi5hY3RpdmVcIikucmVtb3ZlQ2xhc3MoXCJhY3RpdmVcIiksdGhpcy5fY29udHJvbHMuJGFic29sdXRlLmNoaWxkcmVuKCkuZXEoYS5pbkFycmF5KHRoaXMuY3VycmVudCgpLHRoaXMuX3BhZ2VzKSkuYWRkQ2xhc3MoXCJhY3RpdmVcIikpfSxlLnByb3RvdHlwZS5vblRyaWdnZXI9ZnVuY3Rpb24oYil7dmFyIGM9dGhpcy5fY29yZS5zZXR0aW5ncztiLnBhZ2U9e2luZGV4OmEuaW5BcnJheSh0aGlzLmN1cnJlbnQoKSx0aGlzLl9wYWdlcyksY291bnQ6dGhpcy5fcGFnZXMubGVuZ3RoLHNpemU6YyYmKGMuY2VudGVyfHxjLmF1dG9XaWR0aHx8Yy5kb3RzRGF0YT8xOmMuZG90c0VhY2h8fGMuaXRlbXMpfX0sZS5wcm90b3R5cGUuY3VycmVudD1mdW5jdGlvbigpe3ZhciBiPXRoaXMuX2NvcmUucmVsYXRpdmUodGhpcy5fY29yZS5jdXJyZW50KCkpO3JldHVybiBhLmdyZXAodGhpcy5fcGFnZXMsYS5wcm94eShmdW5jdGlvbihhLGMpe3JldHVybiBhLnN0YXJ0PD1iJiZhLmVuZD49Yn0sdGhpcykpLnBvcCgpfSxlLnByb3RvdHlwZS5nZXRQb3NpdGlvbj1mdW5jdGlvbihiKXt2YXIgYyxkLGU9dGhpcy5fY29yZS5zZXR0aW5ncztyZXR1cm5cInBhZ2VcIj09ZS5zbGlkZUJ5PyhjPWEuaW5BcnJheSh0aGlzLmN1cnJlbnQoKSx0aGlzLl9wYWdlcyksZD10aGlzLl9wYWdlcy5sZW5ndGgsYj8rK2M6LS1jLGM9dGhpcy5fcGFnZXNbKGMlZCtkKSVkXS5zdGFydCk6KGM9dGhpcy5fY29yZS5yZWxhdGl2ZSh0aGlzLl9jb3JlLmN1cnJlbnQoKSksZD10aGlzLl9jb3JlLml0ZW1zKCkubGVuZ3RoLGI/Yys9ZS5zbGlkZUJ5OmMtPWUuc2xpZGVCeSksY30sZS5wcm90b3R5cGUubmV4dD1mdW5jdGlvbihiKXthLnByb3h5KHRoaXMuX292ZXJyaWRlcy50byx0aGlzLl9jb3JlKSh0aGlzLmdldFBvc2l0aW9uKCEwKSxiKX0sZS5wcm90b3R5cGUucHJldj1mdW5jdGlvbihiKXthLnByb3h5KHRoaXMuX292ZXJyaWRlcy50byx0aGlzLl9jb3JlKSh0aGlzLmdldFBvc2l0aW9uKCExKSxiKX0sZS5wcm90b3R5cGUudG89ZnVuY3Rpb24oYixjLGQpe3ZhciBlOyFkJiZ0aGlzLl9wYWdlcy5sZW5ndGg/KGU9dGhpcy5fcGFnZXMubGVuZ3RoLGEucHJveHkodGhpcy5fb3ZlcnJpZGVzLnRvLHRoaXMuX2NvcmUpKHRoaXMuX3BhZ2VzWyhiJWUrZSklZV0uc3RhcnQsYykpOmEucHJveHkodGhpcy5fb3ZlcnJpZGVzLnRvLHRoaXMuX2NvcmUpKGIsYyl9LGEuZm4ub3dsQ2Fyb3VzZWwuQ29uc3RydWN0b3IuUGx1Z2lucy5OYXZpZ2F0aW9uPWV9KHdpbmRvdy5aZXB0b3x8d2luZG93LmpRdWVyeSx3aW5kb3csZG9jdW1lbnQpLGZ1bmN0aW9uKGEsYixjLGQpe1widXNlIHN0cmljdFwiO3ZhciBlPWZ1bmN0aW9uKGMpe3RoaXMuX2NvcmU9Yyx0aGlzLl9oYXNoZXM9e30sdGhpcy4kZWxlbWVudD10aGlzLl9jb3JlLiRlbGVtZW50LHRoaXMuX2hhbmRsZXJzPXtcImluaXRpYWxpemVkLm93bC5jYXJvdXNlbFwiOmEucHJveHkoZnVuY3Rpb24oYyl7Yy5uYW1lc3BhY2UmJlwiVVJMSGFzaFwiPT09dGhpcy5fY29yZS5zZXR0aW5ncy5zdGFydFBvc2l0aW9uJiZhKGIpLnRyaWdnZXIoXCJoYXNoY2hhbmdlLm93bC5uYXZpZ2F0aW9uXCIpfSx0aGlzKSxcInByZXBhcmVkLm93bC5jYXJvdXNlbFwiOmEucHJveHkoZnVuY3Rpb24oYil7aWYoYi5uYW1lc3BhY2Upe3ZhciBjPWEoYi5jb250ZW50KS5maW5kKFwiW2RhdGEtaGFzaF1cIikuYWRkQmFjayhcIltkYXRhLWhhc2hdXCIpLmF0dHIoXCJkYXRhLWhhc2hcIik7aWYoIWMpcmV0dXJuO3RoaXMuX2hhc2hlc1tjXT1iLmNvbnRlbnR9fSx0aGlzKSxcImNoYW5nZWQub3dsLmNhcm91c2VsXCI6YS5wcm94eShmdW5jdGlvbihjKXtpZihjLm5hbWVzcGFjZSYmXCJwb3NpdGlvblwiPT09Yy5wcm9wZXJ0eS5uYW1lKXt2YXIgZD10aGlzLl9jb3JlLml0ZW1zKHRoaXMuX2NvcmUucmVsYXRpdmUodGhpcy5fY29yZS5jdXJyZW50KCkpKSxlPWEubWFwKHRoaXMuX2hhc2hlcyxmdW5jdGlvbihhLGIpe3JldHVybiBhPT09ZD9iOm51bGx9KS5qb2luKCk7aWYoIWV8fGIubG9jYXRpb24uaGFzaC5zbGljZSgxKT09PWUpcmV0dXJuO2IubG9jYXRpb24uaGFzaD1lfX0sdGhpcyl9LHRoaXMuX2NvcmUub3B0aW9ucz1hLmV4dGVuZCh7fSxlLkRlZmF1bHRzLHRoaXMuX2NvcmUub3B0aW9ucyksdGhpcy4kZWxlbWVudC5vbih0aGlzLl9oYW5kbGVycyksYShiKS5vbihcImhhc2hjaGFuZ2Uub3dsLm5hdmlnYXRpb25cIixhLnByb3h5KGZ1bmN0aW9uKGEpe3ZhciBjPWIubG9jYXRpb24uaGFzaC5zdWJzdHJpbmcoMSksZT10aGlzLl9jb3JlLiRzdGFnZS5jaGlsZHJlbigpLGY9dGhpcy5faGFzaGVzW2NdJiZlLmluZGV4KHRoaXMuX2hhc2hlc1tjXSk7ZiE9PWQmJmYhPT10aGlzLl9jb3JlLmN1cnJlbnQoKSYmdGhpcy5fY29yZS50byh0aGlzLl9jb3JlLnJlbGF0aXZlKGYpLCExLCEwKX0sdGhpcykpfTtlLkRlZmF1bHRzPXtVUkxoYXNoTGlzdGVuZXI6ITF9LGUucHJvdG90eXBlLmRlc3Ryb3k9ZnVuY3Rpb24oKXt2YXIgYyxkO2EoYikub2ZmKFwiaGFzaGNoYW5nZS5vd2wubmF2aWdhdGlvblwiKTtmb3IoYyBpbiB0aGlzLl9oYW5kbGVycyl0aGlzLl9jb3JlLiRlbGVtZW50Lm9mZihjLHRoaXMuX2hhbmRsZXJzW2NdKTtmb3IoZCBpbiBPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyh0aGlzKSlcImZ1bmN0aW9uXCIhPXR5cGVvZiB0aGlzW2RdJiYodGhpc1tkXT1udWxsKX0sYS5mbi5vd2xDYXJvdXNlbC5Db25zdHJ1Y3Rvci5QbHVnaW5zLkhhc2g9ZX0od2luZG93LlplcHRvfHx3aW5kb3cualF1ZXJ5LHdpbmRvdyxkb2N1bWVudCksZnVuY3Rpb24oYSxiLGMsZCl7ZnVuY3Rpb24gZShiLGMpe3ZhciBlPSExLGY9Yi5jaGFyQXQoMCkudG9VcHBlckNhc2UoKStiLnNsaWNlKDEpO3JldHVybiBhLmVhY2goKGIrXCIgXCIraC5qb2luKGYrXCIgXCIpK2YpLnNwbGl0KFwiIFwiKSxmdW5jdGlvbihhLGIpe2lmKGdbYl0hPT1kKXJldHVybiBlPSFjfHxiLCExfSksZX1mdW5jdGlvbiBmKGEpe3JldHVybiBlKGEsITApfXZhciBnPWEoXCI8c3VwcG9ydD5cIikuZ2V0KDApLnN0eWxlLGg9XCJXZWJraXQgTW96IE8gbXNcIi5zcGxpdChcIiBcIiksaT17dHJhbnNpdGlvbjp7ZW5kOntXZWJraXRUcmFuc2l0aW9uOlwid2Via2l0VHJhbnNpdGlvbkVuZFwiLE1velRyYW5zaXRpb246XCJ0cmFuc2l0aW9uZW5kXCIsT1RyYW5zaXRpb246XCJvVHJhbnNpdGlvbkVuZFwiLHRyYW5zaXRpb246XCJ0cmFuc2l0aW9uZW5kXCJ9fSxhbmltYXRpb246e2VuZDp7V2Via2l0QW5pbWF0aW9uOlwid2Via2l0QW5pbWF0aW9uRW5kXCIsTW96QW5pbWF0aW9uOlwiYW5pbWF0aW9uZW5kXCIsT0FuaW1hdGlvbjpcIm9BbmltYXRpb25FbmRcIixhbmltYXRpb246XCJhbmltYXRpb25lbmRcIn19fSxqPXtjc3N0cmFuc2Zvcm1zOmZ1bmN0aW9uKCl7cmV0dXJuISFlKFwidHJhbnNmb3JtXCIpfSxjc3N0cmFuc2Zvcm1zM2Q6ZnVuY3Rpb24oKXtyZXR1cm4hIWUoXCJwZXJzcGVjdGl2ZVwiKX0sY3NzdHJhbnNpdGlvbnM6ZnVuY3Rpb24oKXtyZXR1cm4hIWUoXCJ0cmFuc2l0aW9uXCIpfSxjc3NhbmltYXRpb25zOmZ1bmN0aW9uKCl7cmV0dXJuISFlKFwiYW5pbWF0aW9uXCIpfX07ai5jc3N0cmFuc2l0aW9ucygpJiYoYS5zdXBwb3J0LnRyYW5zaXRpb249bmV3IFN0cmluZyhmKFwidHJhbnNpdGlvblwiKSksYS5zdXBwb3J0LnRyYW5zaXRpb24uZW5kPWkudHJhbnNpdGlvbi5lbmRbYS5zdXBwb3J0LnRyYW5zaXRpb25dKSxqLmNzc2FuaW1hdGlvbnMoKSYmKGEuc3VwcG9ydC5hbmltYXRpb249bmV3IFN0cmluZyhmKFwiYW5pbWF0aW9uXCIpKSxhLnN1cHBvcnQuYW5pbWF0aW9uLmVuZD1pLmFuaW1hdGlvbi5lbmRbYS5zdXBwb3J0LmFuaW1hdGlvbl0pLGouY3NzdHJhbnNmb3JtcygpJiYoYS5zdXBwb3J0LnRyYW5zZm9ybT1uZXcgU3RyaW5nKGYoXCJ0cmFuc2Zvcm1cIikpLGEuc3VwcG9ydC50cmFuc2Zvcm0zZD1qLmNzc3RyYW5zZm9ybXMzZCgpKX0od2luZG93LlplcHRvfHx3aW5kb3cualF1ZXJ5LHdpbmRvdyxkb2N1bWVudCk7XHJcbiFmdW5jdGlvbihpKXtcInVzZSBzdHJpY3RcIjtcImZ1bmN0aW9uXCI9PXR5cGVvZiBkZWZpbmUmJmRlZmluZS5hbWQ/ZGVmaW5lKFtcImpxdWVyeVwiXSxpKTpcInVuZGVmaW5lZFwiIT10eXBlb2YgZXhwb3J0cz9tb2R1bGUuZXhwb3J0cz1pKHJlcXVpcmUoXCJqcXVlcnlcIikpOmkoalF1ZXJ5KX0oZnVuY3Rpb24oaSl7XCJ1c2Ugc3RyaWN0XCI7dmFyIGU9d2luZG93LlNsaWNrfHx7fTsoZT1mdW5jdGlvbigpe3ZhciBlPTA7cmV0dXJuIGZ1bmN0aW9uKHQsbyl7dmFyIHMsbj10aGlzO24uZGVmYXVsdHM9e2FjY2Vzc2liaWxpdHk6ITAsYWRhcHRpdmVIZWlnaHQ6ITEsYXBwZW5kQXJyb3dzOmkodCksYXBwZW5kRG90czppKHQpLGFycm93czohMCxhc05hdkZvcjpudWxsLHByZXZBcnJvdzonPGJ1dHRvbiBjbGFzcz1cInNsaWNrLXByZXZcIiBhcmlhLWxhYmVsPVwiUHJldmlvdXNcIiB0eXBlPVwiYnV0dG9uXCI+UHJldmlvdXM8L2J1dHRvbj4nLG5leHRBcnJvdzonPGJ1dHRvbiBjbGFzcz1cInNsaWNrLW5leHRcIiBhcmlhLWxhYmVsPVwiTmV4dFwiIHR5cGU9XCJidXR0b25cIj5OZXh0PC9idXR0b24+JyxhdXRvcGxheTohMSxhdXRvcGxheVNwZWVkOjNlMyxjZW50ZXJNb2RlOiExLGNlbnRlclBhZGRpbmc6XCI1MHB4XCIsY3NzRWFzZTpcImVhc2VcIixjdXN0b21QYWdpbmc6ZnVuY3Rpb24oZSx0KXtyZXR1cm4gaSgnPGJ1dHRvbiB0eXBlPVwiYnV0dG9uXCIgLz4nKS50ZXh0KHQrMSl9LGRvdHM6ITEsZG90c0NsYXNzOlwic2xpY2stZG90c1wiLGRyYWdnYWJsZTohMCxlYXNpbmc6XCJsaW5lYXJcIixlZGdlRnJpY3Rpb246LjM1LGZhZGU6ITEsZm9jdXNPblNlbGVjdDohMSxmb2N1c09uQ2hhbmdlOiExLGluZmluaXRlOiEwLGluaXRpYWxTbGlkZTowLGxhenlMb2FkOlwib25kZW1hbmRcIixtb2JpbGVGaXJzdDohMSxwYXVzZU9uSG92ZXI6ITAscGF1c2VPbkZvY3VzOiEwLHBhdXNlT25Eb3RzSG92ZXI6ITEscmVzcG9uZFRvOlwid2luZG93XCIscmVzcG9uc2l2ZTpudWxsLHJvd3M6MSxydGw6ITEsc2xpZGU6XCJcIixzbGlkZXNQZXJSb3c6MSxzbGlkZXNUb1Nob3c6MSxzbGlkZXNUb1Njcm9sbDoxLHNwZWVkOjUwMCxzd2lwZTohMCxzd2lwZVRvU2xpZGU6ITEsdG91Y2hNb3ZlOiEwLHRvdWNoVGhyZXNob2xkOjUsdXNlQ1NTOiEwLHVzZVRyYW5zZm9ybTohMCx2YXJpYWJsZVdpZHRoOiExLHZlcnRpY2FsOiExLHZlcnRpY2FsU3dpcGluZzohMSx3YWl0Rm9yQW5pbWF0ZTohMCx6SW5kZXg6MWUzfSxuLmluaXRpYWxzPXthbmltYXRpbmc6ITEsZHJhZ2dpbmc6ITEsYXV0b1BsYXlUaW1lcjpudWxsLGN1cnJlbnREaXJlY3Rpb246MCxjdXJyZW50TGVmdDpudWxsLGN1cnJlbnRTbGlkZTowLGRpcmVjdGlvbjoxLCRkb3RzOm51bGwsbGlzdFdpZHRoOm51bGwsbGlzdEhlaWdodDpudWxsLGxvYWRJbmRleDowLCRuZXh0QXJyb3c6bnVsbCwkcHJldkFycm93Om51bGwsc2Nyb2xsaW5nOiExLHNsaWRlQ291bnQ6bnVsbCxzbGlkZVdpZHRoOm51bGwsJHNsaWRlVHJhY2s6bnVsbCwkc2xpZGVzOm51bGwsc2xpZGluZzohMSxzbGlkZU9mZnNldDowLHN3aXBlTGVmdDpudWxsLHN3aXBpbmc6ITEsJGxpc3Q6bnVsbCx0b3VjaE9iamVjdDp7fSx0cmFuc2Zvcm1zRW5hYmxlZDohMSx1bnNsaWNrZWQ6ITF9LGkuZXh0ZW5kKG4sbi5pbml0aWFscyksbi5hY3RpdmVCcmVha3BvaW50PW51bGwsbi5hbmltVHlwZT1udWxsLG4uYW5pbVByb3A9bnVsbCxuLmJyZWFrcG9pbnRzPVtdLG4uYnJlYWtwb2ludFNldHRpbmdzPVtdLG4uY3NzVHJhbnNpdGlvbnM9ITEsbi5mb2N1c3NlZD0hMSxuLmludGVycnVwdGVkPSExLG4uaGlkZGVuPVwiaGlkZGVuXCIsbi5wYXVzZWQ9ITAsbi5wb3NpdGlvblByb3A9bnVsbCxuLnJlc3BvbmRUbz1udWxsLG4ucm93Q291bnQ9MSxuLnNob3VsZENsaWNrPSEwLG4uJHNsaWRlcj1pKHQpLG4uJHNsaWRlc0NhY2hlPW51bGwsbi50cmFuc2Zvcm1UeXBlPW51bGwsbi50cmFuc2l0aW9uVHlwZT1udWxsLG4udmlzaWJpbGl0eUNoYW5nZT1cInZpc2liaWxpdHljaGFuZ2VcIixuLndpbmRvd1dpZHRoPTAsbi53aW5kb3dUaW1lcj1udWxsLHM9aSh0KS5kYXRhKFwic2xpY2tcIil8fHt9LG4ub3B0aW9ucz1pLmV4dGVuZCh7fSxuLmRlZmF1bHRzLG8scyksbi5jdXJyZW50U2xpZGU9bi5vcHRpb25zLmluaXRpYWxTbGlkZSxuLm9yaWdpbmFsU2V0dGluZ3M9bi5vcHRpb25zLHZvaWQgMCE9PWRvY3VtZW50Lm1vekhpZGRlbj8obi5oaWRkZW49XCJtb3pIaWRkZW5cIixuLnZpc2liaWxpdHlDaGFuZ2U9XCJtb3p2aXNpYmlsaXR5Y2hhbmdlXCIpOnZvaWQgMCE9PWRvY3VtZW50LndlYmtpdEhpZGRlbiYmKG4uaGlkZGVuPVwid2Via2l0SGlkZGVuXCIsbi52aXNpYmlsaXR5Q2hhbmdlPVwid2Via2l0dmlzaWJpbGl0eWNoYW5nZVwiKSxuLmF1dG9QbGF5PWkucHJveHkobi5hdXRvUGxheSxuKSxuLmF1dG9QbGF5Q2xlYXI9aS5wcm94eShuLmF1dG9QbGF5Q2xlYXIsbiksbi5hdXRvUGxheUl0ZXJhdG9yPWkucHJveHkobi5hdXRvUGxheUl0ZXJhdG9yLG4pLG4uY2hhbmdlU2xpZGU9aS5wcm94eShuLmNoYW5nZVNsaWRlLG4pLG4uY2xpY2tIYW5kbGVyPWkucHJveHkobi5jbGlja0hhbmRsZXIsbiksbi5zZWxlY3RIYW5kbGVyPWkucHJveHkobi5zZWxlY3RIYW5kbGVyLG4pLG4uc2V0UG9zaXRpb249aS5wcm94eShuLnNldFBvc2l0aW9uLG4pLG4uc3dpcGVIYW5kbGVyPWkucHJveHkobi5zd2lwZUhhbmRsZXIsbiksbi5kcmFnSGFuZGxlcj1pLnByb3h5KG4uZHJhZ0hhbmRsZXIsbiksbi5rZXlIYW5kbGVyPWkucHJveHkobi5rZXlIYW5kbGVyLG4pLG4uaW5zdGFuY2VVaWQ9ZSsrLG4uaHRtbEV4cHI9L14oPzpcXHMqKDxbXFx3XFxXXSs+KVtePl0qKSQvLG4ucmVnaXN0ZXJCcmVha3BvaW50cygpLG4uaW5pdCghMCl9fSgpKS5wcm90b3R5cGUuYWN0aXZhdGVBREE9ZnVuY3Rpb24oKXt0aGlzLiRzbGlkZVRyYWNrLmZpbmQoXCIuc2xpY2stYWN0aXZlXCIpLmF0dHIoe1wiYXJpYS1oaWRkZW5cIjpcImZhbHNlXCJ9KS5maW5kKFwiYSwgaW5wdXQsIGJ1dHRvbiwgc2VsZWN0XCIpLmF0dHIoe3RhYmluZGV4OlwiMFwifSl9LGUucHJvdG90eXBlLmFkZFNsaWRlPWUucHJvdG90eXBlLnNsaWNrQWRkPWZ1bmN0aW9uKGUsdCxvKXt2YXIgcz10aGlzO2lmKFwiYm9vbGVhblwiPT10eXBlb2YgdClvPXQsdD1udWxsO2Vsc2UgaWYodDwwfHx0Pj1zLnNsaWRlQ291bnQpcmV0dXJuITE7cy51bmxvYWQoKSxcIm51bWJlclwiPT10eXBlb2YgdD8wPT09dCYmMD09PXMuJHNsaWRlcy5sZW5ndGg/aShlKS5hcHBlbmRUbyhzLiRzbGlkZVRyYWNrKTpvP2koZSkuaW5zZXJ0QmVmb3JlKHMuJHNsaWRlcy5lcSh0KSk6aShlKS5pbnNlcnRBZnRlcihzLiRzbGlkZXMuZXEodCkpOiEwPT09bz9pKGUpLnByZXBlbmRUbyhzLiRzbGlkZVRyYWNrKTppKGUpLmFwcGVuZFRvKHMuJHNsaWRlVHJhY2spLHMuJHNsaWRlcz1zLiRzbGlkZVRyYWNrLmNoaWxkcmVuKHRoaXMub3B0aW9ucy5zbGlkZSkscy4kc2xpZGVUcmFjay5jaGlsZHJlbih0aGlzLm9wdGlvbnMuc2xpZGUpLmRldGFjaCgpLHMuJHNsaWRlVHJhY2suYXBwZW5kKHMuJHNsaWRlcykscy4kc2xpZGVzLmVhY2goZnVuY3Rpb24oZSx0KXtpKHQpLmF0dHIoXCJkYXRhLXNsaWNrLWluZGV4XCIsZSl9KSxzLiRzbGlkZXNDYWNoZT1zLiRzbGlkZXMscy5yZWluaXQoKX0sZS5wcm90b3R5cGUuYW5pbWF0ZUhlaWdodD1mdW5jdGlvbigpe3ZhciBpPXRoaXM7aWYoMT09PWkub3B0aW9ucy5zbGlkZXNUb1Nob3cmJiEwPT09aS5vcHRpb25zLmFkYXB0aXZlSGVpZ2h0JiYhMT09PWkub3B0aW9ucy52ZXJ0aWNhbCl7dmFyIGU9aS4kc2xpZGVzLmVxKGkuY3VycmVudFNsaWRlKS5vdXRlckhlaWdodCghMCk7aS4kbGlzdC5hbmltYXRlKHtoZWlnaHQ6ZX0saS5vcHRpb25zLnNwZWVkKX19LGUucHJvdG90eXBlLmFuaW1hdGVTbGlkZT1mdW5jdGlvbihlLHQpe3ZhciBvPXt9LHM9dGhpcztzLmFuaW1hdGVIZWlnaHQoKSwhMD09PXMub3B0aW9ucy5ydGwmJiExPT09cy5vcHRpb25zLnZlcnRpY2FsJiYoZT0tZSksITE9PT1zLnRyYW5zZm9ybXNFbmFibGVkPyExPT09cy5vcHRpb25zLnZlcnRpY2FsP3MuJHNsaWRlVHJhY2suYW5pbWF0ZSh7bGVmdDplfSxzLm9wdGlvbnMuc3BlZWQscy5vcHRpb25zLmVhc2luZyx0KTpzLiRzbGlkZVRyYWNrLmFuaW1hdGUoe3RvcDplfSxzLm9wdGlvbnMuc3BlZWQscy5vcHRpb25zLmVhc2luZyx0KTohMT09PXMuY3NzVHJhbnNpdGlvbnM/KCEwPT09cy5vcHRpb25zLnJ0bCYmKHMuY3VycmVudExlZnQ9LXMuY3VycmVudExlZnQpLGkoe2FuaW1TdGFydDpzLmN1cnJlbnRMZWZ0fSkuYW5pbWF0ZSh7YW5pbVN0YXJ0OmV9LHtkdXJhdGlvbjpzLm9wdGlvbnMuc3BlZWQsZWFzaW5nOnMub3B0aW9ucy5lYXNpbmcsc3RlcDpmdW5jdGlvbihpKXtpPU1hdGguY2VpbChpKSwhMT09PXMub3B0aW9ucy52ZXJ0aWNhbD8ob1tzLmFuaW1UeXBlXT1cInRyYW5zbGF0ZShcIitpK1wicHgsIDBweClcIixzLiRzbGlkZVRyYWNrLmNzcyhvKSk6KG9bcy5hbmltVHlwZV09XCJ0cmFuc2xhdGUoMHB4LFwiK2krXCJweClcIixzLiRzbGlkZVRyYWNrLmNzcyhvKSl9LGNvbXBsZXRlOmZ1bmN0aW9uKCl7dCYmdC5jYWxsKCl9fSkpOihzLmFwcGx5VHJhbnNpdGlvbigpLGU9TWF0aC5jZWlsKGUpLCExPT09cy5vcHRpb25zLnZlcnRpY2FsP29bcy5hbmltVHlwZV09XCJ0cmFuc2xhdGUzZChcIitlK1wicHgsIDBweCwgMHB4KVwiOm9bcy5hbmltVHlwZV09XCJ0cmFuc2xhdGUzZCgwcHgsXCIrZStcInB4LCAwcHgpXCIscy4kc2xpZGVUcmFjay5jc3MobyksdCYmc2V0VGltZW91dChmdW5jdGlvbigpe3MuZGlzYWJsZVRyYW5zaXRpb24oKSx0LmNhbGwoKX0scy5vcHRpb25zLnNwZWVkKSl9LGUucHJvdG90eXBlLmdldE5hdlRhcmdldD1mdW5jdGlvbigpe3ZhciBlPXRoaXMsdD1lLm9wdGlvbnMuYXNOYXZGb3I7cmV0dXJuIHQmJm51bGwhPT10JiYodD1pKHQpLm5vdChlLiRzbGlkZXIpKSx0fSxlLnByb3RvdHlwZS5hc05hdkZvcj1mdW5jdGlvbihlKXt2YXIgdD10aGlzLmdldE5hdlRhcmdldCgpO251bGwhPT10JiZcIm9iamVjdFwiPT10eXBlb2YgdCYmdC5lYWNoKGZ1bmN0aW9uKCl7dmFyIHQ9aSh0aGlzKS5zbGljayhcImdldFNsaWNrXCIpO3QudW5zbGlja2VkfHx0LnNsaWRlSGFuZGxlcihlLCEwKX0pfSxlLnByb3RvdHlwZS5hcHBseVRyYW5zaXRpb249ZnVuY3Rpb24oaSl7dmFyIGU9dGhpcyx0PXt9OyExPT09ZS5vcHRpb25zLmZhZGU/dFtlLnRyYW5zaXRpb25UeXBlXT1lLnRyYW5zZm9ybVR5cGUrXCIgXCIrZS5vcHRpb25zLnNwZWVkK1wibXMgXCIrZS5vcHRpb25zLmNzc0Vhc2U6dFtlLnRyYW5zaXRpb25UeXBlXT1cIm9wYWNpdHkgXCIrZS5vcHRpb25zLnNwZWVkK1wibXMgXCIrZS5vcHRpb25zLmNzc0Vhc2UsITE9PT1lLm9wdGlvbnMuZmFkZT9lLiRzbGlkZVRyYWNrLmNzcyh0KTplLiRzbGlkZXMuZXEoaSkuY3NzKHQpfSxlLnByb3RvdHlwZS5hdXRvUGxheT1mdW5jdGlvbigpe3ZhciBpPXRoaXM7aS5hdXRvUGxheUNsZWFyKCksaS5zbGlkZUNvdW50Pmkub3B0aW9ucy5zbGlkZXNUb1Nob3cmJihpLmF1dG9QbGF5VGltZXI9c2V0SW50ZXJ2YWwoaS5hdXRvUGxheUl0ZXJhdG9yLGkub3B0aW9ucy5hdXRvcGxheVNwZWVkKSl9LGUucHJvdG90eXBlLmF1dG9QbGF5Q2xlYXI9ZnVuY3Rpb24oKXt2YXIgaT10aGlzO2kuYXV0b1BsYXlUaW1lciYmY2xlYXJJbnRlcnZhbChpLmF1dG9QbGF5VGltZXIpfSxlLnByb3RvdHlwZS5hdXRvUGxheUl0ZXJhdG9yPWZ1bmN0aW9uKCl7dmFyIGk9dGhpcyxlPWkuY3VycmVudFNsaWRlK2kub3B0aW9ucy5zbGlkZXNUb1Njcm9sbDtpLnBhdXNlZHx8aS5pbnRlcnJ1cHRlZHx8aS5mb2N1c3NlZHx8KCExPT09aS5vcHRpb25zLmluZmluaXRlJiYoMT09PWkuZGlyZWN0aW9uJiZpLmN1cnJlbnRTbGlkZSsxPT09aS5zbGlkZUNvdW50LTE/aS5kaXJlY3Rpb249MDowPT09aS5kaXJlY3Rpb24mJihlPWkuY3VycmVudFNsaWRlLWkub3B0aW9ucy5zbGlkZXNUb1Njcm9sbCxpLmN1cnJlbnRTbGlkZS0xPT0wJiYoaS5kaXJlY3Rpb249MSkpKSxpLnNsaWRlSGFuZGxlcihlKSl9LGUucHJvdG90eXBlLmJ1aWxkQXJyb3dzPWZ1bmN0aW9uKCl7dmFyIGU9dGhpczshMD09PWUub3B0aW9ucy5hcnJvd3MmJihlLiRwcmV2QXJyb3c9aShlLm9wdGlvbnMucHJldkFycm93KS5hZGRDbGFzcyhcInNsaWNrLWFycm93XCIpLGUuJG5leHRBcnJvdz1pKGUub3B0aW9ucy5uZXh0QXJyb3cpLmFkZENsYXNzKFwic2xpY2stYXJyb3dcIiksZS5zbGlkZUNvdW50PmUub3B0aW9ucy5zbGlkZXNUb1Nob3c/KGUuJHByZXZBcnJvdy5yZW1vdmVDbGFzcyhcInNsaWNrLWhpZGRlblwiKS5yZW1vdmVBdHRyKFwiYXJpYS1oaWRkZW4gdGFiaW5kZXhcIiksZS4kbmV4dEFycm93LnJlbW92ZUNsYXNzKFwic2xpY2staGlkZGVuXCIpLnJlbW92ZUF0dHIoXCJhcmlhLWhpZGRlbiB0YWJpbmRleFwiKSxlLmh0bWxFeHByLnRlc3QoZS5vcHRpb25zLnByZXZBcnJvdykmJmUuJHByZXZBcnJvdy5wcmVwZW5kVG8oZS5vcHRpb25zLmFwcGVuZEFycm93cyksZS5odG1sRXhwci50ZXN0KGUub3B0aW9ucy5uZXh0QXJyb3cpJiZlLiRuZXh0QXJyb3cuYXBwZW5kVG8oZS5vcHRpb25zLmFwcGVuZEFycm93cyksITAhPT1lLm9wdGlvbnMuaW5maW5pdGUmJmUuJHByZXZBcnJvdy5hZGRDbGFzcyhcInNsaWNrLWRpc2FibGVkXCIpLmF0dHIoXCJhcmlhLWRpc2FibGVkXCIsXCJ0cnVlXCIpKTplLiRwcmV2QXJyb3cuYWRkKGUuJG5leHRBcnJvdykuYWRkQ2xhc3MoXCJzbGljay1oaWRkZW5cIikuYXR0cih7XCJhcmlhLWRpc2FibGVkXCI6XCJ0cnVlXCIsdGFiaW5kZXg6XCItMVwifSkpfSxlLnByb3RvdHlwZS5idWlsZERvdHM9ZnVuY3Rpb24oKXt2YXIgZSx0LG89dGhpcztpZighMD09PW8ub3B0aW9ucy5kb3RzKXtmb3Ioby4kc2xpZGVyLmFkZENsYXNzKFwic2xpY2stZG90dGVkXCIpLHQ9aShcIjx1bCAvPlwiKS5hZGRDbGFzcyhvLm9wdGlvbnMuZG90c0NsYXNzKSxlPTA7ZTw9by5nZXREb3RDb3VudCgpO2UrPTEpdC5hcHBlbmQoaShcIjxsaSAvPlwiKS5hcHBlbmQoby5vcHRpb25zLmN1c3RvbVBhZ2luZy5jYWxsKHRoaXMsbyxlKSkpO28uJGRvdHM9dC5hcHBlbmRUbyhvLm9wdGlvbnMuYXBwZW5kRG90cyksby4kZG90cy5maW5kKFwibGlcIikuZmlyc3QoKS5hZGRDbGFzcyhcInNsaWNrLWFjdGl2ZVwiKX19LGUucHJvdG90eXBlLmJ1aWxkT3V0PWZ1bmN0aW9uKCl7dmFyIGU9dGhpcztlLiRzbGlkZXM9ZS4kc2xpZGVyLmNoaWxkcmVuKGUub3B0aW9ucy5zbGlkZStcIjpub3QoLnNsaWNrLWNsb25lZClcIikuYWRkQ2xhc3MoXCJzbGljay1zbGlkZVwiKSxlLnNsaWRlQ291bnQ9ZS4kc2xpZGVzLmxlbmd0aCxlLiRzbGlkZXMuZWFjaChmdW5jdGlvbihlLHQpe2kodCkuYXR0cihcImRhdGEtc2xpY2staW5kZXhcIixlKS5kYXRhKFwib3JpZ2luYWxTdHlsaW5nXCIsaSh0KS5hdHRyKFwic3R5bGVcIil8fFwiXCIpfSksZS4kc2xpZGVyLmFkZENsYXNzKFwic2xpY2stc2xpZGVyXCIpLGUuJHNsaWRlVHJhY2s9MD09PWUuc2xpZGVDb3VudD9pKCc8ZGl2IGNsYXNzPVwic2xpY2stdHJhY2tcIi8+JykuYXBwZW5kVG8oZS4kc2xpZGVyKTplLiRzbGlkZXMud3JhcEFsbCgnPGRpdiBjbGFzcz1cInNsaWNrLXRyYWNrXCIvPicpLnBhcmVudCgpLGUuJGxpc3Q9ZS4kc2xpZGVUcmFjay53cmFwKCc8ZGl2IGNsYXNzPVwic2xpY2stbGlzdFwiLz4nKS5wYXJlbnQoKSxlLiRzbGlkZVRyYWNrLmNzcyhcIm9wYWNpdHlcIiwwKSwhMCE9PWUub3B0aW9ucy5jZW50ZXJNb2RlJiYhMCE9PWUub3B0aW9ucy5zd2lwZVRvU2xpZGV8fChlLm9wdGlvbnMuc2xpZGVzVG9TY3JvbGw9MSksaShcImltZ1tkYXRhLWxhenldXCIsZS4kc2xpZGVyKS5ub3QoXCJbc3JjXVwiKS5hZGRDbGFzcyhcInNsaWNrLWxvYWRpbmdcIiksZS5zZXR1cEluZmluaXRlKCksZS5idWlsZEFycm93cygpLGUuYnVpbGREb3RzKCksZS51cGRhdGVEb3RzKCksZS5zZXRTbGlkZUNsYXNzZXMoXCJudW1iZXJcIj09dHlwZW9mIGUuY3VycmVudFNsaWRlP2UuY3VycmVudFNsaWRlOjApLCEwPT09ZS5vcHRpb25zLmRyYWdnYWJsZSYmZS4kbGlzdC5hZGRDbGFzcyhcImRyYWdnYWJsZVwiKX0sZS5wcm90b3R5cGUuYnVpbGRSb3dzPWZ1bmN0aW9uKCl7dmFyIGksZSx0LG8scyxuLHIsbD10aGlzO2lmKG89ZG9jdW1lbnQuY3JlYXRlRG9jdW1lbnRGcmFnbWVudCgpLG49bC4kc2xpZGVyLmNoaWxkcmVuKCksbC5vcHRpb25zLnJvd3M+MSl7Zm9yKHI9bC5vcHRpb25zLnNsaWRlc1BlclJvdypsLm9wdGlvbnMucm93cyxzPU1hdGguY2VpbChuLmxlbmd0aC9yKSxpPTA7aTxzO2krKyl7dmFyIGQ9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtmb3IoZT0wO2U8bC5vcHRpb25zLnJvd3M7ZSsrKXt2YXIgYT1kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO2Zvcih0PTA7dDxsLm9wdGlvbnMuc2xpZGVzUGVyUm93O3QrKyl7dmFyIGM9aSpyKyhlKmwub3B0aW9ucy5zbGlkZXNQZXJSb3crdCk7bi5nZXQoYykmJmEuYXBwZW5kQ2hpbGQobi5nZXQoYykpfWQuYXBwZW5kQ2hpbGQoYSl9by5hcHBlbmRDaGlsZChkKX1sLiRzbGlkZXIuZW1wdHkoKS5hcHBlbmQobyksbC4kc2xpZGVyLmNoaWxkcmVuKCkuY2hpbGRyZW4oKS5jaGlsZHJlbigpLmNzcyh7d2lkdGg6MTAwL2wub3B0aW9ucy5zbGlkZXNQZXJSb3crXCIlXCIsZGlzcGxheTpcImlubGluZS1ibG9ja1wifSl9fSxlLnByb3RvdHlwZS5jaGVja1Jlc3BvbnNpdmU9ZnVuY3Rpb24oZSx0KXt2YXIgbyxzLG4scj10aGlzLGw9ITEsZD1yLiRzbGlkZXIud2lkdGgoKSxhPXdpbmRvdy5pbm5lcldpZHRofHxpKHdpbmRvdykud2lkdGgoKTtpZihcIndpbmRvd1wiPT09ci5yZXNwb25kVG8/bj1hOlwic2xpZGVyXCI9PT1yLnJlc3BvbmRUbz9uPWQ6XCJtaW5cIj09PXIucmVzcG9uZFRvJiYobj1NYXRoLm1pbihhLGQpKSxyLm9wdGlvbnMucmVzcG9uc2l2ZSYmci5vcHRpb25zLnJlc3BvbnNpdmUubGVuZ3RoJiZudWxsIT09ci5vcHRpb25zLnJlc3BvbnNpdmUpe3M9bnVsbDtmb3IobyBpbiByLmJyZWFrcG9pbnRzKXIuYnJlYWtwb2ludHMuaGFzT3duUHJvcGVydHkobykmJighMT09PXIub3JpZ2luYWxTZXR0aW5ncy5tb2JpbGVGaXJzdD9uPHIuYnJlYWtwb2ludHNbb10mJihzPXIuYnJlYWtwb2ludHNbb10pOm4+ci5icmVha3BvaW50c1tvXSYmKHM9ci5icmVha3BvaW50c1tvXSkpO251bGwhPT1zP251bGwhPT1yLmFjdGl2ZUJyZWFrcG9pbnQ/KHMhPT1yLmFjdGl2ZUJyZWFrcG9pbnR8fHQpJiYoci5hY3RpdmVCcmVha3BvaW50PXMsXCJ1bnNsaWNrXCI9PT1yLmJyZWFrcG9pbnRTZXR0aW5nc1tzXT9yLnVuc2xpY2socyk6KHIub3B0aW9ucz1pLmV4dGVuZCh7fSxyLm9yaWdpbmFsU2V0dGluZ3Msci5icmVha3BvaW50U2V0dGluZ3Nbc10pLCEwPT09ZSYmKHIuY3VycmVudFNsaWRlPXIub3B0aW9ucy5pbml0aWFsU2xpZGUpLHIucmVmcmVzaChlKSksbD1zKTooci5hY3RpdmVCcmVha3BvaW50PXMsXCJ1bnNsaWNrXCI9PT1yLmJyZWFrcG9pbnRTZXR0aW5nc1tzXT9yLnVuc2xpY2socyk6KHIub3B0aW9ucz1pLmV4dGVuZCh7fSxyLm9yaWdpbmFsU2V0dGluZ3Msci5icmVha3BvaW50U2V0dGluZ3Nbc10pLCEwPT09ZSYmKHIuY3VycmVudFNsaWRlPXIub3B0aW9ucy5pbml0aWFsU2xpZGUpLHIucmVmcmVzaChlKSksbD1zKTpudWxsIT09ci5hY3RpdmVCcmVha3BvaW50JiYoci5hY3RpdmVCcmVha3BvaW50PW51bGwsci5vcHRpb25zPXIub3JpZ2luYWxTZXR0aW5ncywhMD09PWUmJihyLmN1cnJlbnRTbGlkZT1yLm9wdGlvbnMuaW5pdGlhbFNsaWRlKSxyLnJlZnJlc2goZSksbD1zKSxlfHwhMT09PWx8fHIuJHNsaWRlci50cmlnZ2VyKFwiYnJlYWtwb2ludFwiLFtyLGxdKX19LGUucHJvdG90eXBlLmNoYW5nZVNsaWRlPWZ1bmN0aW9uKGUsdCl7dmFyIG8scyxuLHI9dGhpcyxsPWkoZS5jdXJyZW50VGFyZ2V0KTtzd2l0Y2gobC5pcyhcImFcIikmJmUucHJldmVudERlZmF1bHQoKSxsLmlzKFwibGlcIil8fChsPWwuY2xvc2VzdChcImxpXCIpKSxuPXIuc2xpZGVDb3VudCVyLm9wdGlvbnMuc2xpZGVzVG9TY3JvbGwhPTAsbz1uPzA6KHIuc2xpZGVDb3VudC1yLmN1cnJlbnRTbGlkZSklci5vcHRpb25zLnNsaWRlc1RvU2Nyb2xsLGUuZGF0YS5tZXNzYWdlKXtjYXNlXCJwcmV2aW91c1wiOnM9MD09PW8/ci5vcHRpb25zLnNsaWRlc1RvU2Nyb2xsOnIub3B0aW9ucy5zbGlkZXNUb1Nob3ctbyxyLnNsaWRlQ291bnQ+ci5vcHRpb25zLnNsaWRlc1RvU2hvdyYmci5zbGlkZUhhbmRsZXIoci5jdXJyZW50U2xpZGUtcywhMSx0KTticmVhaztjYXNlXCJuZXh0XCI6cz0wPT09bz9yLm9wdGlvbnMuc2xpZGVzVG9TY3JvbGw6byxyLnNsaWRlQ291bnQ+ci5vcHRpb25zLnNsaWRlc1RvU2hvdyYmci5zbGlkZUhhbmRsZXIoci5jdXJyZW50U2xpZGUrcywhMSx0KTticmVhaztjYXNlXCJpbmRleFwiOnZhciBkPTA9PT1lLmRhdGEuaW5kZXg/MDplLmRhdGEuaW5kZXh8fGwuaW5kZXgoKSpyLm9wdGlvbnMuc2xpZGVzVG9TY3JvbGw7ci5zbGlkZUhhbmRsZXIoci5jaGVja05hdmlnYWJsZShkKSwhMSx0KSxsLmNoaWxkcmVuKCkudHJpZ2dlcihcImZvY3VzXCIpO2JyZWFrO2RlZmF1bHQ6cmV0dXJufX0sZS5wcm90b3R5cGUuY2hlY2tOYXZpZ2FibGU9ZnVuY3Rpb24oaSl7dmFyIGUsdDtpZihlPXRoaXMuZ2V0TmF2aWdhYmxlSW5kZXhlcygpLHQ9MCxpPmVbZS5sZW5ndGgtMV0paT1lW2UubGVuZ3RoLTFdO2Vsc2UgZm9yKHZhciBvIGluIGUpe2lmKGk8ZVtvXSl7aT10O2JyZWFrfXQ9ZVtvXX1yZXR1cm4gaX0sZS5wcm90b3R5cGUuY2xlYW5VcEV2ZW50cz1mdW5jdGlvbigpe3ZhciBlPXRoaXM7ZS5vcHRpb25zLmRvdHMmJm51bGwhPT1lLiRkb3RzJiYoaShcImxpXCIsZS4kZG90cykub2ZmKFwiY2xpY2suc2xpY2tcIixlLmNoYW5nZVNsaWRlKS5vZmYoXCJtb3VzZWVudGVyLnNsaWNrXCIsaS5wcm94eShlLmludGVycnVwdCxlLCEwKSkub2ZmKFwibW91c2VsZWF2ZS5zbGlja1wiLGkucHJveHkoZS5pbnRlcnJ1cHQsZSwhMSkpLCEwPT09ZS5vcHRpb25zLmFjY2Vzc2liaWxpdHkmJmUuJGRvdHMub2ZmKFwia2V5ZG93bi5zbGlja1wiLGUua2V5SGFuZGxlcikpLGUuJHNsaWRlci5vZmYoXCJmb2N1cy5zbGljayBibHVyLnNsaWNrXCIpLCEwPT09ZS5vcHRpb25zLmFycm93cyYmZS5zbGlkZUNvdW50PmUub3B0aW9ucy5zbGlkZXNUb1Nob3cmJihlLiRwcmV2QXJyb3cmJmUuJHByZXZBcnJvdy5vZmYoXCJjbGljay5zbGlja1wiLGUuY2hhbmdlU2xpZGUpLGUuJG5leHRBcnJvdyYmZS4kbmV4dEFycm93Lm9mZihcImNsaWNrLnNsaWNrXCIsZS5jaGFuZ2VTbGlkZSksITA9PT1lLm9wdGlvbnMuYWNjZXNzaWJpbGl0eSYmKGUuJHByZXZBcnJvdyYmZS4kcHJldkFycm93Lm9mZihcImtleWRvd24uc2xpY2tcIixlLmtleUhhbmRsZXIpLGUuJG5leHRBcnJvdyYmZS4kbmV4dEFycm93Lm9mZihcImtleWRvd24uc2xpY2tcIixlLmtleUhhbmRsZXIpKSksZS4kbGlzdC5vZmYoXCJ0b3VjaHN0YXJ0LnNsaWNrIG1vdXNlZG93bi5zbGlja1wiLGUuc3dpcGVIYW5kbGVyKSxlLiRsaXN0Lm9mZihcInRvdWNobW92ZS5zbGljayBtb3VzZW1vdmUuc2xpY2tcIixlLnN3aXBlSGFuZGxlciksZS4kbGlzdC5vZmYoXCJ0b3VjaGVuZC5zbGljayBtb3VzZXVwLnNsaWNrXCIsZS5zd2lwZUhhbmRsZXIpLGUuJGxpc3Qub2ZmKFwidG91Y2hjYW5jZWwuc2xpY2sgbW91c2VsZWF2ZS5zbGlja1wiLGUuc3dpcGVIYW5kbGVyKSxlLiRsaXN0Lm9mZihcImNsaWNrLnNsaWNrXCIsZS5jbGlja0hhbmRsZXIpLGkoZG9jdW1lbnQpLm9mZihlLnZpc2liaWxpdHlDaGFuZ2UsZS52aXNpYmlsaXR5KSxlLmNsZWFuVXBTbGlkZUV2ZW50cygpLCEwPT09ZS5vcHRpb25zLmFjY2Vzc2liaWxpdHkmJmUuJGxpc3Qub2ZmKFwia2V5ZG93bi5zbGlja1wiLGUua2V5SGFuZGxlciksITA9PT1lLm9wdGlvbnMuZm9jdXNPblNlbGVjdCYmaShlLiRzbGlkZVRyYWNrKS5jaGlsZHJlbigpLm9mZihcImNsaWNrLnNsaWNrXCIsZS5zZWxlY3RIYW5kbGVyKSxpKHdpbmRvdykub2ZmKFwib3JpZW50YXRpb25jaGFuZ2Uuc2xpY2suc2xpY2stXCIrZS5pbnN0YW5jZVVpZCxlLm9yaWVudGF0aW9uQ2hhbmdlKSxpKHdpbmRvdykub2ZmKFwicmVzaXplLnNsaWNrLnNsaWNrLVwiK2UuaW5zdGFuY2VVaWQsZS5yZXNpemUpLGkoXCJbZHJhZ2dhYmxlIT10cnVlXVwiLGUuJHNsaWRlVHJhY2spLm9mZihcImRyYWdzdGFydFwiLGUucHJldmVudERlZmF1bHQpLGkod2luZG93KS5vZmYoXCJsb2FkLnNsaWNrLnNsaWNrLVwiK2UuaW5zdGFuY2VVaWQsZS5zZXRQb3NpdGlvbil9LGUucHJvdG90eXBlLmNsZWFuVXBTbGlkZUV2ZW50cz1mdW5jdGlvbigpe3ZhciBlPXRoaXM7ZS4kbGlzdC5vZmYoXCJtb3VzZWVudGVyLnNsaWNrXCIsaS5wcm94eShlLmludGVycnVwdCxlLCEwKSksZS4kbGlzdC5vZmYoXCJtb3VzZWxlYXZlLnNsaWNrXCIsaS5wcm94eShlLmludGVycnVwdCxlLCExKSl9LGUucHJvdG90eXBlLmNsZWFuVXBSb3dzPWZ1bmN0aW9uKCl7dmFyIGksZT10aGlzO2Uub3B0aW9ucy5yb3dzPjEmJigoaT1lLiRzbGlkZXMuY2hpbGRyZW4oKS5jaGlsZHJlbigpKS5yZW1vdmVBdHRyKFwic3R5bGVcIiksZS4kc2xpZGVyLmVtcHR5KCkuYXBwZW5kKGkpKX0sZS5wcm90b3R5cGUuY2xpY2tIYW5kbGVyPWZ1bmN0aW9uKGkpeyExPT09dGhpcy5zaG91bGRDbGljayYmKGkuc3RvcEltbWVkaWF0ZVByb3BhZ2F0aW9uKCksaS5zdG9wUHJvcGFnYXRpb24oKSxpLnByZXZlbnREZWZhdWx0KCkpfSxlLnByb3RvdHlwZS5kZXN0cm95PWZ1bmN0aW9uKGUpe3ZhciB0PXRoaXM7dC5hdXRvUGxheUNsZWFyKCksdC50b3VjaE9iamVjdD17fSx0LmNsZWFuVXBFdmVudHMoKSxpKFwiLnNsaWNrLWNsb25lZFwiLHQuJHNsaWRlcikuZGV0YWNoKCksdC4kZG90cyYmdC4kZG90cy5yZW1vdmUoKSx0LiRwcmV2QXJyb3cmJnQuJHByZXZBcnJvdy5sZW5ndGgmJih0LiRwcmV2QXJyb3cucmVtb3ZlQ2xhc3MoXCJzbGljay1kaXNhYmxlZCBzbGljay1hcnJvdyBzbGljay1oaWRkZW5cIikucmVtb3ZlQXR0cihcImFyaWEtaGlkZGVuIGFyaWEtZGlzYWJsZWQgdGFiaW5kZXhcIikuY3NzKFwiZGlzcGxheVwiLFwiXCIpLHQuaHRtbEV4cHIudGVzdCh0Lm9wdGlvbnMucHJldkFycm93KSYmdC4kcHJldkFycm93LnJlbW92ZSgpKSx0LiRuZXh0QXJyb3cmJnQuJG5leHRBcnJvdy5sZW5ndGgmJih0LiRuZXh0QXJyb3cucmVtb3ZlQ2xhc3MoXCJzbGljay1kaXNhYmxlZCBzbGljay1hcnJvdyBzbGljay1oaWRkZW5cIikucmVtb3ZlQXR0cihcImFyaWEtaGlkZGVuIGFyaWEtZGlzYWJsZWQgdGFiaW5kZXhcIikuY3NzKFwiZGlzcGxheVwiLFwiXCIpLHQuaHRtbEV4cHIudGVzdCh0Lm9wdGlvbnMubmV4dEFycm93KSYmdC4kbmV4dEFycm93LnJlbW92ZSgpKSx0LiRzbGlkZXMmJih0LiRzbGlkZXMucmVtb3ZlQ2xhc3MoXCJzbGljay1zbGlkZSBzbGljay1hY3RpdmUgc2xpY2stY2VudGVyIHNsaWNrLXZpc2libGUgc2xpY2stY3VycmVudFwiKS5yZW1vdmVBdHRyKFwiYXJpYS1oaWRkZW5cIikucmVtb3ZlQXR0cihcImRhdGEtc2xpY2staW5kZXhcIikuZWFjaChmdW5jdGlvbigpe2kodGhpcykuYXR0cihcInN0eWxlXCIsaSh0aGlzKS5kYXRhKFwib3JpZ2luYWxTdHlsaW5nXCIpKX0pLHQuJHNsaWRlVHJhY2suY2hpbGRyZW4odGhpcy5vcHRpb25zLnNsaWRlKS5kZXRhY2goKSx0LiRzbGlkZVRyYWNrLmRldGFjaCgpLHQuJGxpc3QuZGV0YWNoKCksdC4kc2xpZGVyLmFwcGVuZCh0LiRzbGlkZXMpKSx0LmNsZWFuVXBSb3dzKCksdC4kc2xpZGVyLnJlbW92ZUNsYXNzKFwic2xpY2stc2xpZGVyXCIpLHQuJHNsaWRlci5yZW1vdmVDbGFzcyhcInNsaWNrLWluaXRpYWxpemVkXCIpLHQuJHNsaWRlci5yZW1vdmVDbGFzcyhcInNsaWNrLWRvdHRlZFwiKSx0LnVuc2xpY2tlZD0hMCxlfHx0LiRzbGlkZXIudHJpZ2dlcihcImRlc3Ryb3lcIixbdF0pfSxlLnByb3RvdHlwZS5kaXNhYmxlVHJhbnNpdGlvbj1mdW5jdGlvbihpKXt2YXIgZT10aGlzLHQ9e307dFtlLnRyYW5zaXRpb25UeXBlXT1cIlwiLCExPT09ZS5vcHRpb25zLmZhZGU/ZS4kc2xpZGVUcmFjay5jc3ModCk6ZS4kc2xpZGVzLmVxKGkpLmNzcyh0KX0sZS5wcm90b3R5cGUuZmFkZVNsaWRlPWZ1bmN0aW9uKGksZSl7dmFyIHQ9dGhpczshMT09PXQuY3NzVHJhbnNpdGlvbnM/KHQuJHNsaWRlcy5lcShpKS5jc3Moe3pJbmRleDp0Lm9wdGlvbnMuekluZGV4fSksdC4kc2xpZGVzLmVxKGkpLmFuaW1hdGUoe29wYWNpdHk6MX0sdC5vcHRpb25zLnNwZWVkLHQub3B0aW9ucy5lYXNpbmcsZSkpOih0LmFwcGx5VHJhbnNpdGlvbihpKSx0LiRzbGlkZXMuZXEoaSkuY3NzKHtvcGFjaXR5OjEsekluZGV4OnQub3B0aW9ucy56SW5kZXh9KSxlJiZzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7dC5kaXNhYmxlVHJhbnNpdGlvbihpKSxlLmNhbGwoKX0sdC5vcHRpb25zLnNwZWVkKSl9LGUucHJvdG90eXBlLmZhZGVTbGlkZU91dD1mdW5jdGlvbihpKXt2YXIgZT10aGlzOyExPT09ZS5jc3NUcmFuc2l0aW9ucz9lLiRzbGlkZXMuZXEoaSkuYW5pbWF0ZSh7b3BhY2l0eTowLHpJbmRleDplLm9wdGlvbnMuekluZGV4LTJ9LGUub3B0aW9ucy5zcGVlZCxlLm9wdGlvbnMuZWFzaW5nKTooZS5hcHBseVRyYW5zaXRpb24oaSksZS4kc2xpZGVzLmVxKGkpLmNzcyh7b3BhY2l0eTowLHpJbmRleDplLm9wdGlvbnMuekluZGV4LTJ9KSl9LGUucHJvdG90eXBlLmZpbHRlclNsaWRlcz1lLnByb3RvdHlwZS5zbGlja0ZpbHRlcj1mdW5jdGlvbihpKXt2YXIgZT10aGlzO251bGwhPT1pJiYoZS4kc2xpZGVzQ2FjaGU9ZS4kc2xpZGVzLGUudW5sb2FkKCksZS4kc2xpZGVUcmFjay5jaGlsZHJlbih0aGlzLm9wdGlvbnMuc2xpZGUpLmRldGFjaCgpLGUuJHNsaWRlc0NhY2hlLmZpbHRlcihpKS5hcHBlbmRUbyhlLiRzbGlkZVRyYWNrKSxlLnJlaW5pdCgpKX0sZS5wcm90b3R5cGUuZm9jdXNIYW5kbGVyPWZ1bmN0aW9uKCl7dmFyIGU9dGhpcztlLiRzbGlkZXIub2ZmKFwiZm9jdXMuc2xpY2sgYmx1ci5zbGlja1wiKS5vbihcImZvY3VzLnNsaWNrIGJsdXIuc2xpY2tcIixcIipcIixmdW5jdGlvbih0KXt0LnN0b3BJbW1lZGlhdGVQcm9wYWdhdGlvbigpO3ZhciBvPWkodGhpcyk7c2V0VGltZW91dChmdW5jdGlvbigpe2Uub3B0aW9ucy5wYXVzZU9uRm9jdXMmJihlLmZvY3Vzc2VkPW8uaXMoXCI6Zm9jdXNcIiksZS5hdXRvUGxheSgpKX0sMCl9KX0sZS5wcm90b3R5cGUuZ2V0Q3VycmVudD1lLnByb3RvdHlwZS5zbGlja0N1cnJlbnRTbGlkZT1mdW5jdGlvbigpe3JldHVybiB0aGlzLmN1cnJlbnRTbGlkZX0sZS5wcm90b3R5cGUuZ2V0RG90Q291bnQ9ZnVuY3Rpb24oKXt2YXIgaT10aGlzLGU9MCx0PTAsbz0wO2lmKCEwPT09aS5vcHRpb25zLmluZmluaXRlKWlmKGkuc2xpZGVDb3VudDw9aS5vcHRpb25zLnNsaWRlc1RvU2hvdykrK287ZWxzZSBmb3IoO2U8aS5zbGlkZUNvdW50OykrK28sZT10K2kub3B0aW9ucy5zbGlkZXNUb1Njcm9sbCx0Kz1pLm9wdGlvbnMuc2xpZGVzVG9TY3JvbGw8PWkub3B0aW9ucy5zbGlkZXNUb1Nob3c/aS5vcHRpb25zLnNsaWRlc1RvU2Nyb2xsOmkub3B0aW9ucy5zbGlkZXNUb1Nob3c7ZWxzZSBpZighMD09PWkub3B0aW9ucy5jZW50ZXJNb2RlKW89aS5zbGlkZUNvdW50O2Vsc2UgaWYoaS5vcHRpb25zLmFzTmF2Rm9yKWZvcig7ZTxpLnNsaWRlQ291bnQ7KSsrbyxlPXQraS5vcHRpb25zLnNsaWRlc1RvU2Nyb2xsLHQrPWkub3B0aW9ucy5zbGlkZXNUb1Njcm9sbDw9aS5vcHRpb25zLnNsaWRlc1RvU2hvdz9pLm9wdGlvbnMuc2xpZGVzVG9TY3JvbGw6aS5vcHRpb25zLnNsaWRlc1RvU2hvdztlbHNlIG89MStNYXRoLmNlaWwoKGkuc2xpZGVDb3VudC1pLm9wdGlvbnMuc2xpZGVzVG9TaG93KS9pLm9wdGlvbnMuc2xpZGVzVG9TY3JvbGwpO3JldHVybiBvLTF9LGUucHJvdG90eXBlLmdldExlZnQ9ZnVuY3Rpb24oaSl7dmFyIGUsdCxvLHMsbj10aGlzLHI9MDtyZXR1cm4gbi5zbGlkZU9mZnNldD0wLHQ9bi4kc2xpZGVzLmZpcnN0KCkub3V0ZXJIZWlnaHQoITApLCEwPT09bi5vcHRpb25zLmluZmluaXRlPyhuLnNsaWRlQ291bnQ+bi5vcHRpb25zLnNsaWRlc1RvU2hvdyYmKG4uc2xpZGVPZmZzZXQ9bi5zbGlkZVdpZHRoKm4ub3B0aW9ucy5zbGlkZXNUb1Nob3cqLTEscz0tMSwhMD09PW4ub3B0aW9ucy52ZXJ0aWNhbCYmITA9PT1uLm9wdGlvbnMuY2VudGVyTW9kZSYmKDI9PT1uLm9wdGlvbnMuc2xpZGVzVG9TaG93P3M9LTEuNToxPT09bi5vcHRpb25zLnNsaWRlc1RvU2hvdyYmKHM9LTIpKSxyPXQqbi5vcHRpb25zLnNsaWRlc1RvU2hvdypzKSxuLnNsaWRlQ291bnQlbi5vcHRpb25zLnNsaWRlc1RvU2Nyb2xsIT0wJiZpK24ub3B0aW9ucy5zbGlkZXNUb1Njcm9sbD5uLnNsaWRlQ291bnQmJm4uc2xpZGVDb3VudD5uLm9wdGlvbnMuc2xpZGVzVG9TaG93JiYoaT5uLnNsaWRlQ291bnQ/KG4uc2xpZGVPZmZzZXQ9KG4ub3B0aW9ucy5zbGlkZXNUb1Nob3ctKGktbi5zbGlkZUNvdW50KSkqbi5zbGlkZVdpZHRoKi0xLHI9KG4ub3B0aW9ucy5zbGlkZXNUb1Nob3ctKGktbi5zbGlkZUNvdW50KSkqdCotMSk6KG4uc2xpZGVPZmZzZXQ9bi5zbGlkZUNvdW50JW4ub3B0aW9ucy5zbGlkZXNUb1Njcm9sbCpuLnNsaWRlV2lkdGgqLTEscj1uLnNsaWRlQ291bnQlbi5vcHRpb25zLnNsaWRlc1RvU2Nyb2xsKnQqLTEpKSk6aStuLm9wdGlvbnMuc2xpZGVzVG9TaG93Pm4uc2xpZGVDb3VudCYmKG4uc2xpZGVPZmZzZXQ9KGkrbi5vcHRpb25zLnNsaWRlc1RvU2hvdy1uLnNsaWRlQ291bnQpKm4uc2xpZGVXaWR0aCxyPShpK24ub3B0aW9ucy5zbGlkZXNUb1Nob3ctbi5zbGlkZUNvdW50KSp0KSxuLnNsaWRlQ291bnQ8PW4ub3B0aW9ucy5zbGlkZXNUb1Nob3cmJihuLnNsaWRlT2Zmc2V0PTAscj0wKSwhMD09PW4ub3B0aW9ucy5jZW50ZXJNb2RlJiZuLnNsaWRlQ291bnQ8PW4ub3B0aW9ucy5zbGlkZXNUb1Nob3c/bi5zbGlkZU9mZnNldD1uLnNsaWRlV2lkdGgqTWF0aC5mbG9vcihuLm9wdGlvbnMuc2xpZGVzVG9TaG93KS8yLW4uc2xpZGVXaWR0aCpuLnNsaWRlQ291bnQvMjohMD09PW4ub3B0aW9ucy5jZW50ZXJNb2RlJiYhMD09PW4ub3B0aW9ucy5pbmZpbml0ZT9uLnNsaWRlT2Zmc2V0Kz1uLnNsaWRlV2lkdGgqTWF0aC5mbG9vcihuLm9wdGlvbnMuc2xpZGVzVG9TaG93LzIpLW4uc2xpZGVXaWR0aDohMD09PW4ub3B0aW9ucy5jZW50ZXJNb2RlJiYobi5zbGlkZU9mZnNldD0wLG4uc2xpZGVPZmZzZXQrPW4uc2xpZGVXaWR0aCpNYXRoLmZsb29yKG4ub3B0aW9ucy5zbGlkZXNUb1Nob3cvMikpLGU9ITE9PT1uLm9wdGlvbnMudmVydGljYWw/aSpuLnNsaWRlV2lkdGgqLTErbi5zbGlkZU9mZnNldDppKnQqLTErciwhMD09PW4ub3B0aW9ucy52YXJpYWJsZVdpZHRoJiYobz1uLnNsaWRlQ291bnQ8PW4ub3B0aW9ucy5zbGlkZXNUb1Nob3d8fCExPT09bi5vcHRpb25zLmluZmluaXRlP24uJHNsaWRlVHJhY2suY2hpbGRyZW4oXCIuc2xpY2stc2xpZGVcIikuZXEoaSk6bi4kc2xpZGVUcmFjay5jaGlsZHJlbihcIi5zbGljay1zbGlkZVwiKS5lcShpK24ub3B0aW9ucy5zbGlkZXNUb1Nob3cpLGU9ITA9PT1uLm9wdGlvbnMucnRsP29bMF0/LTEqKG4uJHNsaWRlVHJhY2sud2lkdGgoKS1vWzBdLm9mZnNldExlZnQtby53aWR0aCgpKTowOm9bMF0/LTEqb1swXS5vZmZzZXRMZWZ0OjAsITA9PT1uLm9wdGlvbnMuY2VudGVyTW9kZSYmKG89bi5zbGlkZUNvdW50PD1uLm9wdGlvbnMuc2xpZGVzVG9TaG93fHwhMT09PW4ub3B0aW9ucy5pbmZpbml0ZT9uLiRzbGlkZVRyYWNrLmNoaWxkcmVuKFwiLnNsaWNrLXNsaWRlXCIpLmVxKGkpOm4uJHNsaWRlVHJhY2suY2hpbGRyZW4oXCIuc2xpY2stc2xpZGVcIikuZXEoaStuLm9wdGlvbnMuc2xpZGVzVG9TaG93KzEpLGU9ITA9PT1uLm9wdGlvbnMucnRsP29bMF0/LTEqKG4uJHNsaWRlVHJhY2sud2lkdGgoKS1vWzBdLm9mZnNldExlZnQtby53aWR0aCgpKTowOm9bMF0/LTEqb1swXS5vZmZzZXRMZWZ0OjAsZSs9KG4uJGxpc3Qud2lkdGgoKS1vLm91dGVyV2lkdGgoKSkvMikpLGV9LGUucHJvdG90eXBlLmdldE9wdGlvbj1lLnByb3RvdHlwZS5zbGlja0dldE9wdGlvbj1mdW5jdGlvbihpKXtyZXR1cm4gdGhpcy5vcHRpb25zW2ldfSxlLnByb3RvdHlwZS5nZXROYXZpZ2FibGVJbmRleGVzPWZ1bmN0aW9uKCl7dmFyIGksZT10aGlzLHQ9MCxvPTAscz1bXTtmb3IoITE9PT1lLm9wdGlvbnMuaW5maW5pdGU/aT1lLnNsaWRlQ291bnQ6KHQ9LTEqZS5vcHRpb25zLnNsaWRlc1RvU2Nyb2xsLG89LTEqZS5vcHRpb25zLnNsaWRlc1RvU2Nyb2xsLGk9MiplLnNsaWRlQ291bnQpO3Q8aTspcy5wdXNoKHQpLHQ9bytlLm9wdGlvbnMuc2xpZGVzVG9TY3JvbGwsbys9ZS5vcHRpb25zLnNsaWRlc1RvU2Nyb2xsPD1lLm9wdGlvbnMuc2xpZGVzVG9TaG93P2Uub3B0aW9ucy5zbGlkZXNUb1Njcm9sbDplLm9wdGlvbnMuc2xpZGVzVG9TaG93O3JldHVybiBzfSxlLnByb3RvdHlwZS5nZXRTbGljaz1mdW5jdGlvbigpe3JldHVybiB0aGlzfSxlLnByb3RvdHlwZS5nZXRTbGlkZUNvdW50PWZ1bmN0aW9uKCl7dmFyIGUsdCxvPXRoaXM7cmV0dXJuIHQ9ITA9PT1vLm9wdGlvbnMuY2VudGVyTW9kZT9vLnNsaWRlV2lkdGgqTWF0aC5mbG9vcihvLm9wdGlvbnMuc2xpZGVzVG9TaG93LzIpOjAsITA9PT1vLm9wdGlvbnMuc3dpcGVUb1NsaWRlPyhvLiRzbGlkZVRyYWNrLmZpbmQoXCIuc2xpY2stc2xpZGVcIikuZWFjaChmdW5jdGlvbihzLG4pe2lmKG4ub2Zmc2V0TGVmdC10K2kobikub3V0ZXJXaWR0aCgpLzI+LTEqby5zd2lwZUxlZnQpcmV0dXJuIGU9biwhMX0pLE1hdGguYWJzKGkoZSkuYXR0cihcImRhdGEtc2xpY2staW5kZXhcIiktby5jdXJyZW50U2xpZGUpfHwxKTpvLm9wdGlvbnMuc2xpZGVzVG9TY3JvbGx9LGUucHJvdG90eXBlLmdvVG89ZS5wcm90b3R5cGUuc2xpY2tHb1RvPWZ1bmN0aW9uKGksZSl7dGhpcy5jaGFuZ2VTbGlkZSh7ZGF0YTp7bWVzc2FnZTpcImluZGV4XCIsaW5kZXg6cGFyc2VJbnQoaSl9fSxlKX0sZS5wcm90b3R5cGUuaW5pdD1mdW5jdGlvbihlKXt2YXIgdD10aGlzO2kodC4kc2xpZGVyKS5oYXNDbGFzcyhcInNsaWNrLWluaXRpYWxpemVkXCIpfHwoaSh0LiRzbGlkZXIpLmFkZENsYXNzKFwic2xpY2staW5pdGlhbGl6ZWRcIiksdC5idWlsZFJvd3MoKSx0LmJ1aWxkT3V0KCksdC5zZXRQcm9wcygpLHQuc3RhcnRMb2FkKCksdC5sb2FkU2xpZGVyKCksdC5pbml0aWFsaXplRXZlbnRzKCksdC51cGRhdGVBcnJvd3MoKSx0LnVwZGF0ZURvdHMoKSx0LmNoZWNrUmVzcG9uc2l2ZSghMCksdC5mb2N1c0hhbmRsZXIoKSksZSYmdC4kc2xpZGVyLnRyaWdnZXIoXCJpbml0XCIsW3RdKSwhMD09PXQub3B0aW9ucy5hY2Nlc3NpYmlsaXR5JiZ0LmluaXRBREEoKSx0Lm9wdGlvbnMuYXV0b3BsYXkmJih0LnBhdXNlZD0hMSx0LmF1dG9QbGF5KCkpfSxlLnByb3RvdHlwZS5pbml0QURBPWZ1bmN0aW9uKCl7dmFyIGU9dGhpcyx0PU1hdGguY2VpbChlLnNsaWRlQ291bnQvZS5vcHRpb25zLnNsaWRlc1RvU2hvdyksbz1lLmdldE5hdmlnYWJsZUluZGV4ZXMoKS5maWx0ZXIoZnVuY3Rpb24oaSl7cmV0dXJuIGk+PTAmJmk8ZS5zbGlkZUNvdW50fSk7ZS4kc2xpZGVzLmFkZChlLiRzbGlkZVRyYWNrLmZpbmQoXCIuc2xpY2stY2xvbmVkXCIpKS5hdHRyKHtcImFyaWEtaGlkZGVuXCI6XCJ0cnVlXCIsdGFiaW5kZXg6XCItMVwifSkuZmluZChcImEsIGlucHV0LCBidXR0b24sIHNlbGVjdFwiKS5hdHRyKHt0YWJpbmRleDpcIi0xXCJ9KSxudWxsIT09ZS4kZG90cyYmKGUuJHNsaWRlcy5ub3QoZS4kc2xpZGVUcmFjay5maW5kKFwiLnNsaWNrLWNsb25lZFwiKSkuZWFjaChmdW5jdGlvbih0KXt2YXIgcz1vLmluZGV4T2YodCk7aSh0aGlzKS5hdHRyKHtyb2xlOlwidGFicGFuZWxcIixpZDpcInNsaWNrLXNsaWRlXCIrZS5pbnN0YW5jZVVpZCt0LHRhYmluZGV4Oi0xfSksLTEhPT1zJiZpKHRoaXMpLmF0dHIoe1wiYXJpYS1kZXNjcmliZWRieVwiOlwic2xpY2stc2xpZGUtY29udHJvbFwiK2UuaW5zdGFuY2VVaWQrc30pfSksZS4kZG90cy5hdHRyKFwicm9sZVwiLFwidGFibGlzdFwiKS5maW5kKFwibGlcIikuZWFjaChmdW5jdGlvbihzKXt2YXIgbj1vW3NdO2kodGhpcykuYXR0cih7cm9sZTpcInByZXNlbnRhdGlvblwifSksaSh0aGlzKS5maW5kKFwiYnV0dG9uXCIpLmZpcnN0KCkuYXR0cih7cm9sZTpcInRhYlwiLGlkOlwic2xpY2stc2xpZGUtY29udHJvbFwiK2UuaW5zdGFuY2VVaWQrcyxcImFyaWEtY29udHJvbHNcIjpcInNsaWNrLXNsaWRlXCIrZS5pbnN0YW5jZVVpZCtuLFwiYXJpYS1sYWJlbFwiOnMrMStcIiBvZiBcIit0LFwiYXJpYS1zZWxlY3RlZFwiOm51bGwsdGFiaW5kZXg6XCItMVwifSl9KS5lcShlLmN1cnJlbnRTbGlkZSkuZmluZChcImJ1dHRvblwiKS5hdHRyKHtcImFyaWEtc2VsZWN0ZWRcIjpcInRydWVcIix0YWJpbmRleDpcIjBcIn0pLmVuZCgpKTtmb3IodmFyIHM9ZS5jdXJyZW50U2xpZGUsbj1zK2Uub3B0aW9ucy5zbGlkZXNUb1Nob3c7czxuO3MrKyllLiRzbGlkZXMuZXEocykuYXR0cihcInRhYmluZGV4XCIsMCk7ZS5hY3RpdmF0ZUFEQSgpfSxlLnByb3RvdHlwZS5pbml0QXJyb3dFdmVudHM9ZnVuY3Rpb24oKXt2YXIgaT10aGlzOyEwPT09aS5vcHRpb25zLmFycm93cyYmaS5zbGlkZUNvdW50Pmkub3B0aW9ucy5zbGlkZXNUb1Nob3cmJihpLiRwcmV2QXJyb3cub2ZmKFwiY2xpY2suc2xpY2tcIikub24oXCJjbGljay5zbGlja1wiLHttZXNzYWdlOlwicHJldmlvdXNcIn0saS5jaGFuZ2VTbGlkZSksaS4kbmV4dEFycm93Lm9mZihcImNsaWNrLnNsaWNrXCIpLm9uKFwiY2xpY2suc2xpY2tcIix7bWVzc2FnZTpcIm5leHRcIn0saS5jaGFuZ2VTbGlkZSksITA9PT1pLm9wdGlvbnMuYWNjZXNzaWJpbGl0eSYmKGkuJHByZXZBcnJvdy5vbihcImtleWRvd24uc2xpY2tcIixpLmtleUhhbmRsZXIpLGkuJG5leHRBcnJvdy5vbihcImtleWRvd24uc2xpY2tcIixpLmtleUhhbmRsZXIpKSl9LGUucHJvdG90eXBlLmluaXREb3RFdmVudHM9ZnVuY3Rpb24oKXt2YXIgZT10aGlzOyEwPT09ZS5vcHRpb25zLmRvdHMmJihpKFwibGlcIixlLiRkb3RzKS5vbihcImNsaWNrLnNsaWNrXCIse21lc3NhZ2U6XCJpbmRleFwifSxlLmNoYW5nZVNsaWRlKSwhMD09PWUub3B0aW9ucy5hY2Nlc3NpYmlsaXR5JiZlLiRkb3RzLm9uKFwia2V5ZG93bi5zbGlja1wiLGUua2V5SGFuZGxlcikpLCEwPT09ZS5vcHRpb25zLmRvdHMmJiEwPT09ZS5vcHRpb25zLnBhdXNlT25Eb3RzSG92ZXImJmkoXCJsaVwiLGUuJGRvdHMpLm9uKFwibW91c2VlbnRlci5zbGlja1wiLGkucHJveHkoZS5pbnRlcnJ1cHQsZSwhMCkpLm9uKFwibW91c2VsZWF2ZS5zbGlja1wiLGkucHJveHkoZS5pbnRlcnJ1cHQsZSwhMSkpfSxlLnByb3RvdHlwZS5pbml0U2xpZGVFdmVudHM9ZnVuY3Rpb24oKXt2YXIgZT10aGlzO2Uub3B0aW9ucy5wYXVzZU9uSG92ZXImJihlLiRsaXN0Lm9uKFwibW91c2VlbnRlci5zbGlja1wiLGkucHJveHkoZS5pbnRlcnJ1cHQsZSwhMCkpLGUuJGxpc3Qub24oXCJtb3VzZWxlYXZlLnNsaWNrXCIsaS5wcm94eShlLmludGVycnVwdCxlLCExKSkpfSxlLnByb3RvdHlwZS5pbml0aWFsaXplRXZlbnRzPWZ1bmN0aW9uKCl7dmFyIGU9dGhpcztlLmluaXRBcnJvd0V2ZW50cygpLGUuaW5pdERvdEV2ZW50cygpLGUuaW5pdFNsaWRlRXZlbnRzKCksZS4kbGlzdC5vbihcInRvdWNoc3RhcnQuc2xpY2sgbW91c2Vkb3duLnNsaWNrXCIse2FjdGlvbjpcInN0YXJ0XCJ9LGUuc3dpcGVIYW5kbGVyKSxlLiRsaXN0Lm9uKFwidG91Y2htb3ZlLnNsaWNrIG1vdXNlbW92ZS5zbGlja1wiLHthY3Rpb246XCJtb3ZlXCJ9LGUuc3dpcGVIYW5kbGVyKSxlLiRsaXN0Lm9uKFwidG91Y2hlbmQuc2xpY2sgbW91c2V1cC5zbGlja1wiLHthY3Rpb246XCJlbmRcIn0sZS5zd2lwZUhhbmRsZXIpLGUuJGxpc3Qub24oXCJ0b3VjaGNhbmNlbC5zbGljayBtb3VzZWxlYXZlLnNsaWNrXCIse2FjdGlvbjpcImVuZFwifSxlLnN3aXBlSGFuZGxlciksZS4kbGlzdC5vbihcImNsaWNrLnNsaWNrXCIsZS5jbGlja0hhbmRsZXIpLGkoZG9jdW1lbnQpLm9uKGUudmlzaWJpbGl0eUNoYW5nZSxpLnByb3h5KGUudmlzaWJpbGl0eSxlKSksITA9PT1lLm9wdGlvbnMuYWNjZXNzaWJpbGl0eSYmZS4kbGlzdC5vbihcImtleWRvd24uc2xpY2tcIixlLmtleUhhbmRsZXIpLCEwPT09ZS5vcHRpb25zLmZvY3VzT25TZWxlY3QmJmkoZS4kc2xpZGVUcmFjaykuY2hpbGRyZW4oKS5vbihcImNsaWNrLnNsaWNrXCIsZS5zZWxlY3RIYW5kbGVyKSxpKHdpbmRvdykub24oXCJvcmllbnRhdGlvbmNoYW5nZS5zbGljay5zbGljay1cIitlLmluc3RhbmNlVWlkLGkucHJveHkoZS5vcmllbnRhdGlvbkNoYW5nZSxlKSksaSh3aW5kb3cpLm9uKFwicmVzaXplLnNsaWNrLnNsaWNrLVwiK2UuaW5zdGFuY2VVaWQsaS5wcm94eShlLnJlc2l6ZSxlKSksaShcIltkcmFnZ2FibGUhPXRydWVdXCIsZS4kc2xpZGVUcmFjaykub24oXCJkcmFnc3RhcnRcIixlLnByZXZlbnREZWZhdWx0KSxpKHdpbmRvdykub24oXCJsb2FkLnNsaWNrLnNsaWNrLVwiK2UuaW5zdGFuY2VVaWQsZS5zZXRQb3NpdGlvbiksaShlLnNldFBvc2l0aW9uKX0sZS5wcm90b3R5cGUuaW5pdFVJPWZ1bmN0aW9uKCl7dmFyIGk9dGhpczshMD09PWkub3B0aW9ucy5hcnJvd3MmJmkuc2xpZGVDb3VudD5pLm9wdGlvbnMuc2xpZGVzVG9TaG93JiYoaS4kcHJldkFycm93LnNob3coKSxpLiRuZXh0QXJyb3cuc2hvdygpKSwhMD09PWkub3B0aW9ucy5kb3RzJiZpLnNsaWRlQ291bnQ+aS5vcHRpb25zLnNsaWRlc1RvU2hvdyYmaS4kZG90cy5zaG93KCl9LGUucHJvdG90eXBlLmtleUhhbmRsZXI9ZnVuY3Rpb24oaSl7dmFyIGU9dGhpcztpLnRhcmdldC50YWdOYW1lLm1hdGNoKFwiVEVYVEFSRUF8SU5QVVR8U0VMRUNUXCIpfHwoMzc9PT1pLmtleUNvZGUmJiEwPT09ZS5vcHRpb25zLmFjY2Vzc2liaWxpdHk/ZS5jaGFuZ2VTbGlkZSh7ZGF0YTp7bWVzc2FnZTohMD09PWUub3B0aW9ucy5ydGw/XCJuZXh0XCI6XCJwcmV2aW91c1wifX0pOjM5PT09aS5rZXlDb2RlJiYhMD09PWUub3B0aW9ucy5hY2Nlc3NpYmlsaXR5JiZlLmNoYW5nZVNsaWRlKHtkYXRhOnttZXNzYWdlOiEwPT09ZS5vcHRpb25zLnJ0bD9cInByZXZpb3VzXCI6XCJuZXh0XCJ9fSkpfSxlLnByb3RvdHlwZS5sYXp5TG9hZD1mdW5jdGlvbigpe2Z1bmN0aW9uIGUoZSl7aShcImltZ1tkYXRhLWxhenldXCIsZSkuZWFjaChmdW5jdGlvbigpe3ZhciBlPWkodGhpcyksdD1pKHRoaXMpLmF0dHIoXCJkYXRhLWxhenlcIiksbz1pKHRoaXMpLmF0dHIoXCJkYXRhLXNyY3NldFwiKSxzPWkodGhpcykuYXR0cihcImRhdGEtc2l6ZXNcIil8fG4uJHNsaWRlci5hdHRyKFwiZGF0YS1zaXplc1wiKSxyPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJpbWdcIik7ci5vbmxvYWQ9ZnVuY3Rpb24oKXtlLmFuaW1hdGUoe29wYWNpdHk6MH0sMTAwLGZ1bmN0aW9uKCl7byYmKGUuYXR0cihcInNyY3NldFwiLG8pLHMmJmUuYXR0cihcInNpemVzXCIscykpLGUuYXR0cihcInNyY1wiLHQpLmFuaW1hdGUoe29wYWNpdHk6MX0sMjAwLGZ1bmN0aW9uKCl7ZS5yZW1vdmVBdHRyKFwiZGF0YS1sYXp5IGRhdGEtc3Jjc2V0IGRhdGEtc2l6ZXNcIikucmVtb3ZlQ2xhc3MoXCJzbGljay1sb2FkaW5nXCIpfSksbi4kc2xpZGVyLnRyaWdnZXIoXCJsYXp5TG9hZGVkXCIsW24sZSx0XSl9KX0sci5vbmVycm9yPWZ1bmN0aW9uKCl7ZS5yZW1vdmVBdHRyKFwiZGF0YS1sYXp5XCIpLnJlbW92ZUNsYXNzKFwic2xpY2stbG9hZGluZ1wiKS5hZGRDbGFzcyhcInNsaWNrLWxhenlsb2FkLWVycm9yXCIpLG4uJHNsaWRlci50cmlnZ2VyKFwibGF6eUxvYWRFcnJvclwiLFtuLGUsdF0pfSxyLnNyYz10fSl9dmFyIHQsbyxzLG49dGhpcztpZighMD09PW4ub3B0aW9ucy5jZW50ZXJNb2RlPyEwPT09bi5vcHRpb25zLmluZmluaXRlP3M9KG89bi5jdXJyZW50U2xpZGUrKG4ub3B0aW9ucy5zbGlkZXNUb1Nob3cvMisxKSkrbi5vcHRpb25zLnNsaWRlc1RvU2hvdysyOihvPU1hdGgubWF4KDAsbi5jdXJyZW50U2xpZGUtKG4ub3B0aW9ucy5zbGlkZXNUb1Nob3cvMisxKSkscz1uLm9wdGlvbnMuc2xpZGVzVG9TaG93LzIrMSsyK24uY3VycmVudFNsaWRlKToobz1uLm9wdGlvbnMuaW5maW5pdGU/bi5vcHRpb25zLnNsaWRlc1RvU2hvdytuLmN1cnJlbnRTbGlkZTpuLmN1cnJlbnRTbGlkZSxzPU1hdGguY2VpbChvK24ub3B0aW9ucy5zbGlkZXNUb1Nob3cpLCEwPT09bi5vcHRpb25zLmZhZGUmJihvPjAmJm8tLSxzPD1uLnNsaWRlQ291bnQmJnMrKykpLHQ9bi4kc2xpZGVyLmZpbmQoXCIuc2xpY2stc2xpZGVcIikuc2xpY2UobyxzKSxcImFudGljaXBhdGVkXCI9PT1uLm9wdGlvbnMubGF6eUxvYWQpZm9yKHZhciByPW8tMSxsPXMsZD1uLiRzbGlkZXIuZmluZChcIi5zbGljay1zbGlkZVwiKSxhPTA7YTxuLm9wdGlvbnMuc2xpZGVzVG9TY3JvbGw7YSsrKXI8MCYmKHI9bi5zbGlkZUNvdW50LTEpLHQ9KHQ9dC5hZGQoZC5lcShyKSkpLmFkZChkLmVxKGwpKSxyLS0sbCsrO2UodCksbi5zbGlkZUNvdW50PD1uLm9wdGlvbnMuc2xpZGVzVG9TaG93P2Uobi4kc2xpZGVyLmZpbmQoXCIuc2xpY2stc2xpZGVcIikpOm4uY3VycmVudFNsaWRlPj1uLnNsaWRlQ291bnQtbi5vcHRpb25zLnNsaWRlc1RvU2hvdz9lKG4uJHNsaWRlci5maW5kKFwiLnNsaWNrLWNsb25lZFwiKS5zbGljZSgwLG4ub3B0aW9ucy5zbGlkZXNUb1Nob3cpKTowPT09bi5jdXJyZW50U2xpZGUmJmUobi4kc2xpZGVyLmZpbmQoXCIuc2xpY2stY2xvbmVkXCIpLnNsaWNlKC0xKm4ub3B0aW9ucy5zbGlkZXNUb1Nob3cpKX0sZS5wcm90b3R5cGUubG9hZFNsaWRlcj1mdW5jdGlvbigpe3ZhciBpPXRoaXM7aS5zZXRQb3NpdGlvbigpLGkuJHNsaWRlVHJhY2suY3NzKHtvcGFjaXR5OjF9KSxpLiRzbGlkZXIucmVtb3ZlQ2xhc3MoXCJzbGljay1sb2FkaW5nXCIpLGkuaW5pdFVJKCksXCJwcm9ncmVzc2l2ZVwiPT09aS5vcHRpb25zLmxhenlMb2FkJiZpLnByb2dyZXNzaXZlTGF6eUxvYWQoKX0sZS5wcm90b3R5cGUubmV4dD1lLnByb3RvdHlwZS5zbGlja05leHQ9ZnVuY3Rpb24oKXt0aGlzLmNoYW5nZVNsaWRlKHtkYXRhOnttZXNzYWdlOlwibmV4dFwifX0pfSxlLnByb3RvdHlwZS5vcmllbnRhdGlvbkNoYW5nZT1mdW5jdGlvbigpe3ZhciBpPXRoaXM7aS5jaGVja1Jlc3BvbnNpdmUoKSxpLnNldFBvc2l0aW9uKCl9LGUucHJvdG90eXBlLnBhdXNlPWUucHJvdG90eXBlLnNsaWNrUGF1c2U9ZnVuY3Rpb24oKXt2YXIgaT10aGlzO2kuYXV0b1BsYXlDbGVhcigpLGkucGF1c2VkPSEwfSxlLnByb3RvdHlwZS5wbGF5PWUucHJvdG90eXBlLnNsaWNrUGxheT1mdW5jdGlvbigpe3ZhciBpPXRoaXM7aS5hdXRvUGxheSgpLGkub3B0aW9ucy5hdXRvcGxheT0hMCxpLnBhdXNlZD0hMSxpLmZvY3Vzc2VkPSExLGkuaW50ZXJydXB0ZWQ9ITF9LGUucHJvdG90eXBlLnBvc3RTbGlkZT1mdW5jdGlvbihlKXt2YXIgdD10aGlzO3QudW5zbGlja2VkfHwodC4kc2xpZGVyLnRyaWdnZXIoXCJhZnRlckNoYW5nZVwiLFt0LGVdKSx0LmFuaW1hdGluZz0hMSx0LnNsaWRlQ291bnQ+dC5vcHRpb25zLnNsaWRlc1RvU2hvdyYmdC5zZXRQb3NpdGlvbigpLHQuc3dpcGVMZWZ0PW51bGwsdC5vcHRpb25zLmF1dG9wbGF5JiZ0LmF1dG9QbGF5KCksITA9PT10Lm9wdGlvbnMuYWNjZXNzaWJpbGl0eSYmKHQuaW5pdEFEQSgpLHQub3B0aW9ucy5mb2N1c09uQ2hhbmdlJiZpKHQuJHNsaWRlcy5nZXQodC5jdXJyZW50U2xpZGUpKS5hdHRyKFwidGFiaW5kZXhcIiwwKS5mb2N1cygpKSl9LGUucHJvdG90eXBlLnByZXY9ZS5wcm90b3R5cGUuc2xpY2tQcmV2PWZ1bmN0aW9uKCl7dGhpcy5jaGFuZ2VTbGlkZSh7ZGF0YTp7bWVzc2FnZTpcInByZXZpb3VzXCJ9fSl9LGUucHJvdG90eXBlLnByZXZlbnREZWZhdWx0PWZ1bmN0aW9uKGkpe2kucHJldmVudERlZmF1bHQoKX0sZS5wcm90b3R5cGUucHJvZ3Jlc3NpdmVMYXp5TG9hZD1mdW5jdGlvbihlKXtlPWV8fDE7dmFyIHQsbyxzLG4scixsPXRoaXMsZD1pKFwiaW1nW2RhdGEtbGF6eV1cIixsLiRzbGlkZXIpO2QubGVuZ3RoPyh0PWQuZmlyc3QoKSxvPXQuYXR0cihcImRhdGEtbGF6eVwiKSxzPXQuYXR0cihcImRhdGEtc3Jjc2V0XCIpLG49dC5hdHRyKFwiZGF0YS1zaXplc1wiKXx8bC4kc2xpZGVyLmF0dHIoXCJkYXRhLXNpemVzXCIpLChyPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJpbWdcIikpLm9ubG9hZD1mdW5jdGlvbigpe3MmJih0LmF0dHIoXCJzcmNzZXRcIixzKSxuJiZ0LmF0dHIoXCJzaXplc1wiLG4pKSx0LmF0dHIoXCJzcmNcIixvKS5yZW1vdmVBdHRyKFwiZGF0YS1sYXp5IGRhdGEtc3Jjc2V0IGRhdGEtc2l6ZXNcIikucmVtb3ZlQ2xhc3MoXCJzbGljay1sb2FkaW5nXCIpLCEwPT09bC5vcHRpb25zLmFkYXB0aXZlSGVpZ2h0JiZsLnNldFBvc2l0aW9uKCksbC4kc2xpZGVyLnRyaWdnZXIoXCJsYXp5TG9hZGVkXCIsW2wsdCxvXSksbC5wcm9ncmVzc2l2ZUxhenlMb2FkKCl9LHIub25lcnJvcj1mdW5jdGlvbigpe2U8Mz9zZXRUaW1lb3V0KGZ1bmN0aW9uKCl7bC5wcm9ncmVzc2l2ZUxhenlMb2FkKGUrMSl9LDUwMCk6KHQucmVtb3ZlQXR0cihcImRhdGEtbGF6eVwiKS5yZW1vdmVDbGFzcyhcInNsaWNrLWxvYWRpbmdcIikuYWRkQ2xhc3MoXCJzbGljay1sYXp5bG9hZC1lcnJvclwiKSxsLiRzbGlkZXIudHJpZ2dlcihcImxhenlMb2FkRXJyb3JcIixbbCx0LG9dKSxsLnByb2dyZXNzaXZlTGF6eUxvYWQoKSl9LHIuc3JjPW8pOmwuJHNsaWRlci50cmlnZ2VyKFwiYWxsSW1hZ2VzTG9hZGVkXCIsW2xdKX0sZS5wcm90b3R5cGUucmVmcmVzaD1mdW5jdGlvbihlKXt2YXIgdCxvLHM9dGhpcztvPXMuc2xpZGVDb3VudC1zLm9wdGlvbnMuc2xpZGVzVG9TaG93LCFzLm9wdGlvbnMuaW5maW5pdGUmJnMuY3VycmVudFNsaWRlPm8mJihzLmN1cnJlbnRTbGlkZT1vKSxzLnNsaWRlQ291bnQ8PXMub3B0aW9ucy5zbGlkZXNUb1Nob3cmJihzLmN1cnJlbnRTbGlkZT0wKSx0PXMuY3VycmVudFNsaWRlLHMuZGVzdHJveSghMCksaS5leHRlbmQocyxzLmluaXRpYWxzLHtjdXJyZW50U2xpZGU6dH0pLHMuaW5pdCgpLGV8fHMuY2hhbmdlU2xpZGUoe2RhdGE6e21lc3NhZ2U6XCJpbmRleFwiLGluZGV4OnR9fSwhMSl9LGUucHJvdG90eXBlLnJlZ2lzdGVyQnJlYWtwb2ludHM9ZnVuY3Rpb24oKXt2YXIgZSx0LG8scz10aGlzLG49cy5vcHRpb25zLnJlc3BvbnNpdmV8fG51bGw7aWYoXCJhcnJheVwiPT09aS50eXBlKG4pJiZuLmxlbmd0aCl7cy5yZXNwb25kVG89cy5vcHRpb25zLnJlc3BvbmRUb3x8XCJ3aW5kb3dcIjtmb3IoZSBpbiBuKWlmKG89cy5icmVha3BvaW50cy5sZW5ndGgtMSxuLmhhc093blByb3BlcnR5KGUpKXtmb3IodD1uW2VdLmJyZWFrcG9pbnQ7bz49MDspcy5icmVha3BvaW50c1tvXSYmcy5icmVha3BvaW50c1tvXT09PXQmJnMuYnJlYWtwb2ludHMuc3BsaWNlKG8sMSksby0tO3MuYnJlYWtwb2ludHMucHVzaCh0KSxzLmJyZWFrcG9pbnRTZXR0aW5nc1t0XT1uW2VdLnNldHRpbmdzfXMuYnJlYWtwb2ludHMuc29ydChmdW5jdGlvbihpLGUpe3JldHVybiBzLm9wdGlvbnMubW9iaWxlRmlyc3Q/aS1lOmUtaX0pfX0sZS5wcm90b3R5cGUucmVpbml0PWZ1bmN0aW9uKCl7dmFyIGU9dGhpcztlLiRzbGlkZXM9ZS4kc2xpZGVUcmFjay5jaGlsZHJlbihlLm9wdGlvbnMuc2xpZGUpLmFkZENsYXNzKFwic2xpY2stc2xpZGVcIiksZS5zbGlkZUNvdW50PWUuJHNsaWRlcy5sZW5ndGgsZS5jdXJyZW50U2xpZGU+PWUuc2xpZGVDb3VudCYmMCE9PWUuY3VycmVudFNsaWRlJiYoZS5jdXJyZW50U2xpZGU9ZS5jdXJyZW50U2xpZGUtZS5vcHRpb25zLnNsaWRlc1RvU2Nyb2xsKSxlLnNsaWRlQ291bnQ8PWUub3B0aW9ucy5zbGlkZXNUb1Nob3cmJihlLmN1cnJlbnRTbGlkZT0wKSxlLnJlZ2lzdGVyQnJlYWtwb2ludHMoKSxlLnNldFByb3BzKCksZS5zZXR1cEluZmluaXRlKCksZS5idWlsZEFycm93cygpLGUudXBkYXRlQXJyb3dzKCksZS5pbml0QXJyb3dFdmVudHMoKSxlLmJ1aWxkRG90cygpLGUudXBkYXRlRG90cygpLGUuaW5pdERvdEV2ZW50cygpLGUuY2xlYW5VcFNsaWRlRXZlbnRzKCksZS5pbml0U2xpZGVFdmVudHMoKSxlLmNoZWNrUmVzcG9uc2l2ZSghMSwhMCksITA9PT1lLm9wdGlvbnMuZm9jdXNPblNlbGVjdCYmaShlLiRzbGlkZVRyYWNrKS5jaGlsZHJlbigpLm9uKFwiY2xpY2suc2xpY2tcIixlLnNlbGVjdEhhbmRsZXIpLGUuc2V0U2xpZGVDbGFzc2VzKFwibnVtYmVyXCI9PXR5cGVvZiBlLmN1cnJlbnRTbGlkZT9lLmN1cnJlbnRTbGlkZTowKSxlLnNldFBvc2l0aW9uKCksZS5mb2N1c0hhbmRsZXIoKSxlLnBhdXNlZD0hZS5vcHRpb25zLmF1dG9wbGF5LGUuYXV0b1BsYXkoKSxlLiRzbGlkZXIudHJpZ2dlcihcInJlSW5pdFwiLFtlXSl9LGUucHJvdG90eXBlLnJlc2l6ZT1mdW5jdGlvbigpe3ZhciBlPXRoaXM7aSh3aW5kb3cpLndpZHRoKCkhPT1lLndpbmRvd1dpZHRoJiYoY2xlYXJUaW1lb3V0KGUud2luZG93RGVsYXkpLGUud2luZG93RGVsYXk9d2luZG93LnNldFRpbWVvdXQoZnVuY3Rpb24oKXtlLndpbmRvd1dpZHRoPWkod2luZG93KS53aWR0aCgpLGUuY2hlY2tSZXNwb25zaXZlKCksZS51bnNsaWNrZWR8fGUuc2V0UG9zaXRpb24oKX0sNTApKX0sZS5wcm90b3R5cGUucmVtb3ZlU2xpZGU9ZS5wcm90b3R5cGUuc2xpY2tSZW1vdmU9ZnVuY3Rpb24oaSxlLHQpe3ZhciBvPXRoaXM7aWYoaT1cImJvb2xlYW5cIj09dHlwZW9mIGk/ITA9PT0oZT1pKT8wOm8uc2xpZGVDb3VudC0xOiEwPT09ZT8tLWk6aSxvLnNsaWRlQ291bnQ8MXx8aTwwfHxpPm8uc2xpZGVDb3VudC0xKXJldHVybiExO28udW5sb2FkKCksITA9PT10P28uJHNsaWRlVHJhY2suY2hpbGRyZW4oKS5yZW1vdmUoKTpvLiRzbGlkZVRyYWNrLmNoaWxkcmVuKHRoaXMub3B0aW9ucy5zbGlkZSkuZXEoaSkucmVtb3ZlKCksby4kc2xpZGVzPW8uJHNsaWRlVHJhY2suY2hpbGRyZW4odGhpcy5vcHRpb25zLnNsaWRlKSxvLiRzbGlkZVRyYWNrLmNoaWxkcmVuKHRoaXMub3B0aW9ucy5zbGlkZSkuZGV0YWNoKCksby4kc2xpZGVUcmFjay5hcHBlbmQoby4kc2xpZGVzKSxvLiRzbGlkZXNDYWNoZT1vLiRzbGlkZXMsby5yZWluaXQoKX0sZS5wcm90b3R5cGUuc2V0Q1NTPWZ1bmN0aW9uKGkpe3ZhciBlLHQsbz10aGlzLHM9e307ITA9PT1vLm9wdGlvbnMucnRsJiYoaT0taSksZT1cImxlZnRcIj09by5wb3NpdGlvblByb3A/TWF0aC5jZWlsKGkpK1wicHhcIjpcIjBweFwiLHQ9XCJ0b3BcIj09by5wb3NpdGlvblByb3A/TWF0aC5jZWlsKGkpK1wicHhcIjpcIjBweFwiLHNbby5wb3NpdGlvblByb3BdPWksITE9PT1vLnRyYW5zZm9ybXNFbmFibGVkP28uJHNsaWRlVHJhY2suY3NzKHMpOihzPXt9LCExPT09by5jc3NUcmFuc2l0aW9ucz8oc1tvLmFuaW1UeXBlXT1cInRyYW5zbGF0ZShcIitlK1wiLCBcIit0K1wiKVwiLG8uJHNsaWRlVHJhY2suY3NzKHMpKTooc1tvLmFuaW1UeXBlXT1cInRyYW5zbGF0ZTNkKFwiK2UrXCIsIFwiK3QrXCIsIDBweClcIixvLiRzbGlkZVRyYWNrLmNzcyhzKSkpfSxlLnByb3RvdHlwZS5zZXREaW1lbnNpb25zPWZ1bmN0aW9uKCl7dmFyIGk9dGhpczshMT09PWkub3B0aW9ucy52ZXJ0aWNhbD8hMD09PWkub3B0aW9ucy5jZW50ZXJNb2RlJiZpLiRsaXN0LmNzcyh7cGFkZGluZzpcIjBweCBcIitpLm9wdGlvbnMuY2VudGVyUGFkZGluZ30pOihpLiRsaXN0LmhlaWdodChpLiRzbGlkZXMuZmlyc3QoKS5vdXRlckhlaWdodCghMCkqaS5vcHRpb25zLnNsaWRlc1RvU2hvdyksITA9PT1pLm9wdGlvbnMuY2VudGVyTW9kZSYmaS4kbGlzdC5jc3Moe3BhZGRpbmc6aS5vcHRpb25zLmNlbnRlclBhZGRpbmcrXCIgMHB4XCJ9KSksaS5saXN0V2lkdGg9aS4kbGlzdC53aWR0aCgpLGkubGlzdEhlaWdodD1pLiRsaXN0LmhlaWdodCgpLCExPT09aS5vcHRpb25zLnZlcnRpY2FsJiYhMT09PWkub3B0aW9ucy52YXJpYWJsZVdpZHRoPyhpLnNsaWRlV2lkdGg9TWF0aC5jZWlsKGkubGlzdFdpZHRoL2kub3B0aW9ucy5zbGlkZXNUb1Nob3cpLGkuJHNsaWRlVHJhY2sud2lkdGgoTWF0aC5jZWlsKGkuc2xpZGVXaWR0aCppLiRzbGlkZVRyYWNrLmNoaWxkcmVuKFwiLnNsaWNrLXNsaWRlXCIpLmxlbmd0aCkpKTohMD09PWkub3B0aW9ucy52YXJpYWJsZVdpZHRoP2kuJHNsaWRlVHJhY2sud2lkdGgoNWUzKmkuc2xpZGVDb3VudCk6KGkuc2xpZGVXaWR0aD1NYXRoLmNlaWwoaS5saXN0V2lkdGgpLGkuJHNsaWRlVHJhY2suaGVpZ2h0KE1hdGguY2VpbChpLiRzbGlkZXMuZmlyc3QoKS5vdXRlckhlaWdodCghMCkqaS4kc2xpZGVUcmFjay5jaGlsZHJlbihcIi5zbGljay1zbGlkZVwiKS5sZW5ndGgpKSk7dmFyIGU9aS4kc2xpZGVzLmZpcnN0KCkub3V0ZXJXaWR0aCghMCktaS4kc2xpZGVzLmZpcnN0KCkud2lkdGgoKTshMT09PWkub3B0aW9ucy52YXJpYWJsZVdpZHRoJiZpLiRzbGlkZVRyYWNrLmNoaWxkcmVuKFwiLnNsaWNrLXNsaWRlXCIpLndpZHRoKGkuc2xpZGVXaWR0aC1lKX0sZS5wcm90b3R5cGUuc2V0RmFkZT1mdW5jdGlvbigpe3ZhciBlLHQ9dGhpczt0LiRzbGlkZXMuZWFjaChmdW5jdGlvbihvLHMpe2U9dC5zbGlkZVdpZHRoKm8qLTEsITA9PT10Lm9wdGlvbnMucnRsP2kocykuY3NzKHtwb3NpdGlvbjpcInJlbGF0aXZlXCIscmlnaHQ6ZSx0b3A6MCx6SW5kZXg6dC5vcHRpb25zLnpJbmRleC0yLG9wYWNpdHk6MH0pOmkocykuY3NzKHtwb3NpdGlvbjpcInJlbGF0aXZlXCIsbGVmdDplLHRvcDowLHpJbmRleDp0Lm9wdGlvbnMuekluZGV4LTIsb3BhY2l0eTowfSl9KSx0LiRzbGlkZXMuZXEodC5jdXJyZW50U2xpZGUpLmNzcyh7ekluZGV4OnQub3B0aW9ucy56SW5kZXgtMSxvcGFjaXR5OjF9KX0sZS5wcm90b3R5cGUuc2V0SGVpZ2h0PWZ1bmN0aW9uKCl7dmFyIGk9dGhpcztpZigxPT09aS5vcHRpb25zLnNsaWRlc1RvU2hvdyYmITA9PT1pLm9wdGlvbnMuYWRhcHRpdmVIZWlnaHQmJiExPT09aS5vcHRpb25zLnZlcnRpY2FsKXt2YXIgZT1pLiRzbGlkZXMuZXEoaS5jdXJyZW50U2xpZGUpLm91dGVySGVpZ2h0KCEwKTtpLiRsaXN0LmNzcyhcImhlaWdodFwiLGUpfX0sZS5wcm90b3R5cGUuc2V0T3B0aW9uPWUucHJvdG90eXBlLnNsaWNrU2V0T3B0aW9uPWZ1bmN0aW9uKCl7dmFyIGUsdCxvLHMsbixyPXRoaXMsbD0hMTtpZihcIm9iamVjdFwiPT09aS50eXBlKGFyZ3VtZW50c1swXSk/KG89YXJndW1lbnRzWzBdLGw9YXJndW1lbnRzWzFdLG49XCJtdWx0aXBsZVwiKTpcInN0cmluZ1wiPT09aS50eXBlKGFyZ3VtZW50c1swXSkmJihvPWFyZ3VtZW50c1swXSxzPWFyZ3VtZW50c1sxXSxsPWFyZ3VtZW50c1syXSxcInJlc3BvbnNpdmVcIj09PWFyZ3VtZW50c1swXSYmXCJhcnJheVwiPT09aS50eXBlKGFyZ3VtZW50c1sxXSk/bj1cInJlc3BvbnNpdmVcIjp2b2lkIDAhPT1hcmd1bWVudHNbMV0mJihuPVwic2luZ2xlXCIpKSxcInNpbmdsZVwiPT09bilyLm9wdGlvbnNbb109cztlbHNlIGlmKFwibXVsdGlwbGVcIj09PW4paS5lYWNoKG8sZnVuY3Rpb24oaSxlKXtyLm9wdGlvbnNbaV09ZX0pO2Vsc2UgaWYoXCJyZXNwb25zaXZlXCI9PT1uKWZvcih0IGluIHMpaWYoXCJhcnJheVwiIT09aS50eXBlKHIub3B0aW9ucy5yZXNwb25zaXZlKSlyLm9wdGlvbnMucmVzcG9uc2l2ZT1bc1t0XV07ZWxzZXtmb3IoZT1yLm9wdGlvbnMucmVzcG9uc2l2ZS5sZW5ndGgtMTtlPj0wOylyLm9wdGlvbnMucmVzcG9uc2l2ZVtlXS5icmVha3BvaW50PT09c1t0XS5icmVha3BvaW50JiZyLm9wdGlvbnMucmVzcG9uc2l2ZS5zcGxpY2UoZSwxKSxlLS07ci5vcHRpb25zLnJlc3BvbnNpdmUucHVzaChzW3RdKX1sJiYoci51bmxvYWQoKSxyLnJlaW5pdCgpKX0sZS5wcm90b3R5cGUuc2V0UG9zaXRpb249ZnVuY3Rpb24oKXt2YXIgaT10aGlzO2kuc2V0RGltZW5zaW9ucygpLGkuc2V0SGVpZ2h0KCksITE9PT1pLm9wdGlvbnMuZmFkZT9pLnNldENTUyhpLmdldExlZnQoaS5jdXJyZW50U2xpZGUpKTppLnNldEZhZGUoKSxpLiRzbGlkZXIudHJpZ2dlcihcInNldFBvc2l0aW9uXCIsW2ldKX0sZS5wcm90b3R5cGUuc2V0UHJvcHM9ZnVuY3Rpb24oKXt2YXIgaT10aGlzLGU9ZG9jdW1lbnQuYm9keS5zdHlsZTtpLnBvc2l0aW9uUHJvcD0hMD09PWkub3B0aW9ucy52ZXJ0aWNhbD9cInRvcFwiOlwibGVmdFwiLFwidG9wXCI9PT1pLnBvc2l0aW9uUHJvcD9pLiRzbGlkZXIuYWRkQ2xhc3MoXCJzbGljay12ZXJ0aWNhbFwiKTppLiRzbGlkZXIucmVtb3ZlQ2xhc3MoXCJzbGljay12ZXJ0aWNhbFwiKSx2b2lkIDA9PT1lLldlYmtpdFRyYW5zaXRpb24mJnZvaWQgMD09PWUuTW96VHJhbnNpdGlvbiYmdm9pZCAwPT09ZS5tc1RyYW5zaXRpb258fCEwPT09aS5vcHRpb25zLnVzZUNTUyYmKGkuY3NzVHJhbnNpdGlvbnM9ITApLGkub3B0aW9ucy5mYWRlJiYoXCJudW1iZXJcIj09dHlwZW9mIGkub3B0aW9ucy56SW5kZXg/aS5vcHRpb25zLnpJbmRleDwzJiYoaS5vcHRpb25zLnpJbmRleD0zKTppLm9wdGlvbnMuekluZGV4PWkuZGVmYXVsdHMuekluZGV4KSx2b2lkIDAhPT1lLk9UcmFuc2Zvcm0mJihpLmFuaW1UeXBlPVwiT1RyYW5zZm9ybVwiLGkudHJhbnNmb3JtVHlwZT1cIi1vLXRyYW5zZm9ybVwiLGkudHJhbnNpdGlvblR5cGU9XCJPVHJhbnNpdGlvblwiLHZvaWQgMD09PWUucGVyc3BlY3RpdmVQcm9wZXJ0eSYmdm9pZCAwPT09ZS53ZWJraXRQZXJzcGVjdGl2ZSYmKGkuYW5pbVR5cGU9ITEpKSx2b2lkIDAhPT1lLk1velRyYW5zZm9ybSYmKGkuYW5pbVR5cGU9XCJNb3pUcmFuc2Zvcm1cIixpLnRyYW5zZm9ybVR5cGU9XCItbW96LXRyYW5zZm9ybVwiLGkudHJhbnNpdGlvblR5cGU9XCJNb3pUcmFuc2l0aW9uXCIsdm9pZCAwPT09ZS5wZXJzcGVjdGl2ZVByb3BlcnR5JiZ2b2lkIDA9PT1lLk1velBlcnNwZWN0aXZlJiYoaS5hbmltVHlwZT0hMSkpLHZvaWQgMCE9PWUud2Via2l0VHJhbnNmb3JtJiYoaS5hbmltVHlwZT1cIndlYmtpdFRyYW5zZm9ybVwiLGkudHJhbnNmb3JtVHlwZT1cIi13ZWJraXQtdHJhbnNmb3JtXCIsaS50cmFuc2l0aW9uVHlwZT1cIndlYmtpdFRyYW5zaXRpb25cIix2b2lkIDA9PT1lLnBlcnNwZWN0aXZlUHJvcGVydHkmJnZvaWQgMD09PWUud2Via2l0UGVyc3BlY3RpdmUmJihpLmFuaW1UeXBlPSExKSksdm9pZCAwIT09ZS5tc1RyYW5zZm9ybSYmKGkuYW5pbVR5cGU9XCJtc1RyYW5zZm9ybVwiLGkudHJhbnNmb3JtVHlwZT1cIi1tcy10cmFuc2Zvcm1cIixpLnRyYW5zaXRpb25UeXBlPVwibXNUcmFuc2l0aW9uXCIsdm9pZCAwPT09ZS5tc1RyYW5zZm9ybSYmKGkuYW5pbVR5cGU9ITEpKSx2b2lkIDAhPT1lLnRyYW5zZm9ybSYmITEhPT1pLmFuaW1UeXBlJiYoaS5hbmltVHlwZT1cInRyYW5zZm9ybVwiLGkudHJhbnNmb3JtVHlwZT1cInRyYW5zZm9ybVwiLGkudHJhbnNpdGlvblR5cGU9XCJ0cmFuc2l0aW9uXCIpLGkudHJhbnNmb3Jtc0VuYWJsZWQ9aS5vcHRpb25zLnVzZVRyYW5zZm9ybSYmbnVsbCE9PWkuYW5pbVR5cGUmJiExIT09aS5hbmltVHlwZX0sZS5wcm90b3R5cGUuc2V0U2xpZGVDbGFzc2VzPWZ1bmN0aW9uKGkpe3ZhciBlLHQsbyxzLG49dGhpcztpZih0PW4uJHNsaWRlci5maW5kKFwiLnNsaWNrLXNsaWRlXCIpLnJlbW92ZUNsYXNzKFwic2xpY2stYWN0aXZlIHNsaWNrLWNlbnRlciBzbGljay1jdXJyZW50XCIpLmF0dHIoXCJhcmlhLWhpZGRlblwiLFwidHJ1ZVwiKSxuLiRzbGlkZXMuZXEoaSkuYWRkQ2xhc3MoXCJzbGljay1jdXJyZW50XCIpLCEwPT09bi5vcHRpb25zLmNlbnRlck1vZGUpe3ZhciByPW4ub3B0aW9ucy5zbGlkZXNUb1Nob3clMj09MD8xOjA7ZT1NYXRoLmZsb29yKG4ub3B0aW9ucy5zbGlkZXNUb1Nob3cvMiksITA9PT1uLm9wdGlvbnMuaW5maW5pdGUmJihpPj1lJiZpPD1uLnNsaWRlQ291bnQtMS1lP24uJHNsaWRlcy5zbGljZShpLWUrcixpK2UrMSkuYWRkQ2xhc3MoXCJzbGljay1hY3RpdmVcIikuYXR0cihcImFyaWEtaGlkZGVuXCIsXCJmYWxzZVwiKToobz1uLm9wdGlvbnMuc2xpZGVzVG9TaG93K2ksdC5zbGljZShvLWUrMStyLG8rZSsyKS5hZGRDbGFzcyhcInNsaWNrLWFjdGl2ZVwiKS5hdHRyKFwiYXJpYS1oaWRkZW5cIixcImZhbHNlXCIpKSwwPT09aT90LmVxKHQubGVuZ3RoLTEtbi5vcHRpb25zLnNsaWRlc1RvU2hvdykuYWRkQ2xhc3MoXCJzbGljay1jZW50ZXJcIik6aT09PW4uc2xpZGVDb3VudC0xJiZ0LmVxKG4ub3B0aW9ucy5zbGlkZXNUb1Nob3cpLmFkZENsYXNzKFwic2xpY2stY2VudGVyXCIpKSxuLiRzbGlkZXMuZXEoaSkuYWRkQ2xhc3MoXCJzbGljay1jZW50ZXJcIil9ZWxzZSBpPj0wJiZpPD1uLnNsaWRlQ291bnQtbi5vcHRpb25zLnNsaWRlc1RvU2hvdz9uLiRzbGlkZXMuc2xpY2UoaSxpK24ub3B0aW9ucy5zbGlkZXNUb1Nob3cpLmFkZENsYXNzKFwic2xpY2stYWN0aXZlXCIpLmF0dHIoXCJhcmlhLWhpZGRlblwiLFwiZmFsc2VcIik6dC5sZW5ndGg8PW4ub3B0aW9ucy5zbGlkZXNUb1Nob3c/dC5hZGRDbGFzcyhcInNsaWNrLWFjdGl2ZVwiKS5hdHRyKFwiYXJpYS1oaWRkZW5cIixcImZhbHNlXCIpOihzPW4uc2xpZGVDb3VudCVuLm9wdGlvbnMuc2xpZGVzVG9TaG93LG89ITA9PT1uLm9wdGlvbnMuaW5maW5pdGU/bi5vcHRpb25zLnNsaWRlc1RvU2hvdytpOmksbi5vcHRpb25zLnNsaWRlc1RvU2hvdz09bi5vcHRpb25zLnNsaWRlc1RvU2Nyb2xsJiZuLnNsaWRlQ291bnQtaTxuLm9wdGlvbnMuc2xpZGVzVG9TaG93P3Quc2xpY2Uoby0obi5vcHRpb25zLnNsaWRlc1RvU2hvdy1zKSxvK3MpLmFkZENsYXNzKFwic2xpY2stYWN0aXZlXCIpLmF0dHIoXCJhcmlhLWhpZGRlblwiLFwiZmFsc2VcIik6dC5zbGljZShvLG8rbi5vcHRpb25zLnNsaWRlc1RvU2hvdykuYWRkQ2xhc3MoXCJzbGljay1hY3RpdmVcIikuYXR0cihcImFyaWEtaGlkZGVuXCIsXCJmYWxzZVwiKSk7XCJvbmRlbWFuZFwiIT09bi5vcHRpb25zLmxhenlMb2FkJiZcImFudGljaXBhdGVkXCIhPT1uLm9wdGlvbnMubGF6eUxvYWR8fG4ubGF6eUxvYWQoKX0sZS5wcm90b3R5cGUuc2V0dXBJbmZpbml0ZT1mdW5jdGlvbigpe3ZhciBlLHQsbyxzPXRoaXM7aWYoITA9PT1zLm9wdGlvbnMuZmFkZSYmKHMub3B0aW9ucy5jZW50ZXJNb2RlPSExKSwhMD09PXMub3B0aW9ucy5pbmZpbml0ZSYmITE9PT1zLm9wdGlvbnMuZmFkZSYmKHQ9bnVsbCxzLnNsaWRlQ291bnQ+cy5vcHRpb25zLnNsaWRlc1RvU2hvdykpe2ZvcihvPSEwPT09cy5vcHRpb25zLmNlbnRlck1vZGU/cy5vcHRpb25zLnNsaWRlc1RvU2hvdysxOnMub3B0aW9ucy5zbGlkZXNUb1Nob3csZT1zLnNsaWRlQ291bnQ7ZT5zLnNsaWRlQ291bnQtbztlLT0xKXQ9ZS0xLGkocy4kc2xpZGVzW3RdKS5jbG9uZSghMCkuYXR0cihcImlkXCIsXCJcIikuYXR0cihcImRhdGEtc2xpY2staW5kZXhcIix0LXMuc2xpZGVDb3VudCkucHJlcGVuZFRvKHMuJHNsaWRlVHJhY2spLmFkZENsYXNzKFwic2xpY2stY2xvbmVkXCIpO2ZvcihlPTA7ZTxvK3Muc2xpZGVDb3VudDtlKz0xKXQ9ZSxpKHMuJHNsaWRlc1t0XSkuY2xvbmUoITApLmF0dHIoXCJpZFwiLFwiXCIpLmF0dHIoXCJkYXRhLXNsaWNrLWluZGV4XCIsdCtzLnNsaWRlQ291bnQpLmFwcGVuZFRvKHMuJHNsaWRlVHJhY2spLmFkZENsYXNzKFwic2xpY2stY2xvbmVkXCIpO3MuJHNsaWRlVHJhY2suZmluZChcIi5zbGljay1jbG9uZWRcIikuZmluZChcIltpZF1cIikuZWFjaChmdW5jdGlvbigpe2kodGhpcykuYXR0cihcImlkXCIsXCJcIil9KX19LGUucHJvdG90eXBlLmludGVycnVwdD1mdW5jdGlvbihpKXt2YXIgZT10aGlzO2l8fGUuYXV0b1BsYXkoKSxlLmludGVycnVwdGVkPWl9LGUucHJvdG90eXBlLnNlbGVjdEhhbmRsZXI9ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpcyxvPWkoZS50YXJnZXQpLmlzKFwiLnNsaWNrLXNsaWRlXCIpP2koZS50YXJnZXQpOmkoZS50YXJnZXQpLnBhcmVudHMoXCIuc2xpY2stc2xpZGVcIikscz1wYXJzZUludChvLmF0dHIoXCJkYXRhLXNsaWNrLWluZGV4XCIpKTtzfHwocz0wKSx0LnNsaWRlQ291bnQ8PXQub3B0aW9ucy5zbGlkZXNUb1Nob3c/dC5zbGlkZUhhbmRsZXIocywhMSwhMCk6dC5zbGlkZUhhbmRsZXIocyl9LGUucHJvdG90eXBlLnNsaWRlSGFuZGxlcj1mdW5jdGlvbihpLGUsdCl7dmFyIG8scyxuLHIsbCxkPW51bGwsYT10aGlzO2lmKGU9ZXx8ITEsISghMD09PWEuYW5pbWF0aW5nJiYhMD09PWEub3B0aW9ucy53YWl0Rm9yQW5pbWF0ZXx8ITA9PT1hLm9wdGlvbnMuZmFkZSYmYS5jdXJyZW50U2xpZGU9PT1pKSlpZighMT09PWUmJmEuYXNOYXZGb3IoaSksbz1pLGQ9YS5nZXRMZWZ0KG8pLHI9YS5nZXRMZWZ0KGEuY3VycmVudFNsaWRlKSxhLmN1cnJlbnRMZWZ0PW51bGw9PT1hLnN3aXBlTGVmdD9yOmEuc3dpcGVMZWZ0LCExPT09YS5vcHRpb25zLmluZmluaXRlJiYhMT09PWEub3B0aW9ucy5jZW50ZXJNb2RlJiYoaTwwfHxpPmEuZ2V0RG90Q291bnQoKSphLm9wdGlvbnMuc2xpZGVzVG9TY3JvbGwpKSExPT09YS5vcHRpb25zLmZhZGUmJihvPWEuY3VycmVudFNsaWRlLCEwIT09dD9hLmFuaW1hdGVTbGlkZShyLGZ1bmN0aW9uKCl7YS5wb3N0U2xpZGUobyl9KTphLnBvc3RTbGlkZShvKSk7ZWxzZSBpZighMT09PWEub3B0aW9ucy5pbmZpbml0ZSYmITA9PT1hLm9wdGlvbnMuY2VudGVyTW9kZSYmKGk8MHx8aT5hLnNsaWRlQ291bnQtYS5vcHRpb25zLnNsaWRlc1RvU2Nyb2xsKSkhMT09PWEub3B0aW9ucy5mYWRlJiYobz1hLmN1cnJlbnRTbGlkZSwhMCE9PXQ/YS5hbmltYXRlU2xpZGUocixmdW5jdGlvbigpe2EucG9zdFNsaWRlKG8pfSk6YS5wb3N0U2xpZGUobykpO2Vsc2V7aWYoYS5vcHRpb25zLmF1dG9wbGF5JiZjbGVhckludGVydmFsKGEuYXV0b1BsYXlUaW1lcikscz1vPDA/YS5zbGlkZUNvdW50JWEub3B0aW9ucy5zbGlkZXNUb1Njcm9sbCE9MD9hLnNsaWRlQ291bnQtYS5zbGlkZUNvdW50JWEub3B0aW9ucy5zbGlkZXNUb1Njcm9sbDphLnNsaWRlQ291bnQrbzpvPj1hLnNsaWRlQ291bnQ/YS5zbGlkZUNvdW50JWEub3B0aW9ucy5zbGlkZXNUb1Njcm9sbCE9MD8wOm8tYS5zbGlkZUNvdW50Om8sYS5hbmltYXRpbmc9ITAsYS4kc2xpZGVyLnRyaWdnZXIoXCJiZWZvcmVDaGFuZ2VcIixbYSxhLmN1cnJlbnRTbGlkZSxzXSksbj1hLmN1cnJlbnRTbGlkZSxhLmN1cnJlbnRTbGlkZT1zLGEuc2V0U2xpZGVDbGFzc2VzKGEuY3VycmVudFNsaWRlKSxhLm9wdGlvbnMuYXNOYXZGb3ImJihsPShsPWEuZ2V0TmF2VGFyZ2V0KCkpLnNsaWNrKFwiZ2V0U2xpY2tcIikpLnNsaWRlQ291bnQ8PWwub3B0aW9ucy5zbGlkZXNUb1Nob3cmJmwuc2V0U2xpZGVDbGFzc2VzKGEuY3VycmVudFNsaWRlKSxhLnVwZGF0ZURvdHMoKSxhLnVwZGF0ZUFycm93cygpLCEwPT09YS5vcHRpb25zLmZhZGUpcmV0dXJuITAhPT10PyhhLmZhZGVTbGlkZU91dChuKSxhLmZhZGVTbGlkZShzLGZ1bmN0aW9uKCl7YS5wb3N0U2xpZGUocyl9KSk6YS5wb3N0U2xpZGUocyksdm9pZCBhLmFuaW1hdGVIZWlnaHQoKTshMCE9PXQ/YS5hbmltYXRlU2xpZGUoZCxmdW5jdGlvbigpe2EucG9zdFNsaWRlKHMpfSk6YS5wb3N0U2xpZGUocyl9fSxlLnByb3RvdHlwZS5zdGFydExvYWQ9ZnVuY3Rpb24oKXt2YXIgaT10aGlzOyEwPT09aS5vcHRpb25zLmFycm93cyYmaS5zbGlkZUNvdW50Pmkub3B0aW9ucy5zbGlkZXNUb1Nob3cmJihpLiRwcmV2QXJyb3cuaGlkZSgpLGkuJG5leHRBcnJvdy5oaWRlKCkpLCEwPT09aS5vcHRpb25zLmRvdHMmJmkuc2xpZGVDb3VudD5pLm9wdGlvbnMuc2xpZGVzVG9TaG93JiZpLiRkb3RzLmhpZGUoKSxpLiRzbGlkZXIuYWRkQ2xhc3MoXCJzbGljay1sb2FkaW5nXCIpfSxlLnByb3RvdHlwZS5zd2lwZURpcmVjdGlvbj1mdW5jdGlvbigpe3ZhciBpLGUsdCxvLHM9dGhpcztyZXR1cm4gaT1zLnRvdWNoT2JqZWN0LnN0YXJ0WC1zLnRvdWNoT2JqZWN0LmN1clgsZT1zLnRvdWNoT2JqZWN0LnN0YXJ0WS1zLnRvdWNoT2JqZWN0LmN1clksdD1NYXRoLmF0YW4yKGUsaSksKG89TWF0aC5yb3VuZCgxODAqdC9NYXRoLlBJKSk8MCYmKG89MzYwLU1hdGguYWJzKG8pKSxvPD00NSYmbz49MD8hMT09PXMub3B0aW9ucy5ydGw/XCJsZWZ0XCI6XCJyaWdodFwiOm88PTM2MCYmbz49MzE1PyExPT09cy5vcHRpb25zLnJ0bD9cImxlZnRcIjpcInJpZ2h0XCI6bz49MTM1JiZvPD0yMjU/ITE9PT1zLm9wdGlvbnMucnRsP1wicmlnaHRcIjpcImxlZnRcIjohMD09PXMub3B0aW9ucy52ZXJ0aWNhbFN3aXBpbmc/bz49MzUmJm88PTEzNT9cImRvd25cIjpcInVwXCI6XCJ2ZXJ0aWNhbFwifSxlLnByb3RvdHlwZS5zd2lwZUVuZD1mdW5jdGlvbihpKXt2YXIgZSx0LG89dGhpcztpZihvLmRyYWdnaW5nPSExLG8uc3dpcGluZz0hMSxvLnNjcm9sbGluZylyZXR1cm4gby5zY3JvbGxpbmc9ITEsITE7aWYoby5pbnRlcnJ1cHRlZD0hMSxvLnNob3VsZENsaWNrPSEoby50b3VjaE9iamVjdC5zd2lwZUxlbmd0aD4xMCksdm9pZCAwPT09by50b3VjaE9iamVjdC5jdXJYKXJldHVybiExO2lmKCEwPT09by50b3VjaE9iamVjdC5lZGdlSGl0JiZvLiRzbGlkZXIudHJpZ2dlcihcImVkZ2VcIixbbyxvLnN3aXBlRGlyZWN0aW9uKCldKSxvLnRvdWNoT2JqZWN0LnN3aXBlTGVuZ3RoPj1vLnRvdWNoT2JqZWN0Lm1pblN3aXBlKXtzd2l0Y2godD1vLnN3aXBlRGlyZWN0aW9uKCkpe2Nhc2VcImxlZnRcIjpjYXNlXCJkb3duXCI6ZT1vLm9wdGlvbnMuc3dpcGVUb1NsaWRlP28uY2hlY2tOYXZpZ2FibGUoby5jdXJyZW50U2xpZGUrby5nZXRTbGlkZUNvdW50KCkpOm8uY3VycmVudFNsaWRlK28uZ2V0U2xpZGVDb3VudCgpLG8uY3VycmVudERpcmVjdGlvbj0wO2JyZWFrO2Nhc2VcInJpZ2h0XCI6Y2FzZVwidXBcIjplPW8ub3B0aW9ucy5zd2lwZVRvU2xpZGU/by5jaGVja05hdmlnYWJsZShvLmN1cnJlbnRTbGlkZS1vLmdldFNsaWRlQ291bnQoKSk6by5jdXJyZW50U2xpZGUtby5nZXRTbGlkZUNvdW50KCksby5jdXJyZW50RGlyZWN0aW9uPTF9XCJ2ZXJ0aWNhbFwiIT10JiYoby5zbGlkZUhhbmRsZXIoZSksby50b3VjaE9iamVjdD17fSxvLiRzbGlkZXIudHJpZ2dlcihcInN3aXBlXCIsW28sdF0pKX1lbHNlIG8udG91Y2hPYmplY3Quc3RhcnRYIT09by50b3VjaE9iamVjdC5jdXJYJiYoby5zbGlkZUhhbmRsZXIoby5jdXJyZW50U2xpZGUpLG8udG91Y2hPYmplY3Q9e30pfSxlLnByb3RvdHlwZS5zd2lwZUhhbmRsZXI9ZnVuY3Rpb24oaSl7dmFyIGU9dGhpcztpZighKCExPT09ZS5vcHRpb25zLnN3aXBlfHxcIm9udG91Y2hlbmRcImluIGRvY3VtZW50JiYhMT09PWUub3B0aW9ucy5zd2lwZXx8ITE9PT1lLm9wdGlvbnMuZHJhZ2dhYmxlJiYtMSE9PWkudHlwZS5pbmRleE9mKFwibW91c2VcIikpKXN3aXRjaChlLnRvdWNoT2JqZWN0LmZpbmdlckNvdW50PWkub3JpZ2luYWxFdmVudCYmdm9pZCAwIT09aS5vcmlnaW5hbEV2ZW50LnRvdWNoZXM/aS5vcmlnaW5hbEV2ZW50LnRvdWNoZXMubGVuZ3RoOjEsZS50b3VjaE9iamVjdC5taW5Td2lwZT1lLmxpc3RXaWR0aC9lLm9wdGlvbnMudG91Y2hUaHJlc2hvbGQsITA9PT1lLm9wdGlvbnMudmVydGljYWxTd2lwaW5nJiYoZS50b3VjaE9iamVjdC5taW5Td2lwZT1lLmxpc3RIZWlnaHQvZS5vcHRpb25zLnRvdWNoVGhyZXNob2xkKSxpLmRhdGEuYWN0aW9uKXtjYXNlXCJzdGFydFwiOmUuc3dpcGVTdGFydChpKTticmVhaztjYXNlXCJtb3ZlXCI6ZS5zd2lwZU1vdmUoaSk7YnJlYWs7Y2FzZVwiZW5kXCI6ZS5zd2lwZUVuZChpKX19LGUucHJvdG90eXBlLnN3aXBlTW92ZT1mdW5jdGlvbihpKXt2YXIgZSx0LG8scyxuLHIsbD10aGlzO3JldHVybiBuPXZvaWQgMCE9PWkub3JpZ2luYWxFdmVudD9pLm9yaWdpbmFsRXZlbnQudG91Y2hlczpudWxsLCEoIWwuZHJhZ2dpbmd8fGwuc2Nyb2xsaW5nfHxuJiYxIT09bi5sZW5ndGgpJiYoZT1sLmdldExlZnQobC5jdXJyZW50U2xpZGUpLGwudG91Y2hPYmplY3QuY3VyWD12b2lkIDAhPT1uP25bMF0ucGFnZVg6aS5jbGllbnRYLGwudG91Y2hPYmplY3QuY3VyWT12b2lkIDAhPT1uP25bMF0ucGFnZVk6aS5jbGllbnRZLGwudG91Y2hPYmplY3Quc3dpcGVMZW5ndGg9TWF0aC5yb3VuZChNYXRoLnNxcnQoTWF0aC5wb3cobC50b3VjaE9iamVjdC5jdXJYLWwudG91Y2hPYmplY3Quc3RhcnRYLDIpKSkscj1NYXRoLnJvdW5kKE1hdGguc3FydChNYXRoLnBvdyhsLnRvdWNoT2JqZWN0LmN1clktbC50b3VjaE9iamVjdC5zdGFydFksMikpKSwhbC5vcHRpb25zLnZlcnRpY2FsU3dpcGluZyYmIWwuc3dpcGluZyYmcj40PyhsLnNjcm9sbGluZz0hMCwhMSk6KCEwPT09bC5vcHRpb25zLnZlcnRpY2FsU3dpcGluZyYmKGwudG91Y2hPYmplY3Quc3dpcGVMZW5ndGg9ciksdD1sLnN3aXBlRGlyZWN0aW9uKCksdm9pZCAwIT09aS5vcmlnaW5hbEV2ZW50JiZsLnRvdWNoT2JqZWN0LnN3aXBlTGVuZ3RoPjQmJihsLnN3aXBpbmc9ITAsaS5wcmV2ZW50RGVmYXVsdCgpKSxzPSghMT09PWwub3B0aW9ucy5ydGw/MTotMSkqKGwudG91Y2hPYmplY3QuY3VyWD5sLnRvdWNoT2JqZWN0LnN0YXJ0WD8xOi0xKSwhMD09PWwub3B0aW9ucy52ZXJ0aWNhbFN3aXBpbmcmJihzPWwudG91Y2hPYmplY3QuY3VyWT5sLnRvdWNoT2JqZWN0LnN0YXJ0WT8xOi0xKSxvPWwudG91Y2hPYmplY3Quc3dpcGVMZW5ndGgsbC50b3VjaE9iamVjdC5lZGdlSGl0PSExLCExPT09bC5vcHRpb25zLmluZmluaXRlJiYoMD09PWwuY3VycmVudFNsaWRlJiZcInJpZ2h0XCI9PT10fHxsLmN1cnJlbnRTbGlkZT49bC5nZXREb3RDb3VudCgpJiZcImxlZnRcIj09PXQpJiYobz1sLnRvdWNoT2JqZWN0LnN3aXBlTGVuZ3RoKmwub3B0aW9ucy5lZGdlRnJpY3Rpb24sbC50b3VjaE9iamVjdC5lZGdlSGl0PSEwKSwhMT09PWwub3B0aW9ucy52ZXJ0aWNhbD9sLnN3aXBlTGVmdD1lK28qczpsLnN3aXBlTGVmdD1lK28qKGwuJGxpc3QuaGVpZ2h0KCkvbC5saXN0V2lkdGgpKnMsITA9PT1sLm9wdGlvbnMudmVydGljYWxTd2lwaW5nJiYobC5zd2lwZUxlZnQ9ZStvKnMpLCEwIT09bC5vcHRpb25zLmZhZGUmJiExIT09bC5vcHRpb25zLnRvdWNoTW92ZSYmKCEwPT09bC5hbmltYXRpbmc/KGwuc3dpcGVMZWZ0PW51bGwsITEpOnZvaWQgbC5zZXRDU1MobC5zd2lwZUxlZnQpKSkpfSxlLnByb3RvdHlwZS5zd2lwZVN0YXJ0PWZ1bmN0aW9uKGkpe3ZhciBlLHQ9dGhpcztpZih0LmludGVycnVwdGVkPSEwLDEhPT10LnRvdWNoT2JqZWN0LmZpbmdlckNvdW50fHx0LnNsaWRlQ291bnQ8PXQub3B0aW9ucy5zbGlkZXNUb1Nob3cpcmV0dXJuIHQudG91Y2hPYmplY3Q9e30sITE7dm9pZCAwIT09aS5vcmlnaW5hbEV2ZW50JiZ2b2lkIDAhPT1pLm9yaWdpbmFsRXZlbnQudG91Y2hlcyYmKGU9aS5vcmlnaW5hbEV2ZW50LnRvdWNoZXNbMF0pLHQudG91Y2hPYmplY3Quc3RhcnRYPXQudG91Y2hPYmplY3QuY3VyWD12b2lkIDAhPT1lP2UucGFnZVg6aS5jbGllbnRYLHQudG91Y2hPYmplY3Quc3RhcnRZPXQudG91Y2hPYmplY3QuY3VyWT12b2lkIDAhPT1lP2UucGFnZVk6aS5jbGllbnRZLHQuZHJhZ2dpbmc9ITB9LGUucHJvdG90eXBlLnVuZmlsdGVyU2xpZGVzPWUucHJvdG90eXBlLnNsaWNrVW5maWx0ZXI9ZnVuY3Rpb24oKXt2YXIgaT10aGlzO251bGwhPT1pLiRzbGlkZXNDYWNoZSYmKGkudW5sb2FkKCksaS4kc2xpZGVUcmFjay5jaGlsZHJlbih0aGlzLm9wdGlvbnMuc2xpZGUpLmRldGFjaCgpLGkuJHNsaWRlc0NhY2hlLmFwcGVuZFRvKGkuJHNsaWRlVHJhY2spLGkucmVpbml0KCkpfSxlLnByb3RvdHlwZS51bmxvYWQ9ZnVuY3Rpb24oKXt2YXIgZT10aGlzO2koXCIuc2xpY2stY2xvbmVkXCIsZS4kc2xpZGVyKS5yZW1vdmUoKSxlLiRkb3RzJiZlLiRkb3RzLnJlbW92ZSgpLGUuJHByZXZBcnJvdyYmZS5odG1sRXhwci50ZXN0KGUub3B0aW9ucy5wcmV2QXJyb3cpJiZlLiRwcmV2QXJyb3cucmVtb3ZlKCksZS4kbmV4dEFycm93JiZlLmh0bWxFeHByLnRlc3QoZS5vcHRpb25zLm5leHRBcnJvdykmJmUuJG5leHRBcnJvdy5yZW1vdmUoKSxlLiRzbGlkZXMucmVtb3ZlQ2xhc3MoXCJzbGljay1zbGlkZSBzbGljay1hY3RpdmUgc2xpY2stdmlzaWJsZSBzbGljay1jdXJyZW50XCIpLmF0dHIoXCJhcmlhLWhpZGRlblwiLFwidHJ1ZVwiKS5jc3MoXCJ3aWR0aFwiLFwiXCIpfSxlLnByb3RvdHlwZS51bnNsaWNrPWZ1bmN0aW9uKGkpe3ZhciBlPXRoaXM7ZS4kc2xpZGVyLnRyaWdnZXIoXCJ1bnNsaWNrXCIsW2UsaV0pLGUuZGVzdHJveSgpfSxlLnByb3RvdHlwZS51cGRhdGVBcnJvd3M9ZnVuY3Rpb24oKXt2YXIgaT10aGlzO01hdGguZmxvb3IoaS5vcHRpb25zLnNsaWRlc1RvU2hvdy8yKSwhMD09PWkub3B0aW9ucy5hcnJvd3MmJmkuc2xpZGVDb3VudD5pLm9wdGlvbnMuc2xpZGVzVG9TaG93JiYhaS5vcHRpb25zLmluZmluaXRlJiYoaS4kcHJldkFycm93LnJlbW92ZUNsYXNzKFwic2xpY2stZGlzYWJsZWRcIikuYXR0cihcImFyaWEtZGlzYWJsZWRcIixcImZhbHNlXCIpLGkuJG5leHRBcnJvdy5yZW1vdmVDbGFzcyhcInNsaWNrLWRpc2FibGVkXCIpLmF0dHIoXCJhcmlhLWRpc2FibGVkXCIsXCJmYWxzZVwiKSwwPT09aS5jdXJyZW50U2xpZGU/KGkuJHByZXZBcnJvdy5hZGRDbGFzcyhcInNsaWNrLWRpc2FibGVkXCIpLmF0dHIoXCJhcmlhLWRpc2FibGVkXCIsXCJ0cnVlXCIpLGkuJG5leHRBcnJvdy5yZW1vdmVDbGFzcyhcInNsaWNrLWRpc2FibGVkXCIpLmF0dHIoXCJhcmlhLWRpc2FibGVkXCIsXCJmYWxzZVwiKSk6aS5jdXJyZW50U2xpZGU+PWkuc2xpZGVDb3VudC1pLm9wdGlvbnMuc2xpZGVzVG9TaG93JiYhMT09PWkub3B0aW9ucy5jZW50ZXJNb2RlPyhpLiRuZXh0QXJyb3cuYWRkQ2xhc3MoXCJzbGljay1kaXNhYmxlZFwiKS5hdHRyKFwiYXJpYS1kaXNhYmxlZFwiLFwidHJ1ZVwiKSxpLiRwcmV2QXJyb3cucmVtb3ZlQ2xhc3MoXCJzbGljay1kaXNhYmxlZFwiKS5hdHRyKFwiYXJpYS1kaXNhYmxlZFwiLFwiZmFsc2VcIikpOmkuY3VycmVudFNsaWRlPj1pLnNsaWRlQ291bnQtMSYmITA9PT1pLm9wdGlvbnMuY2VudGVyTW9kZSYmKGkuJG5leHRBcnJvdy5hZGRDbGFzcyhcInNsaWNrLWRpc2FibGVkXCIpLmF0dHIoXCJhcmlhLWRpc2FibGVkXCIsXCJ0cnVlXCIpLGkuJHByZXZBcnJvdy5yZW1vdmVDbGFzcyhcInNsaWNrLWRpc2FibGVkXCIpLmF0dHIoXCJhcmlhLWRpc2FibGVkXCIsXCJmYWxzZVwiKSkpfSxlLnByb3RvdHlwZS51cGRhdGVEb3RzPWZ1bmN0aW9uKCl7dmFyIGk9dGhpcztudWxsIT09aS4kZG90cyYmKGkuJGRvdHMuZmluZChcImxpXCIpLnJlbW92ZUNsYXNzKFwic2xpY2stYWN0aXZlXCIpLmVuZCgpLGkuJGRvdHMuZmluZChcImxpXCIpLmVxKE1hdGguZmxvb3IoaS5jdXJyZW50U2xpZGUvaS5vcHRpb25zLnNsaWRlc1RvU2Nyb2xsKSkuYWRkQ2xhc3MoXCJzbGljay1hY3RpdmVcIikpfSxlLnByb3RvdHlwZS52aXNpYmlsaXR5PWZ1bmN0aW9uKCl7dmFyIGk9dGhpcztpLm9wdGlvbnMuYXV0b3BsYXkmJihkb2N1bWVudFtpLmhpZGRlbl0/aS5pbnRlcnJ1cHRlZD0hMDppLmludGVycnVwdGVkPSExKX0saS5mbi5zbGljaz1mdW5jdGlvbigpe3ZhciBpLHQsbz10aGlzLHM9YXJndW1lbnRzWzBdLG49QXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoYXJndW1lbnRzLDEpLHI9by5sZW5ndGg7Zm9yKGk9MDtpPHI7aSsrKWlmKFwib2JqZWN0XCI9PXR5cGVvZiBzfHx2b2lkIDA9PT1zP29baV0uc2xpY2s9bmV3IGUob1tpXSxzKTp0PW9baV0uc2xpY2tbc10uYXBwbHkob1tpXS5zbGljayxuKSx2b2lkIDAhPT10KXJldHVybiB0O3JldHVybiBvfX0pO1xyXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG4vLyBmYW5jeUJveCB2My40LjJcclxuLy9cclxuLy8gTGljZW5zZWQgR1BMdjMgZm9yIG9wZW4gc291cmNlIHVzZVxyXG4vLyBvciBmYW5jeUJveCBDb21tZXJjaWFsIExpY2Vuc2UgZm9yIGNvbW1lcmNpYWwgdXNlXHJcbi8vXHJcbi8vIGh0dHA6Ly9mYW5jeWFwcHMuY29tL2ZhbmN5Ym94L1xyXG4vLyBDb3B5cmlnaHQgMjAxOCBmYW5jeUFwcHNcclxuLy9cclxuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cclxuIWZ1bmN0aW9uKHQsZSxuLG8pe1widXNlIHN0cmljdFwiO2Z1bmN0aW9uIGEodCxlKXt2YXIgbyxhLGkscz1bXSxyPTA7dCYmdC5pc0RlZmF1bHRQcmV2ZW50ZWQoKXx8KHQucHJldmVudERlZmF1bHQoKSxlPWV8fHt9LHQmJnQuZGF0YSYmKGU9cCh0LmRhdGEub3B0aW9ucyxlKSksbz1lLiR0YXJnZXR8fG4odC5jdXJyZW50VGFyZ2V0KS50cmlnZ2VyKFwiYmx1clwiKSxpPW4uZmFuY3lib3guZ2V0SW5zdGFuY2UoKSxpJiZpLiR0cmlnZ2VyJiZpLiR0cmlnZ2VyLmlzKG8pfHwoZS5zZWxlY3Rvcj9zPW4oZS5zZWxlY3Rvcik6KGE9by5hdHRyKFwiZGF0YS1mYW5jeWJveFwiKXx8XCJcIixhPyhzPXQuZGF0YT90LmRhdGEuaXRlbXM6W10scz1zLmxlbmd0aD9zLmZpbHRlcignW2RhdGEtZmFuY3lib3g9XCInK2ErJ1wiXScpOm4oJ1tkYXRhLWZhbmN5Ym94PVwiJythKydcIl0nKSk6cz1bb10pLHI9bihzKS5pbmRleChvKSxyPDAmJihyPTApLGk9bi5mYW5jeWJveC5vcGVuKHMsZSxyKSxpLiR0cmlnZ2VyPW8pKX1pZih0LmNvbnNvbGU9dC5jb25zb2xlfHx7aW5mbzpmdW5jdGlvbih0KXt9fSxuKXtpZihuLmZuLmZhbmN5Ym94KXJldHVybiB2b2lkIGNvbnNvbGUuaW5mbyhcImZhbmN5Qm94IGFscmVhZHkgaW5pdGlhbGl6ZWRcIik7dmFyIGk9e2Nsb3NlRXhpc3Rpbmc6ITEsbG9vcDohMSxndXR0ZXI6NTAsa2V5Ym9hcmQ6ITAsYXJyb3dzOiEwLGluZm9iYXI6ITAsc21hbGxCdG46XCJhdXRvXCIsdG9vbGJhcjpcImF1dG9cIixidXR0b25zOltcInpvb21cIixcInNsaWRlU2hvd1wiLFwidGh1bWJzXCIsXCJjbG9zZVwiXSxpZGxlVGltZTozLHByb3RlY3Q6ITEsbW9kYWw6ITEsaW1hZ2U6e3ByZWxvYWQ6ITF9LGFqYXg6e3NldHRpbmdzOntkYXRhOntmYW5jeWJveDohMH19fSxpZnJhbWU6e3RwbDonPGlmcmFtZSBpZD1cImZhbmN5Ym94LWZyYW1le3JuZH1cIiBuYW1lPVwiZmFuY3lib3gtZnJhbWV7cm5kfVwiIGNsYXNzPVwiZmFuY3lib3gtaWZyYW1lXCIgYWxsb3dmdWxsc2NyZWVuIGFsbG93PVwiZnVsbHNjcmVlbiBhdXRvcGxheVwiIHNyYz1cIlwiPjwvaWZyYW1lPicscHJlbG9hZDohMCxjc3M6e30sYXR0cjp7c2Nyb2xsaW5nOlwiYXV0b1wifX0sdmlkZW86e3RwbDonPHZpZGVvIGNsYXNzPVwiZmFuY3lib3gtdmlkZW9cIiBjb250cm9scyBjb250cm9sc0xpc3Q9XCJub2Rvd25sb2FkXCI+PHNvdXJjZSBzcmM9XCJ7e3NyY319XCIgdHlwZT1cInt7Zm9ybWF0fX1cIiAvPllvdXIgYnJvd3NlciBkb2VzblxcJ3Qgc3VwcG9ydCBIVE1MNSB2aWRlbzwvdmlkZW8+Jyxmb3JtYXQ6XCJcIixhdXRvU3RhcnQ6ITB9LGRlZmF1bHRUeXBlOlwiaW1hZ2VcIixhbmltYXRpb25FZmZlY3Q6XCJ6b29tXCIsYW5pbWF0aW9uRHVyYXRpb246MzY2LHpvb21PcGFjaXR5OlwiYXV0b1wiLHRyYW5zaXRpb25FZmZlY3Q6XCJmYWRlXCIsdHJhbnNpdGlvbkR1cmF0aW9uOjM2NixzbGlkZUNsYXNzOlwiXCIsYmFzZUNsYXNzOlwiXCIsYmFzZVRwbDonPGRpdiBjbGFzcz1cImZhbmN5Ym94LWNvbnRhaW5lclwiIHJvbGU9XCJkaWFsb2dcIiB0YWJpbmRleD1cIi0xXCI+PGRpdiBjbGFzcz1cImZhbmN5Ym94LWJnXCI+PC9kaXY+PGRpdiBjbGFzcz1cImZhbmN5Ym94LWlubmVyXCI+PGRpdiBjbGFzcz1cImZhbmN5Ym94LWluZm9iYXJcIj48c3BhbiBkYXRhLWZhbmN5Ym94LWluZGV4Pjwvc3Bhbj4mbmJzcDsvJm5ic3A7PHNwYW4gZGF0YS1mYW5jeWJveC1jb3VudD48L3NwYW4+PC9kaXY+PGRpdiBjbGFzcz1cImZhbmN5Ym94LXRvb2xiYXJcIj57e2J1dHRvbnN9fTwvZGl2PjxkaXYgY2xhc3M9XCJmYW5jeWJveC1uYXZpZ2F0aW9uXCI+e3thcnJvd3N9fTwvZGl2PjxkaXYgY2xhc3M9XCJmYW5jeWJveC1zdGFnZVwiPjwvZGl2PjxkaXYgY2xhc3M9XCJmYW5jeWJveC1jYXB0aW9uXCI+PC9kaXY+PC9kaXY+PC9kaXY+JyxzcGlubmVyVHBsOic8ZGl2IGNsYXNzPVwiZmFuY3lib3gtbG9hZGluZ1wiPjwvZGl2PicsZXJyb3JUcGw6JzxkaXYgY2xhc3M9XCJmYW5jeWJveC1lcnJvclwiPjxwPnt7RVJST1J9fTwvcD48L2Rpdj4nLGJ0blRwbDp7ZG93bmxvYWQ6JzxhIGRvd25sb2FkIGRhdGEtZmFuY3lib3gtZG93bmxvYWQgY2xhc3M9XCJmYW5jeWJveC1idXR0b24gZmFuY3lib3gtYnV0dG9uLS1kb3dubG9hZFwiIHRpdGxlPVwie3tET1dOTE9BRH19XCIgaHJlZj1cImphdmFzY3JpcHQ6O1wiPjxzdmcgeG1sbnM9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiIHZpZXdCb3g9XCIwIDAgMjQgMjRcIj48cGF0aCBkPVwiTTE4LjYyIDE3LjA5VjE5SDUuMzh2LTEuOTF6bS0yLjk3LTYuOTZMMTcgMTEuNDVsLTUgNC44Ny01LTQuODcgMS4zNi0xLjMyIDIuNjggMi42NFY1aDEuOTJ2Ny43N3pcIi8+PC9zdmc+PC9hPicsem9vbTonPGJ1dHRvbiBkYXRhLWZhbmN5Ym94LXpvb20gY2xhc3M9XCJmYW5jeWJveC1idXR0b24gZmFuY3lib3gtYnV0dG9uLS16b29tXCIgdGl0bGU9XCJ7e1pPT019fVwiPjxzdmcgeG1sbnM9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiIHZpZXdCb3g9XCIwIDAgMjQgMjRcIj48cGF0aCBkPVwiTTE4LjcgMTcuM2wtMy0zYTUuOSA1LjkgMCAwIDAtLjYtNy42IDUuOSA1LjkgMCAwIDAtOC40IDAgNS45IDUuOSAwIDAgMCAwIDguNCA1LjkgNS45IDAgMCAwIDcuNy43bDMgM2ExIDEgMCAwIDAgMS4zIDBjLjQtLjUuNC0xIDAtMS41ek04LjEgMTMuOGE0IDQgMCAwIDEgMC01LjcgNCA0IDAgMCAxIDUuNyAwIDQgNCAwIDAgMSAwIDUuNyA0IDQgMCAwIDEtNS43IDB6XCIvPjwvc3ZnPjwvYnV0dG9uPicsY2xvc2U6JzxidXR0b24gZGF0YS1mYW5jeWJveC1jbG9zZSBjbGFzcz1cImZhbmN5Ym94LWJ1dHRvbiBmYW5jeWJveC1idXR0b24tLWNsb3NlXCIgdGl0bGU9XCJ7e0NMT1NFfX1cIj48c3ZnIHhtbG5zPVwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIiB2aWV3Qm94PVwiMCAwIDI0IDI0XCI+PHBhdGggZD1cIk0xMiAxMC42TDYuNiA1LjIgNS4yIDYuNmw1LjQgNS40LTUuNCA1LjQgMS40IDEuNCA1LjQtNS40IDUuNCA1LjQgMS40LTEuNC01LjQtNS40IDUuNC01LjQtMS40LTEuNC01LjQgNS40elwiLz48L3N2Zz48L2J1dHRvbj4nLGFycm93TGVmdDonPGJ1dHRvbiBkYXRhLWZhbmN5Ym94LXByZXYgY2xhc3M9XCJmYW5jeWJveC1idXR0b24gZmFuY3lib3gtYnV0dG9uLS1hcnJvd19sZWZ0XCIgdGl0bGU9XCJ7e1BSRVZ9fVwiPjxkaXY+PHN2ZyB4bWxucz1cImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCIgdmlld0JveD1cIjAgMCAyNCAyNFwiPjxwYXRoIGQ9XCJNMTEuMjggMTUuN2wtMS4zNCAxLjM3TDUgMTJsNC45NC01LjA3IDEuMzQgMS4zOC0yLjY4IDIuNzJIMTl2MS45NEg4LjZ6XCIvPjwvc3ZnPjwvZGl2PjwvYnV0dG9uPicsYXJyb3dSaWdodDonPGJ1dHRvbiBkYXRhLWZhbmN5Ym94LW5leHQgY2xhc3M9XCJmYW5jeWJveC1idXR0b24gZmFuY3lib3gtYnV0dG9uLS1hcnJvd19yaWdodFwiIHRpdGxlPVwie3tORVhUfX1cIj48ZGl2PjxzdmcgeG1sbnM9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiIHZpZXdCb3g9XCIwIDAgMjQgMjRcIj48cGF0aCBkPVwiTTE1LjQgMTIuOTdsLTIuNjggMi43MiAxLjM0IDEuMzhMMTkgMTJsLTQuOTQtNS4wNy0xLjM0IDEuMzggMi42OCAyLjcySDV2MS45NHpcIi8+PC9zdmc+PC9kaXY+PC9idXR0b24+JyxzbWFsbEJ0bjonPGJ1dHRvbiB0eXBlPVwiYnV0dG9uXCIgZGF0YS1mYW5jeWJveC1jbG9zZSBjbGFzcz1cImZhbmN5Ym94LWJ1dHRvbiBmYW5jeWJveC1jbG9zZS1zbWFsbFwiIHRpdGxlPVwie3tDTE9TRX19XCI+PHN2ZyB4bWxucz1cImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCIgdmVyc2lvbj1cIjFcIiB2aWV3Qm94PVwiMCAwIDI0IDI0XCI+PHBhdGggZD1cIk0xMyAxMmw1LTUtMS0xLTUgNS01LTUtMSAxIDUgNS01IDUgMSAxIDUtNSA1IDUgMS0xelwiLz48L3N2Zz48L2J1dHRvbj4nfSxwYXJlbnRFbDpcImJvZHlcIixoaWRlU2Nyb2xsYmFyOiEwLGF1dG9Gb2N1czohMCxiYWNrRm9jdXM6ITAsdHJhcEZvY3VzOiEwLGZ1bGxTY3JlZW46e2F1dG9TdGFydDohMX0sdG91Y2g6e3ZlcnRpY2FsOiEwLG1vbWVudHVtOiEwfSxoYXNoOm51bGwsbWVkaWE6e30sc2xpZGVTaG93OnthdXRvU3RhcnQ6ITEsc3BlZWQ6M2UzfSx0aHVtYnM6e2F1dG9TdGFydDohMSxoaWRlT25DbG9zZTohMCxwYXJlbnRFbDpcIi5mYW5jeWJveC1jb250YWluZXJcIixheGlzOlwieVwifSx3aGVlbDpcImF1dG9cIixvbkluaXQ6bi5ub29wLGJlZm9yZUxvYWQ6bi5ub29wLGFmdGVyTG9hZDpuLm5vb3AsYmVmb3JlU2hvdzpuLm5vb3AsYWZ0ZXJTaG93Om4ubm9vcCxiZWZvcmVDbG9zZTpuLm5vb3AsYWZ0ZXJDbG9zZTpuLm5vb3Asb25BY3RpdmF0ZTpuLm5vb3Asb25EZWFjdGl2YXRlOm4ubm9vcCxjbGlja0NvbnRlbnQ6ZnVuY3Rpb24odCxlKXtyZXR1cm5cImltYWdlXCI9PT10LnR5cGUmJlwiem9vbVwifSxjbGlja1NsaWRlOlwiY2xvc2VcIixjbGlja091dHNpZGU6XCJjbG9zZVwiLGRibGNsaWNrQ29udGVudDohMSxkYmxjbGlja1NsaWRlOiExLGRibGNsaWNrT3V0c2lkZTohMSxtb2JpbGU6e2lkbGVUaW1lOiExLGNsaWNrQ29udGVudDpmdW5jdGlvbih0LGUpe3JldHVyblwiaW1hZ2VcIj09PXQudHlwZSYmXCJ0b2dnbGVDb250cm9sc1wifSxjbGlja1NsaWRlOmZ1bmN0aW9uKHQsZSl7cmV0dXJuXCJpbWFnZVwiPT09dC50eXBlP1widG9nZ2xlQ29udHJvbHNcIjpcImNsb3NlXCJ9LGRibGNsaWNrQ29udGVudDpmdW5jdGlvbih0LGUpe3JldHVyblwiaW1hZ2VcIj09PXQudHlwZSYmXCJ6b29tXCJ9LGRibGNsaWNrU2xpZGU6ZnVuY3Rpb24odCxlKXtyZXR1cm5cImltYWdlXCI9PT10LnR5cGUmJlwiem9vbVwifX0sbGFuZzpcImVuXCIsaTE4bjp7ZW46e0NMT1NFOlwiQ2xvc2VcIixORVhUOlwiTmV4dFwiLFBSRVY6XCJQcmV2aW91c1wiLEVSUk9SOlwiVGhlIHJlcXVlc3RlZCBjb250ZW50IGNhbm5vdCBiZSBsb2FkZWQuIDxici8+IFBsZWFzZSB0cnkgYWdhaW4gbGF0ZXIuXCIsUExBWV9TVEFSVDpcIlN0YXJ0IHNsaWRlc2hvd1wiLFBMQVlfU1RPUDpcIlBhdXNlIHNsaWRlc2hvd1wiLEZVTExfU0NSRUVOOlwiRnVsbCBzY3JlZW5cIixUSFVNQlM6XCJUaHVtYm5haWxzXCIsRE9XTkxPQUQ6XCJEb3dubG9hZFwiLFNIQVJFOlwiU2hhcmVcIixaT09NOlwiWm9vbVwifSxkZTp7Q0xPU0U6XCJTY2hsaWVzc2VuXCIsTkVYVDpcIldlaXRlclwiLFBSRVY6XCJadXLDvGNrXCIsRVJST1I6XCJEaWUgYW5nZWZvcmRlcnRlbiBEYXRlbiBrb25udGVuIG5pY2h0IGdlbGFkZW4gd2VyZGVuLiA8YnIvPiBCaXR0ZSB2ZXJzdWNoZW4gU2llIGVzIHNww6R0ZXIgbm9jaG1hbC5cIixQTEFZX1NUQVJUOlwiRGlhc2NoYXUgc3RhcnRlblwiLFBMQVlfU1RPUDpcIkRpYXNjaGF1IGJlZW5kZW5cIixGVUxMX1NDUkVFTjpcIlZvbGxiaWxkXCIsVEhVTUJTOlwiVm9yc2NoYXViaWxkZXJcIixET1dOTE9BRDpcIkhlcnVudGVybGFkZW5cIixTSEFSRTpcIlRlaWxlblwiLFpPT006XCJNYcOfc3RhYlwifX19LHM9bih0KSxyPW4oZSksYz0wLGw9ZnVuY3Rpb24odCl7cmV0dXJuIHQmJnQuaGFzT3duUHJvcGVydHkmJnQgaW5zdGFuY2VvZiBufSxkPWZ1bmN0aW9uKCl7cmV0dXJuIHQucmVxdWVzdEFuaW1hdGlvbkZyYW1lfHx0LndlYmtpdFJlcXVlc3RBbmltYXRpb25GcmFtZXx8dC5tb3pSZXF1ZXN0QW5pbWF0aW9uRnJhbWV8fHQub1JlcXVlc3RBbmltYXRpb25GcmFtZXx8ZnVuY3Rpb24oZSl7cmV0dXJuIHQuc2V0VGltZW91dChlLDFlMy82MCl9fSgpLHU9ZnVuY3Rpb24oKXt2YXIgdCxuPWUuY3JlYXRlRWxlbWVudChcImZha2VlbGVtZW50XCIpLGE9e3RyYW5zaXRpb246XCJ0cmFuc2l0aW9uZW5kXCIsT1RyYW5zaXRpb246XCJvVHJhbnNpdGlvbkVuZFwiLE1velRyYW5zaXRpb246XCJ0cmFuc2l0aW9uZW5kXCIsV2Via2l0VHJhbnNpdGlvbjpcIndlYmtpdFRyYW5zaXRpb25FbmRcIn07Zm9yKHQgaW4gYSlpZihuLnN0eWxlW3RdIT09bylyZXR1cm4gYVt0XTtyZXR1cm5cInRyYW5zaXRpb25lbmRcIn0oKSxmPWZ1bmN0aW9uKHQpe3JldHVybiB0JiZ0Lmxlbmd0aCYmdFswXS5vZmZzZXRIZWlnaHR9LHA9ZnVuY3Rpb24odCxlKXt2YXIgbz1uLmV4dGVuZCghMCx7fSx0LGUpO3JldHVybiBuLmVhY2goZSxmdW5jdGlvbih0LGUpe24uaXNBcnJheShlKSYmKG9bdF09ZSl9KSxvfSxoPWZ1bmN0aW9uKG8pe2Zvcih2YXIgYSxpPW9bMF0scz1pLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpLHI9W10sYz1uKHQpLmhlaWdodCgpLGw9bihlKS5zY3JvbGxUb3AoKSxkPXMudG9wK2wsdT1sLWQsZj1kK3MuaGVpZ2h0LShsK2MpO251bGwhPT1pLnBhcmVudEVsZW1lbnQ7KVwiaGlkZGVuXCIhPT1uKGkucGFyZW50RWxlbWVudCkuY3NzKFwib3ZlcmZsb3dcIikmJlwiYXV0b1wiIT09bihpLnBhcmVudEVsZW1lbnQpLmNzcyhcIm92ZXJmbG93XCIpfHxyLnB1c2goaS5wYXJlbnRFbGVtZW50LmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpKSxpPWkucGFyZW50RWxlbWVudDtyZXR1cm4gYT1yLmV2ZXJ5KGZ1bmN0aW9uKHQpe3ZhciBlPU1hdGgubWluKHMucmlnaHQsdC5yaWdodCktTWF0aC5tYXgocy5sZWZ0LHQubGVmdCksbj1NYXRoLm1pbihzLmJvdHRvbSx0LmJvdHRvbSktTWF0aC5tYXgocy50b3AsdC50b3ApO3JldHVybiBlPjAmJm4+MH0pLCFhfHxsPmQrcy5oZWlnaHR8fGQ+bCtjPzA6dT4wPzEwMC0xMDAqdS9zLmhlaWdodDpmPjA/MTAwLTEwMCpmL3MuaGVpZ2h0OjEwMH0sZz1mdW5jdGlvbih0LGUsbyl7dmFyIGE9dGhpczthLm9wdHM9cCh7aW5kZXg6b30sbi5mYW5jeWJveC5kZWZhdWx0cyksbi5pc1BsYWluT2JqZWN0KGUpJiYoYS5vcHRzPXAoYS5vcHRzLGUpKSxuLmZhbmN5Ym94LmlzTW9iaWxlJiYoYS5vcHRzPXAoYS5vcHRzLGEub3B0cy5tb2JpbGUpKSxhLmlkPWEub3B0cy5pZHx8KytjLGEuY3VyckluZGV4PXBhcnNlSW50KGEub3B0cy5pbmRleCwxMCl8fDAsYS5wcmV2SW5kZXg9bnVsbCxhLnByZXZQb3M9bnVsbCxhLmN1cnJQb3M9MCxhLmZpcnN0UnVuPSEwLGEuZ3JvdXA9W10sYS5zbGlkZXM9e30sYS5hZGRDb250ZW50KHQpLGEuZ3JvdXAubGVuZ3RoJiZhLmluaXQoKX07bi5leHRlbmQoZy5wcm90b3R5cGUse2luaXQ6ZnVuY3Rpb24oKXt2YXIgbyxhLGk9dGhpcyxzPWkuZ3JvdXBbaS5jdXJySW5kZXhdLHI9cy5vcHRzO3IuY2xvc2VFeGlzdGluZyYmbi5mYW5jeWJveC5jbG9zZSghMCksbihcImJvZHlcIikuYWRkQ2xhc3MoXCJmYW5jeWJveC1hY3RpdmVcIiksIW4uZmFuY3lib3guZ2V0SW5zdGFuY2UoKSYmci5oaWRlU2Nyb2xsYmFyIT09ITEmJiFuLmZhbmN5Ym94LmlzTW9iaWxlJiZlLmJvZHkuc2Nyb2xsSGVpZ2h0PnQuaW5uZXJIZWlnaHQmJihuKFwiaGVhZFwiKS5hcHBlbmQoJzxzdHlsZSBpZD1cImZhbmN5Ym94LXN0eWxlLW5vc2Nyb2xsXCIgdHlwZT1cInRleHQvY3NzXCI+LmNvbXBlbnNhdGUtZm9yLXNjcm9sbGJhcnttYXJnaW4tcmlnaHQ6JysodC5pbm5lcldpZHRoLWUuZG9jdW1lbnRFbGVtZW50LmNsaWVudFdpZHRoKStcInB4O308L3N0eWxlPlwiKSxuKFwiYm9keVwiKS5hZGRDbGFzcyhcImNvbXBlbnNhdGUtZm9yLXNjcm9sbGJhclwiKSksYT1cIlwiLG4uZWFjaChyLmJ1dHRvbnMsZnVuY3Rpb24odCxlKXthKz1yLmJ0blRwbFtlXXx8XCJcIn0pLG89bihpLnRyYW5zbGF0ZShpLHIuYmFzZVRwbC5yZXBsYWNlKFwie3tidXR0b25zfX1cIixhKS5yZXBsYWNlKFwie3thcnJvd3N9fVwiLHIuYnRuVHBsLmFycm93TGVmdCtyLmJ0blRwbC5hcnJvd1JpZ2h0KSkpLmF0dHIoXCJpZFwiLFwiZmFuY3lib3gtY29udGFpbmVyLVwiK2kuaWQpLmFkZENsYXNzKHIuYmFzZUNsYXNzKS5kYXRhKFwiRmFuY3lCb3hcIixpKS5hcHBlbmRUbyhyLnBhcmVudEVsKSxpLiRyZWZzPXtjb250YWluZXI6b30sW1wiYmdcIixcImlubmVyXCIsXCJpbmZvYmFyXCIsXCJ0b29sYmFyXCIsXCJzdGFnZVwiLFwiY2FwdGlvblwiLFwibmF2aWdhdGlvblwiXS5mb3JFYWNoKGZ1bmN0aW9uKHQpe2kuJHJlZnNbdF09by5maW5kKFwiLmZhbmN5Ym94LVwiK3QpfSksaS50cmlnZ2VyKFwib25Jbml0XCIpLGkuYWN0aXZhdGUoKSxpLmp1bXBUbyhpLmN1cnJJbmRleCl9LHRyYW5zbGF0ZTpmdW5jdGlvbih0LGUpe3ZhciBuPXQub3B0cy5pMThuW3Qub3B0cy5sYW5nXTtyZXR1cm4gZS5yZXBsYWNlKC9cXHtcXHsoXFx3KylcXH1cXH0vZyxmdW5jdGlvbih0LGUpe3ZhciBhPW5bZV07cmV0dXJuIGE9PT1vP3Q6YX0pfSxhZGRDb250ZW50OmZ1bmN0aW9uKHQpe3ZhciBlLGE9dGhpcyxpPW4ubWFrZUFycmF5KHQpO24uZWFjaChpLGZ1bmN0aW9uKHQsZSl7dmFyIGkscyxyLGMsbCxkPXt9LHU9e307bi5pc1BsYWluT2JqZWN0KGUpPyhkPWUsdT1lLm9wdHN8fGUpOlwib2JqZWN0XCI9PT1uLnR5cGUoZSkmJm4oZSkubGVuZ3RoPyhpPW4oZSksdT1pLmRhdGEoKXx8e30sdT1uLmV4dGVuZCghMCx7fSx1LHUub3B0aW9ucyksdS4kb3JpZz1pLGQuc3JjPWEub3B0cy5zcmN8fHUuc3JjfHxpLmF0dHIoXCJocmVmXCIpLGQudHlwZXx8ZC5zcmN8fChkLnR5cGU9XCJpbmxpbmVcIixkLnNyYz1lKSk6ZD17dHlwZTpcImh0bWxcIixzcmM6ZStcIlwifSxkLm9wdHM9bi5leHRlbmQoITAse30sYS5vcHRzLHUpLG4uaXNBcnJheSh1LmJ1dHRvbnMpJiYoZC5vcHRzLmJ1dHRvbnM9dS5idXR0b25zKSxuLmZhbmN5Ym94LmlzTW9iaWxlJiZkLm9wdHMubW9iaWxlJiYoZC5vcHRzPXAoZC5vcHRzLGQub3B0cy5tb2JpbGUpKSxzPWQudHlwZXx8ZC5vcHRzLnR5cGUsYz1kLnNyY3x8XCJcIiwhcyYmYyYmKChyPWMubWF0Y2goL1xcLihtcDR8bW92fG9ndnx3ZWJtKSgoXFw/fCMpLiopPyQvaSkpPyhzPVwidmlkZW9cIixkLm9wdHMudmlkZW8uZm9ybWF0fHwoZC5vcHRzLnZpZGVvLmZvcm1hdD1cInZpZGVvL1wiKyhcIm9ndlwiPT09clsxXT9cIm9nZ1wiOnJbMV0pKSk6Yy5tYXRjaCgvKF5kYXRhOmltYWdlXFwvW2EtejAtOStcXC89XSosKXwoXFwuKGpwKGV8Z3xlZyl8Z2lmfHBuZ3xibXB8d2VicHxzdmd8aWNvKSgoXFw/fCMpLiopPyQpL2kpP3M9XCJpbWFnZVwiOmMubWF0Y2goL1xcLihwZGYpKChcXD98IykuKik/JC9pKT9zPVwiaWZyYW1lXCI6XCIjXCI9PT1jLmNoYXJBdCgwKSYmKHM9XCJpbmxpbmVcIikpLHM/ZC50eXBlPXM6YS50cmlnZ2VyKFwib2JqZWN0TmVlZHNUeXBlXCIsZCksZC5jb250ZW50VHlwZXx8KGQuY29udGVudFR5cGU9bi5pbkFycmF5KGQudHlwZSxbXCJodG1sXCIsXCJpbmxpbmVcIixcImFqYXhcIl0pPi0xP1wiaHRtbFwiOmQudHlwZSksZC5pbmRleD1hLmdyb3VwLmxlbmd0aCxcImF1dG9cIj09ZC5vcHRzLnNtYWxsQnRuJiYoZC5vcHRzLnNtYWxsQnRuPW4uaW5BcnJheShkLnR5cGUsW1wiaHRtbFwiLFwiaW5saW5lXCIsXCJhamF4XCJdKT4tMSksXCJhdXRvXCI9PT1kLm9wdHMudG9vbGJhciYmKGQub3B0cy50b29sYmFyPSFkLm9wdHMuc21hbGxCdG4pLGQub3B0cy4kdHJpZ2dlciYmZC5pbmRleD09PWEub3B0cy5pbmRleCYmKGQub3B0cy4kdGh1bWI9ZC5vcHRzLiR0cmlnZ2VyLmZpbmQoXCJpbWc6Zmlyc3RcIiksZC5vcHRzLiR0aHVtYi5sZW5ndGgmJihkLm9wdHMuJG9yaWc9ZC5vcHRzLiR0cmlnZ2VyKSksZC5vcHRzLiR0aHVtYiYmZC5vcHRzLiR0aHVtYi5sZW5ndGh8fCFkLm9wdHMuJG9yaWd8fChkLm9wdHMuJHRodW1iPWQub3B0cy4kb3JpZy5maW5kKFwiaW1nOmZpcnN0XCIpKSxcImZ1bmN0aW9uXCI9PT1uLnR5cGUoZC5vcHRzLmNhcHRpb24pJiYoZC5vcHRzLmNhcHRpb249ZC5vcHRzLmNhcHRpb24uYXBwbHkoZSxbYSxkXSkpLFwiZnVuY3Rpb25cIj09PW4udHlwZShhLm9wdHMuY2FwdGlvbikmJihkLm9wdHMuY2FwdGlvbj1hLm9wdHMuY2FwdGlvbi5hcHBseShlLFthLGRdKSksZC5vcHRzLmNhcHRpb24gaW5zdGFuY2VvZiBufHwoZC5vcHRzLmNhcHRpb249ZC5vcHRzLmNhcHRpb249PT1vP1wiXCI6ZC5vcHRzLmNhcHRpb24rXCJcIiksXCJhamF4XCI9PT1kLnR5cGUmJihsPWMuc3BsaXQoL1xccysvLDIpLGwubGVuZ3RoPjEmJihkLnNyYz1sLnNoaWZ0KCksZC5vcHRzLmZpbHRlcj1sLnNoaWZ0KCkpKSxkLm9wdHMubW9kYWwmJihkLm9wdHM9bi5leHRlbmQoITAsZC5vcHRzLHt0cmFwRm9jdXM6ITAsaW5mb2JhcjowLHRvb2xiYXI6MCxzbWFsbEJ0bjowLGtleWJvYXJkOjAsc2xpZGVTaG93OjAsZnVsbFNjcmVlbjowLHRodW1iczowLHRvdWNoOjAsY2xpY2tDb250ZW50OiExLGNsaWNrU2xpZGU6ITEsY2xpY2tPdXRzaWRlOiExLGRibGNsaWNrQ29udGVudDohMSxkYmxjbGlja1NsaWRlOiExLGRibGNsaWNrT3V0c2lkZTohMX0pKSxhLmdyb3VwLnB1c2goZCl9KSxPYmplY3Qua2V5cyhhLnNsaWRlcykubGVuZ3RoJiYoYS51cGRhdGVDb250cm9scygpLGU9YS5UaHVtYnMsZSYmZS5pc0FjdGl2ZSYmKGUuY3JlYXRlKCksZS5mb2N1cygpKSl9LGFkZEV2ZW50czpmdW5jdGlvbigpe3ZhciBlPXRoaXM7ZS5yZW1vdmVFdmVudHMoKSxlLiRyZWZzLmNvbnRhaW5lci5vbihcImNsaWNrLmZiLWNsb3NlXCIsXCJbZGF0YS1mYW5jeWJveC1jbG9zZV1cIixmdW5jdGlvbih0KXt0LnN0b3BQcm9wYWdhdGlvbigpLHQucHJldmVudERlZmF1bHQoKSxlLmNsb3NlKHQpfSkub24oXCJ0b3VjaHN0YXJ0LmZiLXByZXYgY2xpY2suZmItcHJldlwiLFwiW2RhdGEtZmFuY3lib3gtcHJldl1cIixmdW5jdGlvbih0KXt0LnN0b3BQcm9wYWdhdGlvbigpLHQucHJldmVudERlZmF1bHQoKSxlLnByZXZpb3VzKCl9KS5vbihcInRvdWNoc3RhcnQuZmItbmV4dCBjbGljay5mYi1uZXh0XCIsXCJbZGF0YS1mYW5jeWJveC1uZXh0XVwiLGZ1bmN0aW9uKHQpe3Quc3RvcFByb3BhZ2F0aW9uKCksdC5wcmV2ZW50RGVmYXVsdCgpLGUubmV4dCgpfSkub24oXCJjbGljay5mYlwiLFwiW2RhdGEtZmFuY3lib3gtem9vbV1cIixmdW5jdGlvbih0KXtlW2UuaXNTY2FsZWREb3duKCk/XCJzY2FsZVRvQWN0dWFsXCI6XCJzY2FsZVRvRml0XCJdKCl9KSxzLm9uKFwib3JpZW50YXRpb25jaGFuZ2UuZmIgcmVzaXplLmZiXCIsZnVuY3Rpb24odCl7dCYmdC5vcmlnaW5hbEV2ZW50JiZcInJlc2l6ZVwiPT09dC5vcmlnaW5hbEV2ZW50LnR5cGU/ZChmdW5jdGlvbigpe2UudXBkYXRlKCl9KTooZS5jdXJyZW50JiZcImlmcmFtZVwiPT09ZS5jdXJyZW50LnR5cGUmJmUuJHJlZnMuc3RhZ2UuaGlkZSgpLHNldFRpbWVvdXQoZnVuY3Rpb24oKXtlLiRyZWZzLnN0YWdlLnNob3coKSxlLnVwZGF0ZSgpfSxuLmZhbmN5Ym94LmlzTW9iaWxlPzYwMDoyNTApKX0pLHIub24oXCJrZXlkb3duLmZiXCIsZnVuY3Rpb24odCl7dmFyIG89bi5mYW5jeWJveD9uLmZhbmN5Ym94LmdldEluc3RhbmNlKCk6bnVsbCxhPW8uY3VycmVudCxpPXQua2V5Q29kZXx8dC53aGljaDtpZig5PT1pKXJldHVybiB2b2lkKGEub3B0cy50cmFwRm9jdXMmJmUuZm9jdXModCkpO2lmKCEoIWEub3B0cy5rZXlib2FyZHx8dC5jdHJsS2V5fHx0LmFsdEtleXx8dC5zaGlmdEtleXx8bih0LnRhcmdldCkuaXMoXCJpbnB1dFwiKXx8bih0LnRhcmdldCkuaXMoXCJ0ZXh0YXJlYVwiKSkpcmV0dXJuIDg9PT1pfHwyNz09PWk/KHQucHJldmVudERlZmF1bHQoKSx2b2lkIGUuY2xvc2UodCkpOjM3PT09aXx8Mzg9PT1pPyh0LnByZXZlbnREZWZhdWx0KCksdm9pZCBlLnByZXZpb3VzKCkpOjM5PT09aXx8NDA9PT1pPyh0LnByZXZlbnREZWZhdWx0KCksdm9pZCBlLm5leHQoKSk6dm9pZCBlLnRyaWdnZXIoXCJhZnRlcktleWRvd25cIix0LGkpfSksZS5ncm91cFtlLmN1cnJJbmRleF0ub3B0cy5pZGxlVGltZSYmKGUuaWRsZVNlY29uZHNDb3VudGVyPTAsci5vbihcIm1vdXNlbW92ZS5mYi1pZGxlIG1vdXNlbGVhdmUuZmItaWRsZSBtb3VzZWRvd24uZmItaWRsZSB0b3VjaHN0YXJ0LmZiLWlkbGUgdG91Y2htb3ZlLmZiLWlkbGUgc2Nyb2xsLmZiLWlkbGUga2V5ZG93bi5mYi1pZGxlXCIsZnVuY3Rpb24odCl7ZS5pZGxlU2Vjb25kc0NvdW50ZXI9MCxlLmlzSWRsZSYmZS5zaG93Q29udHJvbHMoKSxlLmlzSWRsZT0hMX0pLGUuaWRsZUludGVydmFsPXQuc2V0SW50ZXJ2YWwoZnVuY3Rpb24oKXtlLmlkbGVTZWNvbmRzQ291bnRlcisrLGUuaWRsZVNlY29uZHNDb3VudGVyPj1lLmdyb3VwW2UuY3VyckluZGV4XS5vcHRzLmlkbGVUaW1lJiYhZS5pc0RyYWdnaW5nJiYoZS5pc0lkbGU9ITAsZS5pZGxlU2Vjb25kc0NvdW50ZXI9MCxlLmhpZGVDb250cm9scygpKX0sMWUzKSl9LHJlbW92ZUV2ZW50czpmdW5jdGlvbigpe3ZhciBlPXRoaXM7cy5vZmYoXCJvcmllbnRhdGlvbmNoYW5nZS5mYiByZXNpemUuZmJcIiksci5vZmYoXCJrZXlkb3duLmZiIC5mYi1pZGxlXCIpLHRoaXMuJHJlZnMuY29udGFpbmVyLm9mZihcIi5mYi1jbG9zZSAuZmItcHJldiAuZmItbmV4dFwiKSxlLmlkbGVJbnRlcnZhbCYmKHQuY2xlYXJJbnRlcnZhbChlLmlkbGVJbnRlcnZhbCksZS5pZGxlSW50ZXJ2YWw9bnVsbCl9LHByZXZpb3VzOmZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLmp1bXBUbyh0aGlzLmN1cnJQb3MtMSx0KX0sbmV4dDpmdW5jdGlvbih0KXtyZXR1cm4gdGhpcy5qdW1wVG8odGhpcy5jdXJyUG9zKzEsdCl9LGp1bXBUbzpmdW5jdGlvbih0LGUpe3ZhciBhLGkscyxyLGMsbCx1LHAsaD10aGlzLGc9aC5ncm91cC5sZW5ndGg7aWYoIShoLmlzRHJhZ2dpbmd8fGguaXNDbG9zaW5nfHxoLmlzQW5pbWF0aW5nJiZoLmZpcnN0UnVuKSl7aWYodD1wYXJzZUludCh0LDEwKSxzPWguY3VycmVudD9oLmN1cnJlbnQub3B0cy5sb29wOmgub3B0cy5sb29wLCFzJiYodDwwfHx0Pj1nKSlyZXR1cm4hMTtpZihhPWguZmlyc3RSdW49IU9iamVjdC5rZXlzKGguc2xpZGVzKS5sZW5ndGgsYz1oLmN1cnJlbnQsaC5wcmV2SW5kZXg9aC5jdXJySW5kZXgsaC5wcmV2UG9zPWguY3VyclBvcyxyPWguY3JlYXRlU2xpZGUodCksZz4xJiYoKHN8fHIuaW5kZXg8Zy0xKSYmaC5jcmVhdGVTbGlkZSh0KzEpLChzfHxyLmluZGV4PjApJiZoLmNyZWF0ZVNsaWRlKHQtMSkpLGguY3VycmVudD1yLGguY3VyckluZGV4PXIuaW5kZXgsaC5jdXJyUG9zPXIucG9zLGgudHJpZ2dlcihcImJlZm9yZVNob3dcIixhKSxoLnVwZGF0ZUNvbnRyb2xzKCksci5mb3JjZWREdXJhdGlvbj1vLG4uaXNOdW1lcmljKGUpP3IuZm9yY2VkRHVyYXRpb249ZTplPXIub3B0c1thP1wiYW5pbWF0aW9uRHVyYXRpb25cIjpcInRyYW5zaXRpb25EdXJhdGlvblwiXSxlPXBhcnNlSW50KGUsMTApLGk9aC5pc01vdmVkKGMpLHIuJHNsaWRlLmFkZENsYXNzKFwiZmFuY3lib3gtc2xpZGUtLWN1cnJlbnRcIiksYSlyZXR1cm4gci5vcHRzLmFuaW1hdGlvbkVmZmVjdCYmZSYmaC4kcmVmcy5jb250YWluZXIuY3NzKFwidHJhbnNpdGlvbi1kdXJhdGlvblwiLGUrXCJtc1wiKSxoLiRyZWZzLmNvbnRhaW5lci5hZGRDbGFzcyhcImZhbmN5Ym94LWlzLW9wZW5cIikudHJpZ2dlcihcImZvY3VzXCIpLGgubG9hZFNsaWRlKHIpLHZvaWQgaC5wcmVsb2FkKFwiaW1hZ2VcIik7bD1uLmZhbmN5Ym94LmdldFRyYW5zbGF0ZShjLiRzbGlkZSksdT1uLmZhbmN5Ym94LmdldFRyYW5zbGF0ZShoLiRyZWZzLnN0YWdlKSxuLmVhY2goaC5zbGlkZXMsZnVuY3Rpb24odCxlKXtuLmZhbmN5Ym94LnN0b3AoZS4kc2xpZGUsITApfSksYy5wb3MhPT1yLnBvcyYmKGMuaXNDb21wbGV0ZT0hMSxjLiRzbGlkZS5yZW1vdmVDbGFzcyhcImZhbmN5Ym94LXNsaWRlLS1jb21wbGV0ZSBmYW5jeWJveC1zbGlkZS0tY3VycmVudFwiKSksaT8ocD1sLmxlZnQtKGMucG9zKmwud2lkdGgrYy5wb3MqYy5vcHRzLmd1dHRlciksbi5lYWNoKGguc2xpZGVzLGZ1bmN0aW9uKHQsbyl7dmFyIGE9by5wb3MqbC53aWR0aCtvLnBvcypvLm9wdHMuZ3V0dGVyO24uZmFuY3lib3guc2V0VHJhbnNsYXRlKG8uJHNsaWRlLHt0b3A6MCxsZWZ0OmErcC11LmxlZnR9KSxvLnBvcyE9PXIucG9zJiZvLiRzbGlkZS5hZGRDbGFzcyhcImZhbmN5Ym94LXNsaWRlLS1cIisoby5wb3M+ci5wb3M/XCJuZXh0XCI6XCJwcmV2aW91c1wiKSksZihvLiRzbGlkZSksZChmdW5jdGlvbigpe24uZmFuY3lib3guYW5pbWF0ZShvLiRzbGlkZSx7dG9wOjAsbGVmdDooby5wb3Mtci5wb3MpKmwud2lkdGgrKG8ucG9zLXIucG9zKSpvLm9wdHMuZ3V0dGVyfSxlLGZ1bmN0aW9uKCl7by4kc2xpZGUucmVtb3ZlQXR0cihcInN0eWxlXCIpLnJlbW92ZUNsYXNzKFwiZmFuY3lib3gtc2xpZGUtLW5leHQgZmFuY3lib3gtc2xpZGUtLXByZXZpb3VzXCIpLG8ucG9zPT09aC5jdXJyUG9zJiZoLmNvbXBsZXRlKCl9KX0pfSkpOihyLiRzbGlkZS5wYXJlbnQoKS5jaGlsZHJlbigpLnJlbW92ZUF0dHIoXCJzdHlsZVwiKSxlJiZyLm9wdHMudHJhbnNpdGlvbkVmZmVjdCYmbi5mYW5jeWJveC5hbmltYXRlKGMuJHNsaWRlLFwiZmFuY3lib3gtYW5pbWF0ZWQgZmFuY3lib3gtc2xpZGUtLVwiKyhjLnBvcz5yLnBvcz9cIm5leHRcIjpcInByZXZpb3VzXCIpK1wiIGZhbmN5Ym94LWZ4LVwiK3Iub3B0cy50cmFuc2l0aW9uRWZmZWN0LGUsbnVsbCwhMSkpLHIuaXNMb2FkZWQ/aC5yZXZlYWxDb250ZW50KHIpOmgubG9hZFNsaWRlKHIpLGgucHJlbG9hZChcImltYWdlXCIpfX0sY3JlYXRlU2xpZGU6ZnVuY3Rpb24odCl7dmFyIGUsbyxhPXRoaXM7cmV0dXJuIG89dCVhLmdyb3VwLmxlbmd0aCxvPW88MD9hLmdyb3VwLmxlbmd0aCtvOm8sIWEuc2xpZGVzW3RdJiZhLmdyb3VwW29dJiYoZT1uKCc8ZGl2IGNsYXNzPVwiZmFuY3lib3gtc2xpZGVcIj48L2Rpdj4nKS5hcHBlbmRUbyhhLiRyZWZzLnN0YWdlKSxhLnNsaWRlc1t0XT1uLmV4dGVuZCghMCx7fSxhLmdyb3VwW29dLHtwb3M6dCwkc2xpZGU6ZSxpc0xvYWRlZDohMX0pLGEudXBkYXRlU2xpZGUoYS5zbGlkZXNbdF0pKSxhLnNsaWRlc1t0XX0sc2NhbGVUb0FjdHVhbDpmdW5jdGlvbih0LGUsYSl7dmFyIGkscyxyLGMsbCxkPXRoaXMsdT1kLmN1cnJlbnQsZj11LiRjb250ZW50LHA9bi5mYW5jeWJveC5nZXRUcmFuc2xhdGUodS4kc2xpZGUpLndpZHRoLGg9bi5mYW5jeWJveC5nZXRUcmFuc2xhdGUodS4kc2xpZGUpLmhlaWdodCxnPXUud2lkdGgsYj11LmhlaWdodDshZC5pc0FuaW1hdGluZyYmZiYmXCJpbWFnZVwiPT11LnR5cGUmJnUuaXNMb2FkZWQmJiF1Lmhhc0Vycm9yJiYobi5mYW5jeWJveC5zdG9wKGYpLGQuaXNBbmltYXRpbmc9ITAsdD10PT09bz8uNSpwOnQsZT1lPT09bz8uNSpoOmUsaT1uLmZhbmN5Ym94LmdldFRyYW5zbGF0ZShmKSxpLnRvcC09bi5mYW5jeWJveC5nZXRUcmFuc2xhdGUodS4kc2xpZGUpLnRvcCxpLmxlZnQtPW4uZmFuY3lib3guZ2V0VHJhbnNsYXRlKHUuJHNsaWRlKS5sZWZ0LGM9Zy9pLndpZHRoLGw9Yi9pLmhlaWdodCxzPS41KnAtLjUqZyxyPS41KmgtLjUqYixnPnAmJihzPWkubGVmdCpjLSh0KmMtdCkscz4wJiYocz0wKSxzPHAtZyYmKHM9cC1nKSksYj5oJiYocj1pLnRvcCpsLShlKmwtZSkscj4wJiYocj0wKSxyPGgtYiYmKHI9aC1iKSksZC51cGRhdGVDdXJzb3IoZyxiKSxuLmZhbmN5Ym94LmFuaW1hdGUoZix7dG9wOnIsbGVmdDpzLHNjYWxlWDpjLHNjYWxlWTpsfSxhfHwzMzAsZnVuY3Rpb24oKXtkLmlzQW5pbWF0aW5nPSExfSksZC5TbGlkZVNob3cmJmQuU2xpZGVTaG93LmlzQWN0aXZlJiZkLlNsaWRlU2hvdy5zdG9wKCkpfSxzY2FsZVRvRml0OmZ1bmN0aW9uKHQpe3ZhciBlLG89dGhpcyxhPW8uY3VycmVudCxpPWEuJGNvbnRlbnQ7IW8uaXNBbmltYXRpbmcmJmkmJlwiaW1hZ2VcIj09YS50eXBlJiZhLmlzTG9hZGVkJiYhYS5oYXNFcnJvciYmKG4uZmFuY3lib3guc3RvcChpKSxvLmlzQW5pbWF0aW5nPSEwLGU9by5nZXRGaXRQb3MoYSksby51cGRhdGVDdXJzb3IoZS53aWR0aCxlLmhlaWdodCksbi5mYW5jeWJveC5hbmltYXRlKGkse3RvcDplLnRvcCxsZWZ0OmUubGVmdCxzY2FsZVg6ZS53aWR0aC9pLndpZHRoKCksc2NhbGVZOmUuaGVpZ2h0L2kuaGVpZ2h0KCl9LHR8fDMzMCxmdW5jdGlvbigpe28uaXNBbmltYXRpbmc9ITF9KSl9LGdldEZpdFBvczpmdW5jdGlvbih0KXt2YXIgZSxvLGEsaSxzPXRoaXMscj10LiRjb250ZW50LGM9dC4kc2xpZGUsbD10LndpZHRofHx0Lm9wdHMud2lkdGgsZD10LmhlaWdodHx8dC5vcHRzLmhlaWdodCx1PXt9O3JldHVybiEhKHQuaXNMb2FkZWQmJnImJnIubGVuZ3RoKSYmKGU9bi5mYW5jeWJveC5nZXRUcmFuc2xhdGUocy4kcmVmcy5zdGFnZSkud2lkdGgsbz1uLmZhbmN5Ym94LmdldFRyYW5zbGF0ZShzLiRyZWZzLnN0YWdlKS5oZWlnaHQsZS09cGFyc2VGbG9hdChjLmNzcyhcInBhZGRpbmdMZWZ0XCIpKStwYXJzZUZsb2F0KGMuY3NzKFwicGFkZGluZ1JpZ2h0XCIpKStwYXJzZUZsb2F0KHIuY3NzKFwibWFyZ2luTGVmdFwiKSkrcGFyc2VGbG9hdChyLmNzcyhcIm1hcmdpblJpZ2h0XCIpKSxvLT1wYXJzZUZsb2F0KGMuY3NzKFwicGFkZGluZ1RvcFwiKSkrcGFyc2VGbG9hdChjLmNzcyhcInBhZGRpbmdCb3R0b21cIikpK3BhcnNlRmxvYXQoci5jc3MoXCJtYXJnaW5Ub3BcIikpK3BhcnNlRmxvYXQoci5jc3MoXCJtYXJnaW5Cb3R0b21cIikpLGwmJmR8fChsPWUsZD1vKSxhPU1hdGgubWluKDEsZS9sLG8vZCksbD1hKmwsZD1hKmQsbD5lLS41JiYobD1lKSxkPm8tLjUmJihkPW8pLFwiaW1hZ2VcIj09PXQudHlwZT8odS50b3A9TWF0aC5mbG9vciguNSooby1kKSkrcGFyc2VGbG9hdChjLmNzcyhcInBhZGRpbmdUb3BcIikpLHUubGVmdD1NYXRoLmZsb29yKC41KihlLWwpKStwYXJzZUZsb2F0KGMuY3NzKFwicGFkZGluZ0xlZnRcIikpKTpcInZpZGVvXCI9PT10LmNvbnRlbnRUeXBlJiYoaT10Lm9wdHMud2lkdGgmJnQub3B0cy5oZWlnaHQ/bC9kOnQub3B0cy5yYXRpb3x8MTYvOSxkPmwvaT9kPWwvaTpsPmQqaSYmKGw9ZCppKSksdS53aWR0aD1sLHUuaGVpZ2h0PWQsdSl9LHVwZGF0ZTpmdW5jdGlvbigpe3ZhciB0PXRoaXM7bi5lYWNoKHQuc2xpZGVzLGZ1bmN0aW9uKGUsbil7dC51cGRhdGVTbGlkZShuKX0pfSx1cGRhdGVTbGlkZTpmdW5jdGlvbih0KXt2YXIgZT10aGlzLG89dCYmdC4kY29udGVudCxhPXQud2lkdGh8fHQub3B0cy53aWR0aCxpPXQuaGVpZ2h0fHx0Lm9wdHMuaGVpZ2h0LHM9dC4kc2xpZGU7byYmKGF8fGl8fFwidmlkZW9cIj09PXQuY29udGVudFR5cGUpJiYhdC5oYXNFcnJvciYmKG4uZmFuY3lib3guc3RvcChvKSxuLmZhbmN5Ym94LnNldFRyYW5zbGF0ZShvLGUuZ2V0Rml0UG9zKHQpKSx0LnBvcz09PWUuY3VyclBvcyYmKGUuaXNBbmltYXRpbmc9ITEsZS51cGRhdGVDdXJzb3IoKSkpLHMubGVuZ3RoJiYocy50cmlnZ2VyKFwicmVmcmVzaFwiKSxlLiRyZWZzLnRvb2xiYXIudG9nZ2xlQ2xhc3MoXCJjb21wZW5zYXRlLWZvci1zY3JvbGxiYXJcIixzLmdldCgwKS5zY3JvbGxIZWlnaHQ+cy5nZXQoMCkuY2xpZW50SGVpZ2h0KSksZS50cmlnZ2VyKFwib25VcGRhdGVcIix0KX0sY2VudGVyU2xpZGU6ZnVuY3Rpb24odCxlKXt2YXIgYSxpLHM9dGhpcztzLmN1cnJlbnQmJihhPU1hdGgucm91bmQodC4kc2xpZGUud2lkdGgoKSksaT10LnBvcy1zLmN1cnJlbnQucG9zLG4uZmFuY3lib3guYW5pbWF0ZSh0LiRzbGlkZSx7dG9wOjAsbGVmdDppKmEraSp0Lm9wdHMuZ3V0dGVyLG9wYWNpdHk6MX0sZT09PW8/MDplLGZ1bmN0aW9uKCl7dC4kc2xpZGUuc2libGluZ3MoKS5yZW1vdmVBdHRyKFwic3R5bGVcIikucmVtb3ZlQ2xhc3MoXCJmYW5jeWJveC1zbGlkZS0tcHJldmlvdXMgZmFuY3lib3gtc2xpZGUtLW5leHRcIiksdC5pc0NvbXBsZXRlfHxzLmNvbXBsZXRlKCl9LCExKSl9LGlzTW92ZWQ6ZnVuY3Rpb24odCl7dmFyIGUsbyxhPXR8fHRoaXMuY3VycmVudDtyZXR1cm4hIWEmJihvPW4uZmFuY3lib3guZ2V0VHJhbnNsYXRlKHRoaXMuJHJlZnMuc3RhZ2UpLGU9bi5mYW5jeWJveC5nZXRUcmFuc2xhdGUoYS4kc2xpZGUpLChNYXRoLmFicyhlLnRvcC1vLnRvcCk+MHx8TWF0aC5hYnMoZS5sZWZ0LW8ubGVmdCk+MCkmJiFhLiRzbGlkZS5oYXNDbGFzcyhcImZhbmN5Ym94LWFuaW1hdGVkXCIpKX0sdXBkYXRlQ3Vyc29yOmZ1bmN0aW9uKHQsZSl7dmFyIG8sYT10aGlzLGk9YS5jdXJyZW50LHM9YS4kcmVmcy5jb250YWluZXI7aSYmIWEuaXNDbG9zaW5nJiZhLkd1ZXN0dXJlcyYmKHMucmVtb3ZlQ2xhc3MoXCJmYW5jeWJveC1pcy16b29tYWJsZSBmYW5jeWJveC1jYW4tem9vbUluIGZhbmN5Ym94LWNhbi16b29tT3V0IGZhbmN5Ym94LWNhbi1zd2lwZSBmYW5jeWJveC1jYW4tcGFuXCIpLG89YS5pc1pvb21hYmxlKCkscy50b2dnbGVDbGFzcyhcImZhbmN5Ym94LWlzLXpvb21hYmxlXCIsbyksbihcIltkYXRhLWZhbmN5Ym94LXpvb21dXCIpLnByb3AoXCJkaXNhYmxlZFwiLCFvKSxhLmNhblBhbih0LGUpP3MuYWRkQ2xhc3MoXCJmYW5jeWJveC1jYW4tcGFuXCIpOm8mJihcInpvb21cIj09PWkub3B0cy5jbGlja0NvbnRlbnR8fG4uaXNGdW5jdGlvbihpLm9wdHMuY2xpY2tDb250ZW50KSYmXCJ6b29tXCI9PWkub3B0cy5jbGlja0NvbnRlbnQoaSkpP3MuYWRkQ2xhc3MoXCJmYW5jeWJveC1jYW4tem9vbUluXCIpOmkub3B0cy50b3VjaCYmKGkub3B0cy50b3VjaC52ZXJ0aWNhbHx8YS5ncm91cC5sZW5ndGg+MSkmJlwidmlkZW9cIiE9PWkuY29udGVudFR5cGUmJnMuYWRkQ2xhc3MoXCJmYW5jeWJveC1jYW4tc3dpcGVcIikpfSxpc1pvb21hYmxlOmZ1bmN0aW9uKCl7dmFyIHQsZT10aGlzLG49ZS5jdXJyZW50O2lmKG4mJiFlLmlzQ2xvc2luZyYmXCJpbWFnZVwiPT09bi50eXBlJiYhbi5oYXNFcnJvcil7aWYoIW4uaXNMb2FkZWQpcmV0dXJuITA7aWYodD1lLmdldEZpdFBvcyhuKSxuLndpZHRoPnQud2lkdGh8fG4uaGVpZ2h0PnQuaGVpZ2h0KXJldHVybiEwfXJldHVybiExfSxpc1NjYWxlZERvd246ZnVuY3Rpb24odCxlKXt2YXIgYT10aGlzLGk9ITEscz1hLmN1cnJlbnQscj1zLiRjb250ZW50O3JldHVybiB0IT09byYmZSE9PW8/aT10PHMud2lkdGgmJmU8cy5oZWlnaHQ6ciYmKGk9bi5mYW5jeWJveC5nZXRUcmFuc2xhdGUociksaT1pLndpZHRoPHMud2lkdGgmJmkuaGVpZ2h0PHMuaGVpZ2h0KSxpfSxjYW5QYW46ZnVuY3Rpb24odCxlKXt2YXIgYSxpLHM9dGhpcyxyPSExLGM9cy5jdXJyZW50O3JldHVyblwiaW1hZ2VcIj09PWMudHlwZSYmKGE9Yy4kY29udGVudCkmJiFjLmhhc0Vycm9yJiYocj1zLmdldEZpdFBvcyhjKSxpPXQhPT1vJiZlIT09bz97d2lkdGg6dCxoZWlnaHQ6ZX06bi5mYW5jeWJveC5nZXRUcmFuc2xhdGUoYSkscj1NYXRoLmFicyhpLndpZHRoLXIud2lkdGgpPjEuNXx8TWF0aC5hYnMoaS5oZWlnaHQtci5oZWlnaHQpPjEuNSkscn0sbG9hZFNsaWRlOmZ1bmN0aW9uKHQpe3ZhciBlLG8sYSxpPXRoaXM7aWYoIXQuaXNMb2FkaW5nJiYhdC5pc0xvYWRlZCl7aWYodC5pc0xvYWRpbmc9ITAsaS50cmlnZ2VyKFwiYmVmb3JlTG9hZFwiLHQpPT09ITEpcmV0dXJuIHQuaXNMb2FkaW5nPSExLCExO3N3aXRjaChlPXQudHlwZSxvPXQuJHNsaWRlLG8ub2ZmKFwicmVmcmVzaFwiKS50cmlnZ2VyKFwib25SZXNldFwiKS5hZGRDbGFzcyh0Lm9wdHMuc2xpZGVDbGFzcyksZSl7Y2FzZVwiaW1hZ2VcIjppLnNldEltYWdlKHQpO2JyZWFrO2Nhc2VcImlmcmFtZVwiOmkuc2V0SWZyYW1lKHQpO2JyZWFrO2Nhc2VcImh0bWxcIjppLnNldENvbnRlbnQodCx0LnNyY3x8dC5jb250ZW50KTticmVhaztjYXNlXCJ2aWRlb1wiOmkuc2V0Q29udGVudCh0LHQub3B0cy52aWRlby50cGwucmVwbGFjZShcInt7c3JjfX1cIix0LnNyYykucmVwbGFjZShcInt7Zm9ybWF0fX1cIix0Lm9wdHMudmlkZW9Gb3JtYXR8fHQub3B0cy52aWRlby5mb3JtYXQpKTticmVhaztjYXNlXCJpbmxpbmVcIjpuKHQuc3JjKS5sZW5ndGg/aS5zZXRDb250ZW50KHQsbih0LnNyYykpOmkuc2V0RXJyb3IodCk7YnJlYWs7Y2FzZVwiYWpheFwiOmkuc2hvd0xvYWRpbmcodCksYT1uLmFqYXgobi5leHRlbmQoe30sdC5vcHRzLmFqYXguc2V0dGluZ3Mse3VybDp0LnNyYyxzdWNjZXNzOmZ1bmN0aW9uKGUsbil7XCJzdWNjZXNzXCI9PT1uJiZpLnNldENvbnRlbnQodCxlKX0sZXJyb3I6ZnVuY3Rpb24oZSxuKXtlJiZcImFib3J0XCIhPT1uJiZpLnNldEVycm9yKHQpfX0pKSxvLm9uZShcIm9uUmVzZXRcIixmdW5jdGlvbigpe2EuYWJvcnQoKX0pO2JyZWFrO2RlZmF1bHQ6aS5zZXRFcnJvcih0KX1yZXR1cm4hMH19LHNldEltYWdlOmZ1bmN0aW9uKGUpe3ZhciBvLGEsaSxzLHIsYz10aGlzLGw9ZS5vcHRzLnNyY3NldHx8ZS5vcHRzLmltYWdlLnNyY3NldDtpZihkKGZ1bmN0aW9uKCl7ZChmdW5jdGlvbigpe3ZhciB0PWUuJGltYWdlO2MuaXNDbG9zaW5nfHwhZS5pc0xvYWRpbmd8fHQmJnQubGVuZ3RoJiZ0WzBdLmNvbXBsZXRlfHxlLmhhc0Vycm9yfHxjLnNob3dMb2FkaW5nKGUpfSl9KSxsKXtzPXQuZGV2aWNlUGl4ZWxSYXRpb3x8MSxyPXQuaW5uZXJXaWR0aCpzLGk9bC5zcGxpdChcIixcIikubWFwKGZ1bmN0aW9uKHQpe3ZhciBlPXt9O3JldHVybiB0LnRyaW0oKS5zcGxpdCgvXFxzKy8pLmZvckVhY2goZnVuY3Rpb24odCxuKXt2YXIgbz1wYXJzZUludCh0LnN1YnN0cmluZygwLHQubGVuZ3RoLTEpLDEwKTtyZXR1cm4gMD09PW4/ZS51cmw9dDp2b2lkKG8mJihlLnZhbHVlPW8sZS5wb3N0Zml4PXRbdC5sZW5ndGgtMV0pKX0pLGV9KSxpLnNvcnQoZnVuY3Rpb24odCxlKXtyZXR1cm4gdC52YWx1ZS1lLnZhbHVlfSk7Zm9yKHZhciB1PTA7dTxpLmxlbmd0aDt1Kyspe3ZhciBmPWlbdV07aWYoXCJ3XCI9PT1mLnBvc3RmaXgmJmYudmFsdWU+PXJ8fFwieFwiPT09Zi5wb3N0Zml4JiZmLnZhbHVlPj1zKXthPWY7YnJlYWt9fSFhJiZpLmxlbmd0aCYmKGE9aVtpLmxlbmd0aC0xXSksYSYmKGUuc3JjPWEudXJsLGUud2lkdGgmJmUuaGVpZ2h0JiZcIndcIj09YS5wb3N0Zml4JiYoZS5oZWlnaHQ9ZS53aWR0aC9lLmhlaWdodCphLnZhbHVlLGUud2lkdGg9YS52YWx1ZSksZS5vcHRzLnNyY3NldD1sKX1lLiRjb250ZW50PW4oJzxkaXYgY2xhc3M9XCJmYW5jeWJveC1jb250ZW50XCI+PC9kaXY+JykuYWRkQ2xhc3MoXCJmYW5jeWJveC1pcy1oaWRkZW5cIikuYXBwZW5kVG8oZS4kc2xpZGUuYWRkQ2xhc3MoXCJmYW5jeWJveC1zbGlkZS0taW1hZ2VcIikpLG89ZS5vcHRzLnRodW1ifHwhKCFlLm9wdHMuJHRodW1ifHwhZS5vcHRzLiR0aHVtYi5sZW5ndGgpJiZlLm9wdHMuJHRodW1iLmF0dHIoXCJzcmNcIiksZS5vcHRzLnByZWxvYWQhPT0hMSYmZS5vcHRzLndpZHRoJiZlLm9wdHMuaGVpZ2h0JiZvJiYoZS53aWR0aD1lLm9wdHMud2lkdGgsZS5oZWlnaHQ9ZS5vcHRzLmhlaWdodCxlLiRnaG9zdD1uKFwiPGltZyAvPlwiKS5vbmUoXCJlcnJvclwiLGZ1bmN0aW9uKCl7bih0aGlzKS5yZW1vdmUoKSxlLiRnaG9zdD1udWxsfSkub25lKFwibG9hZFwiLGZ1bmN0aW9uKCl7Yy5hZnRlckxvYWQoZSl9KS5hZGRDbGFzcyhcImZhbmN5Ym94LWltYWdlXCIpLmFwcGVuZFRvKGUuJGNvbnRlbnQpLmF0dHIoXCJzcmNcIixvKSksYy5zZXRCaWdJbWFnZShlKX0sc2V0QmlnSW1hZ2U6ZnVuY3Rpb24odCl7dmFyIGU9dGhpcyxvPW4oXCI8aW1nIC8+XCIpO3QuJGltYWdlPW8ub25lKFwiZXJyb3JcIixmdW5jdGlvbigpe2Uuc2V0RXJyb3IodCl9KS5vbmUoXCJsb2FkXCIsZnVuY3Rpb24oKXt2YXIgbjt0LiRnaG9zdHx8KGUucmVzb2x2ZUltYWdlU2xpZGVTaXplKHQsdGhpcy5uYXR1cmFsV2lkdGgsdGhpcy5uYXR1cmFsSGVpZ2h0KSxlLmFmdGVyTG9hZCh0KSksZS5pc0Nsb3Npbmd8fCh0Lm9wdHMuc3Jjc2V0JiYobj10Lm9wdHMuc2l6ZXMsbiYmXCJhdXRvXCIhPT1ufHwobj0odC53aWR0aC90LmhlaWdodD4xJiZzLndpZHRoKCkvcy5oZWlnaHQoKT4xP1wiMTAwXCI6TWF0aC5yb3VuZCh0LndpZHRoL3QuaGVpZ2h0KjEwMCkpK1widndcIiksby5hdHRyKFwic2l6ZXNcIixuKS5hdHRyKFwic3Jjc2V0XCIsdC5vcHRzLnNyY3NldCkpLHQuJGdob3N0JiZzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7dC4kZ2hvc3QmJiFlLmlzQ2xvc2luZyYmdC4kZ2hvc3QuaGlkZSgpfSxNYXRoLm1pbigzMDAsTWF0aC5tYXgoMWUzLHQuaGVpZ2h0LzE2MDApKSksZS5oaWRlTG9hZGluZyh0KSl9KS5hZGRDbGFzcyhcImZhbmN5Ym94LWltYWdlXCIpLmF0dHIoXCJzcmNcIix0LnNyYykuYXBwZW5kVG8odC4kY29udGVudCksKG9bMF0uY29tcGxldGV8fFwiY29tcGxldGVcIj09b1swXS5yZWFkeVN0YXRlKSYmb1swXS5uYXR1cmFsV2lkdGgmJm9bMF0ubmF0dXJhbEhlaWdodD9vLnRyaWdnZXIoXCJsb2FkXCIpOm9bMF0uZXJyb3ImJm8udHJpZ2dlcihcImVycm9yXCIpfSxyZXNvbHZlSW1hZ2VTbGlkZVNpemU6ZnVuY3Rpb24odCxlLG4pe3ZhciBvPXBhcnNlSW50KHQub3B0cy53aWR0aCwxMCksYT1wYXJzZUludCh0Lm9wdHMuaGVpZ2h0LDEwKTt0LndpZHRoPWUsdC5oZWlnaHQ9bixvPjAmJih0LndpZHRoPW8sdC5oZWlnaHQ9TWF0aC5mbG9vcihvKm4vZSkpLGE+MCYmKHQud2lkdGg9TWF0aC5mbG9vcihhKmUvbiksdC5oZWlnaHQ9YSl9LHNldElmcmFtZTpmdW5jdGlvbih0KXt2YXIgZSxhPXRoaXMsaT10Lm9wdHMuaWZyYW1lLHM9dC4kc2xpZGU7dC4kY29udGVudD1uKCc8ZGl2IGNsYXNzPVwiZmFuY3lib3gtY29udGVudCcrKGkucHJlbG9hZD9cIiBmYW5jeWJveC1pcy1oaWRkZW5cIjpcIlwiKSsnXCI+PC9kaXY+JykuY3NzKGkuY3NzKS5hcHBlbmRUbyhzKSxzLmFkZENsYXNzKFwiZmFuY3lib3gtc2xpZGUtLVwiK3QuY29udGVudFR5cGUpLHQuJGlmcmFtZT1lPW4oaS50cGwucmVwbGFjZSgvXFx7cm5kXFx9L2csKG5ldyBEYXRlKS5nZXRUaW1lKCkpKS5hdHRyKGkuYXR0cikuYXBwZW5kVG8odC4kY29udGVudCksaS5wcmVsb2FkPyhhLnNob3dMb2FkaW5nKHQpLGUub24oXCJsb2FkLmZiIGVycm9yLmZiXCIsZnVuY3Rpb24oZSl7dGhpcy5pc1JlYWR5PTEsdC4kc2xpZGUudHJpZ2dlcihcInJlZnJlc2hcIiksYS5hZnRlckxvYWQodCl9KSxzLm9uKFwicmVmcmVzaC5mYlwiLGZ1bmN0aW9uKCl7dmFyIG4sYSxyPXQuJGNvbnRlbnQsYz1pLmNzcy53aWR0aCxsPWkuY3NzLmhlaWdodDtpZigxPT09ZVswXS5pc1JlYWR5KXt0cnl7bj1lLmNvbnRlbnRzKCksYT1uLmZpbmQoXCJib2R5XCIpfWNhdGNoKHQpe31hJiZhLmxlbmd0aCYmYS5jaGlsZHJlbigpLmxlbmd0aCYmKHMuY3NzKFwib3ZlcmZsb3dcIixcInZpc2libGVcIiksci5jc3Moe3dpZHRoOlwiMTAwJVwiLFwibWF4LXdpZHRoXCI6XCIxMDAlXCIsaGVpZ2h0OlwiOTk5OXB4XCJ9KSxjPT09byYmKGM9TWF0aC5jZWlsKE1hdGgubWF4KGFbMF0uY2xpZW50V2lkdGgsYS5vdXRlcldpZHRoKCEwKSkpKSxyLmNzcyhcIndpZHRoXCIsYz9jOlwiXCIpLmNzcyhcIm1heC13aWR0aFwiLFwiXCIpLGw9PT1vJiYobD1NYXRoLmNlaWwoTWF0aC5tYXgoYVswXS5jbGllbnRIZWlnaHQsYS5vdXRlckhlaWdodCghMCkpKSksci5jc3MoXCJoZWlnaHRcIixsP2w6XCJcIikscy5jc3MoXCJvdmVyZmxvd1wiLFwiYXV0b1wiKSksci5yZW1vdmVDbGFzcyhcImZhbmN5Ym94LWlzLWhpZGRlblwiKX19KSk6dGhpcy5hZnRlckxvYWQodCksZS5hdHRyKFwic3JjXCIsdC5zcmMpLHMub25lKFwib25SZXNldFwiLGZ1bmN0aW9uKCl7dHJ5e24odGhpcykuZmluZChcImlmcmFtZVwiKS5oaWRlKCkudW5iaW5kKCkuYXR0cihcInNyY1wiLFwiLy9hYm91dDpibGFua1wiKX1jYXRjaCh0KXt9bih0aGlzKS5vZmYoXCJyZWZyZXNoLmZiXCIpLmVtcHR5KCksdC5pc0xvYWRlZD0hMSx0LmlzUmV2ZWFsZWQ9ITF9KX0sc2V0Q29udGVudDpmdW5jdGlvbih0LGUpe3ZhciBvPXRoaXM7by5pc0Nsb3Npbmd8fChvLmhpZGVMb2FkaW5nKHQpLHQuJGNvbnRlbnQmJm4uZmFuY3lib3guc3RvcCh0LiRjb250ZW50KSx0LiRzbGlkZS5lbXB0eSgpLGwoZSkmJmUucGFyZW50KCkubGVuZ3RoPyhlLmhhc0NsYXNzKFwiZmFuY3lib3gtY29udGVudFwiKSYmZS5wYXJlbnQoXCIuZmFuY3lib3gtc2xpZGUtLWh0bWxcIikudHJpZ2dlcihcIm9uUmVzZXRcIiksdC4kcGxhY2Vob2xkZXI9bihcIjxkaXY+XCIpLmhpZGUoKS5pbnNlcnRBZnRlcihlKSxlLmNzcyhcImRpc3BsYXlcIixcImlubGluZS1ibG9ja1wiKSk6dC5oYXNFcnJvcnx8KFwic3RyaW5nXCI9PT1uLnR5cGUoZSkmJihlPW4oXCI8ZGl2PlwiKS5hcHBlbmQobi50cmltKGUpKS5jb250ZW50cygpKSx0Lm9wdHMuZmlsdGVyJiYoZT1uKFwiPGRpdj5cIikuaHRtbChlKS5maW5kKHQub3B0cy5maWx0ZXIpKSksdC4kc2xpZGUub25lKFwib25SZXNldFwiLGZ1bmN0aW9uKCl7bih0aGlzKS5maW5kKFwidmlkZW8sYXVkaW9cIikudHJpZ2dlcihcInBhdXNlXCIpLHQuJHBsYWNlaG9sZGVyJiYodC4kcGxhY2Vob2xkZXIuYWZ0ZXIoZS5yZW1vdmVDbGFzcyhcImZhbmN5Ym94LWNvbnRlbnRcIikuaGlkZSgpKS5yZW1vdmUoKSx0LiRwbGFjZWhvbGRlcj1udWxsKSx0LiRzbWFsbEJ0biYmKHQuJHNtYWxsQnRuLnJlbW92ZSgpLHQuJHNtYWxsQnRuPW51bGwpLHQuaGFzRXJyb3J8fChuKHRoaXMpLmVtcHR5KCksdC5pc0xvYWRlZD0hMSx0LmlzUmV2ZWFsZWQ9ITEpfSksbihlKS5hcHBlbmRUbyh0LiRzbGlkZSksbihlKS5pcyhcInZpZGVvLGF1ZGlvXCIpJiYobihlKS5hZGRDbGFzcyhcImZhbmN5Ym94LXZpZGVvXCIpLG4oZSkud3JhcChcIjxkaXY+PC9kaXY+XCIpLHQuY29udGVudFR5cGU9XCJ2aWRlb1wiLHQub3B0cy53aWR0aD10Lm9wdHMud2lkdGh8fG4oZSkuYXR0cihcIndpZHRoXCIpLHQub3B0cy5oZWlnaHQ9dC5vcHRzLmhlaWdodHx8bihlKS5hdHRyKFwiaGVpZ2h0XCIpKSx0LiRjb250ZW50PXQuJHNsaWRlLmNoaWxkcmVuKCkuZmlsdGVyKFwiZGl2LGZvcm0sbWFpbix2aWRlbyxhdWRpbyxhcnRpY2xlLC5mYW5jeWJveC1jb250ZW50XCIpLmZpcnN0KCksdC4kY29udGVudC5zaWJsaW5ncygpLmhpZGUoKSx0LiRjb250ZW50Lmxlbmd0aHx8KHQuJGNvbnRlbnQ9dC4kc2xpZGUud3JhcElubmVyKFwiPGRpdj48L2Rpdj5cIikuY2hpbGRyZW4oKS5maXJzdCgpKSx0LiRjb250ZW50LmFkZENsYXNzKFwiZmFuY3lib3gtY29udGVudFwiKSx0LiRzbGlkZS5hZGRDbGFzcyhcImZhbmN5Ym94LXNsaWRlLS1cIit0LmNvbnRlbnRUeXBlKSx0aGlzLmFmdGVyTG9hZCh0KSl9LHNldEVycm9yOmZ1bmN0aW9uKHQpe3QuaGFzRXJyb3I9ITAsdC4kc2xpZGUudHJpZ2dlcihcIm9uUmVzZXRcIikucmVtb3ZlQ2xhc3MoXCJmYW5jeWJveC1zbGlkZS0tXCIrdC5jb250ZW50VHlwZSkuYWRkQ2xhc3MoXCJmYW5jeWJveC1zbGlkZS0tZXJyb3JcIiksdC5jb250ZW50VHlwZT1cImh0bWxcIix0aGlzLnNldENvbnRlbnQodCx0aGlzLnRyYW5zbGF0ZSh0LHQub3B0cy5lcnJvclRwbCkpLHQucG9zPT09dGhpcy5jdXJyUG9zJiYodGhpcy5pc0FuaW1hdGluZz0hMSl9LHNob3dMb2FkaW5nOmZ1bmN0aW9uKHQpe3ZhciBlPXRoaXM7dD10fHxlLmN1cnJlbnQsdCYmIXQuJHNwaW5uZXImJih0LiRzcGlubmVyPW4oZS50cmFuc2xhdGUoZSxlLm9wdHMuc3Bpbm5lclRwbCkpLmFwcGVuZFRvKHQuJHNsaWRlKS5oaWRlKCkuZmFkZUluKCkpfSxoaWRlTG9hZGluZzpmdW5jdGlvbih0KXt2YXIgZT10aGlzO3Q9dHx8ZS5jdXJyZW50LHQmJnQuJHNwaW5uZXImJih0LiRzcGlubmVyLnN0b3AoKS5yZW1vdmUoKSxkZWxldGUgdC4kc3Bpbm5lcil9LGFmdGVyTG9hZDpmdW5jdGlvbih0KXt2YXIgZT10aGlzO2UuaXNDbG9zaW5nfHwodC5pc0xvYWRpbmc9ITEsdC5pc0xvYWRlZD0hMCxlLnRyaWdnZXIoXCJhZnRlckxvYWRcIix0KSxlLmhpZGVMb2FkaW5nKHQpLHQucG9zPT09ZS5jdXJyUG9zJiZlLnVwZGF0ZUN1cnNvcigpLCF0Lm9wdHMuc21hbGxCdG58fHQuJHNtYWxsQnRuJiZ0LiRzbWFsbEJ0bi5sZW5ndGh8fCh0LiRzbWFsbEJ0bj1uKGUudHJhbnNsYXRlKHQsdC5vcHRzLmJ0blRwbC5zbWFsbEJ0bikpLmFwcGVuZFRvKHQuJGNvbnRlbnQpKSx0Lm9wdHMucHJvdGVjdCYmdC4kY29udGVudCYmIXQuaGFzRXJyb3ImJih0LiRjb250ZW50Lm9uKFwiY29udGV4dG1lbnUuZmJcIixmdW5jdGlvbih0KXtyZXR1cm4gMj09dC5idXR0b24mJnQucHJldmVudERlZmF1bHQoKSwhMH0pLFwiaW1hZ2VcIj09PXQudHlwZSYmbignPGRpdiBjbGFzcz1cImZhbmN5Ym94LXNwYWNlYmFsbFwiPjwvZGl2PicpLmFwcGVuZFRvKHQuJGNvbnRlbnQpKSxlLnJldmVhbENvbnRlbnQodCkpfSxyZXZlYWxDb250ZW50OmZ1bmN0aW9uKHQpe3ZhciBlLGEsaSxzLHI9dGhpcyxjPXQuJHNsaWRlLGw9ITEsZD0hMSx1PXIuaXNNb3ZlZCh0KSxmPXQuaXNSZXZlYWxlZDtyZXR1cm4gdC5pc1JldmVhbGVkPSEwLGU9dC5vcHRzW3IuZmlyc3RSdW4/XCJhbmltYXRpb25FZmZlY3RcIjpcInRyYW5zaXRpb25FZmZlY3RcIl0saT10Lm9wdHNbci5maXJzdFJ1bj9cImFuaW1hdGlvbkR1cmF0aW9uXCI6XCJ0cmFuc2l0aW9uRHVyYXRpb25cIl0saT1wYXJzZUludCh0LmZvcmNlZER1cmF0aW9uPT09bz9pOnQuZm9yY2VkRHVyYXRpb24sMTApLHQucG9zPT09ci5jdXJyUG9zJiYodC5pc0NvbXBsZXRlfHwoci5pc0FuaW1hdGluZz0hMCkpLCF1JiZ0LnBvcz09PXIuY3VyclBvcyYmaXx8KGU9ITEpLFwiem9vbVwiPT09ZSYmKHQucG9zPT09ci5jdXJyUG9zJiZpJiZcImltYWdlXCI9PT10LnR5cGUmJiF0Lmhhc0Vycm9yJiYoZD1yLmdldFRodW1iUG9zKHQpKT9sPXIuZ2V0Rml0UG9zKHQpOmU9XCJmYWRlXCIpLFwiem9vbVwiPT09ZT8obC5zY2FsZVg9bC53aWR0aC9kLndpZHRoLGwuc2NhbGVZPWwuaGVpZ2h0L2QuaGVpZ2h0LHM9dC5vcHRzLnpvb21PcGFjaXR5LFwiYXV0b1wiPT1zJiYocz1NYXRoLmFicyh0LndpZHRoL3QuaGVpZ2h0LWQud2lkdGgvZC5oZWlnaHQpPi4xKSxzJiYoZC5vcGFjaXR5PS4xLGwub3BhY2l0eT0xKSxuLmZhbmN5Ym94LnNldFRyYW5zbGF0ZSh0LiRjb250ZW50LnJlbW92ZUNsYXNzKFwiZmFuY3lib3gtaXMtaGlkZGVuXCIpLGQpLHZvaWQgbi5mYW5jeWJveC5hbmltYXRlKHQuJGNvbnRlbnQsbCxpLGZ1bmN0aW9uKCl7ci5pc0FuaW1hdGluZz0hMSxyLmNvbXBsZXRlKCl9KSk6KHIudXBkYXRlU2xpZGUodCksZT8obi5mYW5jeWJveC5zdG9wKGMpLGE9XCJmYW5jeWJveC1hbmltYXRlZCBmYW5jeWJveC1zbGlkZS0tXCIrKHQucG9zPj1yLnByZXZQb3M/XCJuZXh0XCI6XCJwcmV2aW91c1wiKStcIiBmYW5jeWJveC1meC1cIitlLGMucmVtb3ZlQ2xhc3MoXCJmYW5jeWJveC1zbGlkZS0tY3VycmVudFwiKS5hZGRDbGFzcyhhKSx0LiRjb250ZW50LnJlbW92ZUNsYXNzKFwiZmFuY3lib3gtaXMtaGlkZGVuXCIpLGMuaGlkZSgpLnNob3coMCksdm9pZCBuLmZhbmN5Ym94LmFuaW1hdGUoYyxcImZhbmN5Ym94LXNsaWRlLS1jdXJyZW50XCIsaSxmdW5jdGlvbigpe2MucmVtb3ZlQ2xhc3MoYSkucmVtb3ZlQXR0cihcInN0eWxlXCIpLHQucG9zPT09ci5jdXJyUG9zJiZyLmNvbXBsZXRlKCl9LCEwKSk6KHQuJGNvbnRlbnQucmVtb3ZlQ2xhc3MoXCJmYW5jeWJveC1pcy1oaWRkZW5cIiksdm9pZChmfHwhdXx8XCJpbWFnZVwiIT09dC50eXBlfHx0Lmhhc0Vycm9yfHx0LiRjb250ZW50LmhpZGUoKS5mYWRlSW4oXCJmYXN0XCIpKSkpfSxnZXRUaHVtYlBvczpmdW5jdGlvbih0KXt2YXIgbixvPXRoaXMsYT0hMSxpPXQub3B0cy4kdGh1bWIscz1pJiZpLmxlbmd0aCYmaVswXS5vd25lckRvY3VtZW50PT09ZT9pLm9mZnNldCgpOjA7cmV0dXJuIHMmJmgoaSk+PTEwJiYobj1vLiRyZWZzLnN0YWdlLm9mZnNldCgpLGE9e3RvcDpzLnRvcC1uLnRvcCtwYXJzZUZsb2F0KGkuY3NzKFwiYm9yZGVyLXRvcC13aWR0aFwiKXx8MCksbGVmdDpzLmxlZnQtbi5sZWZ0K3BhcnNlRmxvYXQoaS5jc3MoXCJib3JkZXItbGVmdC13aWR0aFwiKXx8MCksd2lkdGg6aS53aWR0aCgpLGhlaWdodDppLmhlaWdodCgpLHNjYWxlWDoxLHNjYWxlWToxfSksYX0sY29tcGxldGU6ZnVuY3Rpb24oKXt2YXIgdCxlPXRoaXMsbz1lLmN1cnJlbnQsYT17fTshZS5pc01vdmVkKCkmJm8uaXNMb2FkZWQmJihvLmlzQ29tcGxldGV8fChvLmlzQ29tcGxldGU9ITAsby4kc2xpZGUuc2libGluZ3MoKS50cmlnZ2VyKFwib25SZXNldFwiKSxlLnByZWxvYWQoXCJpbmxpbmVcIiksZihvLiRzbGlkZSksby4kc2xpZGUuYWRkQ2xhc3MoXCJmYW5jeWJveC1zbGlkZS0tY29tcGxldGVcIiksbi5lYWNoKGUuc2xpZGVzLGZ1bmN0aW9uKHQsbyl7by5wb3M+PWUuY3VyclBvcy0xJiZvLnBvczw9ZS5jdXJyUG9zKzE/YVtvLnBvc109bzpvJiYobi5mYW5jeWJveC5zdG9wKG8uJHNsaWRlKSxvLiRzbGlkZS5vZmYoKS5yZW1vdmUoKSl9KSxlLnNsaWRlcz1hKSxlLmlzQW5pbWF0aW5nPSExLGUudXBkYXRlQ3Vyc29yKCksZS50cmlnZ2VyKFwiYWZ0ZXJTaG93XCIpLG8ub3B0cy52aWRlby5hdXRvU3RhcnQmJm8uJHNsaWRlLmZpbmQoXCJ2aWRlbyxhdWRpb1wiKS5maWx0ZXIoXCI6dmlzaWJsZTpmaXJzdFwiKS50cmlnZ2VyKFwicGxheVwiKS5vbihcImVuZGVkXCIsbi5wcm94eShlLm5leHQsZSkpLG8ub3B0cy5hdXRvRm9jdXMmJlwiaHRtbFwiPT09by5jb250ZW50VHlwZSYmKHQ9by4kY29udGVudC5maW5kKFwiaW5wdXRbYXV0b2ZvY3VzXTplbmFibGVkOnZpc2libGU6Zmlyc3RcIiksdC5sZW5ndGg/dC50cmlnZ2VyKFwiZm9jdXNcIik6ZS5mb2N1cyhudWxsLCEwKSksby4kc2xpZGUuc2Nyb2xsVG9wKDApLnNjcm9sbExlZnQoMCkpfSxwcmVsb2FkOmZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMsbj1lLnNsaWRlc1tlLmN1cnJQb3MrMV0sbz1lLnNsaWRlc1tlLmN1cnJQb3MtMV07byYmby50eXBlPT09dCYmZS5sb2FkU2xpZGUobyksbiYmbi50eXBlPT09dCYmZS5sb2FkU2xpZGUobil9LGZvY3VzOmZ1bmN0aW9uKHQsbyl7dmFyIGEsaSxzPXRoaXMscj1bXCJhW2hyZWZdXCIsXCJhcmVhW2hyZWZdXCIsJ2lucHV0Om5vdChbZGlzYWJsZWRdKTpub3QoW3R5cGU9XCJoaWRkZW5cIl0pOm5vdChbYXJpYS1oaWRkZW5dKScsXCJzZWxlY3Q6bm90KFtkaXNhYmxlZF0pOm5vdChbYXJpYS1oaWRkZW5dKVwiLFwidGV4dGFyZWE6bm90KFtkaXNhYmxlZF0pOm5vdChbYXJpYS1oaWRkZW5dKVwiLFwiYnV0dG9uOm5vdChbZGlzYWJsZWRdKTpub3QoW2FyaWEtaGlkZGVuXSlcIixcImlmcmFtZVwiLFwib2JqZWN0XCIsXCJlbWJlZFwiLFwiW2NvbnRlbnRlZGl0YWJsZV1cIiwnW3RhYmluZGV4XTpub3QoW3RhYmluZGV4Xj1cIi1cIl0pJ10uam9pbihcIixcIik7cy5pc0Nsb3Npbmd8fChhPSF0JiZzLmN1cnJlbnQmJnMuY3VycmVudC5pc0NvbXBsZXRlP3MuY3VycmVudC4kc2xpZGUuZmluZChcIio6dmlzaWJsZVwiKyhvP1wiOm5vdCguZmFuY3lib3gtY2xvc2Utc21hbGwpXCI6XCJcIikpOnMuJHJlZnMuY29udGFpbmVyLmZpbmQoXCIqOnZpc2libGVcIiksYT1hLmZpbHRlcihyKS5maWx0ZXIoZnVuY3Rpb24oKXtyZXR1cm5cImhpZGRlblwiIT09bih0aGlzKS5jc3MoXCJ2aXNpYmlsaXR5XCIpJiYhbih0aGlzKS5oYXNDbGFzcyhcImRpc2FibGVkXCIpfSksYS5sZW5ndGg/KGk9YS5pbmRleChlLmFjdGl2ZUVsZW1lbnQpLHQmJnQuc2hpZnRLZXk/KGk8MHx8MD09aSkmJih0LnByZXZlbnREZWZhdWx0KCksYS5lcShhLmxlbmd0aC0xKS50cmlnZ2VyKFwiZm9jdXNcIikpOihpPDB8fGk9PWEubGVuZ3RoLTEpJiYodCYmdC5wcmV2ZW50RGVmYXVsdCgpLGEuZXEoMCkudHJpZ2dlcihcImZvY3VzXCIpKSk6cy4kcmVmcy5jb250YWluZXIudHJpZ2dlcihcImZvY3VzXCIpKX0sYWN0aXZhdGU6ZnVuY3Rpb24oKXt2YXIgdD10aGlzO24oXCIuZmFuY3lib3gtY29udGFpbmVyXCIpLmVhY2goZnVuY3Rpb24oKXt2YXIgZT1uKHRoaXMpLmRhdGEoXCJGYW5jeUJveFwiKTtlJiZlLmlkIT09dC5pZCYmIWUuaXNDbG9zaW5nJiYoZS50cmlnZ2VyKFwib25EZWFjdGl2YXRlXCIpLGUucmVtb3ZlRXZlbnRzKCksZS5pc1Zpc2libGU9ITEpfSksdC5pc1Zpc2libGU9ITAsKHQuY3VycmVudHx8dC5pc0lkbGUpJiYodC51cGRhdGUoKSx0LnVwZGF0ZUNvbnRyb2xzKCkpLHQudHJpZ2dlcihcIm9uQWN0aXZhdGVcIiksdC5hZGRFdmVudHMoKX0sY2xvc2U6ZnVuY3Rpb24odCxlKXt2YXIgbyxhLGkscyxyLGMsbCxwPXRoaXMsaD1wLmN1cnJlbnQsZz1mdW5jdGlvbigpe3AuY2xlYW5VcCh0KX07cmV0dXJuIXAuaXNDbG9zaW5nJiYocC5pc0Nsb3Npbmc9ITAscC50cmlnZ2VyKFwiYmVmb3JlQ2xvc2VcIix0KT09PSExPyhwLmlzQ2xvc2luZz0hMSxkKGZ1bmN0aW9uKCl7cC51cGRhdGUoKX0pLCExKToocC5yZW1vdmVFdmVudHMoKSxpPWguJGNvbnRlbnQsbz1oLm9wdHMuYW5pbWF0aW9uRWZmZWN0LGE9bi5pc051bWVyaWMoZSk/ZTpvP2gub3B0cy5hbmltYXRpb25EdXJhdGlvbjowLGguJHNsaWRlLm9mZih1KS5yZW1vdmVDbGFzcyhcImZhbmN5Ym94LXNsaWRlLS1jb21wbGV0ZSBmYW5jeWJveC1zbGlkZS0tbmV4dCBmYW5jeWJveC1zbGlkZS0tcHJldmlvdXMgZmFuY3lib3gtYW5pbWF0ZWRcIiksaC4kc2xpZGUuc2libGluZ3MoKS50cmlnZ2VyKFwib25SZXNldFwiKS5yZW1vdmUoKSxhJiZwLiRyZWZzLmNvbnRhaW5lci5yZW1vdmVDbGFzcyhcImZhbmN5Ym94LWlzLW9wZW5cIikuYWRkQ2xhc3MoXCJmYW5jeWJveC1pcy1jbG9zaW5nXCIpLHAuaGlkZUxvYWRpbmcoaCkscC5oaWRlQ29udHJvbHMoKSxwLnVwZGF0ZUN1cnNvcigpLFwiem9vbVwiIT09b3x8dCE9PSEwJiZpJiZhJiZcImltYWdlXCI9PT1oLnR5cGUmJiFoLmhhc0Vycm9yJiYobD1wLmdldFRodW1iUG9zKGgpKXx8KG89XCJmYWRlXCIpLFwiem9vbVwiPT09bz8obi5mYW5jeWJveC5zdG9wKGkpLHM9bi5mYW5jeWJveC5nZXRUcmFuc2xhdGUoaSksYz17dG9wOnMudG9wLGxlZnQ6cy5sZWZ0LHNjYWxlWDpzLndpZHRoL2wud2lkdGgsc2NhbGVZOnMuaGVpZ2h0L2wuaGVpZ2h0LHdpZHRoOmwud2lkdGgsaGVpZ2h0OmwuaGVpZ2h0fSxyPWgub3B0cy56b29tT3BhY2l0eSxcImF1dG9cIj09ciYmKHI9TWF0aC5hYnMoaC53aWR0aC9oLmhlaWdodC1sLndpZHRoL2wuaGVpZ2h0KT4uMSksciYmKGwub3BhY2l0eT0wKSxuLmZhbmN5Ym94LnNldFRyYW5zbGF0ZShpLGMpLGYoaSksbi5mYW5jeWJveC5hbmltYXRlKGksbCxhLGcpLCEwKToobyYmYT90PT09ITA/c2V0VGltZW91dChnLGEpOm4uZmFuY3lib3guYW5pbWF0ZShoLiRzbGlkZS5yZW1vdmVDbGFzcyhcImZhbmN5Ym94LXNsaWRlLS1jdXJyZW50XCIpLFwiZmFuY3lib3gtYW5pbWF0ZWQgZmFuY3lib3gtc2xpZGUtLXByZXZpb3VzIGZhbmN5Ym94LWZ4LVwiK28sYSxnKTpnKCksITApKSl9LGNsZWFuVXA6ZnVuY3Rpb24oZSl7dmFyIG8sYSxpLHM9dGhpcyxyPXMuY3VycmVudC5vcHRzLiRvcmlnO3MuY3VycmVudC4kc2xpZGUudHJpZ2dlcihcIm9uUmVzZXRcIikscy4kcmVmcy5jb250YWluZXIuZW1wdHkoKS5yZW1vdmUoKSxzLnRyaWdnZXIoXCJhZnRlckNsb3NlXCIsZSkscy5jdXJyZW50Lm9wdHMuYmFja0ZvY3VzJiYociYmci5sZW5ndGgmJnIuaXMoXCI6dmlzaWJsZVwiKXx8KHI9cy4kdHJpZ2dlciksciYmci5sZW5ndGgmJihhPXQuc2Nyb2xsWCxpPXQuc2Nyb2xsWSxyLnRyaWdnZXIoXCJmb2N1c1wiKSxuKFwiaHRtbCwgYm9keVwiKS5zY3JvbGxUb3AoaSkuc2Nyb2xsTGVmdChhKSkpLHMuY3VycmVudD1udWxsLG89bi5mYW5jeWJveC5nZXRJbnN0YW5jZSgpLG8/by5hY3RpdmF0ZSgpOihuKFwiYm9keVwiKS5yZW1vdmVDbGFzcyhcImZhbmN5Ym94LWFjdGl2ZSBjb21wZW5zYXRlLWZvci1zY3JvbGxiYXJcIiksbihcIiNmYW5jeWJveC1zdHlsZS1ub3Njcm9sbFwiKS5yZW1vdmUoKSl9LHRyaWdnZXI6ZnVuY3Rpb24odCxlKXt2YXIgbyxhPUFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGFyZ3VtZW50cywxKSxpPXRoaXMscz1lJiZlLm9wdHM/ZTppLmN1cnJlbnQ7cmV0dXJuIHM/YS51bnNoaWZ0KHMpOnM9aSxhLnVuc2hpZnQoaSksbi5pc0Z1bmN0aW9uKHMub3B0c1t0XSkmJihvPXMub3B0c1t0XS5hcHBseShzLGEpKSxvPT09ITE/bzp2b2lkKFwiYWZ0ZXJDbG9zZVwiIT09dCYmaS4kcmVmcz9pLiRyZWZzLmNvbnRhaW5lci50cmlnZ2VyKHQrXCIuZmJcIixhKTpyLnRyaWdnZXIodCtcIi5mYlwiLGEpKX0sdXBkYXRlQ29udHJvbHM6ZnVuY3Rpb24oKXt2YXIgdD10aGlzLG89dC5jdXJyZW50LGE9by5pbmRleCxpPW8ub3B0cy5jYXB0aW9uLHM9dC4kcmVmcy5jb250YWluZXIscj10LiRyZWZzLmNhcHRpb247by4kc2xpZGUudHJpZ2dlcihcInJlZnJlc2hcIiksdC4kY2FwdGlvbj1pJiZpLmxlbmd0aD9yLmh0bWwoaSk6bnVsbCx0LmlzSGlkZGVuQ29udHJvbHN8fHQuaXNJZGxlfHx0LnNob3dDb250cm9scygpLHMuZmluZChcIltkYXRhLWZhbmN5Ym94LWNvdW50XVwiKS5odG1sKHQuZ3JvdXAubGVuZ3RoKSxzLmZpbmQoXCJbZGF0YS1mYW5jeWJveC1pbmRleF1cIikuaHRtbChhKzEpLHMuZmluZChcIltkYXRhLWZhbmN5Ym94LXByZXZdXCIpLnByb3AoXCJkaXNhYmxlZFwiLCFvLm9wdHMubG9vcCYmYTw9MCkscy5maW5kKFwiW2RhdGEtZmFuY3lib3gtbmV4dF1cIikucHJvcChcImRpc2FibGVkXCIsIW8ub3B0cy5sb29wJiZhPj10Lmdyb3VwLmxlbmd0aC0xKSxcImltYWdlXCI9PT1vLnR5cGU/cy5maW5kKFwiW2RhdGEtZmFuY3lib3gtem9vbV1cIikuc2hvdygpLmVuZCgpLmZpbmQoXCJbZGF0YS1mYW5jeWJveC1kb3dubG9hZF1cIikuYXR0cihcImhyZWZcIixvLm9wdHMuaW1hZ2Uuc3JjfHxvLnNyYykuc2hvdygpOm8ub3B0cy50b29sYmFyJiZzLmZpbmQoXCJbZGF0YS1mYW5jeWJveC1kb3dubG9hZF0sW2RhdGEtZmFuY3lib3gtem9vbV1cIikuaGlkZSgpLG4oZS5hY3RpdmVFbGVtZW50KS5pcyhcIjpoaWRkZW4sW2Rpc2FibGVkXVwiKSYmdC4kcmVmcy5jb250YWluZXIudHJpZ2dlcihcImZvY3VzXCIpfSxoaWRlQ29udHJvbHM6ZnVuY3Rpb24oKXt0aGlzLmlzSGlkZGVuQ29udHJvbHM9ITAsdGhpcy4kcmVmcy5jb250YWluZXIucmVtb3ZlQ2xhc3MoXCJmYW5jeWJveC1zaG93LWluZm9iYXIgZmFuY3lib3gtc2hvdy10b29sYmFyIGZhbmN5Ym94LXNob3ctY2FwdGlvbiBmYW5jeWJveC1zaG93LW5hdlwiKX0sc2hvd0NvbnRyb2xzOmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcyxlPXQuY3VycmVudD90LmN1cnJlbnQub3B0czp0Lm9wdHMsbj10LiRyZWZzLmNvbnRhaW5lcjt0LmlzSGlkZGVuQ29udHJvbHM9ITEsXHJcbnQuaWRsZVNlY29uZHNDb3VudGVyPTAsbi50b2dnbGVDbGFzcyhcImZhbmN5Ym94LXNob3ctdG9vbGJhclwiLCEoIWUudG9vbGJhcnx8IWUuYnV0dG9ucykpLnRvZ2dsZUNsYXNzKFwiZmFuY3lib3gtc2hvdy1pbmZvYmFyXCIsISEoZS5pbmZvYmFyJiZ0Lmdyb3VwLmxlbmd0aD4xKSkudG9nZ2xlQ2xhc3MoXCJmYW5jeWJveC1zaG93LWNhcHRpb25cIiwhIXQuJGNhcHRpb24pLnRvZ2dsZUNsYXNzKFwiZmFuY3lib3gtc2hvdy1uYXZcIiwhIShlLmFycm93cyYmdC5ncm91cC5sZW5ndGg+MSkpLnRvZ2dsZUNsYXNzKFwiZmFuY3lib3gtaXMtbW9kYWxcIiwhIWUubW9kYWwpfSx0b2dnbGVDb250cm9sczpmdW5jdGlvbigpe3RoaXMuaXNIaWRkZW5Db250cm9scz90aGlzLnNob3dDb250cm9scygpOnRoaXMuaGlkZUNvbnRyb2xzKCl9fSksbi5mYW5jeWJveD17dmVyc2lvbjpcIjMuNC4yXCIsZGVmYXVsdHM6aSxnZXRJbnN0YW5jZTpmdW5jdGlvbih0KXt2YXIgZT1uKCcuZmFuY3lib3gtY29udGFpbmVyOm5vdChcIi5mYW5jeWJveC1pcy1jbG9zaW5nXCIpOmxhc3QnKS5kYXRhKFwiRmFuY3lCb3hcIiksbz1BcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChhcmd1bWVudHMsMSk7cmV0dXJuIGUgaW5zdGFuY2VvZiBnJiYoXCJzdHJpbmdcIj09PW4udHlwZSh0KT9lW3RdLmFwcGx5KGUsbyk6XCJmdW5jdGlvblwiPT09bi50eXBlKHQpJiZ0LmFwcGx5KGUsbyksZSl9LG9wZW46ZnVuY3Rpb24odCxlLG4pe3JldHVybiBuZXcgZyh0LGUsbil9LGNsb3NlOmZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMuZ2V0SW5zdGFuY2UoKTtlJiYoZS5jbG9zZSgpLHQ9PT0hMCYmdGhpcy5jbG9zZSh0KSl9LGRlc3Ryb3k6ZnVuY3Rpb24oKXt0aGlzLmNsb3NlKCEwKSxyLmFkZChcImJvZHlcIikub2ZmKFwiY2xpY2suZmItc3RhcnRcIixcIioqXCIpfSxpc01vYmlsZTovQW5kcm9pZHx3ZWJPU3xpUGhvbmV8aVBhZHxpUG9kfEJsYWNrQmVycnl8SUVNb2JpbGV8T3BlcmEgTWluaS9pLnRlc3QobmF2aWdhdG9yLnVzZXJBZ2VudCksdXNlM2Q6ZnVuY3Rpb24oKXt2YXIgbj1lLmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7cmV0dXJuIHQuZ2V0Q29tcHV0ZWRTdHlsZSYmdC5nZXRDb21wdXRlZFN0eWxlKG4pJiZ0LmdldENvbXB1dGVkU3R5bGUobikuZ2V0UHJvcGVydHlWYWx1ZShcInRyYW5zZm9ybVwiKSYmIShlLmRvY3VtZW50TW9kZSYmZS5kb2N1bWVudE1vZGU8MTEpfSgpLGdldFRyYW5zbGF0ZTpmdW5jdGlvbih0KXt2YXIgZTtyZXR1cm4hKCF0fHwhdC5sZW5ndGgpJiYoZT10WzBdLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpLHt0b3A6ZS50b3B8fDAsbGVmdDplLmxlZnR8fDAsd2lkdGg6ZS53aWR0aCxoZWlnaHQ6ZS5oZWlnaHQsb3BhY2l0eTpwYXJzZUZsb2F0KHQuY3NzKFwib3BhY2l0eVwiKSl9KX0sc2V0VHJhbnNsYXRlOmZ1bmN0aW9uKHQsZSl7dmFyIG49XCJcIixhPXt9O2lmKHQmJmUpcmV0dXJuIGUubGVmdD09PW8mJmUudG9wPT09b3x8KG49KGUubGVmdD09PW8/dC5wb3NpdGlvbigpLmxlZnQ6ZS5sZWZ0KStcInB4LCBcIisoZS50b3A9PT1vP3QucG9zaXRpb24oKS50b3A6ZS50b3ApK1wicHhcIixuPXRoaXMudXNlM2Q/XCJ0cmFuc2xhdGUzZChcIituK1wiLCAwcHgpXCI6XCJ0cmFuc2xhdGUoXCIrbitcIilcIiksZS5zY2FsZVghPT1vJiZlLnNjYWxlWSE9PW8/bis9XCIgc2NhbGUoXCIrZS5zY2FsZVgrXCIsIFwiK2Uuc2NhbGVZK1wiKVwiOmUuc2NhbGVYIT09byYmKG4rPVwiIHNjYWxlWChcIitlLnNjYWxlWCtcIilcIiksbi5sZW5ndGgmJihhLnRyYW5zZm9ybT1uKSxlLm9wYWNpdHkhPT1vJiYoYS5vcGFjaXR5PWUub3BhY2l0eSksZS53aWR0aCE9PW8mJihhLndpZHRoPWUud2lkdGgpLGUuaGVpZ2h0IT09byYmKGEuaGVpZ2h0PWUuaGVpZ2h0KSx0LmNzcyhhKX0sYW5pbWF0ZTpmdW5jdGlvbih0LGUsYSxpLHMpe3ZhciByLGM9dGhpcyxsPSExO24uaXNGdW5jdGlvbihhKSYmKGk9YSxhPW51bGwpLG4uaXNQbGFpbk9iamVjdChlKXx8dC5yZW1vdmVBdHRyKFwic3R5bGVcIiksYy5zdG9wKHQpLHQub24odSxmdW5jdGlvbihvKXsoIW98fCFvLm9yaWdpbmFsRXZlbnR8fHQuaXMoby5vcmlnaW5hbEV2ZW50LnRhcmdldCkmJlwiei1pbmRleFwiIT1vLm9yaWdpbmFsRXZlbnQucHJvcGVydHlOYW1lKSYmKGMuc3RvcCh0KSxsJiZjLnNldFRyYW5zbGF0ZSh0LGwpLG4uaXNOdW1lcmljKGEpJiZ0LmNzcyhcInRyYW5zaXRpb24tZHVyYXRpb25cIixcIlwiKSxuLmlzUGxhaW5PYmplY3QoZSk/cz09PSExJiZ0LnJlbW92ZUF0dHIoXCJzdHlsZVwiKTpzIT09ITAmJnQucmVtb3ZlQ2xhc3MoZSksbi5pc0Z1bmN0aW9uKGkpJiZpKG8pKX0pLG4uaXNOdW1lcmljKGEpJiZ0LmNzcyhcInRyYW5zaXRpb24tZHVyYXRpb25cIixhK1wibXNcIiksbi5pc1BsYWluT2JqZWN0KGUpPyhlLnNjYWxlWCE9PW8mJmUuc2NhbGVZIT09byYmKHI9bi5mYW5jeWJveC5nZXRUcmFuc2xhdGUodCksbD1uLmV4dGVuZCh7fSxlLHt3aWR0aDpyLndpZHRoKmUuc2NhbGVYLGhlaWdodDpyLmhlaWdodCplLnNjYWxlWSxzY2FsZVg6MSxzY2FsZVk6MX0pLGRlbGV0ZSBlLndpZHRoLGRlbGV0ZSBlLmhlaWdodCx0LnBhcmVudCgpLmhhc0NsYXNzKFwiZmFuY3lib3gtc2xpZGUtLWltYWdlXCIpJiZ0LnBhcmVudCgpLmFkZENsYXNzKFwiZmFuY3lib3gtaXMtc2NhbGluZ1wiKSksbi5mYW5jeWJveC5zZXRUcmFuc2xhdGUodCxlKSk6dC5hZGRDbGFzcyhlKSx0LmRhdGEoXCJ0aW1lclwiLHNldFRpbWVvdXQoZnVuY3Rpb24oKXt0LnRyaWdnZXIoXCJ0cmFuc2l0aW9uZW5kXCIpfSxhKzE2KSl9LHN0b3A6ZnVuY3Rpb24odCxlKXt0JiZ0Lmxlbmd0aCYmKGNsZWFyVGltZW91dCh0LmRhdGEoXCJ0aW1lclwiKSksZSYmdC50cmlnZ2VyKHUpLHQub2ZmKHUpLmNzcyhcInRyYW5zaXRpb24tZHVyYXRpb25cIixcIlwiKSx0LnBhcmVudCgpLnJlbW92ZUNsYXNzKFwiZmFuY3lib3gtaXMtc2NhbGluZ1wiKSl9fSxuLmZuLmZhbmN5Ym94PWZ1bmN0aW9uKHQpe3ZhciBlO3JldHVybiB0PXR8fHt9LGU9dC5zZWxlY3Rvcnx8ITEsZT9uKFwiYm9keVwiKS5vZmYoXCJjbGljay5mYi1zdGFydFwiLGUpLm9uKFwiY2xpY2suZmItc3RhcnRcIixlLHtvcHRpb25zOnR9LGEpOnRoaXMub2ZmKFwiY2xpY2suZmItc3RhcnRcIikub24oXCJjbGljay5mYi1zdGFydFwiLHtpdGVtczp0aGlzLG9wdGlvbnM6dH0sYSksdGhpc30sci5vbihcImNsaWNrLmZiLXN0YXJ0XCIsXCJbZGF0YS1mYW5jeWJveF1cIixhKSxyLm9uKFwiY2xpY2suZmItc3RhcnRcIixcIltkYXRhLWZhbmN5Ym94LXRyaWdnZXJdXCIsZnVuY3Rpb24odCl7bignW2RhdGEtZmFuY3lib3g9XCInK24odGhpcykuYXR0cihcImRhdGEtZmFuY3lib3gtdHJpZ2dlclwiKSsnXCJdJykuZXEobih0aGlzKS5hdHRyKFwiZGF0YS1mYW5jeWJveC1pbmRleFwiKXx8MCkudHJpZ2dlcihcImNsaWNrLmZiLXN0YXJ0XCIseyR0cmlnZ2VyOm4odGhpcyl9KX0pLGZ1bmN0aW9uKCl7dmFyIHQ9XCIuZmFuY3lib3gtYnV0dG9uXCIsZT1cImZhbmN5Ym94LWZvY3VzXCIsbz1udWxsO3Iub24oXCJtb3VzZWRvd24gbW91c2V1cCBmb2N1cyBibHVyXCIsdCxmdW5jdGlvbihhKXtzd2l0Y2goYS50eXBlKXtjYXNlXCJtb3VzZWRvd25cIjpvPW4odGhpcyk7YnJlYWs7Y2FzZVwibW91c2V1cFwiOm89bnVsbDticmVhaztjYXNlXCJmb2N1c2luXCI6bih0KS5yZW1vdmVDbGFzcyhlKSxuKHRoaXMpLmlzKG8pfHxuKHRoaXMpLmlzKFwiW2Rpc2FibGVkXVwiKXx8bih0aGlzKS5hZGRDbGFzcyhlKTticmVhaztjYXNlXCJmb2N1c291dFwiOm4odCkucmVtb3ZlQ2xhc3MoZSl9fSl9KCl9fSh3aW5kb3csZG9jdW1lbnQsalF1ZXJ5KSxmdW5jdGlvbih0KXtcInVzZSBzdHJpY3RcIjt2YXIgZT17eW91dHViZTp7bWF0Y2hlcjovKHlvdXR1YmVcXC5jb218eW91dHVcXC5iZXx5b3V0dWJlXFwtbm9jb29raWVcXC5jb20pXFwvKHdhdGNoXFw/KC4qJik/dj18dlxcL3x1XFwvfGVtYmVkXFwvPyk/KHZpZGVvc2VyaWVzXFw/bGlzdD0oLiopfFtcXHctXXsxMX18XFw/bGlzdFR5cGU9KC4qKSZsaXN0PSguKikpKC4qKS9pLHBhcmFtczp7YXV0b3BsYXk6MSxhdXRvaGlkZToxLGZzOjEscmVsOjAsaGQ6MSx3bW9kZTpcInRyYW5zcGFyZW50XCIsZW5hYmxlanNhcGk6MSxodG1sNToxfSxwYXJhbVBsYWNlOjgsdHlwZTpcImlmcmFtZVwiLHVybDpcIi8vd3d3LnlvdXR1YmUtbm9jb29raWUuY29tL2VtYmVkLyQ0XCIsdGh1bWI6XCIvL2ltZy55b3V0dWJlLmNvbS92aS8kNC9ocWRlZmF1bHQuanBnXCJ9LHZpbWVvOnttYXRjaGVyOi9eLit2aW1lby5jb21cXC8oLipcXC8pPyhbXFxkXSspKC4qKT8vLHBhcmFtczp7YXV0b3BsYXk6MSxoZDoxLHNob3dfdGl0bGU6MSxzaG93X2J5bGluZToxLHNob3dfcG9ydHJhaXQ6MCxmdWxsc2NyZWVuOjF9LHBhcmFtUGxhY2U6Myx0eXBlOlwiaWZyYW1lXCIsdXJsOlwiLy9wbGF5ZXIudmltZW8uY29tL3ZpZGVvLyQyXCJ9LGluc3RhZ3JhbTp7bWF0Y2hlcjovKGluc3RhZ3JcXC5hbXxpbnN0YWdyYW1cXC5jb20pXFwvcFxcLyhbYS16QS1aMC05X1xcLV0rKVxcLz8vaSx0eXBlOlwiaW1hZ2VcIix1cmw6XCIvLyQxL3AvJDIvbWVkaWEvP3NpemU9bFwifSxnbWFwX3BsYWNlOnttYXRjaGVyOi8obWFwc1xcLik/Z29vZ2xlXFwuKFthLXpdezIsM30oXFwuW2Etel17Mn0pPylcXC8oKChtYXBzXFwvKHBsYWNlXFwvKC4qKVxcLyk/XFxAKC4qKSwoXFxkKy4/XFxkKz8peikpfChcXD9sbD0pKSguKik/L2ksdHlwZTpcImlmcmFtZVwiLHVybDpmdW5jdGlvbih0KXtyZXR1cm5cIi8vbWFwcy5nb29nbGUuXCIrdFsyXStcIi8/bGw9XCIrKHRbOV0/dFs5XStcIiZ6PVwiK01hdGguZmxvb3IodFsxMF0pKyh0WzEyXT90WzEyXS5yZXBsYWNlKC9eXFwvLyxcIiZcIik6XCJcIik6dFsxMl0rXCJcIikucmVwbGFjZSgvXFw/LyxcIiZcIikrXCImb3V0cHV0PVwiKyh0WzEyXSYmdFsxMl0uaW5kZXhPZihcImxheWVyPWNcIik+MD9cInN2ZW1iZWRcIjpcImVtYmVkXCIpfX0sZ21hcF9zZWFyY2g6e21hdGNoZXI6LyhtYXBzXFwuKT9nb29nbGVcXC4oW2Etel17MiwzfShcXC5bYS16XXsyfSk/KVxcLyhtYXBzXFwvc2VhcmNoXFwvKSguKikvaSx0eXBlOlwiaWZyYW1lXCIsdXJsOmZ1bmN0aW9uKHQpe3JldHVyblwiLy9tYXBzLmdvb2dsZS5cIit0WzJdK1wiL21hcHM/cT1cIit0WzVdLnJlcGxhY2UoXCJxdWVyeT1cIixcInE9XCIpLnJlcGxhY2UoXCJhcGk9MVwiLFwiXCIpK1wiJm91dHB1dD1lbWJlZFwifX19LG49ZnVuY3Rpb24oZSxuLG8pe2lmKGUpcmV0dXJuIG89b3x8XCJcIixcIm9iamVjdFwiPT09dC50eXBlKG8pJiYobz10LnBhcmFtKG8sITApKSx0LmVhY2gobixmdW5jdGlvbih0LG4pe2U9ZS5yZXBsYWNlKFwiJFwiK3Qsbnx8XCJcIil9KSxvLmxlbmd0aCYmKGUrPShlLmluZGV4T2YoXCI/XCIpPjA/XCImXCI6XCI/XCIpK28pLGV9O3QoZG9jdW1lbnQpLm9uKFwib2JqZWN0TmVlZHNUeXBlLmZiXCIsZnVuY3Rpb24obyxhLGkpe3ZhciBzLHIsYyxsLGQsdSxmLHA9aS5zcmN8fFwiXCIsaD0hMTtzPXQuZXh0ZW5kKCEwLHt9LGUsaS5vcHRzLm1lZGlhKSx0LmVhY2gocyxmdW5jdGlvbihlLG8pe2lmKGM9cC5tYXRjaChvLm1hdGNoZXIpKXtpZihoPW8udHlwZSxmPWUsdT17fSxvLnBhcmFtUGxhY2UmJmNbby5wYXJhbVBsYWNlXSl7ZD1jW28ucGFyYW1QbGFjZV0sXCI/XCI9PWRbMF0mJihkPWQuc3Vic3RyaW5nKDEpKSxkPWQuc3BsaXQoXCImXCIpO2Zvcih2YXIgYT0wO2E8ZC5sZW5ndGg7KythKXt2YXIgcz1kW2FdLnNwbGl0KFwiPVwiLDIpOzI9PXMubGVuZ3RoJiYodVtzWzBdXT1kZWNvZGVVUklDb21wb25lbnQoc1sxXS5yZXBsYWNlKC9cXCsvZyxcIiBcIikpKX19cmV0dXJuIGw9dC5leHRlbmQoITAse30sby5wYXJhbXMsaS5vcHRzW2VdLHUpLHA9XCJmdW5jdGlvblwiPT09dC50eXBlKG8udXJsKT9vLnVybC5jYWxsKHRoaXMsYyxsLGkpOm4oby51cmwsYyxsKSxyPVwiZnVuY3Rpb25cIj09PXQudHlwZShvLnRodW1iKT9vLnRodW1iLmNhbGwodGhpcyxjLGwsaSk6bihvLnRodW1iLGMpLFwieW91dHViZVwiPT09ZT9wPXAucmVwbGFjZSgvJnQ9KChcXGQrKW0pPyhcXGQrKXMvLGZ1bmN0aW9uKHQsZSxuLG8pe3JldHVyblwiJnN0YXJ0PVwiKygobj82MCpwYXJzZUludChuLDEwKTowKStwYXJzZUludChvLDEwKSl9KTpcInZpbWVvXCI9PT1lJiYocD1wLnJlcGxhY2UoXCImJTIzXCIsXCIjXCIpKSwhMX19KSxoPyhpLm9wdHMudGh1bWJ8fGkub3B0cy4kdGh1bWImJmkub3B0cy4kdGh1bWIubGVuZ3RofHwoaS5vcHRzLnRodW1iPXIpLFwiaWZyYW1lXCI9PT1oJiYoaS5vcHRzPXQuZXh0ZW5kKCEwLGkub3B0cyx7aWZyYW1lOntwcmVsb2FkOiExLGF0dHI6e3Njcm9sbGluZzpcIm5vXCJ9fX0pKSx0LmV4dGVuZChpLHt0eXBlOmgsc3JjOnAsb3JpZ1NyYzppLnNyYyxjb250ZW50U291cmNlOmYsY29udGVudFR5cGU6XCJpbWFnZVwiPT09aD9cImltYWdlXCI6XCJnbWFwX3BsYWNlXCI9PWZ8fFwiZ21hcF9zZWFyY2hcIj09Zj9cIm1hcFwiOlwidmlkZW9cIn0pKTpwJiYoaS50eXBlPWkub3B0cy5kZWZhdWx0VHlwZSl9KTt2YXIgbz17eW91dHViZTp7c3JjOlwiaHR0cHM6Ly93d3cueW91dHViZS5jb20vaWZyYW1lX2FwaVwiLGNsYXNzOlwiWVRcIixsb2FkaW5nOiExLGxvYWRlZDohMX0sdmltZW86e3NyYzpcImh0dHBzOi8vcGxheWVyLnZpbWVvLmNvbS9hcGkvcGxheWVyLmpzXCIsY2xhc3M6XCJWaW1lb1wiLGxvYWRpbmc6ITEsbG9hZGVkOiExfSxsb2FkOmZ1bmN0aW9uKHQpe3ZhciBlLG49dGhpcztyZXR1cm4gdGhpc1t0XS5sb2FkZWQ/dm9pZCBzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7bi5kb25lKHQpfSk6dm9pZCh0aGlzW3RdLmxvYWRpbmd8fCh0aGlzW3RdLmxvYWRpbmc9ITAsZT1kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwic2NyaXB0XCIpLGUudHlwZT1cInRleHQvamF2YXNjcmlwdFwiLGUuc3JjPXRoaXNbdF0uc3JjLFwieW91dHViZVwiPT09dD93aW5kb3cub25Zb3VUdWJlSWZyYW1lQVBJUmVhZHk9ZnVuY3Rpb24oKXtuW3RdLmxvYWRlZD0hMCxuLmRvbmUodCl9OmUub25sb2FkPWZ1bmN0aW9uKCl7blt0XS5sb2FkZWQ9ITAsbi5kb25lKHQpfSxkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKGUpKSl9LGRvbmU6ZnVuY3Rpb24oZSl7dmFyIG4sbyxhO1wieW91dHViZVwiPT09ZSYmZGVsZXRlIHdpbmRvdy5vbllvdVR1YmVJZnJhbWVBUElSZWFkeSxuPXQuZmFuY3lib3guZ2V0SW5zdGFuY2UoKSxuJiYobz1uLmN1cnJlbnQuJGNvbnRlbnQuZmluZChcImlmcmFtZVwiKSxcInlvdXR1YmVcIj09PWUmJnZvaWQgMCE9PVlUJiZZVD9hPW5ldyBZVC5QbGF5ZXIoby5hdHRyKFwiaWRcIikse2V2ZW50czp7b25TdGF0ZUNoYW5nZTpmdW5jdGlvbih0KXswPT10LmRhdGEmJm4ubmV4dCgpfX19KTpcInZpbWVvXCI9PT1lJiZ2b2lkIDAhPT1WaW1lbyYmVmltZW8mJihhPW5ldyBWaW1lby5QbGF5ZXIobyksYS5vbihcImVuZGVkXCIsZnVuY3Rpb24oKXtuLm5leHQoKX0pKSl9fTt0KGRvY3VtZW50KS5vbih7XCJhZnRlclNob3cuZmJcIjpmdW5jdGlvbih0LGUsbil7ZS5ncm91cC5sZW5ndGg+MSYmKFwieW91dHViZVwiPT09bi5jb250ZW50U291cmNlfHxcInZpbWVvXCI9PT1uLmNvbnRlbnRTb3VyY2UpJiZvLmxvYWQobi5jb250ZW50U291cmNlKX19KX0oalF1ZXJ5KSxmdW5jdGlvbih0LGUsbil7XCJ1c2Ugc3RyaWN0XCI7dmFyIG89ZnVuY3Rpb24oKXtyZXR1cm4gdC5yZXF1ZXN0QW5pbWF0aW9uRnJhbWV8fHQud2Via2l0UmVxdWVzdEFuaW1hdGlvbkZyYW1lfHx0Lm1velJlcXVlc3RBbmltYXRpb25GcmFtZXx8dC5vUmVxdWVzdEFuaW1hdGlvbkZyYW1lfHxmdW5jdGlvbihlKXtyZXR1cm4gdC5zZXRUaW1lb3V0KGUsMWUzLzYwKX19KCksYT1mdW5jdGlvbigpe3JldHVybiB0LmNhbmNlbEFuaW1hdGlvbkZyYW1lfHx0LndlYmtpdENhbmNlbEFuaW1hdGlvbkZyYW1lfHx0Lm1vekNhbmNlbEFuaW1hdGlvbkZyYW1lfHx0Lm9DYW5jZWxBbmltYXRpb25GcmFtZXx8ZnVuY3Rpb24oZSl7dC5jbGVhclRpbWVvdXQoZSl9fSgpLGk9ZnVuY3Rpb24oZSl7dmFyIG49W107ZT1lLm9yaWdpbmFsRXZlbnR8fGV8fHQuZSxlPWUudG91Y2hlcyYmZS50b3VjaGVzLmxlbmd0aD9lLnRvdWNoZXM6ZS5jaGFuZ2VkVG91Y2hlcyYmZS5jaGFuZ2VkVG91Y2hlcy5sZW5ndGg/ZS5jaGFuZ2VkVG91Y2hlczpbZV07Zm9yKHZhciBvIGluIGUpZVtvXS5wYWdlWD9uLnB1c2goe3g6ZVtvXS5wYWdlWCx5OmVbb10ucGFnZVl9KTplW29dLmNsaWVudFgmJm4ucHVzaCh7eDplW29dLmNsaWVudFgseTplW29dLmNsaWVudFl9KTtyZXR1cm4gbn0scz1mdW5jdGlvbih0LGUsbil7cmV0dXJuIGUmJnQ/XCJ4XCI9PT1uP3QueC1lLng6XCJ5XCI9PT1uP3QueS1lLnk6TWF0aC5zcXJ0KE1hdGgucG93KHQueC1lLngsMikrTWF0aC5wb3codC55LWUueSwyKSk6MH0scj1mdW5jdGlvbih0KXtpZih0LmlzKCdhLGFyZWEsYnV0dG9uLFtyb2xlPVwiYnV0dG9uXCJdLGlucHV0LGxhYmVsLHNlbGVjdCxzdW1tYXJ5LHRleHRhcmVhLHZpZGVvLGF1ZGlvJyl8fG4uaXNGdW5jdGlvbih0LmdldCgwKS5vbmNsaWNrKXx8dC5kYXRhKFwic2VsZWN0YWJsZVwiKSlyZXR1cm4hMDtmb3IodmFyIGU9MCxvPXRbMF0uYXR0cmlidXRlcyxhPW8ubGVuZ3RoO2U8YTtlKyspaWYoXCJkYXRhLWZhbmN5Ym94LVwiPT09b1tlXS5ub2RlTmFtZS5zdWJzdHIoMCwxNCkpcmV0dXJuITA7cmV0dXJuITF9LGM9ZnVuY3Rpb24oZSl7dmFyIG49dC5nZXRDb21wdXRlZFN0eWxlKGUpW1wib3ZlcmZsb3cteVwiXSxvPXQuZ2V0Q29tcHV0ZWRTdHlsZShlKVtcIm92ZXJmbG93LXhcIl0sYT0oXCJzY3JvbGxcIj09PW58fFwiYXV0b1wiPT09bikmJmUuc2Nyb2xsSGVpZ2h0PmUuY2xpZW50SGVpZ2h0LGk9KFwic2Nyb2xsXCI9PT1vfHxcImF1dG9cIj09PW8pJiZlLnNjcm9sbFdpZHRoPmUuY2xpZW50V2lkdGg7cmV0dXJuIGF8fGl9LGw9ZnVuY3Rpb24odCl7Zm9yKHZhciBlPSExOzspe2lmKGU9Yyh0LmdldCgwKSkpYnJlYWs7aWYodD10LnBhcmVudCgpLCF0Lmxlbmd0aHx8dC5oYXNDbGFzcyhcImZhbmN5Ym94LXN0YWdlXCIpfHx0LmlzKFwiYm9keVwiKSlicmVha31yZXR1cm4gZX0sZD1mdW5jdGlvbih0KXt2YXIgZT10aGlzO2UuaW5zdGFuY2U9dCxlLiRiZz10LiRyZWZzLmJnLGUuJHN0YWdlPXQuJHJlZnMuc3RhZ2UsZS4kY29udGFpbmVyPXQuJHJlZnMuY29udGFpbmVyLGUuZGVzdHJveSgpLGUuJGNvbnRhaW5lci5vbihcInRvdWNoc3RhcnQuZmIudG91Y2ggbW91c2Vkb3duLmZiLnRvdWNoXCIsbi5wcm94eShlLFwib250b3VjaHN0YXJ0XCIpKX07ZC5wcm90b3R5cGUuZGVzdHJveT1mdW5jdGlvbigpe3RoaXMuJGNvbnRhaW5lci5vZmYoXCIuZmIudG91Y2hcIil9LGQucHJvdG90eXBlLm9udG91Y2hzdGFydD1mdW5jdGlvbihvKXt2YXIgYT10aGlzLGM9bihvLnRhcmdldCksZD1hLmluc3RhbmNlLHU9ZC5jdXJyZW50LGY9dS4kc2xpZGUscD11LiRjb250ZW50LGg9XCJ0b3VjaHN0YXJ0XCI9PW8udHlwZTtpZihoJiZhLiRjb250YWluZXIub2ZmKFwibW91c2Vkb3duLmZiLnRvdWNoXCIpLCghby5vcmlnaW5hbEV2ZW50fHwyIT1vLm9yaWdpbmFsRXZlbnQuYnV0dG9uKSYmZi5sZW5ndGgmJmMubGVuZ3RoJiYhcihjKSYmIXIoYy5wYXJlbnQoKSkmJihjLmlzKFwiaW1nXCIpfHwhKG8ub3JpZ2luYWxFdmVudC5jbGllbnRYPmNbMF0uY2xpZW50V2lkdGgrYy5vZmZzZXQoKS5sZWZ0KSkpe2lmKCF1fHxkLmlzQW5pbWF0aW5nfHxkLmlzQ2xvc2luZylyZXR1cm4gby5zdG9wUHJvcGFnYXRpb24oKSx2b2lkIG8ucHJldmVudERlZmF1bHQoKTtpZihhLnJlYWxQb2ludHM9YS5zdGFydFBvaW50cz1pKG8pLGEuc3RhcnRQb2ludHMubGVuZ3RoKXtpZih1LnRvdWNoJiZvLnN0b3BQcm9wYWdhdGlvbigpLGEuc3RhcnRFdmVudD1vLGEuY2FuVGFwPSF1LiRzbGlkZS5oYXNDbGFzcyhcImZhbmN5Ym94LWFuaW1hdGVkXCIpLGEuJHRhcmdldD1jLGEuJGNvbnRlbnQ9cCxhLm9wdHM9dS5vcHRzLnRvdWNoLGEuaXNQYW5uaW5nPSExLGEuaXNTd2lwaW5nPSExLGEuaXNab29taW5nPSExLGEuaXNTY3JvbGxpbmc9ITEsYS5jYW5QYW49ZC5jYW5QYW4oKSxhLnN0YXJ0VGltZT0obmV3IERhdGUpLmdldFRpbWUoKSxhLmRpc3RhbmNlWD1hLmRpc3RhbmNlWT1hLmRpc3RhbmNlPTAsYS5jYW52YXNXaWR0aD1NYXRoLnJvdW5kKGZbMF0uY2xpZW50V2lkdGgpLGEuY2FudmFzSGVpZ2h0PU1hdGgucm91bmQoZlswXS5jbGllbnRIZWlnaHQpLGEuY29udGVudExhc3RQb3M9bnVsbCxhLmNvbnRlbnRTdGFydFBvcz1uLmZhbmN5Ym94LmdldFRyYW5zbGF0ZShhLiRjb250ZW50KXx8e3RvcDowLGxlZnQ6MH0sYS5zbGlkZXJTdGFydFBvcz1hLnNsaWRlckxhc3RQb3N8fG4uZmFuY3lib3guZ2V0VHJhbnNsYXRlKGYpLGEuc3RhZ2VQb3M9bi5mYW5jeWJveC5nZXRUcmFuc2xhdGUoZC4kcmVmcy5zdGFnZSksYS5zbGlkZXJTdGFydFBvcy50b3AtPWEuc3RhZ2VQb3MudG9wLGEuc2xpZGVyU3RhcnRQb3MubGVmdC09YS5zdGFnZVBvcy5sZWZ0LGEuY29udGVudFN0YXJ0UG9zLnRvcC09YS5zdGFnZVBvcy50b3AsYS5jb250ZW50U3RhcnRQb3MubGVmdC09YS5zdGFnZVBvcy5sZWZ0LG4oZSkub2ZmKFwiLmZiLnRvdWNoXCIpLm9uKGg/XCJ0b3VjaGVuZC5mYi50b3VjaCB0b3VjaGNhbmNlbC5mYi50b3VjaFwiOlwibW91c2V1cC5mYi50b3VjaCBtb3VzZWxlYXZlLmZiLnRvdWNoXCIsbi5wcm94eShhLFwib250b3VjaGVuZFwiKSkub24oaD9cInRvdWNobW92ZS5mYi50b3VjaFwiOlwibW91c2Vtb3ZlLmZiLnRvdWNoXCIsbi5wcm94eShhLFwib250b3VjaG1vdmVcIikpLG4uZmFuY3lib3guaXNNb2JpbGUmJmUuYWRkRXZlbnRMaXN0ZW5lcihcInNjcm9sbFwiLGEub25zY3JvbGwsITApLCFhLm9wdHMmJiFhLmNhblBhbnx8IWMuaXMoYS4kc3RhZ2UpJiYhYS4kc3RhZ2UuZmluZChjKS5sZW5ndGgpcmV0dXJuIHZvaWQoYy5pcyhcIi5mYW5jeWJveC1pbWFnZVwiKSYmby5wcmV2ZW50RGVmYXVsdCgpKTthLmlzU2Nyb2xsYWJsZT1sKGMpfHxsKGMucGFyZW50KCkpLG4uZmFuY3lib3guaXNNb2JpbGUmJmEuaXNTY3JvbGxhYmxlfHxvLnByZXZlbnREZWZhdWx0KCksKDE9PT1hLnN0YXJ0UG9pbnRzLmxlbmd0aHx8dS5oYXNFcnJvcikmJihhLmNhblBhbj8obi5mYW5jeWJveC5zdG9wKGEuJGNvbnRlbnQpLGEuaXNQYW5uaW5nPSEwKTphLmlzU3dpcGluZz0hMCxhLiRjb250YWluZXIuYWRkQ2xhc3MoXCJmYW5jeWJveC1pcy1ncmFiYmluZ1wiKSksMj09PWEuc3RhcnRQb2ludHMubGVuZ3RoJiZcImltYWdlXCI9PT11LnR5cGUmJih1LmlzTG9hZGVkfHx1LiRnaG9zdCkmJihhLmNhblRhcD0hMSxhLmlzU3dpcGluZz0hMSxhLmlzUGFubmluZz0hMSxhLmlzWm9vbWluZz0hMCxuLmZhbmN5Ym94LnN0b3AoYS4kY29udGVudCksYS5jZW50ZXJQb2ludFN0YXJ0WD0uNSooYS5zdGFydFBvaW50c1swXS54K2Euc3RhcnRQb2ludHNbMV0ueCktbih0KS5zY3JvbGxMZWZ0KCksYS5jZW50ZXJQb2ludFN0YXJ0WT0uNSooYS5zdGFydFBvaW50c1swXS55K2Euc3RhcnRQb2ludHNbMV0ueSktbih0KS5zY3JvbGxUb3AoKSxhLnBlcmNlbnRhZ2VPZkltYWdlQXRQaW5jaFBvaW50WD0oYS5jZW50ZXJQb2ludFN0YXJ0WC1hLmNvbnRlbnRTdGFydFBvcy5sZWZ0KS9hLmNvbnRlbnRTdGFydFBvcy53aWR0aCxhLnBlcmNlbnRhZ2VPZkltYWdlQXRQaW5jaFBvaW50WT0oYS5jZW50ZXJQb2ludFN0YXJ0WS1hLmNvbnRlbnRTdGFydFBvcy50b3ApL2EuY29udGVudFN0YXJ0UG9zLmhlaWdodCxhLnN0YXJ0RGlzdGFuY2VCZXR3ZWVuRmluZ2Vycz1zKGEuc3RhcnRQb2ludHNbMF0sYS5zdGFydFBvaW50c1sxXSkpfX19LGQucHJvdG90eXBlLm9uc2Nyb2xsPWZ1bmN0aW9uKHQpe3ZhciBuPXRoaXM7bi5pc1Njcm9sbGluZz0hMCxlLnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJzY3JvbGxcIixuLm9uc2Nyb2xsLCEwKX0sZC5wcm90b3R5cGUub250b3VjaG1vdmU9ZnVuY3Rpb24odCl7dmFyIGU9dGhpcztyZXR1cm4gdm9pZCAwIT09dC5vcmlnaW5hbEV2ZW50LmJ1dHRvbnMmJjA9PT10Lm9yaWdpbmFsRXZlbnQuYnV0dG9ucz92b2lkIGUub250b3VjaGVuZCh0KTplLmlzU2Nyb2xsaW5nP3ZvaWQoZS5jYW5UYXA9ITEpOihlLm5ld1BvaW50cz1pKHQpLHZvaWQoKGUub3B0c3x8ZS5jYW5QYW4pJiZlLm5ld1BvaW50cy5sZW5ndGgmJmUubmV3UG9pbnRzLmxlbmd0aCYmKGUuaXNTd2lwaW5nJiZlLmlzU3dpcGluZz09PSEwfHx0LnByZXZlbnREZWZhdWx0KCksZS5kaXN0YW5jZVg9cyhlLm5ld1BvaW50c1swXSxlLnN0YXJ0UG9pbnRzWzBdLFwieFwiKSxlLmRpc3RhbmNlWT1zKGUubmV3UG9pbnRzWzBdLGUuc3RhcnRQb2ludHNbMF0sXCJ5XCIpLGUuZGlzdGFuY2U9cyhlLm5ld1BvaW50c1swXSxlLnN0YXJ0UG9pbnRzWzBdKSxlLmRpc3RhbmNlPjAmJihlLmlzU3dpcGluZz9lLm9uU3dpcGUodCk6ZS5pc1Bhbm5pbmc/ZS5vblBhbigpOmUuaXNab29taW5nJiZlLm9uWm9vbSgpKSkpKX0sZC5wcm90b3R5cGUub25Td2lwZT1mdW5jdGlvbihlKXt2YXIgaSxzPXRoaXMscj1zLmluc3RhbmNlLGM9cy5pc1N3aXBpbmcsbD1zLnNsaWRlclN0YXJ0UG9zLmxlZnR8fDA7aWYoYyE9PSEwKVwieFwiPT1jJiYocy5kaXN0YW5jZVg+MCYmKHMuaW5zdGFuY2UuZ3JvdXAubGVuZ3RoPDJ8fDA9PT1zLmluc3RhbmNlLmN1cnJlbnQuaW5kZXgmJiFzLmluc3RhbmNlLmN1cnJlbnQub3B0cy5sb29wKT9sKz1NYXRoLnBvdyhzLmRpc3RhbmNlWCwuOCk6cy5kaXN0YW5jZVg8MCYmKHMuaW5zdGFuY2UuZ3JvdXAubGVuZ3RoPDJ8fHMuaW5zdGFuY2UuY3VycmVudC5pbmRleD09PXMuaW5zdGFuY2UuZ3JvdXAubGVuZ3RoLTEmJiFzLmluc3RhbmNlLmN1cnJlbnQub3B0cy5sb29wKT9sLT1NYXRoLnBvdygtcy5kaXN0YW5jZVgsLjgpOmwrPXMuZGlzdGFuY2VYKSxzLnNsaWRlckxhc3RQb3M9e3RvcDpcInhcIj09Yz8wOnMuc2xpZGVyU3RhcnRQb3MudG9wK3MuZGlzdGFuY2VZLGxlZnQ6bH0scy5yZXF1ZXN0SWQmJihhKHMucmVxdWVzdElkKSxzLnJlcXVlc3RJZD1udWxsKSxzLnJlcXVlc3RJZD1vKGZ1bmN0aW9uKCl7cy5zbGlkZXJMYXN0UG9zJiYobi5lYWNoKHMuaW5zdGFuY2Uuc2xpZGVzLGZ1bmN0aW9uKHQsZSl7dmFyIG89ZS5wb3Mtcy5pbnN0YW5jZS5jdXJyUG9zO24uZmFuY3lib3guc2V0VHJhbnNsYXRlKGUuJHNsaWRlLHt0b3A6cy5zbGlkZXJMYXN0UG9zLnRvcCxsZWZ0OnMuc2xpZGVyTGFzdFBvcy5sZWZ0K28qcy5jYW52YXNXaWR0aCtvKmUub3B0cy5ndXR0ZXJ9KX0pLHMuJGNvbnRhaW5lci5hZGRDbGFzcyhcImZhbmN5Ym94LWlzLXNsaWRpbmdcIikpfSk7ZWxzZSBpZihNYXRoLmFicyhzLmRpc3RhbmNlKT4xMCl7aWYocy5jYW5UYXA9ITEsci5ncm91cC5sZW5ndGg8MiYmcy5vcHRzLnZlcnRpY2FsP3MuaXNTd2lwaW5nPVwieVwiOnIuaXNEcmFnZ2luZ3x8cy5vcHRzLnZlcnRpY2FsPT09ITF8fFwiYXV0b1wiPT09cy5vcHRzLnZlcnRpY2FsJiZuKHQpLndpZHRoKCk+ODAwP3MuaXNTd2lwaW5nPVwieFwiOihpPU1hdGguYWJzKDE4MCpNYXRoLmF0YW4yKHMuZGlzdGFuY2VZLHMuZGlzdGFuY2VYKS9NYXRoLlBJKSxzLmlzU3dpcGluZz1pPjQ1JiZpPDEzNT9cInlcIjpcInhcIiksXCJ5XCI9PT1zLmlzU3dpcGluZyYmbi5mYW5jeWJveC5pc01vYmlsZSYmcy5pc1Njcm9sbGFibGUpcmV0dXJuIHZvaWQocy5pc1Njcm9sbGluZz0hMCk7ci5pc0RyYWdnaW5nPXMuaXNTd2lwaW5nLHMuc3RhcnRQb2ludHM9cy5uZXdQb2ludHMsbi5lYWNoKHIuc2xpZGVzLGZ1bmN0aW9uKHQsZSl7dmFyIG8sYTtuLmZhbmN5Ym94LnN0b3AoZS4kc2xpZGUpLG89bi5mYW5jeWJveC5nZXRUcmFuc2xhdGUoZS4kc2xpZGUpLGE9bi5mYW5jeWJveC5nZXRUcmFuc2xhdGUoci4kcmVmcy5zdGFnZSksZS4kc2xpZGUucmVtb3ZlQXR0cihcInN0eWxlXCIpLnJlbW92ZUNsYXNzKFwiZmFuY3lib3gtYW5pbWF0ZWRcIikucmVtb3ZlQ2xhc3MoZnVuY3Rpb24odCxlKXtyZXR1cm4oZS5tYXRjaCgvKF58XFxzKWZhbmN5Ym94LWZ4LVxcUysvZyl8fFtdKS5qb2luKFwiIFwiKX0pLGUucG9zPT09ci5jdXJyZW50LnBvcyYmKHMuc2xpZGVyU3RhcnRQb3MubGVmdD1vLmxlZnQtYS5sZWZ0KSxuLmZhbmN5Ym94LnNldFRyYW5zbGF0ZShlLiRzbGlkZSx7dG9wOm8udG9wLWEudG9wLGxlZnQ6by5sZWZ0LWEubGVmdH0pfSksci5TbGlkZVNob3cmJnIuU2xpZGVTaG93LmlzQWN0aXZlJiZyLlNsaWRlU2hvdy5zdG9wKCl9fSxkLnByb3RvdHlwZS5vblBhbj1mdW5jdGlvbigpe3ZhciB0PXRoaXM7cmV0dXJuIHModC5uZXdQb2ludHNbMF0sdC5yZWFsUG9pbnRzWzBdKTwobi5mYW5jeWJveC5pc01vYmlsZT8xMDo1KT92b2lkKHQuc3RhcnRQb2ludHM9dC5uZXdQb2ludHMpOih0LmNhblRhcD0hMSx0LmNvbnRlbnRMYXN0UG9zPXQubGltaXRNb3ZlbWVudCgpLHQucmVxdWVzdElkJiYoYSh0LnJlcXVlc3RJZCksdC5yZXF1ZXN0SWQ9bnVsbCksdm9pZCh0LnJlcXVlc3RJZD1vKGZ1bmN0aW9uKCl7bi5mYW5jeWJveC5zZXRUcmFuc2xhdGUodC4kY29udGVudCx0LmNvbnRlbnRMYXN0UG9zKX0pKSl9LGQucHJvdG90eXBlLmxpbWl0TW92ZW1lbnQ9ZnVuY3Rpb24oKXt2YXIgdCxlLG4sbyxhLGkscz10aGlzLHI9cy5jYW52YXNXaWR0aCxjPXMuY2FudmFzSGVpZ2h0LGw9cy5kaXN0YW5jZVgsZD1zLmRpc3RhbmNlWSx1PXMuY29udGVudFN0YXJ0UG9zLGY9dS5sZWZ0LHA9dS50b3AsaD11LndpZHRoLGc9dS5oZWlnaHQ7cmV0dXJuIGE9aD5yP2YrbDpmLGk9cCtkLHQ9TWF0aC5tYXgoMCwuNSpyLS41KmgpLGU9TWF0aC5tYXgoMCwuNSpjLS41KmcpLG49TWF0aC5taW4oci1oLC41KnItLjUqaCksbz1NYXRoLm1pbihjLWcsLjUqYy0uNSpnKSxsPjAmJmE+dCYmKGE9dC0xK01hdGgucG93KC10K2YrbCwuOCl8fDApLGw8MCYmYTxuJiYoYT1uKzEtTWF0aC5wb3cobi1mLWwsLjgpfHwwKSxkPjAmJmk+ZSYmKGk9ZS0xK01hdGgucG93KC1lK3ArZCwuOCl8fDApLGQ8MCYmaTxvJiYoaT1vKzEtTWF0aC5wb3coby1wLWQsLjgpfHwwKSx7dG9wOmksbGVmdDphfX0sZC5wcm90b3R5cGUubGltaXRQb3NpdGlvbj1mdW5jdGlvbih0LGUsbixvKXt2YXIgYT10aGlzLGk9YS5jYW52YXNXaWR0aCxzPWEuY2FudmFzSGVpZ2h0O3JldHVybiBuPmk/KHQ9dD4wPzA6dCx0PXQ8aS1uP2ktbjp0KTp0PU1hdGgubWF4KDAsaS8yLW4vMiksbz5zPyhlPWU+MD8wOmUsZT1lPHMtbz9zLW86ZSk6ZT1NYXRoLm1heCgwLHMvMi1vLzIpLHt0b3A6ZSxsZWZ0OnR9fSxkLnByb3RvdHlwZS5vblpvb209ZnVuY3Rpb24oKXt2YXIgZT10aGlzLGk9ZS5jb250ZW50U3RhcnRQb3Mscj1pLndpZHRoLGM9aS5oZWlnaHQsbD1pLmxlZnQsZD1pLnRvcCx1PXMoZS5uZXdQb2ludHNbMF0sZS5uZXdQb2ludHNbMV0pLGY9dS9lLnN0YXJ0RGlzdGFuY2VCZXR3ZWVuRmluZ2VycyxwPU1hdGguZmxvb3IocipmKSxoPU1hdGguZmxvb3IoYypmKSxnPShyLXApKmUucGVyY2VudGFnZU9mSW1hZ2VBdFBpbmNoUG9pbnRYLGI9KGMtaCkqZS5wZXJjZW50YWdlT2ZJbWFnZUF0UGluY2hQb2ludFksbT0oZS5uZXdQb2ludHNbMF0ueCtlLm5ld1BvaW50c1sxXS54KS8yLW4odCkuc2Nyb2xsTGVmdCgpLHY9KGUubmV3UG9pbnRzWzBdLnkrZS5uZXdQb2ludHNbMV0ueSkvMi1uKHQpLnNjcm9sbFRvcCgpLHk9bS1lLmNlbnRlclBvaW50U3RhcnRYLHg9di1lLmNlbnRlclBvaW50U3RhcnRZLHc9bCsoZyt5KSwkPWQrKGIreCksUz17dG9wOiQsbGVmdDp3LHNjYWxlWDpmLHNjYWxlWTpmfTtlLmNhblRhcD0hMSxlLm5ld1dpZHRoPXAsZS5uZXdIZWlnaHQ9aCxlLmNvbnRlbnRMYXN0UG9zPVMsZS5yZXF1ZXN0SWQmJihhKGUucmVxdWVzdElkKSxlLnJlcXVlc3RJZD1udWxsKSxlLnJlcXVlc3RJZD1vKGZ1bmN0aW9uKCl7bi5mYW5jeWJveC5zZXRUcmFuc2xhdGUoZS4kY29udGVudCxlLmNvbnRlbnRMYXN0UG9zKX0pfSxkLnByb3RvdHlwZS5vbnRvdWNoZW5kPWZ1bmN0aW9uKHQpe3ZhciBvPXRoaXMscz1vLmlzU3dpcGluZyxyPW8uaXNQYW5uaW5nLGM9by5pc1pvb21pbmcsbD1vLmlzU2Nyb2xsaW5nO3JldHVybiBvLmVuZFBvaW50cz1pKHQpLG8uZE1zPU1hdGgubWF4KChuZXcgRGF0ZSkuZ2V0VGltZSgpLW8uc3RhcnRUaW1lLDEpLG8uJGNvbnRhaW5lci5yZW1vdmVDbGFzcyhcImZhbmN5Ym94LWlzLWdyYWJiaW5nXCIpLG4oZSkub2ZmKFwiLmZiLnRvdWNoXCIpLGUucmVtb3ZlRXZlbnRMaXN0ZW5lcihcInNjcm9sbFwiLG8ub25zY3JvbGwsITApLG8ucmVxdWVzdElkJiYoYShvLnJlcXVlc3RJZCksby5yZXF1ZXN0SWQ9bnVsbCksby5pc1N3aXBpbmc9ITEsby5pc1Bhbm5pbmc9ITEsby5pc1pvb21pbmc9ITEsby5pc1Njcm9sbGluZz0hMSxvLmluc3RhbmNlLmlzRHJhZ2dpbmc9ITEsby5jYW5UYXA/by5vblRhcCh0KTooby5zcGVlZD0xMDAsby52ZWxvY2l0eVg9by5kaXN0YW5jZVgvby5kTXMqLjUsby52ZWxvY2l0eVk9by5kaXN0YW5jZVkvby5kTXMqLjUsdm9pZChyP28uZW5kUGFubmluZygpOmM/by5lbmRab29taW5nKCk6by5lbmRTd2lwaW5nKHMsbCkpKX0sZC5wcm90b3R5cGUuZW5kU3dpcGluZz1mdW5jdGlvbih0LGUpe3ZhciBvPXRoaXMsYT0hMSxpPW8uaW5zdGFuY2UuZ3JvdXAubGVuZ3RoLHM9TWF0aC5hYnMoby52ZWxvY2l0eVgpLHI9TWF0aC5hYnMoby5kaXN0YW5jZVgpLGM9XCJ4XCI9PXQmJmk+MSYmKG8uZE1zPjEzMCYmcj4xMHx8cj41MCksbD1NYXRoLmFicyhzKm8uY2FudmFzV2lkdGgvby5jYW52YXNXaWR0aCk+Ljg/MzY2OjUwMDtvLnNsaWRlckxhc3RQb3M9bnVsbCxcInlcIj09dCYmIWUmJk1hdGguYWJzKG8uZGlzdGFuY2VZKT41MD8obi5mYW5jeWJveC5hbmltYXRlKG8uaW5zdGFuY2UuY3VycmVudC4kc2xpZGUse3RvcDpvLnNsaWRlclN0YXJ0UG9zLnRvcCtvLmRpc3RhbmNlWSsxNTAqby52ZWxvY2l0eVksb3BhY2l0eTowfSwyMDApLGE9by5pbnN0YW5jZS5jbG9zZSghMCwyMDApKTpjJiZvLmRpc3RhbmNlWD4wP2E9by5pbnN0YW5jZS5wcmV2aW91cyhsKTpjJiZvLmRpc3RhbmNlWDwwJiYoYT1vLmluc3RhbmNlLm5leHQobCkpLGEhPT0hMXx8XCJ4XCIhPXQmJlwieVwiIT10fHxvLmluc3RhbmNlLmNlbnRlclNsaWRlKG8uaW5zdGFuY2UuY3VycmVudCwxNTApLG8uJGNvbnRhaW5lci5yZW1vdmVDbGFzcyhcImZhbmN5Ym94LWlzLXNsaWRpbmdcIil9LGQucHJvdG90eXBlLmVuZFBhbm5pbmc9ZnVuY3Rpb24oKXt2YXIgdCxlLG8sYT10aGlzO2EuY29udGVudExhc3RQb3MmJihhLm9wdHMubW9tZW50dW09PT0hMXx8YS5kTXM+MzUwPyh0PWEuY29udGVudExhc3RQb3MubGVmdCxlPWEuY29udGVudExhc3RQb3MudG9wKToodD1hLmNvbnRlbnRMYXN0UG9zLmxlZnQrNTAwKmEudmVsb2NpdHlYLGU9YS5jb250ZW50TGFzdFBvcy50b3ArNTAwKmEudmVsb2NpdHlZKSxvPWEubGltaXRQb3NpdGlvbih0LGUsYS5jb250ZW50U3RhcnRQb3Mud2lkdGgsYS5jb250ZW50U3RhcnRQb3MuaGVpZ2h0KSxvLndpZHRoPWEuY29udGVudFN0YXJ0UG9zLndpZHRoLG8uaGVpZ2h0PWEuY29udGVudFN0YXJ0UG9zLmhlaWdodCxuLmZhbmN5Ym94LmFuaW1hdGUoYS4kY29udGVudCxvLDMzMCkpfSxkLnByb3RvdHlwZS5lbmRab29taW5nPWZ1bmN0aW9uKCl7dmFyIHQsZSxvLGEsaT10aGlzLHM9aS5pbnN0YW5jZS5jdXJyZW50LHI9aS5uZXdXaWR0aCxjPWkubmV3SGVpZ2h0O2kuY29udGVudExhc3RQb3MmJih0PWkuY29udGVudExhc3RQb3MubGVmdCxlPWkuY29udGVudExhc3RQb3MudG9wLGE9e3RvcDplLGxlZnQ6dCx3aWR0aDpyLGhlaWdodDpjLHNjYWxlWDoxLHNjYWxlWToxfSxuLmZhbmN5Ym94LnNldFRyYW5zbGF0ZShpLiRjb250ZW50LGEpLHI8aS5jYW52YXNXaWR0aCYmYzxpLmNhbnZhc0hlaWdodD9pLmluc3RhbmNlLnNjYWxlVG9GaXQoMTUwKTpyPnMud2lkdGh8fGM+cy5oZWlnaHQ/aS5pbnN0YW5jZS5zY2FsZVRvQWN0dWFsKGkuY2VudGVyUG9pbnRTdGFydFgsaS5jZW50ZXJQb2ludFN0YXJ0WSwxNTApOihvPWkubGltaXRQb3NpdGlvbih0LGUscixjKSxuLmZhbmN5Ym94LnNldFRyYW5zbGF0ZShpLiRjb250ZW50LG4uZmFuY3lib3guZ2V0VHJhbnNsYXRlKGkuJGNvbnRlbnQpKSxuLmZhbmN5Ym94LmFuaW1hdGUoaS4kY29udGVudCxvLDE1MCkpKX0sZC5wcm90b3R5cGUub25UYXA9ZnVuY3Rpb24oZSl7dmFyIG8sYT10aGlzLHM9bihlLnRhcmdldCkscj1hLmluc3RhbmNlLGM9ci5jdXJyZW50LGw9ZSYmaShlKXx8YS5zdGFydFBvaW50cyxkPWxbMF0/bFswXS54LW4odCkuc2Nyb2xsTGVmdCgpLWEuc3RhZ2VQb3MubGVmdDowLHU9bFswXT9sWzBdLnktbih0KS5zY3JvbGxUb3AoKS1hLnN0YWdlUG9zLnRvcDowLGY9ZnVuY3Rpb24odCl7dmFyIG89Yy5vcHRzW3RdO2lmKG4uaXNGdW5jdGlvbihvKSYmKG89by5hcHBseShyLFtjLGVdKSksbylzd2l0Y2gobyl7Y2FzZVwiY2xvc2VcIjpyLmNsb3NlKGEuc3RhcnRFdmVudCk7YnJlYWs7Y2FzZVwidG9nZ2xlQ29udHJvbHNcIjpyLnRvZ2dsZUNvbnRyb2xzKCEwKTticmVhaztjYXNlXCJuZXh0XCI6ci5uZXh0KCk7YnJlYWs7Y2FzZVwibmV4dE9yQ2xvc2VcIjpyLmdyb3VwLmxlbmd0aD4xP3IubmV4dCgpOnIuY2xvc2UoYS5zdGFydEV2ZW50KTticmVhaztjYXNlXCJ6b29tXCI6XCJpbWFnZVwiPT1jLnR5cGUmJihjLmlzTG9hZGVkfHxjLiRnaG9zdCkmJihyLmNhblBhbigpP3Iuc2NhbGVUb0ZpdCgpOnIuaXNTY2FsZWREb3duKCk/ci5zY2FsZVRvQWN0dWFsKGQsdSk6ci5ncm91cC5sZW5ndGg8MiYmci5jbG9zZShhLnN0YXJ0RXZlbnQpKX19O2lmKCghZS5vcmlnaW5hbEV2ZW50fHwyIT1lLm9yaWdpbmFsRXZlbnQuYnV0dG9uKSYmKHMuaXMoXCJpbWdcIil8fCEoZD5zWzBdLmNsaWVudFdpZHRoK3Mub2Zmc2V0KCkubGVmdCkpKXtpZihzLmlzKFwiLmZhbmN5Ym94LWJnLC5mYW5jeWJveC1pbm5lciwuZmFuY3lib3gtb3V0ZXIsLmZhbmN5Ym94LWNvbnRhaW5lclwiKSlvPVwiT3V0c2lkZVwiO2Vsc2UgaWYocy5pcyhcIi5mYW5jeWJveC1zbGlkZVwiKSlvPVwiU2xpZGVcIjtlbHNle2lmKCFyLmN1cnJlbnQuJGNvbnRlbnR8fCFyLmN1cnJlbnQuJGNvbnRlbnQuZmluZChzKS5hZGRCYWNrKCkuZmlsdGVyKHMpLmxlbmd0aClyZXR1cm47bz1cIkNvbnRlbnRcIn1pZihhLnRhcHBlZCl7aWYoY2xlYXJUaW1lb3V0KGEudGFwcGVkKSxhLnRhcHBlZD1udWxsLE1hdGguYWJzKGQtYS50YXBYKT41MHx8TWF0aC5hYnModS1hLnRhcFkpPjUwKXJldHVybiB0aGlzO2YoXCJkYmxjbGlja1wiK28pfWVsc2UgYS50YXBYPWQsYS50YXBZPXUsYy5vcHRzW1wiZGJsY2xpY2tcIitvXSYmYy5vcHRzW1wiZGJsY2xpY2tcIitvXSE9PWMub3B0c1tcImNsaWNrXCIrb10/YS50YXBwZWQ9c2V0VGltZW91dChmdW5jdGlvbigpe2EudGFwcGVkPW51bGwsZihcImNsaWNrXCIrbyl9LDUwMCk6ZihcImNsaWNrXCIrbyk7cmV0dXJuIHRoaXN9fSxuKGUpLm9uKFwib25BY3RpdmF0ZS5mYlwiLGZ1bmN0aW9uKHQsZSl7ZSYmIWUuR3Vlc3R1cmVzJiYoZS5HdWVzdHVyZXM9bmV3IGQoZSkpfSl9KHdpbmRvdyxkb2N1bWVudCxqUXVlcnkpLGZ1bmN0aW9uKHQsZSl7XCJ1c2Ugc3RyaWN0XCI7ZS5leHRlbmQoITAsZS5mYW5jeWJveC5kZWZhdWx0cyx7YnRuVHBsOntzbGlkZVNob3c6JzxidXR0b24gZGF0YS1mYW5jeWJveC1wbGF5IGNsYXNzPVwiZmFuY3lib3gtYnV0dG9uIGZhbmN5Ym94LWJ1dHRvbi0tcGxheVwiIHRpdGxlPVwie3tQTEFZX1NUQVJUfX1cIj48c3ZnIHhtbG5zPVwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIiB2aWV3Qm94PVwiMCAwIDI0IDI0XCI+PHBhdGggZD1cIk02LjUgNS40djEzLjJsMTEtNi42elwiLz48L3N2Zz48c3ZnIHhtbG5zPVwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIiB2aWV3Qm94PVwiMCAwIDI0IDI0XCI+PHBhdGggZD1cIk04LjMzIDUuNzVoMi4ydjEyLjVoLTIuMlY1Ljc1em01LjE1IDBoMi4ydjEyLjVoLTIuMlY1Ljc1elwiLz48L3N2Zz48L2J1dHRvbj4nfSxzbGlkZVNob3c6e2F1dG9TdGFydDohMSxzcGVlZDozZTMscHJvZ3Jlc3M6ITB9fSk7dmFyIG49ZnVuY3Rpb24odCl7dGhpcy5pbnN0YW5jZT10LHRoaXMuaW5pdCgpfTtlLmV4dGVuZChuLnByb3RvdHlwZSx7dGltZXI6bnVsbCxpc0FjdGl2ZTohMSwkYnV0dG9uOm51bGwsaW5pdDpmdW5jdGlvbigpe3ZhciB0PXRoaXMsbj10Lmluc3RhbmNlLG89bi5ncm91cFtuLmN1cnJJbmRleF0ub3B0cy5zbGlkZVNob3c7dC4kYnV0dG9uPW4uJHJlZnMudG9vbGJhci5maW5kKFwiW2RhdGEtZmFuY3lib3gtcGxheV1cIikub24oXCJjbGlja1wiLGZ1bmN0aW9uKCl7dC50b2dnbGUoKX0pLG4uZ3JvdXAubGVuZ3RoPDJ8fCFvP3QuJGJ1dHRvbi5oaWRlKCk6by5wcm9ncmVzcyYmKHQuJHByb2dyZXNzPWUoJzxkaXYgY2xhc3M9XCJmYW5jeWJveC1wcm9ncmVzc1wiPjwvZGl2PicpLmFwcGVuZFRvKG4uJHJlZnMuaW5uZXIpKX0sc2V0OmZ1bmN0aW9uKHQpe3ZhciBuPXRoaXMsbz1uLmluc3RhbmNlLGE9by5jdXJyZW50O2EmJih0PT09ITB8fGEub3B0cy5sb29wfHxvLmN1cnJJbmRleDxvLmdyb3VwLmxlbmd0aC0xKT9uLmlzQWN0aXZlJiZcInZpZGVvXCIhPT1hLmNvbnRlbnRUeXBlJiYobi4kcHJvZ3Jlc3MmJmUuZmFuY3lib3guYW5pbWF0ZShuLiRwcm9ncmVzcy5zaG93KCkse3NjYWxlWDoxfSxhLm9wdHMuc2xpZGVTaG93LnNwZWVkKSxuLnRpbWVyPXNldFRpbWVvdXQoZnVuY3Rpb24oKXtvLmp1bXBUbygoby5jdXJySW5kZXgrMSklby5ncm91cC5sZW5ndGgpfSxhLm9wdHMuc2xpZGVTaG93LnNwZWVkKSk6KG4uc3RvcCgpLG8uaWRsZVNlY29uZHNDb3VudGVyPTAsby5zaG93Q29udHJvbHMoKSl9LGNsZWFyOmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcztjbGVhclRpbWVvdXQodC50aW1lciksdC50aW1lcj1udWxsLHQuJHByb2dyZXNzJiZ0LiRwcm9ncmVzcy5yZW1vdmVBdHRyKFwic3R5bGVcIikuaGlkZSgpfSxzdGFydDpmdW5jdGlvbigpe3ZhciB0PXRoaXMsZT10Lmluc3RhbmNlLmN1cnJlbnQ7ZSYmKHQuJGJ1dHRvbi5hdHRyKFwidGl0bGVcIixlLm9wdHMuaTE4bltlLm9wdHMubGFuZ10uUExBWV9TVE9QKS5yZW1vdmVDbGFzcyhcImZhbmN5Ym94LWJ1dHRvbi0tcGxheVwiKS5hZGRDbGFzcyhcImZhbmN5Ym94LWJ1dHRvbi0tcGF1c2VcIiksdC5pc0FjdGl2ZT0hMCxlLmlzQ29tcGxldGUmJnQuc2V0KCEwKSx0Lmluc3RhbmNlLnRyaWdnZXIoXCJvblNsaWRlU2hvd0NoYW5nZVwiLCEwKSl9LHN0b3A6ZnVuY3Rpb24oKXt2YXIgdD10aGlzLGU9dC5pbnN0YW5jZS5jdXJyZW50O3QuY2xlYXIoKSx0LiRidXR0b24uYXR0cihcInRpdGxlXCIsZS5vcHRzLmkxOG5bZS5vcHRzLmxhbmddLlBMQVlfU1RBUlQpLnJlbW92ZUNsYXNzKFwiZmFuY3lib3gtYnV0dG9uLS1wYXVzZVwiKS5hZGRDbGFzcyhcImZhbmN5Ym94LWJ1dHRvbi0tcGxheVwiKSx0LmlzQWN0aXZlPSExLHQuaW5zdGFuY2UudHJpZ2dlcihcIm9uU2xpZGVTaG93Q2hhbmdlXCIsITEpLHQuJHByb2dyZXNzJiZ0LiRwcm9ncmVzcy5yZW1vdmVBdHRyKFwic3R5bGVcIikuaGlkZSgpfSx0b2dnbGU6ZnVuY3Rpb24oKXt2YXIgdD10aGlzO3QuaXNBY3RpdmU/dC5zdG9wKCk6dC5zdGFydCgpfX0pLGUodCkub24oe1wib25Jbml0LmZiXCI6ZnVuY3Rpb24odCxlKXtlJiYhZS5TbGlkZVNob3cmJihlLlNsaWRlU2hvdz1uZXcgbihlKSl9LFwiYmVmb3JlU2hvdy5mYlwiOmZ1bmN0aW9uKHQsZSxuLG8pe3ZhciBhPWUmJmUuU2xpZGVTaG93O28/YSYmbi5vcHRzLnNsaWRlU2hvdy5hdXRvU3RhcnQmJmEuc3RhcnQoKTphJiZhLmlzQWN0aXZlJiZhLmNsZWFyKCl9LFwiYWZ0ZXJTaG93LmZiXCI6ZnVuY3Rpb24odCxlLG4pe3ZhciBvPWUmJmUuU2xpZGVTaG93O28mJm8uaXNBY3RpdmUmJm8uc2V0KCl9LFwiYWZ0ZXJLZXlkb3duLmZiXCI6ZnVuY3Rpb24obixvLGEsaSxzKXt2YXIgcj1vJiZvLlNsaWRlU2hvdzshcnx8IWEub3B0cy5zbGlkZVNob3d8fDgwIT09cyYmMzIhPT1zfHxlKHQuYWN0aXZlRWxlbWVudCkuaXMoXCJidXR0b24sYSxpbnB1dFwiKXx8KGkucHJldmVudERlZmF1bHQoKSxyLnRvZ2dsZSgpKX0sXCJiZWZvcmVDbG9zZS5mYiBvbkRlYWN0aXZhdGUuZmJcIjpmdW5jdGlvbih0LGUpe3ZhciBuPWUmJmUuU2xpZGVTaG93O24mJm4uc3RvcCgpfX0pLGUodCkub24oXCJ2aXNpYmlsaXR5Y2hhbmdlXCIsZnVuY3Rpb24oKXt2YXIgbj1lLmZhbmN5Ym94LmdldEluc3RhbmNlKCksbz1uJiZuLlNsaWRlU2hvdztvJiZvLmlzQWN0aXZlJiYodC5oaWRkZW4/by5jbGVhcigpOm8uc2V0KCkpfSl9KGRvY3VtZW50LGpRdWVyeSksZnVuY3Rpb24odCxlKXtcInVzZSBzdHJpY3RcIjt2YXIgbj1mdW5jdGlvbigpe2Zvcih2YXIgZT1bW1wicmVxdWVzdEZ1bGxzY3JlZW5cIixcImV4aXRGdWxsc2NyZWVuXCIsXCJmdWxsc2NyZWVuRWxlbWVudFwiLFwiZnVsbHNjcmVlbkVuYWJsZWRcIixcImZ1bGxzY3JlZW5jaGFuZ2VcIixcImZ1bGxzY3JlZW5lcnJvclwiXSxbXCJ3ZWJraXRSZXF1ZXN0RnVsbHNjcmVlblwiLFwid2Via2l0RXhpdEZ1bGxzY3JlZW5cIixcIndlYmtpdEZ1bGxzY3JlZW5FbGVtZW50XCIsXCJ3ZWJraXRGdWxsc2NyZWVuRW5hYmxlZFwiLFwid2Via2l0ZnVsbHNjcmVlbmNoYW5nZVwiLFwid2Via2l0ZnVsbHNjcmVlbmVycm9yXCJdLFtcIndlYmtpdFJlcXVlc3RGdWxsU2NyZWVuXCIsXCJ3ZWJraXRDYW5jZWxGdWxsU2NyZWVuXCIsXCJ3ZWJraXRDdXJyZW50RnVsbFNjcmVlbkVsZW1lbnRcIixcIndlYmtpdENhbmNlbEZ1bGxTY3JlZW5cIixcIndlYmtpdGZ1bGxzY3JlZW5jaGFuZ2VcIixcIndlYmtpdGZ1bGxzY3JlZW5lcnJvclwiXSxbXCJtb3pSZXF1ZXN0RnVsbFNjcmVlblwiLFwibW96Q2FuY2VsRnVsbFNjcmVlblwiLFwibW96RnVsbFNjcmVlbkVsZW1lbnRcIixcIm1vekZ1bGxTY3JlZW5FbmFibGVkXCIsXCJtb3pmdWxsc2NyZWVuY2hhbmdlXCIsXCJtb3pmdWxsc2NyZWVuZXJyb3JcIl0sW1wibXNSZXF1ZXN0RnVsbHNjcmVlblwiLFwibXNFeGl0RnVsbHNjcmVlblwiLFwibXNGdWxsc2NyZWVuRWxlbWVudFwiLFwibXNGdWxsc2NyZWVuRW5hYmxlZFwiLFwiTVNGdWxsc2NyZWVuQ2hhbmdlXCIsXCJNU0Z1bGxzY3JlZW5FcnJvclwiXV0sbj17fSxvPTA7bzxlLmxlbmd0aDtvKyspe3ZhciBhPWVbb107aWYoYSYmYVsxXWluIHQpe2Zvcih2YXIgaT0wO2k8YS5sZW5ndGg7aSsrKW5bZVswXVtpXV09YVtpXTtyZXR1cm4gbn19cmV0dXJuITF9KCk7aWYobil7dmFyIG89e3JlcXVlc3Q6ZnVuY3Rpb24oZSl7ZT1lfHx0LmRvY3VtZW50RWxlbWVudCxlW24ucmVxdWVzdEZ1bGxzY3JlZW5dKGUuQUxMT1dfS0VZQk9BUkRfSU5QVVQpfSxleGl0OmZ1bmN0aW9uKCl7dFtuLmV4aXRGdWxsc2NyZWVuXSgpfSx0b2dnbGU6ZnVuY3Rpb24oZSl7ZT1lfHx0LmRvY3VtZW50RWxlbWVudCx0aGlzLmlzRnVsbHNjcmVlbigpP3RoaXMuZXhpdCgpOnRoaXMucmVxdWVzdChlKX0saXNGdWxsc2NyZWVuOmZ1bmN0aW9uKCl7cmV0dXJuIEJvb2xlYW4odFtuLmZ1bGxzY3JlZW5FbGVtZW50XSl9LGVuYWJsZWQ6ZnVuY3Rpb24oKXtyZXR1cm4gQm9vbGVhbih0W24uZnVsbHNjcmVlbkVuYWJsZWRdKX19O2UuZXh0ZW5kKCEwLGUuZmFuY3lib3guZGVmYXVsdHMse2J0blRwbDp7ZnVsbFNjcmVlbjonPGJ1dHRvbiBkYXRhLWZhbmN5Ym94LWZ1bGxzY3JlZW4gY2xhc3M9XCJmYW5jeWJveC1idXR0b24gZmFuY3lib3gtYnV0dG9uLS1mc2VudGVyXCIgdGl0bGU9XCJ7e0ZVTExfU0NSRUVOfX1cIj48c3ZnIHhtbG5zPVwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIiB2aWV3Qm94PVwiMCAwIDI0IDI0XCI+PHBhdGggZD1cIk03IDE0SDV2NWg1di0ySDd2LTN6bS0yLTRoMlY3aDNWNUg1djV6bTEyIDdoLTN2Mmg1di01aC0ydjN6TTE0IDV2MmgzdjNoMlY1aC01elwiLz48L3N2Zz48c3ZnIHhtbG5zPVwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIiB2aWV3Qm94PVwiMCAwIDI0IDI0XCI+PHBhdGggZD1cIk01IDE2aDN2M2gydi01SDV6bTMtOEg1djJoNVY1SDh6bTYgMTFoMnYtM2gzdi0yaC01em0yLTExVjVoLTJ2NWg1Vjh6XCIvPjwvc3ZnPjwvYnV0dG9uPid9LGZ1bGxTY3JlZW46e2F1dG9TdGFydDohMX19KSxlKHQpLm9uKG4uZnVsbHNjcmVlbmNoYW5nZSxmdW5jdGlvbigpe3ZhciB0PW8uaXNGdWxsc2NyZWVuKCksbj1lLmZhbmN5Ym94LmdldEluc3RhbmNlKCk7biYmKG4uY3VycmVudCYmXCJpbWFnZVwiPT09bi5jdXJyZW50LnR5cGUmJm4uaXNBbmltYXRpbmcmJihuLmN1cnJlbnQuJGNvbnRlbnQuY3NzKFwidHJhbnNpdGlvblwiLFwibm9uZVwiKSxuLmlzQW5pbWF0aW5nPSExLG4udXBkYXRlKCEwLCEwLDApKSxuLnRyaWdnZXIoXCJvbkZ1bGxzY3JlZW5DaGFuZ2VcIix0KSxuLiRyZWZzLmNvbnRhaW5lci50b2dnbGVDbGFzcyhcImZhbmN5Ym94LWlzLWZ1bGxzY3JlZW5cIix0KSxuLiRyZWZzLnRvb2xiYXIuZmluZChcIltkYXRhLWZhbmN5Ym94LWZ1bGxzY3JlZW5dXCIpLnRvZ2dsZUNsYXNzKFwiZmFuY3lib3gtYnV0dG9uLS1mc2VudGVyXCIsIXQpLnRvZ2dsZUNsYXNzKFwiZmFuY3lib3gtYnV0dG9uLS1mc2V4aXRcIix0KSl9KX1lKHQpLm9uKHtcIm9uSW5pdC5mYlwiOmZ1bmN0aW9uKHQsZSl7dmFyIGE7cmV0dXJuIG4/dm9pZChlJiZlLmdyb3VwW2UuY3VyckluZGV4XS5vcHRzLmZ1bGxTY3JlZW4/KGE9ZS4kcmVmcy5jb250YWluZXIsYS5vbihcImNsaWNrLmZiLWZ1bGxzY3JlZW5cIixcIltkYXRhLWZhbmN5Ym94LWZ1bGxzY3JlZW5dXCIsZnVuY3Rpb24odCl7dC5zdG9wUHJvcGFnYXRpb24oKSx0LnByZXZlbnREZWZhdWx0KCksby50b2dnbGUoKX0pLGUub3B0cy5mdWxsU2NyZWVuJiZlLm9wdHMuZnVsbFNjcmVlbi5hdXRvU3RhcnQ9PT0hMCYmby5yZXF1ZXN0KCksZS5GdWxsU2NyZWVuPW8pOmUmJmUuJHJlZnMudG9vbGJhci5maW5kKFwiW2RhdGEtZmFuY3lib3gtZnVsbHNjcmVlbl1cIikuaGlkZSgpKTp2b2lkIGUuJHJlZnMudG9vbGJhci5maW5kKFwiW2RhdGEtZmFuY3lib3gtZnVsbHNjcmVlbl1cIikucmVtb3ZlKCl9LFwiYWZ0ZXJLZXlkb3duLmZiXCI6ZnVuY3Rpb24odCxlLG4sbyxhKXtlJiZlLkZ1bGxTY3JlZW4mJjcwPT09YSYmKG8ucHJldmVudERlZmF1bHQoKSxlLkZ1bGxTY3JlZW4udG9nZ2xlKCkpfSxcImJlZm9yZUNsb3NlLmZiXCI6ZnVuY3Rpb24odCxlKXtlJiZlLkZ1bGxTY3JlZW4mJmUuJHJlZnMuY29udGFpbmVyLmhhc0NsYXNzKFwiZmFuY3lib3gtaXMtZnVsbHNjcmVlblwiKSYmby5leGl0KCl9fSl9KGRvY3VtZW50LGpRdWVyeSksZnVuY3Rpb24odCxlKXtcInVzZSBzdHJpY3RcIjt2YXIgbj1cImZhbmN5Ym94LXRodW1ic1wiLG89bitcIi1hY3RpdmVcIjtlLmZhbmN5Ym94LmRlZmF1bHRzPWUuZXh0ZW5kKCEwLHtidG5UcGw6e3RodW1iczonPGJ1dHRvbiBkYXRhLWZhbmN5Ym94LXRodW1icyBjbGFzcz1cImZhbmN5Ym94LWJ1dHRvbiBmYW5jeWJveC1idXR0b24tLXRodW1ic1wiIHRpdGxlPVwie3tUSFVNQlN9fVwiPjxzdmcgeG1sbnM9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiIHZpZXdCb3g9XCIwIDAgMjQgMjRcIj48cGF0aCBkPVwiTTE0LjU5IDE0LjU5aDMuNzZ2My43NmgtMy43NnYtMy43NnptLTQuNDcgMGgzLjc2djMuNzZoLTMuNzZ2LTMuNzZ6bS00LjQ3IDBoMy43NnYzLjc2SDUuNjV2LTMuNzZ6bTguOTQtNC40N2gzLjc2djMuNzZoLTMuNzZ2LTMuNzZ6bS00LjQ3IDBoMy43NnYzLjc2aC0zLjc2di0zLjc2em0tNC40NyAwaDMuNzZ2My43Nkg1LjY1di0zLjc2em04Ljk0LTQuNDdoMy43NnYzLjc2aC0zLjc2VjUuNjV6bS00LjQ3IDBoMy43NnYzLjc2aC0zLjc2VjUuNjV6bS00LjQ3IDBoMy43NnYzLjc2SDUuNjVWNS42NXpcIi8+PC9zdmc+PC9idXR0b24+J30sdGh1bWJzOnthdXRvU3RhcnQ6ITEsaGlkZU9uQ2xvc2U6ITAscGFyZW50RWw6XCIuZmFuY3lib3gtY29udGFpbmVyXCIsYXhpczpcInlcIn19LGUuZmFuY3lib3guZGVmYXVsdHMpO3ZhciBhPWZ1bmN0aW9uKHQpe3RoaXMuaW5pdCh0KX07ZS5leHRlbmQoYS5wcm90b3R5cGUseyRidXR0b246bnVsbCwkZ3JpZDpudWxsLCRsaXN0Om51bGwsaXNWaXNpYmxlOiExLGlzQWN0aXZlOiExLGluaXQ6ZnVuY3Rpb24odCl7dmFyIGUsbixvPXRoaXM7by5pbnN0YW5jZT10LHQuVGh1bWJzPW8sby5vcHRzPXQuZ3JvdXBbdC5jdXJySW5kZXhdLm9wdHMudGh1bWJzLGU9dC5ncm91cFswXSxlPWUub3B0cy50aHVtYnx8ISghZS5vcHRzLiR0aHVtYnx8IWUub3B0cy4kdGh1bWIubGVuZ3RoKSYmZS5vcHRzLiR0aHVtYi5hdHRyKFwic3JjXCIpLHQuZ3JvdXAubGVuZ3RoPjEmJihuPXQuZ3JvdXBbMV0sbj1uLm9wdHMudGh1bWJ8fCEoIW4ub3B0cy4kdGh1bWJ8fCFuLm9wdHMuJHRodW1iLmxlbmd0aCkmJm4ub3B0cy4kdGh1bWIuYXR0cihcInNyY1wiKSksby4kYnV0dG9uPXQuJHJlZnMudG9vbGJhci5maW5kKFwiW2RhdGEtZmFuY3lib3gtdGh1bWJzXVwiKSxvLm9wdHMmJmUmJm4/KG8uJGJ1dHRvbi5zaG93KCkub24oXCJjbGlja1wiLGZ1bmN0aW9uKCl7by50b2dnbGUoKX0pLG8uaXNBY3RpdmU9ITApOm8uJGJ1dHRvbi5oaWRlKCl9LGNyZWF0ZTpmdW5jdGlvbigpe3ZhciB0LG89dGhpcyxhPW8uaW5zdGFuY2UsaT1vLm9wdHMucGFyZW50RWwscz1bXTtvLiRncmlkfHwoby4kZ3JpZD1lKCc8ZGl2IGNsYXNzPVwiJytuK1wiIFwiK24rXCItXCIrby5vcHRzLmF4aXMrJ1wiPjwvZGl2PicpLmFwcGVuZFRvKGEuJHJlZnMuY29udGFpbmVyLmZpbmQoaSkuYWRkQmFjaygpLmZpbHRlcihpKSksby4kZ3JpZC5vbihcImNsaWNrXCIsXCJhXCIsZnVuY3Rpb24oKXthLmp1bXBUbyhlKHRoaXMpLmF0dHIoXCJkYXRhLWluZGV4XCIpKX0pKSxvLiRsaXN0fHwoby4kbGlzdD1lKCc8ZGl2IGNsYXNzPVwiJytuKydfX2xpc3RcIj4nKS5hcHBlbmRUbyhvLiRncmlkKSksZS5lYWNoKGEuZ3JvdXAsZnVuY3Rpb24oZSxuKXt0PW4ub3B0cy50aHVtYnx8KG4ub3B0cy4kdGh1bWI/bi5vcHRzLiR0aHVtYi5hdHRyKFwic3JjXCIpOm51bGwpLHR8fFwiaW1hZ2VcIiE9PW4udHlwZXx8KHQ9bi5zcmMpLHMucHVzaCgnPGEgaHJlZj1cImphdmFzY3JpcHQ6O1wiIHRhYmluZGV4PVwiMFwiIGRhdGEtaW5kZXg9XCInK2UrJ1wiJysodCYmdC5sZW5ndGg/JyBzdHlsZT1cImJhY2tncm91bmQtaW1hZ2U6dXJsKCcrdCsnKVwiJzpcIlwiKStcIj48L2E+XCIpfSksby4kbGlzdFswXS5pbm5lckhUTUw9cy5qb2luKFwiXCIpLFwieFwiPT09by5vcHRzLmF4aXMmJm8uJGxpc3Qud2lkdGgocGFyc2VJbnQoby4kZ3JpZC5jc3MoXCJwYWRkaW5nLXJpZ2h0XCIpLDEwKSthLmdyb3VwLmxlbmd0aCpvLiRsaXN0LmNoaWxkcmVuKCkuZXEoMCkub3V0ZXJXaWR0aCghMCkpfSxmb2N1czpmdW5jdGlvbih0KXt2YXIgZSxuLGE9dGhpcyxpPWEuJGxpc3Qscz1hLiRncmlkO2EuaW5zdGFuY2UuY3VycmVudCYmKGU9aS5jaGlsZHJlbigpLnJlbW92ZUNsYXNzKG8pLmZpbHRlcignW2RhdGEtaW5kZXg9XCInK2EuaW5zdGFuY2UuY3VycmVudC5pbmRleCsnXCJdJykuYWRkQ2xhc3Mobyksbj1lLnBvc2l0aW9uKCksXCJ5XCI9PT1hLm9wdHMuYXhpcyYmKG4udG9wPDB8fG4udG9wPmkuaGVpZ2h0KCktZS5vdXRlckhlaWdodCgpKT9pLnN0b3AoKS5hbmltYXRlKHtzY3JvbGxUb3A6aS5zY3JvbGxUb3AoKStuLnRvcH0sdCk6XCJ4XCI9PT1hLm9wdHMuYXhpcyYmKG4ubGVmdDxzLnNjcm9sbExlZnQoKXx8bi5sZWZ0PnMuc2Nyb2xsTGVmdCgpKyhzLndpZHRoKCktZS5vdXRlcldpZHRoKCkpKSYmaS5wYXJlbnQoKS5zdG9wKCkuYW5pbWF0ZSh7c2Nyb2xsTGVmdDpuLmxlZnR9LHQpKX0sdXBkYXRlOmZ1bmN0aW9uKCl7dmFyIHQ9dGhpczt0Lmluc3RhbmNlLiRyZWZzLmNvbnRhaW5lci50b2dnbGVDbGFzcyhcImZhbmN5Ym94LXNob3ctdGh1bWJzXCIsdGhpcy5pc1Zpc2libGUpLHQuaXNWaXNpYmxlPyh0LiRncmlkfHx0LmNyZWF0ZSgpLHQuaW5zdGFuY2UudHJpZ2dlcihcIm9uVGh1bWJzU2hvd1wiKSx0LmZvY3VzKDApKTp0LiRncmlkJiZ0Lmluc3RhbmNlLnRyaWdnZXIoXCJvblRodW1ic0hpZGVcIiksdC5pbnN0YW5jZS51cGRhdGUoKX0saGlkZTpmdW5jdGlvbigpe3RoaXMuaXNWaXNpYmxlPSExLHRoaXMudXBkYXRlKCl9LHNob3c6ZnVuY3Rpb24oKXt0aGlzLmlzVmlzaWJsZT0hMCx0aGlzLnVwZGF0ZSgpfSx0b2dnbGU6ZnVuY3Rpb24oKXt0aGlzLmlzVmlzaWJsZT0hdGhpcy5pc1Zpc2libGUsdGhpcy51cGRhdGUoKX19KSxlKHQpLm9uKHtcIm9uSW5pdC5mYlwiOmZ1bmN0aW9uKHQsZSl7dmFyIG47ZSYmIWUuVGh1bWJzJiYobj1uZXcgYShlKSxuLmlzQWN0aXZlJiZuLm9wdHMuYXV0b1N0YXJ0PT09ITAmJm4uc2hvdygpKX0sXCJiZWZvcmVTaG93LmZiXCI6ZnVuY3Rpb24odCxlLG4sbyl7dmFyIGE9ZSYmZS5UaHVtYnM7YSYmYS5pc1Zpc2libGUmJmEuZm9jdXMobz8wOjI1MCl9LFwiYWZ0ZXJLZXlkb3duLmZiXCI6ZnVuY3Rpb24odCxlLG4sbyxhKXt2YXIgaT1lJiZlLlRodW1icztpJiZpLmlzQWN0aXZlJiY3MT09PWEmJihvLnByZXZlbnREZWZhdWx0KCksaS50b2dnbGUoKSl9LFwiYmVmb3JlQ2xvc2UuZmJcIjpmdW5jdGlvbih0LGUpe3ZhciBuPWUmJmUuVGh1bWJzO24mJm4uaXNWaXNpYmxlJiZuLm9wdHMuaGlkZU9uQ2xvc2UhPT0hMSYmbi4kZ3JpZC5oaWRlKCl9fSl9KGRvY3VtZW50LGpRdWVyeSksZnVuY3Rpb24odCxlKXtcInVzZSBzdHJpY3RcIjtmdW5jdGlvbiBuKHQpe3ZhciBlPXtcIiZcIjpcIiZhbXA7XCIsXCI8XCI6XCImbHQ7XCIsXCI+XCI6XCImZ3Q7XCIsJ1wiJzpcIiZxdW90O1wiLFwiJ1wiOlwiJiMzOTtcIixcIi9cIjpcIiYjeDJGO1wiLFwiYFwiOlwiJiN4NjA7XCIsXCI9XCI6XCImI3gzRDtcIn07cmV0dXJuIFN0cmluZyh0KS5yZXBsYWNlKC9bJjw+XCInYD1cXC9dL2csZnVuY3Rpb24odCl7cmV0dXJuIGVbdF19KX1lLmV4dGVuZCghMCxlLmZhbmN5Ym94LmRlZmF1bHRzLHtidG5UcGw6e3NoYXJlOic8YnV0dG9uIGRhdGEtZmFuY3lib3gtc2hhcmUgY2xhc3M9XCJmYW5jeWJveC1idXR0b24gZmFuY3lib3gtYnV0dG9uLS1zaGFyZVwiIHRpdGxlPVwie3tTSEFSRX19XCI+PHN2ZyB4bWxucz1cImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCIgdmlld0JveD1cIjAgMCAyNCAyNFwiPjxwYXRoIGQ9XCJNMi41NSAxOWMxLjQtOC40IDkuMS05LjggMTEuOS05LjhWNWw3IDctNyA2LjN2LTMuNWMtMi44IDAtMTAuNSAyLjEtMTEuOSA0LjJ6XCIvPjwvc3ZnPjwvYnV0dG9uPid9LHNoYXJlOnt1cmw6ZnVuY3Rpb24odCxlKXtyZXR1cm4hdC5jdXJyZW50SGFzaCYmXCJpbmxpbmVcIiE9PWUudHlwZSYmXCJodG1sXCIhPT1lLnR5cGUmJihlLm9yaWdTcmN8fGUuc3JjKXx8d2luZG93LmxvY2F0aW9ufSx0cGw6JzxkaXYgY2xhc3M9XCJmYW5jeWJveC1zaGFyZVwiPjxoMT57e1NIQVJFfX08L2gxPjxwPjxhIGNsYXNzPVwiZmFuY3lib3gtc2hhcmVfX2J1dHRvbiBmYW5jeWJveC1zaGFyZV9fYnV0dG9uLS1mYlwiIGhyZWY9XCJodHRwczovL3d3dy5mYWNlYm9vay5jb20vc2hhcmVyL3NoYXJlci5waHA/dT17e3VybH19XCI+PHN2ZyB2aWV3Qm94PVwiMCAwIDUxMiA1MTJcIiB4bWxucz1cImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCI+PHBhdGggZD1cIm0yODcgNDU2di0yOTljMC0yMSA2LTM1IDM1LTM1aDM4di02M2MtNy0xLTI5LTMtNTUtMy01NCAwLTkxIDMzLTkxIDk0djMwNm0xNDMtMjU0aC0yMDV2NzJoMTk2XCIgLz48L3N2Zz48c3Bhbj5GYWNlYm9vazwvc3Bhbj48L2E+PGEgY2xhc3M9XCJmYW5jeWJveC1zaGFyZV9fYnV0dG9uIGZhbmN5Ym94LXNoYXJlX19idXR0b24tLXR3XCIgaHJlZj1cImh0dHBzOi8vdHdpdHRlci5jb20vaW50ZW50L3R3ZWV0P3VybD17e3VybH19JnRleHQ9e3tkZXNjcn19XCI+PHN2ZyB2aWV3Qm94PVwiMCAwIDUxMiA1MTJcIiB4bWxucz1cImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCI+PHBhdGggZD1cIm00NTYgMTMzYy0xNCA3LTMxIDExLTQ3IDEzIDE3LTEwIDMwLTI3IDM3LTQ2LTE1IDEwLTM0IDE2LTUyIDIwLTYxLTYyLTE1Ny03LTE0MSA3NS02OC0zLTEyOS0zNS0xNjktODUtMjIgMzctMTEgODYgMjYgMTA5LTEzIDAtMjYtNC0zNy05IDAgMzkgMjggNzIgNjUgODAtMTIgMy0yNSA0LTM3IDIgMTAgMzMgNDEgNTcgNzcgNTctNDIgMzAtNzcgMzgtMTIyIDM0IDE3MCAxMTEgMzc4LTMyIDM1OS0yMDggMTYtMTEgMzAtMjUgNDEtNDJ6XCIgLz48L3N2Zz48c3Bhbj5Ud2l0dGVyPC9zcGFuPjwvYT48YSBjbGFzcz1cImZhbmN5Ym94LXNoYXJlX19idXR0b24gZmFuY3lib3gtc2hhcmVfX2J1dHRvbi0tcHRcIiBocmVmPVwiaHR0cHM6Ly93d3cucGludGVyZXN0LmNvbS9waW4vY3JlYXRlL2J1dHRvbi8/dXJsPXt7dXJsfX0mZGVzY3JpcHRpb249e3tkZXNjcn19Jm1lZGlhPXt7bWVkaWF9fVwiPjxzdmcgdmlld0JveD1cIjAgMCA1MTIgNTEyXCIgeG1sbnM9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiPjxwYXRoIGQ9XCJtMjY1IDU2Yy0xMDkgMC0xNjQgNzgtMTY0IDE0NCAwIDM5IDE1IDc0IDQ3IDg3IDUgMiAxMCAwIDEyLTVsNC0xOWMyLTYgMS04LTMtMTMtOS0xMS0xNS0yNS0xNS00NSAwLTU4IDQzLTExMCAxMTMtMTEwIDYyIDAgOTYgMzggOTYgODggMCA2Ny0zMCAxMjItNzMgMTIyLTI0IDAtNDItMTktMzYtNDQgNi0yOSAyMC02MCAyMC04MSAwLTE5LTEwLTM1LTMxLTM1LTI1IDAtNDQgMjYtNDQgNjAgMCAyMSA3IDM2IDcgMzZsLTMwIDEyNWMtOCAzNy0xIDgzIDAgODcgMCAzIDQgNCA1IDIgMi0zIDMyLTM5IDQyLTc1bDE2LTY0YzggMTYgMzEgMjkgNTYgMjkgNzQgMCAxMjQtNjcgMTI0LTE1NyAwLTY5LTU4LTEzMi0xNDYtMTMyelwiIGZpbGw9XCIjZmZmXCIvPjwvc3ZnPjxzcGFuPlBpbnRlcmVzdDwvc3Bhbj48L2E+PC9wPjxwPjxpbnB1dCBjbGFzcz1cImZhbmN5Ym94LXNoYXJlX19pbnB1dFwiIHR5cGU9XCJ0ZXh0XCIgdmFsdWU9XCJ7e3VybF9yYXd9fVwiIG9uY2xpY2s9XCJzZWxlY3QoKVwiIC8+PC9wPjwvZGl2Pid9fSksZSh0KS5vbihcImNsaWNrXCIsXCJbZGF0YS1mYW5jeWJveC1zaGFyZV1cIixmdW5jdGlvbigpe3ZhciB0LG8sYT1lLmZhbmN5Ym94LmdldEluc3RhbmNlKCksaT1hLmN1cnJlbnR8fG51bGw7aSYmKFwiZnVuY3Rpb25cIj09PWUudHlwZShpLm9wdHMuc2hhcmUudXJsKSYmKHQ9aS5vcHRzLnNoYXJlLnVybC5hcHBseShpLFthLGldKSksbz1pLm9wdHMuc2hhcmUudHBsLnJlcGxhY2UoL1xce1xce21lZGlhXFx9XFx9L2csXCJpbWFnZVwiPT09aS50eXBlP2VuY29kZVVSSUNvbXBvbmVudChpLnNyYyk6XCJcIikucmVwbGFjZSgvXFx7XFx7dXJsXFx9XFx9L2csZW5jb2RlVVJJQ29tcG9uZW50KHQpKS5yZXBsYWNlKC9cXHtcXHt1cmxfcmF3XFx9XFx9L2csbih0KSkucmVwbGFjZSgvXFx7XFx7ZGVzY3JcXH1cXH0vZyxhLiRjYXB0aW9uP2VuY29kZVVSSUNvbXBvbmVudChhLiRjYXB0aW9uLnRleHQoKSk6XCJcIiksZS5mYW5jeWJveC5vcGVuKHtzcmM6YS50cmFuc2xhdGUoYSxvKSx0eXBlOlwiaHRtbFwiLG9wdHM6e3RvdWNoOiExLGFuaW1hdGlvbkVmZmVjdDohMSxhZnRlckxvYWQ6ZnVuY3Rpb24odCxlKXthLiRyZWZzLmNvbnRhaW5lci5vbmUoXCJiZWZvcmVDbG9zZS5mYlwiLGZ1bmN0aW9uKCl7dC5jbG9zZShudWxsLDApfSksZS4kY29udGVudC5maW5kKFwiLmZhbmN5Ym94LXNoYXJlX19idXR0b25cIikuY2xpY2soZnVuY3Rpb24oKXtyZXR1cm4gd2luZG93Lm9wZW4odGhpcy5ocmVmLFwiU2hhcmVcIixcIndpZHRoPTU1MCwgaGVpZ2h0PTQ1MFwiKSwhMX0pfSxtb2JpbGU6e2F1dG9Gb2N1czohMX19fSkpfSl9KGRvY3VtZW50LGpRdWVyeSksZnVuY3Rpb24odCxlLG4pe1widXNlIHN0cmljdFwiO2Z1bmN0aW9uIG8oKXt2YXIgZT10LmxvY2F0aW9uLmhhc2guc3Vic3RyKDEpLG49ZS5zcGxpdChcIi1cIiksbz1uLmxlbmd0aD4xJiYvXlxcKz9cXGQrJC8udGVzdChuW24ubGVuZ3RoLTFdKT9wYXJzZUludChuLnBvcCgtMSksMTApfHwxOjEsYT1uLmpvaW4oXCItXCIpO3JldHVybntoYXNoOmUsaW5kZXg6bzwxPzE6byxnYWxsZXJ5OmF9fWZ1bmN0aW9uIGEodCl7XCJcIiE9PXQuZ2FsbGVyeSYmbihcIltkYXRhLWZhbmN5Ym94PSdcIituLmVzY2FwZVNlbGVjdG9yKHQuZ2FsbGVyeSkrXCInXVwiKS5lcSh0LmluZGV4LTEpLmZvY3VzKCkudHJpZ2dlcihcImNsaWNrLmZiLXN0YXJ0XCIpfWZ1bmN0aW9uIGkodCl7dmFyIGUsbjtyZXR1cm4hIXQmJihlPXQuY3VycmVudD90LmN1cnJlbnQub3B0czp0Lm9wdHMsbj1lLmhhc2h8fChlLiRvcmlnP2UuJG9yaWcuZGF0YShcImZhbmN5Ym94XCIpfHxlLiRvcmlnLmRhdGEoXCJmYW5jeWJveC10cmlnZ2VyXCIpOlwiXCIpLFwiXCIhPT1uJiZuKX1uLmVzY2FwZVNlbGVjdG9yfHwobi5lc2NhcGVTZWxlY3Rvcj1mdW5jdGlvbih0KXt2YXIgZT0vKFtcXDAtXFx4MWZcXHg3Zl18Xi0/XFxkKXxeLSR8W15cXHg4MC1cXHVGRkZGXFx3LV0vZyxuPWZ1bmN0aW9uKHQsZSl7cmV0dXJuIGU/XCJcXDBcIj09PXQ/XCLvv71cIjp0LnNsaWNlKDAsLTEpK1wiXFxcXFwiK3QuY2hhckNvZGVBdCh0Lmxlbmd0aC0xKS50b1N0cmluZygxNikrXCIgXCI6XCJcXFxcXCIrdH07cmV0dXJuKHQrXCJcIikucmVwbGFjZShlLG4pfSksbihmdW5jdGlvbigpe24uZmFuY3lib3guZGVmYXVsdHMuaGFzaCE9PSExJiYobihlKS5vbih7XCJvbkluaXQuZmJcIjpmdW5jdGlvbih0LGUpe3ZhciBuLGE7ZS5ncm91cFtlLmN1cnJJbmRleF0ub3B0cy5oYXNoIT09ITEmJihuPW8oKSxhPWkoZSksYSYmbi5nYWxsZXJ5JiZhPT1uLmdhbGxlcnkmJihlLmN1cnJJbmRleD1uLmluZGV4LTEpKX0sXCJiZWZvcmVTaG93LmZiXCI6ZnVuY3Rpb24obixvLGEscyl7dmFyIHI7YSYmYS5vcHRzLmhhc2ghPT0hMSYmKHI9aShvKSxyJiYoby5jdXJyZW50SGFzaD1yKyhvLmdyb3VwLmxlbmd0aD4xP1wiLVwiKyhhLmluZGV4KzEpOlwiXCIpLFxyXG50LmxvY2F0aW9uLmhhc2ghPT1cIiNcIitvLmN1cnJlbnRIYXNoJiYocyYmIW8ub3JpZ0hhc2gmJihvLm9yaWdIYXNoPXQubG9jYXRpb24uaGFzaCksby5oYXNoVGltZXImJmNsZWFyVGltZW91dChvLmhhc2hUaW1lciksby5oYXNoVGltZXI9c2V0VGltZW91dChmdW5jdGlvbigpe1wicmVwbGFjZVN0YXRlXCJpbiB0Lmhpc3Rvcnk/KHQuaGlzdG9yeVtzP1wicHVzaFN0YXRlXCI6XCJyZXBsYWNlU3RhdGVcIl0oe30sZS50aXRsZSx0LmxvY2F0aW9uLnBhdGhuYW1lK3QubG9jYXRpb24uc2VhcmNoK1wiI1wiK28uY3VycmVudEhhc2gpLHMmJihvLmhhc0NyZWF0ZWRIaXN0b3J5PSEwKSk6dC5sb2NhdGlvbi5oYXNoPW8uY3VycmVudEhhc2gsby5oYXNoVGltZXI9bnVsbH0sMzAwKSkpKX0sXCJiZWZvcmVDbG9zZS5mYlwiOmZ1bmN0aW9uKG4sbyxhKXthLm9wdHMuaGFzaCE9PSExJiYoY2xlYXJUaW1lb3V0KG8uaGFzaFRpbWVyKSxvLmN1cnJlbnRIYXNoJiZvLmhhc0NyZWF0ZWRIaXN0b3J5P3QuaGlzdG9yeS5iYWNrKCk6by5jdXJyZW50SGFzaCYmKFwicmVwbGFjZVN0YXRlXCJpbiB0Lmhpc3Rvcnk/dC5oaXN0b3J5LnJlcGxhY2VTdGF0ZSh7fSxlLnRpdGxlLHQubG9jYXRpb24ucGF0aG5hbWUrdC5sb2NhdGlvbi5zZWFyY2grKG8ub3JpZ0hhc2h8fFwiXCIpKTp0LmxvY2F0aW9uLmhhc2g9by5vcmlnSGFzaCksby5jdXJyZW50SGFzaD1udWxsKX19KSxuKHQpLm9uKFwiaGFzaGNoYW5nZS5mYlwiLGZ1bmN0aW9uKCl7dmFyIHQ9bygpLGU9bnVsbDtuLmVhY2gobihcIi5mYW5jeWJveC1jb250YWluZXJcIikuZ2V0KCkucmV2ZXJzZSgpLGZ1bmN0aW9uKHQsbyl7dmFyIGE9bihvKS5kYXRhKFwiRmFuY3lCb3hcIik7aWYoYSYmYS5jdXJyZW50SGFzaClyZXR1cm4gZT1hLCExfSksZT9lLmN1cnJlbnRIYXNoPT09dC5nYWxsZXJ5K1wiLVwiK3QuaW5kZXh8fDE9PT10LmluZGV4JiZlLmN1cnJlbnRIYXNoPT10LmdhbGxlcnl8fChlLmN1cnJlbnRIYXNoPW51bGwsZS5jbG9zZSgpKTpcIlwiIT09dC5nYWxsZXJ5JiZhKHQpfSksc2V0VGltZW91dChmdW5jdGlvbigpe24uZmFuY3lib3guZ2V0SW5zdGFuY2UoKXx8YShvKCkpfSw1MCkpfSl9KHdpbmRvdyxkb2N1bWVudCxqUXVlcnkpLGZ1bmN0aW9uKHQsZSl7XCJ1c2Ugc3RyaWN0XCI7dmFyIG49KG5ldyBEYXRlKS5nZXRUaW1lKCk7ZSh0KS5vbih7XCJvbkluaXQuZmJcIjpmdW5jdGlvbih0LGUsbyl7ZS4kcmVmcy5zdGFnZS5vbihcIm1vdXNld2hlZWwgRE9NTW91c2VTY3JvbGwgd2hlZWwgTW96TW91c2VQaXhlbFNjcm9sbFwiLGZ1bmN0aW9uKHQpe3ZhciBvPWUuY3VycmVudCxhPShuZXcgRGF0ZSkuZ2V0VGltZSgpO2UuZ3JvdXAubGVuZ3RoPDJ8fG8ub3B0cy53aGVlbD09PSExfHxcImF1dG9cIj09PW8ub3B0cy53aGVlbCYmXCJpbWFnZVwiIT09by50eXBlfHwodC5wcmV2ZW50RGVmYXVsdCgpLHQuc3RvcFByb3BhZ2F0aW9uKCksby4kc2xpZGUuaGFzQ2xhc3MoXCJmYW5jeWJveC1hbmltYXRlZFwiKXx8KHQ9dC5vcmlnaW5hbEV2ZW50fHx0LGEtbjwyNTB8fChuPWEsZVsoLXQuZGVsdGFZfHwtdC5kZWx0YVh8fHQud2hlZWxEZWx0YXx8LXQuZGV0YWlsKTwwP1wibmV4dFwiOlwicHJldmlvdXNcIl0oKSkpKX0pfX0pfShkb2N1bWVudCxqUXVlcnkpO1xyXG4vKlxyXG4gICAgalF1ZXJ5IE1hc2tlZCBJbnB1dCBQbHVnaW5cclxuICAgIENvcHlyaWdodCAoYykgMjAwNyAtIDIwMTUgSm9zaCBCdXNoIChkaWdpdGFsYnVzaC5jb20pXHJcbiAgICBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgKGh0dHA6Ly9kaWdpdGFsYnVzaC5jb20vcHJvamVjdHMvbWFza2VkLWlucHV0LXBsdWdpbi8jbGljZW5zZSlcclxuICAgIFZlcnNpb246IDEuNC4xXHJcbiovXHJcbiFmdW5jdGlvbihhKXtcImZ1bmN0aW9uXCI9PXR5cGVvZiBkZWZpbmUmJmRlZmluZS5hbWQ/ZGVmaW5lKFtcImpxdWVyeVwiXSxhKTphKFwib2JqZWN0XCI9PXR5cGVvZiBleHBvcnRzP3JlcXVpcmUoXCJqcXVlcnlcIik6alF1ZXJ5KX0oZnVuY3Rpb24oYSl7dmFyIGIsYz1uYXZpZ2F0b3IudXNlckFnZW50LGQ9L2lwaG9uZS9pLnRlc3QoYyksZT0vY2hyb21lL2kudGVzdChjKSxmPS9hbmRyb2lkL2kudGVzdChjKTthLm1hc2s9e2RlZmluaXRpb25zOns5OlwiWzAtOV1cIixhOlwiW0EtWmEtel1cIixcIipcIjpcIltBLVphLXowLTldXCJ9LGF1dG9jbGVhcjohMCxkYXRhTmFtZTpcInJhd01hc2tGblwiLHBsYWNlaG9sZGVyOlwiX1wifSxhLmZuLmV4dGVuZCh7Y2FyZXQ6ZnVuY3Rpb24oYSxiKXt2YXIgYztpZigwIT09dGhpcy5sZW5ndGgmJiF0aGlzLmlzKFwiOmhpZGRlblwiKSlyZXR1cm5cIm51bWJlclwiPT10eXBlb2YgYT8oYj1cIm51bWJlclwiPT10eXBlb2YgYj9iOmEsdGhpcy5lYWNoKGZ1bmN0aW9uKCl7dGhpcy5zZXRTZWxlY3Rpb25SYW5nZT90aGlzLnNldFNlbGVjdGlvblJhbmdlKGEsYik6dGhpcy5jcmVhdGVUZXh0UmFuZ2UmJihjPXRoaXMuY3JlYXRlVGV4dFJhbmdlKCksYy5jb2xsYXBzZSghMCksYy5tb3ZlRW5kKFwiY2hhcmFjdGVyXCIsYiksYy5tb3ZlU3RhcnQoXCJjaGFyYWN0ZXJcIixhKSxjLnNlbGVjdCgpKX0pKToodGhpc1swXS5zZXRTZWxlY3Rpb25SYW5nZT8oYT10aGlzWzBdLnNlbGVjdGlvblN0YXJ0LGI9dGhpc1swXS5zZWxlY3Rpb25FbmQpOmRvY3VtZW50LnNlbGVjdGlvbiYmZG9jdW1lbnQuc2VsZWN0aW9uLmNyZWF0ZVJhbmdlJiYoYz1kb2N1bWVudC5zZWxlY3Rpb24uY3JlYXRlUmFuZ2UoKSxhPTAtYy5kdXBsaWNhdGUoKS5tb3ZlU3RhcnQoXCJjaGFyYWN0ZXJcIiwtMWU1KSxiPWErYy50ZXh0Lmxlbmd0aCkse2JlZ2luOmEsZW5kOmJ9KX0sdW5tYXNrOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMudHJpZ2dlcihcInVubWFza1wiKX0sbWFzazpmdW5jdGlvbihjLGcpe3ZhciBoLGksaixrLGwsbSxuLG87aWYoIWMmJnRoaXMubGVuZ3RoPjApe2g9YSh0aGlzWzBdKTt2YXIgcD1oLmRhdGEoYS5tYXNrLmRhdGFOYW1lKTtyZXR1cm4gcD9wKCk6dm9pZCAwfXJldHVybiBnPWEuZXh0ZW5kKHthdXRvY2xlYXI6YS5tYXNrLmF1dG9jbGVhcixwbGFjZWhvbGRlcjphLm1hc2sucGxhY2Vob2xkZXIsY29tcGxldGVkOm51bGx9LGcpLGk9YS5tYXNrLmRlZmluaXRpb25zLGo9W10saz1uPWMubGVuZ3RoLGw9bnVsbCxhLmVhY2goYy5zcGxpdChcIlwiKSxmdW5jdGlvbihhLGIpe1wiP1wiPT1iPyhuLS0saz1hKTppW2JdPyhqLnB1c2gobmV3IFJlZ0V4cChpW2JdKSksbnVsbD09PWwmJihsPWoubGVuZ3RoLTEpLGs+YSYmKG09ai5sZW5ndGgtMSkpOmoucHVzaChudWxsKX0pLHRoaXMudHJpZ2dlcihcInVubWFza1wiKS5lYWNoKGZ1bmN0aW9uKCl7ZnVuY3Rpb24gaCgpe2lmKGcuY29tcGxldGVkKXtmb3IodmFyIGE9bDttPj1hO2ErKylpZihqW2FdJiZDW2FdPT09cChhKSlyZXR1cm47Zy5jb21wbGV0ZWQuY2FsbChCKX19ZnVuY3Rpb24gcChhKXtyZXR1cm4gZy5wbGFjZWhvbGRlci5jaGFyQXQoYTxnLnBsYWNlaG9sZGVyLmxlbmd0aD9hOjApfWZ1bmN0aW9uIHEoYSl7Zm9yKDsrK2E8biYmIWpbYV07KTtyZXR1cm4gYX1mdW5jdGlvbiByKGEpe2Zvcig7LS1hPj0wJiYhalthXTspO3JldHVybiBhfWZ1bmN0aW9uIHMoYSxiKXt2YXIgYyxkO2lmKCEoMD5hKSl7Zm9yKGM9YSxkPXEoYik7bj5jO2MrKylpZihqW2NdKXtpZighKG4+ZCYmaltjXS50ZXN0KENbZF0pKSlicmVhaztDW2NdPUNbZF0sQ1tkXT1wKGQpLGQ9cShkKX16KCksQi5jYXJldChNYXRoLm1heChsLGEpKX19ZnVuY3Rpb24gdChhKXt2YXIgYixjLGQsZTtmb3IoYj1hLGM9cChhKTtuPmI7YisrKWlmKGpbYl0pe2lmKGQ9cShiKSxlPUNbYl0sQ1tiXT1jLCEobj5kJiZqW2RdLnRlc3QoZSkpKWJyZWFrO2M9ZX19ZnVuY3Rpb24gdSgpe3ZhciBhPUIudmFsKCksYj1CLmNhcmV0KCk7aWYobyYmby5sZW5ndGgmJm8ubGVuZ3RoPmEubGVuZ3RoKXtmb3IoQSghMCk7Yi5iZWdpbj4wJiYhaltiLmJlZ2luLTFdOyliLmJlZ2luLS07aWYoMD09PWIuYmVnaW4pZm9yKDtiLmJlZ2luPGwmJiFqW2IuYmVnaW5dOyliLmJlZ2luKys7Qi5jYXJldChiLmJlZ2luLGIuYmVnaW4pfWVsc2V7Zm9yKEEoITApO2IuYmVnaW48biYmIWpbYi5iZWdpbl07KWIuYmVnaW4rKztCLmNhcmV0KGIuYmVnaW4sYi5iZWdpbil9aCgpfWZ1bmN0aW9uIHYoKXtBKCksQi52YWwoKSE9RSYmQi5jaGFuZ2UoKX1mdW5jdGlvbiB3KGEpe2lmKCFCLnByb3AoXCJyZWFkb25seVwiKSl7dmFyIGIsYyxlLGY9YS53aGljaHx8YS5rZXlDb2RlO289Qi52YWwoKSw4PT09Znx8NDY9PT1mfHxkJiYxMjc9PT1mPyhiPUIuY2FyZXQoKSxjPWIuYmVnaW4sZT1iLmVuZCxlLWM9PT0wJiYoYz00NiE9PWY/cihjKTplPXEoYy0xKSxlPTQ2PT09Zj9xKGUpOmUpLHkoYyxlKSxzKGMsZS0xKSxhLnByZXZlbnREZWZhdWx0KCkpOjEzPT09Zj92LmNhbGwodGhpcyxhKToyNz09PWYmJihCLnZhbChFKSxCLmNhcmV0KDAsQSgpKSxhLnByZXZlbnREZWZhdWx0KCkpfX1mdW5jdGlvbiB4KGIpe2lmKCFCLnByb3AoXCJyZWFkb25seVwiKSl7dmFyIGMsZCxlLGc9Yi53aGljaHx8Yi5rZXlDb2RlLGk9Qi5jYXJldCgpO2lmKCEoYi5jdHJsS2V5fHxiLmFsdEtleXx8Yi5tZXRhS2V5fHwzMj5nKSYmZyYmMTMhPT1nKXtpZihpLmVuZC1pLmJlZ2luIT09MCYmKHkoaS5iZWdpbixpLmVuZCkscyhpLmJlZ2luLGkuZW5kLTEpKSxjPXEoaS5iZWdpbi0xKSxuPmMmJihkPVN0cmluZy5mcm9tQ2hhckNvZGUoZyksaltjXS50ZXN0KGQpKSl7aWYodChjKSxDW2NdPWQseigpLGU9cShjKSxmKXt2YXIgaz1mdW5jdGlvbigpe2EucHJveHkoYS5mbi5jYXJldCxCLGUpKCl9O3NldFRpbWVvdXQoaywwKX1lbHNlIEIuY2FyZXQoZSk7aS5iZWdpbjw9bSYmaCgpfWIucHJldmVudERlZmF1bHQoKX19fWZ1bmN0aW9uIHkoYSxiKXt2YXIgYztmb3IoYz1hO2I+YyYmbj5jO2MrKylqW2NdJiYoQ1tjXT1wKGMpKX1mdW5jdGlvbiB6KCl7Qi52YWwoQy5qb2luKFwiXCIpKX1mdW5jdGlvbiBBKGEpe3ZhciBiLGMsZCxlPUIudmFsKCksZj0tMTtmb3IoYj0wLGQ9MDtuPmI7YisrKWlmKGpbYl0pe2ZvcihDW2JdPXAoYik7ZCsrPGUubGVuZ3RoOylpZihjPWUuY2hhckF0KGQtMSksaltiXS50ZXN0KGMpKXtDW2JdPWMsZj1iO2JyZWFrfWlmKGQ+ZS5sZW5ndGgpe3koYisxLG4pO2JyZWFrfX1lbHNlIENbYl09PT1lLmNoYXJBdChkKSYmZCsrLGs+YiYmKGY9Yik7cmV0dXJuIGE/eigpOms+ZisxP2cuYXV0b2NsZWFyfHxDLmpvaW4oXCJcIik9PT1EPyhCLnZhbCgpJiZCLnZhbChcIlwiKSx5KDAsbikpOnooKTooeigpLEIudmFsKEIudmFsKCkuc3Vic3RyaW5nKDAsZisxKSkpLGs/YjpsfXZhciBCPWEodGhpcyksQz1hLm1hcChjLnNwbGl0KFwiXCIpLGZ1bmN0aW9uKGEsYil7cmV0dXJuXCI/XCIhPWE/aVthXT9wKGIpOmE6dm9pZCAwfSksRD1DLmpvaW4oXCJcIiksRT1CLnZhbCgpO0IuZGF0YShhLm1hc2suZGF0YU5hbWUsZnVuY3Rpb24oKXtyZXR1cm4gYS5tYXAoQyxmdW5jdGlvbihhLGIpe3JldHVybiBqW2JdJiZhIT1wKGIpP2E6bnVsbH0pLmpvaW4oXCJcIil9KSxCLm9uZShcInVubWFza1wiLGZ1bmN0aW9uKCl7Qi5vZmYoXCIubWFza1wiKS5yZW1vdmVEYXRhKGEubWFzay5kYXRhTmFtZSl9KS5vbihcImZvY3VzLm1hc2tcIixmdW5jdGlvbigpe2lmKCFCLnByb3AoXCJyZWFkb25seVwiKSl7Y2xlYXJUaW1lb3V0KGIpO3ZhciBhO0U9Qi52YWwoKSxhPUEoKSxiPXNldFRpbWVvdXQoZnVuY3Rpb24oKXtCLmdldCgwKT09PWRvY3VtZW50LmFjdGl2ZUVsZW1lbnQmJih6KCksYT09Yy5yZXBsYWNlKFwiP1wiLFwiXCIpLmxlbmd0aD9CLmNhcmV0KDAsYSk6Qi5jYXJldChhKSl9LDEwKX19KS5vbihcImJsdXIubWFza1wiLHYpLm9uKFwia2V5ZG93bi5tYXNrXCIsdykub24oXCJrZXlwcmVzcy5tYXNrXCIseCkub24oXCJpbnB1dC5tYXNrIHBhc3RlLm1hc2tcIixmdW5jdGlvbigpe0IucHJvcChcInJlYWRvbmx5XCIpfHxzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7dmFyIGE9QSghMCk7Qi5jYXJldChhKSxoKCl9LDApfSksZSYmZiYmQi5vZmYoXCJpbnB1dC5tYXNrXCIpLm9uKFwiaW5wdXQubWFza1wiLHUpLEEoKX0pfX0pfSk7XHJcblxyXG5cclxuLypcclxuICog0JrQsNGB0YLQvtC80L3Ri9C1IEpTXHJcbiAqL1xyXG4oZnVuY3Rpb24gKCkge1xyXG4gICAgJ3VzZSBzdHJpY3QnO1xyXG4gICAgLyotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cclxuICAgIC8qICBNYXNrIFBob25lIEZvcm1cclxuICAgIC8qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXHJcblxyXG4gICAgJChkb2N1bWVudCkucmVhZHkoZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICQoJ2lucHV0W3R5cGU9XCJ0ZWxcIl0nKS5tYXNrKFwiKzcgKDk5OSkgOTk5LTk5LTk5XCIpO1xyXG4gICAgfSk7XHJcblxyXG4gICAgLyotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cclxuICAgIC8qICBIZWFkZXIgRml4ZWRcclxuICAgIC8qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXHJcblxyXG4gICAgZnVuY3Rpb24gb25GaXhlZChCRikge1xyXG4gICAgICAgIEJGLmFkZENsYXNzKCdpcy1maXhlZCcpO1xyXG4gICAgICAgICQoJy5maXhlZC1waG9uZScpLmFkZENsYXNzKCdjb2wtbWQtMTInKTtcclxuICAgIH1cclxuXHJcbiAgICBmdW5jdGlvbiBvZmZGaXhlZChCRikge1xyXG4gICAgICAgIEJGLnJlbW92ZUNsYXNzKCdpcy1maXhlZCcpO1xyXG4gICAgICAgICQoJy5maXhlZC1waG9uZScpLnJlbW92ZUNsYXNzKCdjb2wtbWQtMTInKTtcclxuICAgIH1cclxuXHJcbiAgICBmdW5jdGlvbiBibG9ja0ZpeGVkKEJGKSB7XHJcbiAgICAgICAgdmFyICR0ID0gJChcIi5ibG9jay1maXhlZFwiKTtcclxuICAgICAgICB2YXIgZml4ZWRIZWlnaHQgPSAkKFwiLndwYXItZml4ZWRcIikuY2hpbGRyZW4oXCIuYmxvY2stZml4ZWRcIikub3V0ZXJIZWlnaHQoKSxcclxuICAgICAgICAgICAgZml4ZWRUb3AgPSAkdC5vZmZzZXQoKS50b3AsXHJcbiAgICAgICAgICAgIHRvcFNjcm9sbCA9IGZpeGVkVG9wICsgZml4ZWRIZWlnaHQ7XHJcblxyXG4gICAgICAgICQoXCIud3Bhci1maXhlZFwiKS5oZWlnaHQoZml4ZWRIZWlnaHQpO1xyXG5cclxuICAgICAgICAkKHdpbmRvdykub24oJ3Njcm9sbCByZXNpemUnLCBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIGlmICgkKHRoaXMpLnNjcm9sbFRvcCgpID4gdG9wU2Nyb2xsKSB7XHJcbiAgICAgICAgICAgICAgICBvbkZpeGVkKCR0KTtcclxuICAgICAgICAgICAgfSBlbHNlIGlmICgkKHRoaXMpLnNjcm9sbFRvcCgpIDwgMjApIHtcclxuICAgICAgICAgICAgICAgIG9mZkZpeGVkKCR0KTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pO1xyXG4gICAgfVxyXG5cclxuICAgIGlmICgkKCcqJykuaXMoJy5ibG9jay1maXhlZCcpKSB7XHJcbiAgICAgICAgJCgnLmJsb2NrLWZpeGVkJykud3JhcEFsbCgnPGRpdiBjbGFzcz1cIndwYXItZml4ZWRcIj48L2Rpdj4nKTtcclxuICAgICAgICBibG9ja0ZpeGVkKCk7XHJcbiAgICAgICAgJCh3aW5kb3cpLm9uKCdyZXNpemUnLCBibG9ja0ZpeGVkKTtcclxuICAgIH1cclxuXHJcbiAgICAvKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xyXG4gICAgLyogIEhlYWRlciBDbG9uZVxyXG4gICAgLyotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cclxuXHJcbiAgICAkKGRvY3VtZW50KS5yZWFkeShmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgdmFyIGhNYWluID0gJCgnLmhlYWRlcjpub3QoLmlzLWNsb25lKScpLFxyXG4gICAgICAgICAgICBoQ2xvbmUgPSAkKCcuaGVhZGVyLmlzLWNsb25lJyksXHJcbiAgICAgICAgICAgIGhNYWluSGVpZ2h0ID0gaE1haW4uaW5uZXJIZWlnaHQoKSxcclxuICAgICAgICAgICAgdG9wSGVpZ2h0ID0gaE1haW4ub2Zmc2V0KCkudG9wICsgaE1haW5IZWlnaHQsXHJcbiAgICAgICAgICAgIGhDbG9uZUhlaWdodCA9IGhDbG9uZS5pbm5lckhlaWdodCgpLFxyXG4gICAgICAgICAgICBoQWxsID0gTnVtYmVyKGhNYWluSGVpZ2h0ICsgaENsb25lSGVpZ2h0KTtcclxuICAgICAgICAvL2Nsb25lID0gJCgnLmJsb2NrLWZpeGVkJykuYmVmb3JlKCQoJy5ibG9jay1maXhlZCcpLmNsb25lKCkuYWRkQ2xhc3MoXCJjbG9uZVwiKSk7XHJcbiAgICAgICAgJCgnLmhlYWRlci5pcy1jbG9uZScpLmNzcyh7XHJcbiAgICAgICAgICAgIFwidG9wXCI6IFwiLVwiICsgaEFsbCArIFwicHhcIlxyXG4gICAgICAgIH0pO1xyXG4gICAgICAgICQod2luZG93KS5zY3JvbGwoZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICBpZiAoJCh0aGlzKS5zY3JvbGxUb3AoKSA+IHRvcEhlaWdodCkge1xyXG4gICAgICAgICAgICAgICAgJCgnLmhlYWRlci5pcy1jbG9uZScpLmFkZENsYXNzKCdpcy1maXhlZCcpO1xyXG4gICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgJCgnLmhlYWRlci5pcy1jbG9uZScpLnJlbW92ZUNsYXNzKCdpcy1maXhlZCcpO1xyXG4gICAgICAgICAgICAgICAgJCgnLmhlYWRlci5pcy1jbG9uZScpLmNzcyh7XHJcbiAgICAgICAgICAgICAgICAgICAgXCJ0b3BcIjogXCItXCIgKyBoQWxsICsgXCJweFwiXHJcbiAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pO1xyXG4gICAgfSk7XHJcblxyXG4gICAgLyotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cclxuICAgIC8qICBPd2wgQ2Fyb3VzZWwgXHJcbiAgICAvKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xyXG4gICAgZnVuY3Rpb24gc2V0X3ZhbHVlKGNhcm91c2VsLCB2YWx1ZSwgZGVmYXVsdF92YWx1ZSkge1xyXG4gICAgICAgIHZhciB2YWx1ZSA9IChjYXJvdXNlbC5kYXRhKHZhbHVlKSB8fCBjYXJvdXNlbC5kYXRhKHZhbHVlKSA9PSBmYWxzZSkgPyBjYXJvdXNlbC5kYXRhKHZhbHVlKSA6IGRlZmF1bHRfdmFsdWU7XHJcbiAgICAgICAgcmV0dXJuIHZhbHVlO1xyXG4gICAgfVxyXG5cclxuICAgICQoZG9jdW1lbnQpLnJlYWR5KGZ1bmN0aW9uICgpIHtcclxuICAgICAgICB2YXIgb3dsID0gJChcIi5jYXJvdXNlbFwiKTtcclxuICAgICAgICBvd2wuZWFjaChmdW5jdGlvbiAoaSkge1xyXG4gICAgICAgICAgICB2YXIgJHQgPSAkKHRoaXMpLFxyXG4gICAgICAgICAgICAgICAgb3B0aW9ucyA9IHtcclxuICAgICAgICAgICAgICAgICAgICBpdGVtczogJHQuZGF0YSgnaXRlbXMnKSB8fCAxLCAvL2F0dHIoJ2RhdGEtaXRlbXMnKVxyXG4gICAgICAgICAgICAgICAgICAgIG1hcmdpbjogTnVtYmVyKCR0LmRhdGEoJ21hcmdpbicpKSB8fCAxNSxcclxuICAgICAgICAgICAgICAgICAgICBsb29wOiAkdC5kYXRhKCdsb29wJykgPyAkdC5kYXRhKCdsb29wJykgOiB0cnVlLFxyXG4gICAgICAgICAgICAgICAgICAgIG5hdjogc2V0X3ZhbHVlKCR0LCAnbmF2JywgdHJ1ZSksXHJcbiAgICAgICAgICAgICAgICAgICAgbmF2VGV4dDogWycnLCAnJ10sIC8vWyc8aSBjbGFzcz1cImZhIGZhLWFuZ2xlLWxlZnRcIj48L2k+JywnPGkgY2xhc3M9XCJmYSBmYS1hbmdsZS1yaWdodFwiPjwvaT4nXSxcclxuICAgICAgICAgICAgICAgICAgICBkb3RzOiBzZXRfdmFsdWUoJHQsICdkb3RzJywgZmFsc2UpLFxyXG4gICAgICAgICAgICAgICAgICAgIGF1dG9wbGF5OiBzZXRfdmFsdWUoJHQsICdhdXRvcGxheScsIGZhbHNlKSxcclxuICAgICAgICAgICAgICAgICAgICBhdXRvcGxheVRpbWVvdXQ6IDIwMDAsXHJcbiAgICAgICAgICAgICAgICAgICAgYXV0b3BsYXlTcGVlZDogMTAwMCxcclxuICAgICAgICAgICAgICAgICAgICBhbmltYXRlT3V0OiBzZXRfdmFsdWUoJHQsICdhbmltYXRlJywgZmFsc2UpLFxyXG4gICAgICAgICAgICAgICAgICAgIC8vYW5pbWF0ZUluOiBcImZhZGVcIiwgICAgIFxyXG4gICAgICAgICAgICAgICAgICAgIC8vbmF2Q29udGFpbmVyOiBmYWxzZSxcclxuICAgICAgICAgICAgICAgICAgICBzdGFnZU91dGVyQ2xhc3M6ICdjYXJvdXNlbF9fY29udGVudCcsXHJcbiAgICAgICAgICAgICAgICAgICAgc3RhZ2VDbGFzczogJ2Nhcm91c2VsX19pbm5lcicsXHJcbiAgICAgICAgICAgICAgICAgICAgbmF2Q29udGFpbmVyQ2xhc3M6ICdjYXJvdXNlbF9fbmF2JyxcclxuICAgICAgICAgICAgICAgICAgICBuYXZDbGFzczogWydjYXJvdXNlbF9fbmF2LWl0ZW0gY2Fyb3VzZWxfX25hdi1pdGVtLS1wcmV2JywgJ2Nhcm91c2VsX19uYXYtaXRlbSBjYXJvdXNlbF9fbmF2LWl0ZW0tLW5leHQnXSxcclxuICAgICAgICAgICAgICAgICAgICBkb3RzQ2xhc3M6ICdjYXJvdXNlbF9fZG90cycsXHJcbiAgICAgICAgICAgICAgICAgICAgZG90Q2xhc3M6ICdjYXJvdXNlbF9fZG90cy1pdGVtJyxcclxuICAgICAgICAgICAgICAgICAgICByZXNwb25zaXZlOiB7fSxcclxuICAgICAgICAgICAgICAgIH07XHJcblxyXG4gICAgICAgICAgICBpZiAoJHQuZGF0YSgnYW5pbWF0ZScpID09IFwiZmFkZVwiKSBvcHRpb25zLm1vdXNlRHJhZyA9IGZhbHNlO1xyXG5cclxuICAgICAgICAgICAgdmFyIG1heFdpZHRoID0gJHQuZGF0YSgnbWF4LXdpZHRoJykgPyAkdC5kYXRhKCdtYXgtd2lkdGgnKSA6IDEyMDAsXHJcbiAgICAgICAgICAgICAgICBpdGVtU2l6ZSA9IG1heFdpZHRoIC8gKG9wdGlvbnMuaXRlbXMgLSAxKTtcclxuXHJcbiAgICAgICAgICAgICR0LmF0dHIoJ2lkJywgJ293bC1jYXJvdXNlbC0nICsgaSk7IC8vIGFkZElkXHJcblxyXG4gICAgICAgICAgICBpZiAoJCh0aGlzKS5oYXNDbGFzcygnc2xpZGVyJykpIHtcclxuICAgICAgICAgICAgICAgIG9wdGlvbnMubmF2Q29udGFpbmVyQ2xhc3MgKz0gJyBjYXJvdXNlbF9fbmF2LS1zbGlkZXInO1xyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICBpZiAoJCh0aGlzKS5oYXNDbGFzcygnc2xpZGVyLS13aWRnZXQnKSkge1xyXG4gICAgICAgICAgICAgICAgb3B0aW9ucy5uYXZDb250YWluZXJDbGFzcyArPSAnIGNhcm91c2VsX19uYXYtLXNsaWRlci13aWRnZXQnO1xyXG4gICAgICAgICAgICAgICAgb3B0aW9ucy5kb3RzQ2xhc3MgKz0gJyBjYXJvdXNlbF9fZG90cy0tc2xpZGVyLXdpZGdldCc7XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIGlmIChvcHRpb25zLml0ZW1zID4gMSkge1xyXG4gICAgICAgICAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPD0gb3B0aW9ucy5pdGVtcyAtIDE7IGkrKykge1xyXG4gICAgICAgICAgICAgICAgICAgIHZhciBrZXkgPSBTdHJpbmcoaXRlbVNpemUgKiBpKTtcclxuICAgICAgICAgICAgICAgICAgICBvcHRpb25zLnJlc3BvbnNpdmVba2V5XSA9IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgaXRlbXM6IGkgKyAxXHJcbiAgICAgICAgICAgICAgICAgICAgfTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgJHQub3dsQ2Fyb3VzZWwob3B0aW9ucyk7XHJcbiAgICAgICAgfSk7XHJcbiAgICB9KTtcclxuXHJcbi8qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXHJcblx0LypcdFNjcm9sbCBBbmNob3JcclxuXHQvKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xyXG5cclxuXHQkKGRvY3VtZW50KS5yZWFkeShmdW5jdGlvbigpIHtcclxuXHRcdHZhciBtYXNrQ2xpY2sgPSBcIiNhbmNob3ItXCI7Ly9cIiNhbmNob3ItXCI7XHJcbiAgICAgICAgJCgnW2hyZWYqPVwiJyArIG1hc2tDbGljayArICdcIl0nKS5vbignY2xpY2snLCBmdW5jdGlvbigpIHtcclxuICAgICAgICAgICBcdHZhciBpdGVtSWQgPSAkKHRoaXMpLmF0dHIoXCJocmVmXCIpLFxyXG5cdFx0XHRcdHN0ck5hbWUgPSBpdGVtSWQucmVwbGFjZSgnIycsJycpLFxyXG5cdFx0XHRcdGl0ZW1OYW1lID0gJ1tuYW1lPScgKyBzdHJOYW1lICsgJ10nO1xyXG5cdFx0XHRpZiAoICQoJyonKS5pcyhpdGVtSWQpIHx8ICQoJyonKS5pcyhpdGVtTmFtZSkgKSB7XHJcblx0XHRcdFx0Ly9jb25zb2xlLmxvZyhpdGVtTmFtZSk7XHJcblx0XHRcdFx0dmFyIGl0ZW0gPSAkKCcqJykuaXMoaXRlbUlkKSA/IGl0ZW1JZCA6IGl0ZW1OYW1lLFxyXG4gICAgICAgICAgICAgICAgaXRlbVRvcCA9ICQoaXRlbSkub2Zmc2V0KCkudG9wLFxyXG4gICAgICAgICAgICAgICAgYmxvY2tGaXhlZCA9ICQoZG9jdW1lbnQpLndpZHRoKCkgPj0gNzY4ID8gXCIuaGVhZGVyLWNsb25lXCIgOiBcIi5oZWFkZXItbW9iaWxlXCIsXHJcblx0XHRcdFx0aGVpZ2h0SGVhZGVyID0gJChibG9ja0ZpeGVkKS5vdXRlckhlaWdodCgpLFxyXG4gICAgICAgICAgICAgICAgZGVzdGluYXRpb24gPSBpdGVtVG9wIC0gaGVpZ2h0SGVhZGVyO1xyXG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coYmxvY2tGaXhlZCArICcgJyArIGhlaWdodEhlYWRlcik7XHJcbiAgICAgICAgICAgICAgICBcclxuXHRcdFx0XHQkKFwiaHRtbDpub3QoOmFuaW1hdGVkKSxib2R5Om5vdCg6YW5pbWF0ZWQpXCIpLmFuaW1hdGUoe3Njcm9sbFRvcDogZGVzdGluYXRpb259LCA4MDApO1xyXG5cdFx0XHR9XHJcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcclxuICAgICAgICB9KTtcclxuXHR9KTtcclxuICAgIC8qICovXHJcblxyXG5cclxuICAgIC8qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXHJcbiAgICAvKiAgc2xpY2tcclxuICAgIC8qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXHJcbiAgICAvLyAkKCcuY2Fyb3VzZWwtdmVydGljYWwnKS5zbGljayh7XHJcbiAgICAvLyAgICAgc2xpZGVzVG9TaG93OiAzLFxyXG4gICAgLy8gICAgIHNsaWRlc1RvU2Nyb2xsOiAxLFxyXG4gICAgLy8gICAgIHZlcnRpY2FsU3dpcGluZzogdHJ1ZSxcclxuICAgIC8vICAgICB2ZXJ0aWNhbDogdHJ1ZSxcclxuICAgIC8vICAgICBjZW50ZXJNb2RlOiB0cnVlLFxyXG4gICAgLy8gICAgIGFycm93czogdHJ1ZSxcclxuICAgIC8vICAgICBhZGFwdGl2ZUhlaWdodDogdHJ1ZSxcclxuICAgIC8vICAgICBjZW50ZXJQYWRkaW5nOiAwXHJcbiAgICAvLyB9KTtcclxuICAgIC8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuXHJcbiAgICAvKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xyXG4gICAgLypcdCAgICAgICAgICAgICAgICAgIEMtU0xJREUtTkFWXHJcbiAgICAvKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xyXG4gICAgJChmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgLy8tLS0tLS0tLS0tLS0tLS0tLdCh0L7QsdGL0YLQuNGPINC00LvRjyDRhNC40LvRjNGC0YAt0LzQtdC90Y4tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcbiAgICAgICAgLy8gJChcIi53cmFwLWZpbHRlci1mb3JtXCIpLmNsb25lKCkucHJlcGVuZFRvKFwiLmMtc2xpZGVfX3dyYXBwZXJcIik7XHJcbiAgICAgICAgdmFyIGJ1dHRvbiA9ICQoJy5jLXNsaWRlLW5hdl9fYnV0dG9uLWxpbmsnKTtcclxuICAgICAgICB2YXIgc2xpZGVyID0gJCgnLmMtc2xpZGUtbmF2Jyk7XHJcblxyXG4gICAgICAgIGJ1dHRvbi5vbignY2xpY2snLCBmdW5jdGlvbiAoZSkge1xyXG4gICAgICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7XHJcbiAgICAgICAgICAgIHZhciBkYXRhQ29udHJvbCA9ICQodGhpcykuZGF0YSgnY29udHJvbCcpO1xyXG4gICAgICAgICAgICBzbGlkZXIucmVtb3ZlQ2xhc3MoJy0taXMtYWN0aXZlJyk7XHJcbiAgICAgICAgICAgICQoJy5jLXNsaWRlLW5hdltkYXRhLWNvbnRyb2w9JyArIGRhdGFDb250cm9sICsgJ10nKS5zaG93KCk7XHJcbiAgICAgICAgICAgICQoJy5jLXNsaWRlLW5hdltkYXRhLWNvbnRyb2w9JyArIGRhdGFDb250cm9sICsgJ10nKS5hZGRDbGFzcygnLS1pcy1hY3RpdmUnKTtcclxuICAgICAgICB9KTtcclxuICAgICAgICAvLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG5cclxuICAgICAgICAvLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcbiAgICAgICAgJCgnLmMtc2xpZGUtbmF2X19vcGVuLWxpc3QnKS5vbignY2xpY2snLCBmdW5jdGlvbiAoKSB7IC8vINCh0L7QsdGL0YLQuNC1INC00LvRjyDQvtGC0LrRgNGL0YLQuNGPINC40YLQtdC80L7QsiDQsiBVTFxyXG4gICAgICAgICAgICB2YXIgbGlzdCA9ICQodGhpcykubmV4dCgpO1xyXG4gICAgICAgICAgICBsaXN0LnNsaWRlVG9nZ2xlKCdzbG93Jyk7XHJcbiAgICAgICAgICAgICQoJy5jLXNsaWRlLW5hdl9fb3Blbi1saXN0JykudG9nZ2xlQ2xhc3MoJy0tbWludXMnKTtcclxuICAgICAgICB9KTtcclxuICAgICAgICAvLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG5cclxuICAgICAgICAkKCcuYy1zbGlkZS1uYXZfX2Nsb3NlLW1lbnUnKS5vbignY2xpY2snLCBmdW5jdGlvbiAoKSB7IC8vINCh0L7QsdGL0YLQuNC1INC00LvRjyDQt9Cw0LrRgNGL0YLQuNGPINGB0LvQsNC50LTQtdGA0LBcclxuICAgICAgICAgICAgJCgnLmMtc2xpZGUtbmF2JykucmVtb3ZlQ2xhc3MoJy0taXMtYWN0aXZlJyk7XHJcbiAgICAgICAgfSk7XHJcblxyXG4gICAgICAgICQoZG9jdW1lbnQpLm1vdXNldXAoZnVuY3Rpb24gKGUpIHtcclxuICAgICAgICAgICAgdmFyIGRpdiA9ICQoXCIuYy1zbGlkZS1uYXZcIik7XHJcbiAgICAgICAgICAgIGlmICghZGl2LmlzKGUudGFyZ2V0KSAmJlxyXG4gICAgICAgICAgICAgICAgZGl2LmhhcyhlLnRhcmdldCkubGVuZ3RoID09PSAwKSB7XHJcbiAgICAgICAgICAgICAgICAkKCcuYy1zbGlkZS1uYXYnKS5yZW1vdmVDbGFzcygnLS1pcy1hY3RpdmUnKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pO1xyXG5cclxuICAgIH0pO1xyXG5cclxuXHJcbiAgICAvKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tTW9iaWxlIG1lbnUgc2xpZGUtLS0tLS0tLS0tLS0tLS0gKi9cclxuICAgICQoJ1tkYXRhLWNvbnRyb2xdJykub24oJ2NsaWNrJywgZnVuY3Rpb24gKGUpIHtcclxuICAgICAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICAgICAgICAgICB2YXIgbWVudUlkID0gJCh0aGlzKS5kYXRhKCdjb250cm9sJyk7XHJcbiAgICAgICAgICAgIC8vIHZhciBtZW51ID0gJCgnW2RhdGEtY29udHJvbD0nICsgbWVudUlkICsgJ10nKTtcclxuICAgICAgICAgICAgdmFyIG1lbnUgPSAkKCcuaGVhZGVyLW1vYmlsZS0tbW9iaWxlJyk7XHJcbiAgICAgICAgICAgIG1lbnUuc2xpZGVUb2dnbGUoKTtcclxuICAgXHJcbiAgICB9KTtcclxuICAgIC8qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xyXG5cclxuICAgIC8qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1zY3JpcHQgZm9yIGhpZGUgcHJvZHVjdC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xyXG4gICAgJCgnLmMtaGlkZGVuX19idG4nKS5vbignY2xpY2snLCBmdW5jdGlvbihlKXtcclxuICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7XHJcbiAgICAgICAgJCgnLmMtaGlkZGVuJykuc2xpZGVUb2dnbGUoKTtcclxuICAgIH0pO1xyXG4gICAgLyotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXHJcblxyXG4gICAgLyotLS0tLS0tLS0tLS0tLS0tLS0tLS0tU2NyaXB0IGZvciB2aWRlby0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xyXG5cclxudmFyIHZpZGVvID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJ2aWRlb1wiKTsgIFxyXG4gICAgdmlkZW8ucGxheSgpO1xyXG4gICAgdmlkZW8ucGxheWJhY2tSYXRlID0gMC41O1xyXG5cclxuXHJcbiAgICAvKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xyXG5cclxuXHJcbiAvKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS1TY3JpcHQgZm9yIG1vZGFsLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXHJcbiAkKGZ1bmN0aW9uICgpIHsgICBcclxuICAgIHZhciBtb2RhbCA9ICQoJy5jLW1vZGFsX19jb250YWluZXInKTtcclxuICAgIHZhciBjbG9zZSA9ICQoJy5jLWZvcm0tbWVzc2FnZV9faXRlbS0tY2xvc2UnKTtcclxuICAgIFxyXG4gICAgY2xvc2Uub24oJ2NsaWNrJywgZnVuY3Rpb24gKGUpe1xyXG4gICAgICAgIGUucHJldmVudERlZmF1bHQoKTtcclxuICAgICAgICBtb2RhbC5mYWRlT3V0KDMwMCk7XHJcbiAgICB9KTtcclxufSk7XHJcbi8qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXHJcbn0pKGpRdWVyeSk7XHJcbiFmdW5jdGlvbih0KXt0LmV4dGVuZCh0LmVhc2luZyx7c3BpbmNyZW1lbnRFYXNpbmc6ZnVuY3Rpb24odCxhLGUsbixyKXtyZXR1cm4gYT09PXI/ZStuOm4qKC1NYXRoLnBvdygyLC0xMCphL3IpKzEpK2V9fSksdC5mbi5zcGluY3JlbWVudD1mdW5jdGlvbihhKXtmdW5jdGlvbiBlKHQsYSl7aWYodD10LnRvRml4ZWQoYSksYT4wJiZcIi5cIiE9PXIuZGVjaW1hbFBvaW50JiYodD10LnJlcGxhY2UoXCIuXCIsci5kZWNpbWFsUG9pbnQpKSxyLnRob3VzYW5kU2VwYXJhdG9yKWZvcig7by50ZXN0KHQpOyl0PXQucmVwbGFjZShvLFwiJDFcIityLnRob3VzYW5kU2VwYXJhdG9yK1wiJDJcIik7cmV0dXJuIHR9dmFyIG49e2Zyb206MCx0bzpudWxsLGRlY2ltYWxQbGFjZXM6bnVsbCxkZWNpbWFsUG9pbnQ6XCIuXCIsdGhvdXNhbmRTZXBhcmF0b3I6XCJcIixkdXJhdGlvbjoxZTMsbGVld2F5OjUwLGVhc2luZzpcInNwaW5jcmVtZW50RWFzaW5nXCIsZmFkZTohMCxjb21wbGV0ZTpudWxsfSxyPXQuZXh0ZW5kKG4sYSksbz1uZXcgUmVnRXhwKC9eKC0/WzAtOV0rKShbMC05XXszfSkvKTtyZXR1cm4gdGhpcy5lYWNoKGZ1bmN0aW9uKCl7dmFyIGE9dCh0aGlzKSxuPXIuZnJvbTthLmF0dHIoXCJkYXRhLWZyb21cIikmJihuPXBhcnNlRmxvYXQoYS5hdHRyKFwiZGF0YS1mcm9tXCIpKSk7dmFyIG87aWYoYS5hdHRyKFwiZGF0YS10b1wiKSlvPXBhcnNlRmxvYXQoYS5hdHRyKFwiZGF0YS10b1wiKSk7ZWxzZSBpZihudWxsIT09ci50bylvPXIudG87ZWxzZXt2YXIgaT10LmluQXJyYXkoci50aG91c2FuZFNlcGFyYXRvcixbXCJcXFxcXCIsXCJeXCIsXCIkXCIsXCIqXCIsXCIrXCIsXCI/XCIsXCIuXCJdKT4tMT9cIlxcXFxcIityLnRob3VzYW5kU2VwYXJhdG9yOnIudGhvdXNhbmRTZXBhcmF0b3IsbD1uZXcgUmVnRXhwKGksXCJnXCIpO289cGFyc2VGbG9hdChhLnRleHQoKS5yZXBsYWNlKGwsXCJcIikpfXZhciBjPXIuZHVyYXRpb247ci5sZWV3YXkmJihjKz1NYXRoLnJvdW5kKHIuZHVyYXRpb24qKDIqTWF0aC5yYW5kb20oKS0xKSpyLmxlZXdheS8xMDApKTt2YXIgcztpZihhLmF0dHIoXCJkYXRhLWRwXCIpKXM9cGFyc2VJbnQoYS5hdHRyKFwiZGF0YS1kcFwiKSwxMCk7ZWxzZSBpZihudWxsIT09ci5kZWNpbWFsUGxhY2VzKXM9ci5kZWNpbWFsUGxhY2VzO2Vsc2V7dmFyIGQ9YS50ZXh0KCkuaW5kZXhPZihyLmRlY2ltYWxQb2ludCk7cz1kPi0xP2EudGV4dCgpLmxlbmd0aC0oZCsxKTowfWEuY3NzKFwiY291bnRlclwiLG4pLHIuZmFkZSYmYS5jc3MoXCJvcGFjaXR5XCIsMCksYS5hbmltYXRlKHtjb3VudGVyOm8sb3BhY2l0eToxfSx7ZWFzaW5nOnIuZWFzaW5nLGR1cmF0aW9uOmMsc3RlcDpmdW5jdGlvbih0KXthLmh0bWwoZSh0Km8scykpfSxjb21wbGV0ZTpmdW5jdGlvbigpe2EuY3NzKFwiY291bnRlclwiLG51bGwpLGEuaHRtbChlKG8scykpLHIuY29tcGxldGUmJnIuY29tcGxldGUoYSl9fSl9KX19KGpRdWVyeSk7Il19
